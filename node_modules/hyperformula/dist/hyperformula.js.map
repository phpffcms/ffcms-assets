{"version":3,"sources":["webpack://HyperFormula/webpack/universalModuleDefinition","webpack://HyperFormula/webpack/bootstrap","webpack://HyperFormula/./lib/index.js","webpack://HyperFormula/./lib/Cell.js","webpack://HyperFormula/./lib/DependencyGraph/index.js","webpack://HyperFormula/./lib/DependencyGraph/DependencyGraph.js","webpack://HyperFormula/./lib/AbsoluteCellRange.js","webpack://HyperFormula/./lib/errors.js","webpack://HyperFormula/./lib/parser/index.js","webpack://HyperFormula/./lib/parser/addressRepresentationConverters.js","webpack://HyperFormula/./lib/parser/CellAddress.js","webpack://HyperFormula/./lib/parser/ColumnAddress.js","webpack://HyperFormula/./lib/parser/RowAddress.js","webpack://HyperFormula/./lib/parser/LexerConfig.js","webpack://HyperFormula/external {\"root\":\"chevrotain\",\"commonjs2\":\"chevrotain\",\"commonjs\":\"chevrotain\",\"amd\":\"chevrotain\"}","webpack://HyperFormula/./lib/parser/ParserWithCaching.js","webpack://HyperFormula/./lib/parser/Ast.js","webpack://HyperFormula/./lib/parser/binaryOpTokenMap.js","webpack://HyperFormula/./lib/parser/Cache.js","webpack://HyperFormula/./lib/parser/FormulaParser.js","webpack://HyperFormula/./lib/error-message.js","webpack://HyperFormula/./lib/parser/Unparser.js","webpack://HyperFormula/./lib/parser/collectDependencies.js","webpack://HyperFormula/./lib/parser/RelativeDependency.js","webpack://HyperFormula/./lib/Span.js","webpack://HyperFormula/./lib/absolutizeDependencies.js","webpack://HyperFormula/./lib/ContentChanges.js","webpack://HyperFormula/./lib/interpreter/SimpleRangeValue.js","webpack://HyperFormula/./lib/ArraySize.js","webpack://HyperFormula/./lib/interpreter/InterpreterState.js","webpack://HyperFormula/./lib/interpreter/plugin/FunctionPlugin.js","webpack://HyperFormula/./lib/interpreter/ArithmeticHelper.js","webpack://HyperFormula/external {\"root\":\"unorm\",\"commonjs2\":\"unorm\",\"commonjs\":\"unorm\",\"amd\":\"unorm\"}","webpack://HyperFormula/./lib/StringHelper.js","webpack://HyperFormula/./lib/interpreter/InterpreterValue.js","webpack://HyperFormula/./lib/statistics/index.js","webpack://HyperFormula/./lib/statistics/EmptyStatistics.js","webpack://HyperFormula/./lib/statistics/Statistics.js","webpack://HyperFormula/./lib/statistics/StatType.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/AddressMapping.js","webpack://HyperFormula/./lib/DependencyGraph/ArrayMapping.js","webpack://HyperFormula/./lib/DependencyGraph/collectAddressesDependentToRange.js","webpack://HyperFormula/./lib/DependencyGraph/FormulaCellVertex.js","webpack://HyperFormula/./lib/ArrayValue.js","webpack://HyperFormula/./lib/DependencyGraph/RangeVertex.js","webpack://HyperFormula/./lib/DependencyGraph/Graph.js","webpack://HyperFormula/./lib/DependencyGraph/RangeMapping.js","webpack://HyperFormula/./lib/DependencyGraph/SheetMapping.js","webpack://HyperFormula/./lib/i18n/index.js","webpack://HyperFormula/./lib/i18n/TranslationPackage.js","webpack://HyperFormula/./lib/DependencyGraph/EmptyCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ValueCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ParsingErrorVertex.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/SparseStrategy.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/DenseStrategy.js","webpack://HyperFormula/./lib/CellValue.js","webpack://HyperFormula/./lib/Config.js","webpack://HyperFormula/./lib/ArgumentSanitization.js","webpack://HyperFormula/./lib/DateTimeDefault.js","webpack://HyperFormula/./lib/DateTimeHelper.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/ChooseAddressMappingPolicy.js","webpack://HyperFormula/./lib/format/format.js","webpack://HyperFormula/./lib/format/parser.js","webpack://HyperFormula/./lib/helpers/licenseKeyValidator.js","webpack://HyperFormula/./lib/helpers/licenseKeyHelper.js","webpack://HyperFormula/./lib/HyperFormula.js","webpack://HyperFormula/./lib/BuildEngineFactory.js","webpack://HyperFormula/./lib/CellContentParser.js","webpack://HyperFormula/./lib/ClipboardOperations.js","webpack://HyperFormula/./lib/CrudOperations.js","webpack://HyperFormula/./lib/NamedExpressions.js","webpack://HyperFormula/./lib/Operations.js","webpack://HyperFormula/./lib/dependencyTransformers/AddColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/Transformer.js","webpack://HyperFormula/./lib/dependencyTransformers/AddRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/CleanOutOfScopeDependenciesTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/MoveCellsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveSheetTransformer.js","webpack://HyperFormula/./lib/Sheet.js","webpack://HyperFormula/./lib/UndoRedo.js","webpack://HyperFormula/./lib/Evaluator.js","webpack://HyperFormula/./lib/Exporter.js","webpack://HyperFormula/./lib/GraphBuilder.js","webpack://HyperFormula/./lib/interpreter/FunctionRegistry.js","webpack://HyperFormula/./lib/interpreter/plugin/VersionPlugin.js","webpack://HyperFormula/./lib/interpreter/Interpreter.js","webpack://HyperFormula/./lib/interpreter/Criterion.js","webpack://HyperFormula/./lib/LazilyTransformingAstService.js","webpack://HyperFormula/./lib/dependencyTransformers/CombinedTransformer.js","webpack://HyperFormula/./lib/Lookup/SearchStrategy.js","webpack://HyperFormula/./lib/Lookup/ColumnBinarySearch.js","webpack://HyperFormula/./lib/interpreter/binarySearch.js","webpack://HyperFormula/./lib/Lookup/AdvancedFind.js","webpack://HyperFormula/./lib/Lookup/ColumnIndex.js","webpack://HyperFormula/./lib/NumberLiteralHelper.js","webpack://HyperFormula/./lib/Serialization.js","webpack://HyperFormula/./lib/Destroy.js","webpack://HyperFormula/./lib/Emitter.js","webpack://HyperFormula/external {\"root\":\"TinyEmitter\",\"commonjs2\":\"tiny-emitter\",\"commonjs\":\"tiny-emitter\",\"amd\":\"tiny-emitter\"}","webpack://HyperFormula/./lib/i18n/languages/enGB.js","webpack://HyperFormula/./lib/interpreter/index.js","webpack://HyperFormula/./lib/interpreter/plugin/index.js","webpack://HyperFormula/./lib/interpreter/plugin/ArrayPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/AbsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitShiftPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitwiseLogicOperationsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BooleanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CharPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CodePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountBlankPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountUniquePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DateTimePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DegreesPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DeltaPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ExpPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FinancialPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FormulaTextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/InformationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsEvenPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsOddPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LogarithmPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MathConstantsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MatrixPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MedianPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ModuloPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/NumericAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/PowerPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadiansPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadixConversionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RandomPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RoundingPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SqrtPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ConditionalAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/CriterionFunctionCompute.js","webpack://HyperFormula/./lib/generatorUtils.js","webpack://HyperFormula/./lib/interpreter/plugin/SumprodPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TrigonometryPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LookupPlugin.js","webpack://HyperFormula/./lib/Lookup/RowSearchStrategy.js","webpack://HyperFormula/./lib/interpreter/plugin/RomanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SimpleArithmertic.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/bessel/bessel.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/jstat/jstat.js","webpack://HyperFormula/./lib/interpreter/plugin/MathPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ComplexPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalAggregationPlugin.js"],"names":["HyperFormulaNS","HyperFormula","ErrorType","CellType","CellValueType","CellValueDetailedType","DetailedCellError","ExportedCellChange","ExportedNamedExpressionChange","ConfigValueTooBigError","ConfigValueTooSmallError","EvaluationSuspendedError","ExpectedOneOfValuesError","ExpectedValueOfTypeError","FunctionPlugin","FunctionPluginValidationError","InvalidAddressError","InvalidArgumentsError","LanguageNotRegisteredError","LanguageAlreadyRegisteredError","MissingTranslationError","NamedExpressionDoesNotExistError","NamedExpressionNameIsAlreadyTakenError","NamedExpressionNameIsInvalidError","NoOperationToRedoError","NoOperationToUndoError","NoRelativeAddressesAllowedError","NoSheetWithIdError","NoSheetWithNameError","NotAFormulaError","NothingToPasteError","ProtectedFunctionTranslationError","SheetNameAlreadyTakenError","SheetSizeLimitExceededError","SourceLocationHasArrayError","TargetLocationHasArrayError","UnableToParseError","defaultLanguage","Config","defaultConfig","language","registerLanguage","enGB","languages","langCode","pluginName","Object","getOwnPropertyNames","plugins","startsWith","registerFunctionPlugin","getCellType","vertex","address","ArrayVertex","isLeftCorner","ARRAYFORMULA","ARRAY","FormulaCellVertex","ParsingErrorVertex","FORMULA","ValueCellVertex","VALUE","EMPTY","CellValueNoNumber","CellValueJustNumber","assign","NumberType","CellValueTypeOrd","arg","NUMBER","STRING","BOOLEAN","ERROR","Error","getCellValueType","cellValue","EmptyValue","CellError","SimpleRangeValue","isExtendedNumber","getCellValueDetailedType","getTypeOfExtendedNumber","getCellValueFormat","getFormatOfExtendedNumber","undefined","constructor","type","message","root","parsingError","ErrorMessage","ParseError","attachRootVertex","simpleRowAddress","sheet","row","invalidSimpleRowAddress","simpleColumnAddress","col","invalidSimpleColumnAddress","simpleCellAddress","invalidSimpleCellAddress","movedSimpleCellAddress","toSheet","toRight","toBottom","addressKey","isSimpleCellAddress","obj","absoluteSheetReference","baseAddress","_a","equalSimpleCellAddress","left","right","DependencyGraph","addressMapping","rangeMapping","sheetMapping","arrayMapping","stats","lazilyTransformingAstService","functionRegistry","namedExpressions","changes","ContentChanges","empty","dependencyQueryAddresses","RangeVertex","rangeDependencyQuery","map","_","dependenciesResult","formulaDependencyQuery","dependencies","dependency","NamedExpressionDependency","namedExpressionOrPlaceholder","name","simpleCellRange","start","end","dependencyQueryVertices","v","AbsoluteCellRange","fetchRange","namedExpression","fetchCell","allDeps","smallerRangeVertex","restRange","findSmallerRange","range","graph","adjacentNodes","has","push","addresses","cell","getCell","EmptyCellVertex","formula","FormulaVertex","getAddress","getFormula","deps","collectDependencies","absolutizeDependencies","Graph","buildEmpty","config","AddressMapping","chooseAddressMappingPolicy","RangeMapping","SheetMapping","translationPackage","ArrayMapping","setFormulaToCell","ast","size","hasVolatileFunction","hasStructuralChangeFunction","newVertex","fromAst","version","exchangeOrAddFormulaVertex","processCellDependencies","markNodeAsSpecialRecentlyChanged","markAsVolatile","markAsDependentOnStructureChange","correctInfiniteRangesDependency","getAndClearContentChanges","setParsingErrorToCell","errorVertex","shrinkPossibleArrayAndGetCell","exchangeOrAddGraphNode","setCell","setValueToCell","value","removeArray","getRange","oldValues","getValues","rawValue","setValues","parsedValue","setCellEmpty","emptyVertex","exchangeGraphNode","adjacentNodesCount","removeVertex","removeCell","ensureThatVertexIsNonArrayCellVertex","clearRecentlyChangedVertices","clearSpecialNodesRecentlyChanged","verticesToRecompute","Set","specialNodesRecentlyChanged","volatileVertices","cellDependencies","endVertex","forEach","dep","rangeVertex","setRange","addNode","isFinite","markNodeAsInfiniteRange","addEdge","bruteForce","cellFromRange","removeEdge","array","getArray","fetchCellOrCreateEmpty","correctInfiniteRangesDependenciesByRangeVertex","sheetOfVertex","namedExpressionVertex","fetchNamedExpressionVertex","expressionName","sheetId","exchangeNode","addressFrom","addressTo","vertexFrom","vertexTo","infiniteRanges","infiniteRangeVertex","addressInRange","removeRows","removedRows","measure","StatType","ADJUSTING_GRAPH","entriesFromRowsSpan","adjacentNode","shrinkArrayToCorner","ADJUSTING_ADDRESS_MAPPING","affectedArrays","ADJUSTING_RANGES","affectedRanges","truncateRanges","getArrayVerticesRelatedToRanges","ADJUSTING_ARRAY_MAPPING","fixArraysAfterRemovingRows","rowStart","numberOfRows","addStructuralNodesToChangeSet","contentChanges","removeSheet","removedSheetId","arrays","adr","sheetEntries","add","values","rangesToRemove","removeRangesInSheet","clearSheet","setArrayEmpty","removeColumns","removedColumns","entriesFromColumnsSpan","fixArraysAfterRemovingColumns","columnStart","numberOfColumns","addRows","addedRows","result","moveAllRangesInSheetAfterRowByRows","fixRangesWhenAddingRows","verticesWithChangedSize","fixArraysAfterAddingRow","verticesFromRowsSpan","addColumns","addedColumns","moveAllRangesInSheetAfterColumnByColumns","fixRangesWhenAddingColumns","fixArraysAfterAddingColumn","verticesFromColumnsSpan","ensureNoArrayInRange","isFormulaArrayInRange","isThereSpaceForArray","arrayVertex","getRangeOrUndef","vertexUnderAddress","moveCells","sourceRange","sourceAddress","addressesWithDirection","targetAddress","sourceVertex","targetVertex","containsRange","rangeVerticesContainedInRange","newEmptyVertex","moveRangesInsideSourceRange","arrayRange","spanFrom","width","height","nodeDependencies","collectAddressesDependentToRange","length","addVertex","addArrayVertex","setAddressMappingForArrayVertex","arrayFormulaNodes","nodes","rowsSpan","columnsSpan","existsVertex","getCellValue","getRawValue","getScalarValue","ScalarExpected","existsEdge","fromNode","toNode","getSheetId","sheetName","fetch","getSheetHeight","getHeight","getSheetWidth","getWidth","setArray","topSortWithScc","markNodeAsSpecial","markNodeAsChangingWithStructure","forceApplyPostponedTransformations","ensureRecentData","specialNodes","ranges","arrayVertices","hasNode","Array","from","filter","node","rawValuesFromRange","entriesFromRange","oldNode","newNode","adjNodesStored","computeListOfValuesInRange","cleanAddressMappingUnderArray","adjacentVertex","adjacentArrayVertices","relevantDependencies","formulaDirectDependenciesToArray","rangeDirectDependenciesToArray","dependentToCorner","isArrayInternalCell","getAdjacentNodesAddresses","inputVertex","ret","castVertex","intersection","intersectionWith","oldValue","getArrayCellValue","addChange","REF","formulaDependencies","item","specialNodesStructuralChanges","originalValues","rangesInSheet","includesRow","addedSubrangeInThatRange","rangeWithSameWidth","currentRangeVertex","find","newRangeVertex","addAllFromRange","column","includesColumn","subrange","rangeWithSameHeight","cellAddress","old","formulaAddress","spanFromOrUndef","span","coordinate","verticesToRemove","verticesToMerge","existingVertex","mergedVertex","mergeRangeVertices","removeVertexAndCleanupDependencies","moveArrayVerticesAfterRowByRows","arraysInRows","RowsSpan","fromRowStartAndEnd","destination","source","moveCell","setNoSpaceIfArray","moveArrayVerticesAfterColumnByColumns","arraysInCols","ColumnsSpan","fromColumnStartAndEnd","setNoSpace","removeRange","softRemoveEdge","removeNode","next","delete","candidate","WRONG_RANGE_SIZE","isSimpleCellRange","SheetsNotEqual","AstNodeType","CELL_RANGE","fromCellRange","COLUMN_RANGE","AbsoluteColumnRange","fromColumnRange","AbsoluteRowRange","fromRowRangeAst","fromAstOrUndef","_e","x","toSimpleCellAddress","topLeftCorner","Number","fromCoordinates","x1","y1","x2","y2","doesOverlap","other","columnInRange","rowInRange","startRow","Math","max","endRow","min","startCol","endCol","shiftByRows","expandByRows","shiftByColumns","shifted","byCols","byRows","expandByColumns","moveToSheet","removeSpan","shouldBeRemoved","startColumn","toString","arrayOfAddressesInRange","y","withStart","newStart","sameDimensionsAs","sameAs","addressesArrayMap","dependencyGraph","op","currentRow","effectiveEndRow","currentColumn","tmp","effectiveEndColumn","limitRow","limitColumn","bottom","exceedsSheetSizeLimits","maxColumns","maxRows","_dependencyGraph","effectiveWidth","effectiveHeight","rowEnd","columnEnd","POSITIVE_INFINITY","toSimpleColumnAddress","_numberOfRows","_byRows","_maxRows","_rowStart","_rowEnd","toSimpleRowAddress","_numberOfColumns","_maxColumns","_columnStart","_columnEnd","expectedArguments","sheet1","sheet2","replacer","key","val","RegExp","JSON","stringify","expectedType","paramName","ConfigValueEmpty","minimum","maximum","functionNotDeclaredInPlugin","functionId","functionMethodNotFound","functionName","ProtectedFunctionError","cannotRegisterFunctionWithId","cannotUnregisterFunctionWithId","cannotUnregisterProtectedPlugin","AliasAlreadyExisting","addressRegex","sheetNameRegexp","ABSOLUTE_OPERATOR","columnRegex","rowRegex","simpleSheetNameRegex","simpleSheetName","cellAddressFromString","stringAddress","exec","columnLabelToIndex","extractSheetNumber","CellAddress","absolute","absoluteCol","absoluteRow","relative","columnAddressFromString","ColumnAddress","rowAddressFromString","RowAddress","simpleCellAddressFromString","sheetContext","simpleCellRangeFromString","split","RANGE_OPERATOR","startString","endString","simpleCellAddressToString","sheetIndexMapping","sheetIndex","columnIndexToLabel","sheetIndexToString","simpleCellRangeToString","columnStringRepresentation","toUpperCase","charCodeAt","reduce","nextLetter","String","fromCharCode","floor","sheetMappingFn","test","replace","regexResult","maybeSheetName","CellReferenceType","fromColAndRow","factoryMethod","isColumnAbsolute","isRowAbsolute","bind","CELL_REFERENCE_RELATIVE","CELL_REFERENCE_ABSOLUTE","CELL_REFERENCE_ABSOLUTE_COL","CELL_REFERENCE_ABSOLUTE_ROW","toColumnAddress","refType","isColumnRelative","ReferenceType","RELATIVE","ABSOLUTE","toRowAddress","isRowRelative","isAbsolute","shiftedByRows","shiftedByColumns","moved","newSheet","withSheet","isInvalid","shiftRelativeDimensions","shiftAbsoluteDimensions","hash","sheetPart","unparse","simpleAddress","rowDollar","colDollar","compareByAbsoluteAddress","colA","colB","_toBottom","dollar","rowA","rowB","ALL_WHITESPACE_REGEXP","ODFF_WHITESPACE_REGEXP","AdditionOp","createToken","pattern","Lexer","NA","PlusOp","categories","MinusOp","MultiplicationOp","TimesOp","DivOp","PowerOp","PercentOp","BooleanOp","EqualsOp","NotEqualOp","GreaterThanOp","LessThanOp","GreaterThanOrEqualOp","LessThanOrEqualOp","ConcatenateOp","quotedSheetName","CellReference","ColumnRange","RowRange","RangeSeparator","LParen","RParen","ArrayLParen","ArrayRParen","ProcedureName","NamedExpression","StringLiteral","ErrorLiteral","buildLexerConfig","offsetProcedureNameLiteral","getFunctionTranslation","errorMapping","functionMapping","buildFunctionMapping","whitespaceTokenRegexp","ignoreWhiteSpace","WhiteSpace","ArrayRowSeparator","arrayRowSeparator","ArrayColSeparator","arrayColumnSeparator","ArgSeparator","inject","functionArgSeparator","NumberLiteral","decimalSeparator","OffsetProcedureName","allTokens","ParserWithCaching","statsCacheUsed","lexerConfig","lexer","FormulaLexer","formulaParser","FormulaParser","cache","Cache","parse","text","lexerResult","tokenizeFormula","errors","e","ParsingErrorType","LexingError","buildParsingErrorAst","computeHashFromTokens","tokens","cacheResult","get","processedTokens","bindWhitespacesToTokens","parsingResult","parseFromTokens","set","relativeDependencies","fetchCachedResultForAst","computeHashFromAst","fetchCachedResult","idx","token","tokenMatcher","image","concat","procedureName","slice","canonicalProcedureName","startAddress","endAddress","rememberNewAst","maybeSetAndThenGet","computeHashOfAstNode","leadingWhitespace","imageWithWhitespace","formatNumber","NAMED_EXPRESSION","FUNCTION_CALL","args","join","rightPart","internalWhitespace","CELL_REFERENCE","reference","ROW_RANGE","sheetReferenceType","RangeSheetReferenceType","BOTH_ABSOLUTE","MINUS_UNARY_OP","PLUS_UNARY_OP","PERCENT_OP","getErrorTranslation","error","ERROR_WITH_RAW_INPUT","rawInput","PARENTHESIS","expression","binaryOpTokenMap","first","i","current","previous","buildEmptyArgAst","buildNumberAst","buildStringAst","buildCellReferenceAst","buildCellRangeAst","assertRangeConsistency","buildColumnRangeAst","buildRowRangeAst","buildConcatenateOpAst","CONCATENATE_OP","buildEqualsOpAst","EQUALS_OP","buildNotEqualOpAst","NOT_EQUAL_OP","buildGreaterThanOpAst","GREATER_THAN_OP","buildLessThanOpAst","LESS_THAN_OP","buildGreaterThanOrEqualOpAst","GREATER_THAN_OR_EQUAL_OP","buildLessThanOrEqualOpAst","LESS_THAN_OR_EQUAL_OP","buildPlusOpAst","PLUS_OP","buildMinusOpAst","MINUS_OP","buildTimesOpAst","TIMES_OP","buildDivOpAst","DIV_OP","buildPowerOpAst","POWER_OP","buildMinusUnaryOpAst","buildPlusUnaryOpAst","buildPercentOpAst","buildProcedureAst","buildArrayAst","buildNamedExpressionAst","buildParenthesisAst","buildCellErrorAst","buildErrorWithRawInputAst","buildCacheEntry","Map","astRelativeDependencies","cacheEntry","doesContainFunctions","isFunctionVolatile","isFunctionDependentOnSheetStructureChange","entryFromCache","functionCriterion","some","EmbeddedActionsParser","outputCst","maxLookahead","booleanExpressionOrEmpty","RULE","OR","ALT","SUBRULE","booleanExpression","EMPTY_ALT","procedureExpression","procedureNameToken","CONSUME","argument","MANY","separator","SUBRULE2","rParenToken","namedExpressionExpression","offsetProcedureExpression","MANY_SEP","SEP","DEF","handleOffsetHeuristic","columnRangeExpression","startImage","endImage","firstAddress","ACTION","secondAddress","NAME","ParserError","firstEnd","secondEnd","sheetRefType","fixSheetIdsForRangeEnds","orderColumnRangeEnds","rowRangeExpression","orderRowRangeEnds","cellReference","endRangeReference","buildCellRange","endOfRangeExpression","ARGS","offsetProcedure","RangeOffsetNotAllowed","cellRangeExpression","CONSUME2","endRangeWithOffsetStartReference","endOfRangeWithOffsetStartExpression","offsetExpression","OPTION","insideArrayExpression","SUBRULE3","parenthesisExpression","lParenToken","arrayExpression","ltoken","rtoken","numericStringToNumber","input","normalized","positiveAtomicExpression","atomicExpCache","number","str","errString","errorType","rightUnaryOpAtomicExpression","percentage","atomicExpression","customParsingError","powerExpression","lhs","rhs","multiplicationExpression","additionExpression","concatenateExpression","performSelfAnalysis","formulaWithContext","reset","orderCellRangeEnds","rangeSheetReferenceType","secondEndFixed","endA","endB","ends","sort","startSheet","endSheet","compareSheetIds","sheetA","sheetB","Infinity","cellArg","StaticOffsetError","rowsArg","rowShift","isInteger","columnsArg","colShift","heightArg","widthArg","OutOfSheet","bottomRightCorner","START_ABSOLUTE","ensureOptimizations","lexingResult","tokenize","trimTrailingWhitespaces","skipWhitespacesInsideRanges","skipWhitespacesBeforeArgSeparators","filterTokensByNeighbors","shouldBeSkipped","filteredTokens","pop","DistinctSigns","WrongArgNumber","EmptyArg","EmptyArray","ArrayDimensions","NoSpaceForArrayResult","ValueSmall","ValueLarge","BadCriterion","RangeManySheets","CellRangeExpected","WrongDimension","NumberCoercion","NumberExpected","IntegerExpected","BadMode","DateBounds","WrongType","NaN","EqualLength","Negative","NotBinary","NotOctal","NotHex","EndStartPeriod","CellRefExpected","EmptyRange","BadRef","NumberRange","ValueNotFound","ValueBaseLarge","ValueBaseSmall","ValueBaseLong","NegativeLength","PatternNotFound","OneValue","TwoValues","ThreeValues","IndexBounds","IndexLarge","Formula","NegativeCount","SheetRef","PeriodLong","InvalidDate","BitshiftLong","EmptyString","LengthBounds","NegativeTime","NoDefault","Selector","StartEndDate","IncorrectDateTime","CharacterCodeBounds","NonZero","LessThanOne","WeekendString","InvalidRoman","WrongOrder","ComplexNumberExpected","ShouldBeIorJ","SizeMismatch","FunctionName","NamedExpressionName","LicenseKey","Unparser","unparseAst","_b","isFunctionTranslated","originalNamedExpressionName","nearestNamedExpression","displayName","unparseSheetName","formatRange","unparsedExpr","startSheeet","unparsedStart","unparsedEnd","numericString","collectDependenciesFn","dependenciesSet","needArgument","AddressDependency","CellRangeDependency","ColumnRangeDependency","RowRangeDependency","functionNeedArgument","doesFunctionNeedArgumentToBeComputed","argAst","absolutize","_baseAddress","fromNumberOfRows","rows","intersect","otherSpan","firstRow","fromNumberOfColumns","columns","firstColumn","filterDependenciesOutOfScope","addAll","change","newValue","addInterpreterValue","exportChanges","exporter","exportChange","isArray","getChanges","isEmpty","effectiveAddressesFromData","_data","_hasOnlyNumbers","ArraySize","data","ensureThatComputed","fromRange","onlyNumbers","onlyValues","onlyRange","fromScalar","scalar","isAdHoc","valuesFromTopLeftCorner","j","leftCorner","rowData","entriesFromTopLeftCorner","iterateValuesFromTopLeftCorner","numberOfElements","hasOnlyNumbers","rawNumbers","rawData","isRef","fromArray","isScalar","arraySizeForBinaryOp","leftArraySize","rightArraySize","arraySizeForUnaryOp","arraySize","ArraySizePredictor","checkArraySize","checkArraySizeForAst","arraysFlag","useArrayArithmetic","state","checkArraySizeForFunction","heights","widths","sizes","h","w","total","metadata","getMetadata","pluginArraySizeFunction","getArraySizeFunction","subChecks","InterpreterState","arrayFunction","expandRanges","vectorizationForbidden","parameters","argumentDefinitions","repeatLastArgs","maxWidth","maxHeight","argumentType","ArgumentTypes","RANGE","ANY","formulaVertex","interpreter","coerceScalarToNumberOrError","arithmeticHelper","runFunction","fn","_c","_d","argValues","listOfScalarValues","evaluateAst","defaultValue","optionalArg","retArr","rowArr","argCoerceFailure","coercedArguments","ignorable","coercedArg","coerceToType","SCALAR","returnNumberWrapper","returnNumberType","runFunctionWithReferenceArgument","noArgCallback","referenceCallback","nonReferenceCallback","columnSearch","serialization","arraySizePredictor","dateTimeHelper","arraySizeForAst","asts","scalarValue","coercedType","coerce","coerceRangeToScalar","INTEGER","coerced","maxValue","NUM","minValue","lessThan","greaterThan","coerceScalarToString","coerceScalarToBoolean","NOERROR","coerceToRange","COMPLEX","coerceScalarToComplex","passSubtype","params","implementedFunctions","format","ExtendedNumberFactory","COMPLEX_NUMBER_SYMBOL","complexParsingRegexp","ArithmeticHelper","numberLiteralsHelper","lt","compare","leq","gt","geq","eq","neq","pow","addWithEpsilonRaw","abs","actualEps","addWithEpsilon","typeOfResult","inferExtendedNumberTypeAdditive","unaryMinus","cloneNumber","unaryPlus","unaryPercent","PercentNumber","nonstrictadd","subtract","leftArg","rightArg","divide","DIV_BY_ZERO","inferExtendedNumberTypeMultiplicative","multiply","manyToExactComplex","coerceNumbersExactRanges","manyToNumbers","manyToExactNumbers","coerceNumbersCoerceRangesDropNulls","manyToCoercedNumbersDropNulls","manyToOnlyNumbersDropNulls","collator","collatorFromConfig","smartRounding","precisionEpsilon","eqMatcherFunction","regexp","buildRegex","normalizeString","neqMatcherFunction","searchString","index","requiresRegex","useRegularExpressions","useWildcards","matchWholeCell","c","charAt","isWildcard","needsEscape","floatCmp","mod","coerceToMaybeNumber","coerceNonDateScalarToMaybeNumber","dateStringToDateNumber","maybePercentNumber","coerceStringToMaybePercentNumber","maybeCurrencyNumber","coerceStringToMaybeCurrencyNumber","numericStringToMaybeNumber","trim","trimmedInput","endsWith","numOfPercents","parsedNumOfPercents","matchedCurrency","currencyMatcher","currencySymbol","currencyValue","parsedCurrencyValue","CurrencyNumber","currency","coerceComplexExactRanges","vals","expandedVals","arr","coerceStringToComplex","typeFormat","NUMBER_RAW","NUMBER_CURRENCY","NUMBER_DATE","DateNumber","NUMBER_DATETIME","DateTimeNumber","NUMBER_TIME","TimeNumber","NUMBER_PERCENT","regexpStr","escapeNoCharacters","caseSensitive","escapeNonWildcards","escapeAllCharacters","toLowerCase","accentSensitive","leftTmp","rightTmp","coerceEmptyToValue","stringCmp","numberCmp","coerceBooleanToNumber","rangeFn","match","val1","parseComplexToken","val2","coerceComplexToString","symb","re","im","imStr","coerceToRangeNumbersOrError","argUppered","zeroIfEmpty","isNumberOverflow","isNaN","fixNegativeZero","includes","escapedCharacters","d","leftType","leftFormat","getTypeFormatOfExtendedNumber","rightType","rightFormat","forceNormalizeString","offset","form","normalize","unorm","sensitivity","caseFirst","ignorePunctuation","Intl","Collator","localeLang","Symbol","num","RichNumber","fromNumber","newVal","getDetailedType","EmptyStatistics","Statistics","incrementCriterionFunctionFullCacheUsed","incrementCriterionFunctionPartialCacheUsed","_name","CRITERION_FUNCTION_FULL_CACHE_USED","CRITERION_FUNCTION_PARTIAL_CACHE_USED","startTimes","clear","Date","now","startTime","func","snapshot","policy","mapping","strategyFor","strategy","addSheet","autoAddSheet","sheetBoundaries","fill","strategyConstructor","call","getArrayCellRawValue","entries","getEntries","getArrayByCorner","count","mtxKey","mtx","spansThroughSheetRows","spansThroughSheetColumn","isFormulaArrayInRow","isFormulaArrayInAllRows","isFormulaArrayInColumn","isFormulaArrayInAllColumns","isFormulaArrayAtAddress","updateArrayVerticesInSheet","updated","updatingService","newAst","newAddress","newVersion","applyTransformations","ErroredArray","NotComputedArray","setCellValue","setErrorValue","ArrayValue","fromInterpreterValue","resize","simpleRangeValue","valueOrUndef","setArrayCellValue","SPILL","setAddress","setFormula","newFormula","isComputed","columnsFromArray","rowsFromArray","_updatingService","cachedCellValue","aboveRow","splice","nullArrays","aboveColumn","outOfBound","leftmostColumn","rightmostColumn","raw","newSize","functionCache","criterionFunctionCache","dependentCacheRanges","getFunctionValue","setFunctionValue","getCriterionFunctionValue","cacheKey","criterionString","getCriterionFunctionValues","setCriterionFunctionValues","addDependentCacheRange","dependentRange","clearCache","getStart","getEnd","NodeVisitStatus","dependencyQuery","edges","removeIncomingEdges","nodeEdges","nodesCount","edgesCount","edgesForNode","removeDependencies","getTopSortedWithSccSubgraphFrom","modifiedNodes","operatingFunction","onCycle","entranceTime","low","parent","inSCC","nodeStatus","order","time","sccNonSingletons","reverse","DFSstack","SCCstack","ON_STACK","u","t","PROCESSED","uLow","currentSCC","POPPED","shouldBeUpdatedMapping","sorted","cycled","s","getDependencies","sourceNode","getMappingSize","sheetMap","keyFromAddresses","maybeRange","entriesFromSheet","removeByKey","compareBy","oldKey","newKey","keyFromRange","getByKey","updateVerticesFromSheet","changedSize","iterator","valuesRangeEndRowLess","rowLessVertex","entry","leftStart","rightStart","leftEnd","rightEnd","canonicalize","sheetDisplayName","Sheet","id","canonicalName","mappingFromCanonicalName","mappingFromId","lastSheetId","fetchDisplayName","fetchSheetById","sheetNamePrefix","getUITranslation","UIElement","NEW_SHEET_PREFIX","newSheetDisplayName","newSheetCanonicalName","store","getDisplayName","displayNames","numberOfSheets","hasSheetWithId","hasSheetWithName","renameSheet","newDisplayName","currentDisplayName","sheetWithThisCanonicalName","currentCanonicalName","sheetNames","TranslationPackage","functions","ui","_protectedTranslations","checkUI","checkErrors","checkFunctionTranslations","extendFunctions","additionalFunctionTranslations","keys","buildErrorMapping","getFunctionTranslations","functionIds","translations","getMaybeFunctionTranslation","LIC","functionNames","protectedTranslation","buildTranslationPackage","rawTranslationPackage","_cellValue","SparseStrategy","colMapping","rowMapping","tmpMapping","rowNumber","colNumber","rightmostRowRemoved","numberOfRowsRemoved","rightmostColumnRemoved","numberOfColumnsRemoved","verticesFromColumn","verticesFromRow","rowVertex","vertices","DenseStrategy","getCellVertex","newRows","valueOf","privatePool","WeakMap","options","showDeprecatedWarns","binarySearchThreshold","dateFormats","evaluateNullToZero","functionPlugins","leapYear1900","licenseKey","nullYear","nullDate","parseDateTime","precisionRounding","stringifyDateTime","stringifyDuration","timeFormats","thousandSeparator","useStats","undoLimit","useColumnIndex","warnDeprecatedOptions","configValueFromParam","configValueFromParamCheck","validateNumberToBeAtLeast","validateNumberToBeAtMost","getLanguage","instanceOfSimpleDate","setupCurrencySymbol","licenseKeyValidityState","checkLicenseKeyValidity","configCheckIfParametersNotInConflict","valueAfterCheck","getConfig","getFullConfigFromPartial","mergeConfig","init","mergedConfig","warnDeprecatedIfUsed","inputValue","fromVersion","replacementName","console","warn","AlwaysDense","year","month","day","defaultParseToDateTime","defaultStringifyDateTime","defaultStringifyDuration","partialConfig","getDefaultConfig","typeCheck","valuesMap","param","names","duplicates","paramNames","validateArgToType","dateTimeString","dateFormat","timeFormat","ampmtoken","substring","dateItems","timeItems","defaultParseToTime","defaultParseToDate","parsedDate","parsedTime","secondsExtendedRegexp","precision","formatItems","ampm","hourIndex","indexOf","minuteIndex","secondIndex","findIndex","hourString","hours","minuteString","minutes","secondString","seconds","round","monthIndex","dayIndex","yearIndexLong","yearIndexShort","yearString","monthString","dayString","numDays","prefSumDays","SECONDS_PER_MINUTE","MINUTES_PER_HOUR","HOURS_PER_DAY","instanceOfSimpleTime","maxDate","DateTimeHelper","minDateAbsoluteValue","dateToNumberFromZero","maxDateValue","dateToNumber","epochYearZero","numberToSimpleDate","getWithinBounds","dayNumber","dateTime","parseDateTimeFromConfigFormats","timeToNumber","parseDateTimeFromFormats","getNullYear","getEpochYearZero","isValidDate","date","isLeapYear","relativeNumberToAbsoluteNumber","dateNumber","dayOfYear","dayToMonth","numberToSimpleDateTime","numberToSimpleTime","carryDays","leapYearsCount","daysInMonth","endOfMonth","toBasisUS","yearLengthForBasis","countLeapDays","parseSingleFormat","dateString","dateFormatsIterate","timeFormatsIterate","offsetMonth","totalM","truncateDayInMonth","roundToNearestSecond","roundToEpsilon","epsilon","argAsSeconds","argAsMinutes","argAsHours","toBasisEU","DenseSparseChooseBasedOnThreshold","threshold","AlwaysSparse","formatArg","dateHelper","tryDateTime","tryDuration","parseForNumberFormat","numberFormat","padLeft","padRight","countChars","char","TokenType","FREE_TEXT","tokenParts","integerFormat","decimalFormat","valueParts","toFixed","integerPart","decimalPart","padSizeInteger","substr","padSizeDecimal","parseForDateTimeFormat","fractionOfSecondPrecision","FORMAT","am","pm","dateFormatRegex","numberFormatRegex","formatToken","FormatExpressionType","matchDateFormat","lastIndex","m","matchNumberFormat","numberFormatToken","createTokens","regexTokens","beforeToken","lastToken","afterLastToken","dateFormatTokens","every","elem","isEscapeToken","DATE","numberFormatTokens","consoleMessages","invalid","expired","keyValidityDate","missing","_notified","messageDescriptor","template","vars","checkKeySchema","releaseDays","getTime","keyValidityDays","extractTime","formatDate","monthNames","getMonth","getDate","getFullYear","_rl","_hd","parseInt","_pi","_nm","_ss","l","_cp","sp","a","b","padStart","_config","_stats","_columnSearch","_parser","_unparser","_cellContentParser","_evaluator","_lazilyTransformingAstService","_crudOperations","_exporter","_namedExpressions","_serialization","_functionRegistry","_emitter","Emitter","_evaluationSuspended","evaluator","buildFromArray","configInput","buildFromEngineState","BuildEngineFactory","buildFromSheet","buildFromSheets","sheets","languageCode","registeredLanguages","languagePackage","unregisterLanguage","getRegisteredLanguagesCodes","plugin","FunctionRegistry","unregisterFunctionPlugin","registerFunction","unregisterFunction","unregisterAllFunctions","unregisterAll","getRegisteredFunctionNames","code","getRegisteredFunctionIds","getFunctionPlugin","getAllFunctionPlugins","getPlugins","engine","parser","unparser","cellContentParser","crudOperations","ensureEvaluationIsNotSuspended","getCellFormula","getCellSerialized","getSheetValues","getSheetFormulas","getSheetSerialized","getAllSheetsDimensions","genericAllSheetsGetter","getSheetDimensions","getAllSheetsValues","getAllSheetsFormulas","getAllSheetsSerialized","updateConfig","newParams","newConfig","configNewLanguage","serializedSheets","withNewConfig","serializedNamedExpressions","getAllNamedExpressionsSerialized","newEngine","rebuildWithConfig","rebuildAndRecalculate","getStats","undo","recomputeIfDependencyGraphNeedsIt","redo","isThereSomethingToUndo","isThereSomethingToRedo","isItPossibleToSetCellContents","ensureRangeInSizeLimits","it","ensureItIsPossibleToChangeContent","setCellContents","topLeftCornerAddress","cellContents","swapRowIndexes","setRowOrder","isItPossibleToSwapRowIndexes","validateSwapRowIndexes","testRowOrderForArrays","newRowOrder","mappingFromOrder","isItPossibleToSetRowOrder","swapColumnIndexes","columnMapping","setColumnOrder","isItPossibleToSwapColumnIndexes","validateSwapColumnIndexes","testColumnOrderForArrays","newColumnOrder","isItPossibleToSetColumnOrder","isItPossibleToAddRows","indexes","normalizedIndexes","normalizeAddedIndexes","ensureItIsPossibleToAddRows","isItPossibleToRemoveRows","normalizeRemovedIndexes","ensureItIsPossibleToRemoveRows","isItPossibleToAddColumns","ensureItIsPossibleToAddColumns","isItPossibleToRemoveColumns","ensureItIsPossibleToRemoveColumns","isItPossibleToMoveCells","destinationLeftCorner","operations","ensureItIsPossibleToMoveCells","isItPossibleToMoveRows","targetRow","ensureItIsPossibleToMoveRows","moveRows","isItPossibleToMoveColumns","targetColumn","ensureItIsPossibleToMoveColumns","moveColumns","copy","getRangeValues","cut","paste","targetLeftCorner","isClipboardEmpty","clearClipboard","clearRedoStack","undoRedo","clearUndoStack","cellRange","subarray","getRangeFormulas","getRangeSerialized","getFillRangeData","target","offsetsFromTarget","targetRange","isItPossibleToAddSheet","ensureItIsPossibleToAddSheet","addedSheetName","emit","Events","SheetAdded","isItPossibleToRemoveSheet","ensureScopeIdIsValid","SheetRemoved","isItPossibleToClearSheet","isItPossibleToReplaceSheetContent","ensureItIsPossibleToChangeSheetContents","setSheetContent","getCellDependents","getCellPrecedents","getSheetName","getSheetNames","doesSheetExist","doesCellHaveSimpleValue","doesCellHaveFormula","cellType","isCellEmpty","isCellPartOfArray","countSheets","isItPossibleToRenameSheet","newName","ensureItIsPossibleToRenameSheet","oldName","SheetRenamed","batch","batchOperations","suspendEvaluation","beginUndoRedoBatchMode","commitUndoRedoBatchMode","resumeEvaluation","EvaluationSuspended","EvaluationResumed","isEvaluationSuspended","isItPossibleToAddNamedExpression","scope","ensureItIsPossibleToAddNamedExpression","addNamedExpression","NamedExpressionAdded","getNamedExpressionValue","namedExpressionForScope","getNamedExpressionFormula","getNamedExpression","isItPossibleToChangeNamedExpression","newExpression","ensureItIsPossibleToChangeNamedExpression","changeNamedExpression","changeNamedExpressionExpression","isItPossibleToRemoveNamedExpression","removeNamedExpression","removedNamedExpression","NamedExpressionRemoved","listNamedExpressions","getAllNamedExpressionsNamesInScope","normalizeFormula","formulaString","extractTemporaryFormula","calculateFormula","internalCellValue","runAndForget","exportScalarOrRange","validateFormula","numberToDateTime","inputNumber","numberToDate","numberToTime","on","event","listener","once","off","destroy","objectDestroy","parsedCellContent","CellContent","verticesToRecomputeFrom","partialRun","exportedChanges","ValuesUpdated","buildDate","releaseDate","buildEngine","newsheetprefix","inputNamedExpressions","BUILD_ENGINE_TOTAL","NamedExpressions","LazilyTransformingAstService","buildColumnSearchStrategy","prototype","hasOwnProperty","validateAsSheet","boundaries","findBoundaries","numberLiteralHelper","NumberLiteralHelper","CellContentParser","Operations","UndoRedo","clipboardOperations","ClipboardOperations","CrudOperations","Exporter","Serialization","Interpreter","GRAPH_BUILD","graphBuilder","GraphBuilder","buildGraph","Evaluator","run","Boolean","Empty","getSingletonInstance","instance","isFormula","isBoolean","tl","isError","upperCased","errorRegex","content","dateVal","timeVal","getHours","getMinutes","getSeconds","getMilliseconds","trimmedContent","mode","res","parseAsNum","parsedDateNumber","ClipboardOperationType","ClipboardCellType","Clipboard","sourceLeftCorner","getContent","clipboard","CUT","clipboardCell","getClipboardCell","COPY","abortCut","ensureItIsPossibleToCopyPaste","isCutClipboard","isCopyClipboard","addRowsCommand","AddRowsCommand","saveOperation","AddRowsUndoEntry","removeRowsCommand","RemoveRowsCommand","rowsRemovals","RemoveRowsUndoEntry","addColumnsCommand","AddColumnsCommand","AddColumnsUndoEntry","removeColumnsCommand","RemoveColumnsCommand","columnsRemovals","RemoveColumnsUndoEntry","overwrittenCellsData","addedGlobalNamedExpressions","MoveCellsUndoEntry","MoveRowsUndoEntry","MoveColumnsUndoEntry","ensureItIsPossibleToCopy","isPositiveInteger","oldContent","getRangeClipboardCells","restoreClipboardCells","PasteUndoEntry","beginBatchMode","commitBatchMode","AddSheetUndoEntry","originalName","oldSheetContent","getSheetClipboardCells","scopedNamedExpressions","RemoveSheetUndoEntry","RenameSheetUndoEntry","ClearSheetUndoEntry","ensureItIsPossibleToChangeCellContents","oldContents","newContent","setCellContent","SetCellContentsUndoEntry","SetSheetContentUndoEntry","SetRowOrderUndoEntry","validateRowOrColumnMapping","rowRange","SetColumnOrderUndoEntry","newOrder","rowOrColumn","limit","isUndoStackEmpty","isRedoStackEmpty","AddNamedExpressionUndoEntry","oldNamedExpression","ChangeNamedExpressionUndoEntry","RemoveNamedExpressionUndoEntry","ensureNamedExpressionNameIsValid","ensureNamedExpressionIsValid","sheetHeight","newRowsCount","numberOfRowsToAdd","isNonnegativeInteger","sheetWidth","newColumnsCount","numberOfColumnsToAdd","sourceStart","targetStart","existingSheetId","inputAddress","scopeId","sources","targets","isNameValid","isNameAvailable","parsedExpression","doesContainRelativeReferences","InternalNamedExpression","added","normalizeExpressionName","WorkbookStore","normalizedExpressionName","getExisting","remove","getAllNamedExpressions","ne","WorksheetStore","nextNamedExpressionRow","workbookStore","worksheetStores","addressCache","worksheetStore","namedExpressionInAddress","isExpressionInScope","worksheetStoreOrCreate","nextAddress","restoreNamedExpression","workbookNamedExpressionOrPlaceholder","getAllNamedExpressionsNames","storedNamedExpressions","expr","sheetNum","getAllNamedExpressionsForScope","SHEET_FOR_WORKBOOK_EXPRESSIONS","rowsSpans","normalizedIndex","columnsSpans","allocateNamedExpressionAddressSpace","cmd","rowsToRemove","rowsRemoval","doRemoveRows","doAddRows","doAddColumns","columnsToRemove","columnsRemoval","doRemoveColumns","TRANSFORM_ASTS","transformation","RemoveSheetTransformer","performEagerTransformations","addTransformation","namedexpression","removeSheetByName","rowsToAdd","beginCombinedMode","commitCombinedMode","columnsToAdd","currentDataAtTarget","valuesToRemove","removeValues","valuesToMove","moveValues","MoveCellsTransformer","updateNamedExpressionsForMovedCells","buffer","_col","storeNamedExpressionInCell","adjustNamedExpressionEdges","restoreCell","restoredNamedExpression","globalNamedExpression","isRowOrColumnRange","sourceSheetId","cells","addedNamedExpressions","updateNamedExpressionsForTargetAddress","setFormulaToCellFromCache","PARSING_ERROR","getOldContent","newCellContent","parserResult","newSheetContent","arrayChanges","applyChanges","formulaHash","absoluteDependencies","cleanedAst","CleanOutOfScopeDependenciesTransformer","transformSingleAst","cleanedDependencies","rowEffectivelyNotInSheet","removedCells","RemoveRowsTransformer","rewriteAffectedArrays","rowFrom","rowCount","columnEffectivelyNotInSheet","RemoveColumnsTransformer","columnFrom","columnCount","AddRowsTransformer","AddColumnsTransformer","localVertex","globalVertex","sourceSheet","namedExpressionDependency","namedExpressionInTargetScope","targetScopeExpressionVertex","copyOrFetchGlobalNamedExpressionVertex","merged","acc","startIndex","amount","shift","Transformer","isIrreversible","transformRowRangeAst","_formulaAddress","transformCellRange","transformRange","transformRowRange","_start","_end","transformColumnRange","transformCellAddress","dependencyAddress","absoluteDependencySheet","absolutizedDependencyAddress","fixNodeAddress","newEnd","cachedAst","transformAst","transformCellReferenceAst","transformCellRangeAst","transformColumnRangeAst","newCellAddress","newRange","dependentFormulaTransformer","DependentFormulaTransformer","transformAddress","absoluteDependencyAddress","absoluteStart","absoluteEnd","shouldMove","actualStart","actualEnd","startSCA","endSCA","cellsCount","currentRowWidth","currentCol","currentValue","sheetSize","BaseUndoEntry","command","doUndo","undoRemoveRows","doRedo","redoRemoveRows","undoMoveCells","redoMoveCells","undoAddRows","redoAddRows","undoSetRowOrder","redoSetRowOrder","undoSetColumnOrder","redoSetColumnOrder","undoSetSheetContent","redoSetSheetContent","undoStart","undoEnd","undoMoveRows","redoMoveRows","undoMoveColumns","redoMoveColumns","undoAddColumns","redoAddColumns","undoRemoveColumns","redoRemoveColumns","undoAddSheet","redoAddSheet","undoRemoveSheet","redoRemoveSheet","undoRenameSheet","redoRenameSheet","undoClearSheet","redoClearSheet","undoSetCellContents","redoSetCellContents","undoPaste","redoPaste","undoAddNamedExpression","redoAddNamedExpression","undoRemoveNamedExpression","redoRemoveNamedExpression","undoChangeNamedExpression","redoChangeNamedExpression","BatchUndoEntry","arguments","operation","reversedOperations","undoBatch","redoBatch","oldData","undoStack","redoStack","batchUndoEntry","addUndoEntry","storeDataForVersion","astHash","currentOldData","undoEntry","batchOperation","restoreOldDataFromVersion","addedRowsSpans","addedColumnsSpans","cellContentData","oldContentAddress","restoreOperationOldContent","rowIndex","redoEntry","oldDataToRestore","entryToRestore","TOP_SORT","EVALUATION","recomputeFormulas","newCellValue","recomputeFormulaVertexValue","CYCLE","tmpRanges","evaluateAstToCellValue","interpreterValue","lazilyTransformingService","exportValue","detailedError","cellValueRounding","originAddress","magnitudeMultiplierExponent","log10","placesMultiplier","buildStrategy","SimpleStrategy","COLLECT_DEPENDENCIES","PROCESS_DEPENDENCIES","processDependencies","columnIndex","cellContent","parseResult","PARSER","shrinkArrayIfNeeded","validateAndReturnMetadataFromName","aliases","arraySizeFunctions","volatileFunctions","arrayFunctions","structuralChangeFunctions","functionsWhichDoesNotNeedArgumentsToBeComputed","functionsMetadata","isArrayFunction","instancePlugins","loadPluginFunctions","protectedFunctions","loadFunctionUnprotected","categorizeFunction","loadTranslations","loadPluginFunction","functionIsProtected","protectedPlugin","protectedPlugins","registeredPlugin","_protectedPlugins","registry","methodName","method","initializePlugins","instances","foundPluginInstance","pluginInstance","arraySizeMethodName","arraySizeMethod","getFunction","pluginEntry","pluginFunction","functionMetadata","isVolatile","doesNotNeedArgumentsToBeComputed","isDependentOnSheetStructureChange","VersionPlugin","LICENSE_STATUS_MAP","validityState","status","equalOp","arg1","arg2","binaryErrorWrapper","notEqualOp","greaterThanOp","lessThanOp","greaterThanOrEqualOp","lessThanOrEqualOp","concatOp","plusOp","minusOp","timesOp","powerOp","divOp","unaryMinusOp","unaryErrorWrapper","percentOp","unaryPlusOp","criterionBuilder","CriterionBuilder","evaluateAstWithoutPostprocessing","wrapperForRootVertex","leftResult","rightResult","binaryRangeWrapper","unaryRangeWrapper","rangeSpansOneSheet","totalWidth","astRow","rowHeight","rowRet","astIt","newRaw","raw2","raw1","i1","i2","j1","j2","CriterionType","buildCriterion","operator","trueString","falseString","fromCellValue","criterion","parseCriterion","lambda","buildCriterionLambda","EQUAL","ANY_CRITERION_REGEX","criterionValue","criterionType","StrToCriterionType","boolvalue","NOT_EQUAL","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","transformations","combinedTransformer","CombinedTransformer","TRANSFORM_ASTS_POSTPONED","getTransformationsFrom","transformedAst","transformedAddress","statistics","ColumnIndex","ColumnBinarySearch","AdvancedFind","rangeValue","rangeLowerBound","centerValueFn","center","pos","lowerBound","cmp","advancedFind","keyMatcher","transformingService","binarySearchStrategy","arrayValue","addSingleCellValue","removeSingleValue","columnMap","getColumnMap","valueIndex","upperBound","getValueIndex","actualVersion","relevantTransformations","BUILD_COLUMN_INDEX","addValue","shiftRows","removeRowsFromValues","afterRow","numberPattern","allThousandSeparatorsRegex","arrayVertexAddress","genericSheetGetter","getter","sheetGetter","idMap","newUnparser","object","Function","postMortem","TinyEmitter","dictionary","FILTER","ABS","ACOS","ACOSH","ACOT","ACOTH","AND","ARABIC","ASIN","ASINH","ATAN2","ATAN","ATANH","AVERAGE","AVERAGEA","AVERAGEIF","BASE","BIN2DEC","BIN2HEX","BIN2OCT","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","CEILING","CHAR","CHOOSE","CLEAN","CODE","COLUMN","COLUMNS","CONCATENATE","CORREL","COS","COSH","COT","COTH","COUNT","COUNTA","COUNTBLANK","COUNTIF","COUNTIFS","COUNTUNIQUE","CSC","CSCH","CUMIPMT","CUMPRINC","DATEDIF","DATEVALUE","DAY","DAYS360","DAYS","DB","DDB","DEC2BIN","DEC2HEX","DEC2OCT","DECIMAL","DEGREES","DELTA","DOLLARDE","DOLLARFR","EDATE","EFFECT","EOMONTH","ERF","ERFC","EVEN","EXACT","EXP","FALSE","FIND","FORMULATEXT","FV","FVSCHEDULE","HEX2BIN","HEX2DEC","HEX2OCT","HLOOKUP","HOUR","IF","IFERROR","IFNA","INDEX","INT","INTERVAL","IPMT","ISBINARY","ISBLANK","ISERR","ISERROR","ISEVEN","ISFORMULA","ISLOGICAL","ISNA","ISNONTEXT","ISNUMBER","ISODD","ISOWEEKNUM","ISPMT","ISREF","ISTEXT","LEFT","LEN","LN","LOG10","LOG","LOWER","MATCH","MAX","MAXA","MAXIFS","MAXPOOL","MEDIAN","MEDIANPOOL","MID","MIN","MINA","MINIFS","MINUTE","MIRR","MMULT","MOD","MONTH","NETWORKDAYS","NOMINAL","NOT","NOW","NPER","NPV","OCT2BIN","OCT2DEC","OCT2HEX","ODD","OFFSET","PI","PMT","PDURATION","PRODUCT","POWER","PPMT","PROPER","PV","RADIANS","RAND","RATE","REPLACE","REPT","RIGHT","ROMAN","ROUND","ROUNDDOWN","ROUNDUP","ROW","ROWS","RRI","SEARCH","SEC","SECH","SECOND","SHEET","SHEETS","SIN","SINH","SLN","SPLIT","SQRT","STDEVA","STDEVPA","SUBSTITUTE","SUBTOTAL","SUM","SUMIF","SUMIFS","SUMPRODUCT","SUMSQ","SWITCH","SYD","T","TAN","TANH","TBILLEQ","TBILLPRICE","TBILLYIELD","TEXT","TIME","TIMEVALUE","TODAY","TRANSPOSE","TRIM","TRUE","TRUNC","UNICHAR","UNICODE","UPPER","VARA","VARPA","VLOOKUP","WEEKDAY","WEEKNUM","WORKDAY","XNPV","XOR","YEAR","YEARFRAC","VARP","VAR","STDEVP","STDEV","FISHER","FISHERINV","GAMMA","GAMMALN","GAUSS","FACT","FACTDOUBLE","COMBIN","COMBINA","GCD","LCM","MROUND","MULTINOMIAL","QUOTIENT","RANDBETWEEN","SERIESSUM","SIGN","SQRTPI","SUMX2MY2","SUMX2PY2","SUMXMY2","GAMMADIST","GAMMAINV","BETADIST","BETAINV","BINOMDIST","BESSELI","BESSELJ","BESSELK","BESSELY","CHIDIST","CHIINV","FDIST","FINV","WEIBULL","POISSON","HYPGEOMDIST","TDIST","TINV","LOGINV","LOGNORMDIST","NORMDIST","NORMINV","NORMSDIST","NORMSINV","PHI","IMABS","IMAGINARY","IMARGUMENT","IMCONJUGATE","IMCOS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMDIV","IMEXP","IMLN","IMLOG10","IMLOG2","IMPOWER","IMPRODUCT","IMREAL","IMSEC","IMSECH","IMSIN","IMSINH","IMSQRT","IMSUB","IMSUM","IMTAN","LARGE","SMALL","AVEDEV","CONFIDENCE","DEVSQ","GEOMEAN","HARMEAN","CRITBINOM","PEARSON","RSQ","STANDARDIZE","ZTEST","FTEST","STEYX","SLOPE","CHITEST","TTEST","SKEW","WEIBULLDIST","VARS","TINV2T","TDISTRT","TDIST2T","STDEVS","FINVRT","FDISTRT","CHIDISTRT","CHIINVRT","COVARIANCEP","COVARIANCES","LOGNORMINV","POISSONDIST","SKEWP","FLOOR","ArrayPlugin","arrayformula","arrayformulaArraySize","arrayconstrain","numRows","numCols","arrayconstrainArraySize","rangeVals","rangeFilters","ok","filterArraySize","AbsPlugin","MAX_48BIT_INTEGER","SHIFT_MIN_POSITIONS","SHIFT_MAX_POSITIONS","BitShiftPlugin","bitlshift","shiftLeft","bitrshift","shiftRight","positions","validate","BitwiseLogicOperationsPlugin","bitand","bitor","bitxor","BooleanPlugin","literalTrue","literalFalse","conditionalIf","condition","arg3","and","or","not","xor","cnt","switch","selector","n","iferror","ifna","choose","CharPlugin","trunc","unichar","fromCodePoint","CodePlugin","unicode","codePointAt","CountBlankPlugin","countblank","counter","CountUniquePlugin","countunique","valuesSet","errorsSet","DateTimePlugin","isoweeknumCore","absoluteDay","yearStart","yearStartAbsolute","firstThursdayAbs","days360Core","startDate","endDate","nStart","nEnd","delta","eomonth","numberOfMonthsToShift","days","hour","timeNumber","minute","second","numberRepresentation","weekday","weekdayOffsets","weeknum","isoweeknum","datevalue","timevalue","today","edate","newDate","datedif","unit","days360","yearfrac","interval","networkdays","holidays","networkdayscore","networkdaysintl","weekend","workday","workdaycore","workdayintl","multiplier","weekendPattern","computeWeekendPattern","filteredHolidays","simpleRangeToFilteredHolidays","countWorkdays","upper","lower","mid","sortedHolidays","ans","holidaysArr","processedHolidays","sortedArray","workdayPatterns","DegreesPlugin","degrees","DeltaPlugin","ExpPlugin","exp","FinancialPlugin","pmt","pmtCore","ipmt","ipmtCore","ppmt","ppmtCore","fv","fvCore","cumipmt","rate","periods","cumprinc","db","cost","salvage","life","period","initial","ddb","factor","dollarde","fraction","dollarfr","effect","ispmt","nominal","nper","payment","present","future","log","guess","epsMax","iterMax","f","dy","df","pv","rri","sln","syd","tbilleq","settlement","maturity","discount","denom","tbillprice","tbillyield","price","fvschedule","ratios","npv","npvCore","mirr","frate","rrate","posFlag","negFlag","posValues","negValues","nom","pduration","xnpv","dates","valArr","valArrNum","dateArr","dateArrNum","term","FormulaTextPlugin","formulatext","InformationPlugin","isbinary","iserr","iserror","isformula","isblank","isna","isnumber","islogical","isref","istext","isnontext","_f","na","_ast","_state","sheetNumber","optional","IsEvenPlugin","iseven","IsOddPlugin","isodd","LogarithmPlugin","base","ln","parseFloat","MathConstantsPlugin","pi","sqrtpi","sqrt","arraySizeForMultiplication","arraySizeForPoolFunction","inputArray","windowSize","stride","MatrixPlugin","mmult","leftMatrix","rightMatrix","outputSize","createKernel","sum","thread","mmultArraySize","maxpool","matrix","leftCornerX","leftCornerY","currentMax","medianpool","currentMin","iter","medianGuess","medianGuessCount","i3","j3","maxpoolArraySize","windowArg","window","strideArg","medianpoolArraySize","transpose","inputSize","transposeArraySize","kernel","apply","MedianPlugin","median","large","small","ModuloPlugin","dividend","divisor","zeroForInfinite","MomentsAggregate","sumsq","single","compose","averageValue","varSValue","varPValue","NumericAggregationPlugin","doSum","strictlyNumbers","doMax","maxa","NEGATIVE_INFINITY","numbersBooleans","doMin","mina","doCount","counta","doCounta","average","doAverage","averagea","doVarS","varp","doVarP","vara","reduceAggregateA","varpa","stdevs","doStdevS","stdevp","doStdevP","stdeva","stdevpa","product","doProduct","subtotal","functionType","reduceAggregate","initialAccValue","reducingFunction","mapFunction","coercionFunction","evaluateRange","coercedRangeValues","err","rangeValues","rangeResult","actualRange","cachedValue","PowerPlugin","power","RadiansPlugin","radians","MAX_LENGTH","DECIMAL_NUMBER_OF_BITS","MIN_BASE","MAX_BASE","ALPHABET","RadixConversionPlugin","dec2bin","places","decimalToBaseWithExactPadding","dec2oct","dec2hex","bin2dec","binary","binaryWithSign","coerceStringToBase","twoComplementToDecimal","bin2oct","bin2hex","oct2dec","octal","octalWithSign","oct2bin","oct2hex","hex2dec","hexadecimal","hexadecimalWithSign","hex2bin","hex2oct","decimalToBaseWithMinimumPadding","decimal","maxLength","baseAlphabet","regex","maxValFromBase","minValFromBase","decimalToRadixComplement","parsed","RandomPlugin","rand","random","randbetween","ceil","findNextOddNumber","ceiled","findNextEvenNumber","RoundingPlugin","roundup","numberToRound","rounddown","intFunc","coercedNumberToRound","even","odd","ceilingmath","significance","ceiling","ceilingprecise","floormath","floorprecise","SqrtPlugin","AverageResult","conditionalAggregationFunctionCacheKey","conditions","conditionsStrings","conditionRange","mapToRawScalarValue","ConditionalAggregationPlugin","sumif","computeFn","computeConditionalAggregationFunction","sumifs","averageif","averageResult","countif","countifs","minifs","composeFunction","minResult","maxifs","maxResult","valuesRange","conditionArgs","reduceInitialValue","conditionArg","criterionPackage","Condition","CriterionFunctionCompute","compute","findSmallerRangeForMany","conditionRanges","restValuesRange","restConditionRanges","simpleValuesRange","valuesRangeVertex","tryToGetRangeVertexForRangeValue","conditionsVertices","fullCriterionString","cachedResult","findAlreadyComputedValueInCache","buildNewCriterionCache","evaluateRangeValue","reduceFunction","iterable","criterionLambdas","conditionsIterators","filteredValues","ifFilter","simpleConditionRanges","smallerCache","newCache","rcr","newCacheValue","conditionalIterables","computableIterable","computable","conditionalSplits","conditionalIterable","cs","conditionalFirsts","zip","conditionalFirst","criterionLambda","rest","arr1","arr2","done","SumprodPlugin","sumproduct","iterators","coercedVal","TextPlugin","concatenate","stringToSplit","indexToUse","splittedString","len","proper","word","clean","exact","rept","repeat","startPosition","numberOfChars","newText","search","normalizedText","substitute","oldText","occurrence","oldTextRegexp","shiftedText","TrigonometryPlugin","acos","asin","cos","sin","tan","atan","atan2","cot","acot","sec","csc","sinh","asinh","cosh","acosh","tanh","atanh","coth","acoth","sech","csch","LookupPlugin","rowSearch","RowSearchStrategy","vlookup","doVlookup","hlookup","doHlookup","doMatch","searchInRange","searchStrategy","searchedRange","colIndex","RomanPlugin","roman","romanMode","arabic","inputString","minusSign","work","eatToken","inputAcc","absorb","valAcc","SimpleArithmerticPlugin","gte","lte","minus","uminus","upercent","uplus","StatisticalPlugin","erf","erfc","expondist","cumulative","exponential","cdf","pdf","fisher","fisherinv","gamma","gammafn","gammadist","alphaVal","betaVal","gammaln","gammainv","inv","gauss","z","normal","betadist","A","B","beta","betainv","binomialdist","succ","trials","prob","binomial","binomialinv","alpha","besselifn","besseli","besseljfn","besselj","besselkfn","besselk","besselyfn","bessely","chisqdist","deg","chisquare","chisqdistrt","chisqinv","p","chisqinvrt","fdist","deg1","deg2","centralF","fdistrt","finv","finvrt","weibulldist","shape","scale","weibull","poissondist","mean","poisson","hypgeomdist","numberS","populationS","numberPop","hypgeom","tdist","studentt","tdist2t","tdistrt","tdistold","tinv","tinv2t","lognormdist","stddev","lognormal","lognorminv","normdist","norminv","normsdist","normsinv","phi","negbinomdist","nf","ns","negbin","confidencenorm","normalci","confidencet","tci","standardize","NEGBINOMDIST","EXPONDIST","M","_horner","_bessel_iter","f0","f1","sign","tdx","f2","o","_bessel_wrap","bessel0","bessel1","nonzero","bessel","b0","b1","W","b0_a1a","b0_a2a","b0_a1b","b0_a2b","a1","a2","xx","b1_a1a","b1_a2a","b1_a1b","b1_a2b","jsum","bjp","bj","bjm","tox","b0_a","b0_b","b1_a","b1_b","bip","bi","bim","cof","isneg","dd","ty","erfcinv","pp","q","fact","xden","xnum","yi","lowRegGamma","gammapinv","ser","aln","ap","del","ITMAX","an","EPS","gln","lna1","afac","std","betafn","betaln","ibeta","ibetainv","lna","lnb","al","bt","betacf","fpmin","qab","qap","qam","m2","aa","k","combination","betacdf","eps","betinc","a0","m9","c9","combinationln","factorial","factorialln","dof","df1","df2","N","scaledPDF","samplesDone","scaledCDF","dof2","mu","sigma","r","sumsqerr","meanv","variance","flag","stdev","prod","geomean","covariance","arr1Len","sq_dev","corrcoeff","MathPlugin","factdouble","combin","combina","gcd","processedArgs","binaryGCD","MAX_SAFE_INTEGER","lcm","binaryLCM","mround","multinomial","quotient","seriessum","coefs","coef","sumx2my2","rangeX","rangeY","valsX","valsY","valX","valY","sumx2py2","sumxmy2","ComplexPlugin","complex","imabs","imaginary","_re","imreal","_im","imargument","imconjugate","imcos","imcosh","imcot","div","imcsc","imcsch","imsec","imsech","imsin","imsinh","imtan","imdiv","improduct","mul","imsum","imsub","sub","imexp","imln","imlog10","imlog2","impower","imsqrt","re1","im1","re2","im2","nomRe","nomIm","StatisticalAggregationPlugin","avedev","avg","devsq","harmean","correl","dataX","dataY","parseTwoArrays","rsq","covariancep","covariances","ztest","ftest","arrX","arrY","vx","vy","steyx","slope","chisqtest","ttest","tails","sx","sy","skew","skewp","COVAR","xit","yit","xval","yval"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AC9EA;;;;;;;;AACA;;;;AACA;;AACA;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;;;;;;;;;AAdA;AACA;AACA;AACA;;AAYA;AACA,MAAMA,cAAN,SAA6BC,0BAA7B,CAA0C;;AAE1CD,cAAc,CAACC,YAAf,GAA8BA,0BAA9B;AACAD,cAAc,CAACE,SAAf,GAA2BA,eAA3B;AACAF,cAAc,CAACG,QAAf,GAA0BA,cAA1B;AACAH,cAAc,CAACI,aAAf,GAA+BA,mBAA/B;AACAJ,cAAc,CAACK,qBAAf,GAAuCA,2BAAvC;AACAL,cAAc,CAACM,iBAAf,GAAmCA,4BAAnC;AACAN,cAAc,CAACO,kBAAf,GAAoCA,4BAApC;AACAP,cAAc,CAACQ,6BAAf,GAA+CA,uCAA/C;AACAR,cAAc,CAACS,sBAAf,GAAwCA,8BAAxC;AACAT,cAAc,CAACU,wBAAf,GAA0CA,gCAA1C;AACAV,cAAc,CAACW,wBAAf,GAA0CA,gCAA1C;AACAX,cAAc,CAACY,wBAAf,GAA0CA,gCAA1C;AACAZ,cAAc,CAACa,wBAAf,GAA0CA,gCAA1C;AACAb,cAAc,CAACc,cAAf,GAAgCA,2BAAhC;AACAd,cAAc,CAACe,6BAAf,GAA+CA,qCAA/C;AACAf,cAAc,CAACgB,mBAAf,GAAqCA,2BAArC;AACAhB,cAAc,CAACiB,qBAAf,GAAuCA,6BAAvC;AACAjB,cAAc,CAACkB,0BAAf,GAA4CA,kCAA5C;AACAlB,cAAc,CAACmB,8BAAf,GAAgDA,sCAAhD;AACAnB,cAAc,CAACoB,uBAAf,GAAyCA,+BAAzC;AACApB,cAAc,CAACqB,gCAAf,GAAkDA,wCAAlD;AACArB,cAAc,CAACsB,sCAAf,GAAwDA,8CAAxD;AACAtB,cAAc,CAACuB,iCAAf,GAAmDA,yCAAnD;AACAvB,cAAc,CAACwB,sBAAf,GAAwCA,8BAAxC;AACAxB,cAAc,CAACyB,sBAAf,GAAwCA,8BAAxC;AACAzB,cAAc,CAAC0B,+BAAf,GAAiDA,uCAAjD;AACA1B,cAAc,CAAC2B,kBAAf,GAAoCA,0BAApC;AACA3B,cAAc,CAAC4B,oBAAf,GAAsCA,4BAAtC;AACA5B,cAAc,CAAC6B,gBAAf,GAAkCA,wBAAlC;AACA7B,cAAc,CAAC8B,mBAAf,GAAqCA,2BAArC;AACA9B,cAAc,CAAC+B,iCAAf,GAAmDA,yCAAnD;AACA/B,cAAc,CAACgC,0BAAf,GAA4CA,kCAA5C;AACAhC,cAAc,CAACiC,2BAAf,GAA6CA,mCAA7C;AACAjC,cAAc,CAACkC,2BAAf,GAA6CA,mCAA7C;AACAlC,cAAc,CAACmC,2BAAf,GAA6CA,mCAA7C;AACAnC,cAAc,CAACoC,kBAAf,GAAoCA,0BAApC;AACA,MAAMC,eAAe,GAAGC,cAAA,CAAOC,aAAP,CAAqBC,QAA7C;;AACAvC,0BAAA,CAAawC,gBAAb,CAA8BJ,eAA9B,EAA+CK,aAA/C;;AACAzC,0BAAA,CAAa0C,SAAb,CAAuBD,aAAA,CAAKE,QAA5B,IAAwCF,aAAxC;;AACA,KAAK,MAAMG,UAAX,IAAyBC,MAAM,CAACC,mBAAP,CAA2BC,OAA3B,CAAzB,EAA8D;EAC1D,IAAI,CAACH,UAAU,CAACI,UAAX,CAAsB,GAAtB,CAAL,EAAiC;IAC7B;IACA;IACAhD,0BAAA,CAAaiD,sBAAb,CAAoCF,OAAO,CAACH,UAAD,CAA3C;EACH;AACJ;;eACc7C,c;;;;;;;;;;;;;;;AC5Df;;AACA;;AACA;;AACA;;AAPA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACO,IAAIE,SAAJ;;;AACP,CAAC,UAAUA,SAAV,EAAqB;EAClB;EACAA,SAAS,CAAC,aAAD,CAAT,GAA2B,aAA3B;EACA;;EACAA,SAAS,CAAC,MAAD,CAAT,GAAoB,MAApB;EACAA,SAAS,CAAC,OAAD,CAAT,GAAqB,OAArB;EACAA,SAAS,CAAC,KAAD,CAAT,GAAmB,KAAnB;EACAA,SAAS,CAAC,IAAD,CAAT,GAAkB,IAAlB;EACA;;EACAA,SAAS,CAAC,OAAD,CAAT,GAAqB,OAArB;EACA;;EACAA,SAAS,CAAC,KAAD,CAAT,GAAmB,KAAnB;EACA;;EACAA,SAAS,CAAC,OAAD,CAAT,GAAqB,OAArB;EACA;;EACAA,SAAS,CAAC,KAAD,CAAT,GAAmB,KAAnB;EACA;;EACAA,SAAS,CAAC,OAAD,CAAT,GAAqB,OAArB;AACH,CAlBD,EAkBGA,SAAS,yBAAKA,SAAS,GAAG,EAAjB,CAlBZ;;AAmBO,IAAIC,QAAJ;;;AACP,CAAC,UAAUA,QAAV,EAAoB;EACjBA,QAAQ,CAAC,SAAD,CAAR,GAAsB,SAAtB;EACAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAApB;EACAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAApB;EACAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAApB;EACAA,QAAQ,CAAC,cAAD,CAAR,GAA2B,cAA3B;AACH,CAND,EAMGA,QAAQ,wBAAKA,QAAQ,GAAG,EAAhB,CANX;;AAOO,MAAMgD,WAAW,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;EAC5C,IAAID,MAAM,YAAYE,4BAAtB,EAAmC;IAC/B,IAAIF,MAAM,CAACG,YAAP,CAAoBF,OAApB,CAAJ,EAAkC;MAC9B,OAAOlD,QAAQ,CAACqD,YAAhB;IACH,CAFD,MAGK;MACD,OAAOrD,QAAQ,CAACsD,KAAhB;IACH;EACJ;;EACD,IAAIL,MAAM,YAAYM,kCAAlB,IAAuCN,MAAM,YAAYO,mCAA7D,EAAiF;IAC7E,OAAOxD,QAAQ,CAACyD,OAAhB;EACH;;EACD,IAAIR,MAAM,YAAYS,gCAAtB,EAAuC;IACnC,OAAO1D,QAAQ,CAAC2D,KAAhB;EACH;;EACD,OAAO3D,QAAQ,CAAC4D,KAAhB;AACH,CAhBM;;;AAiBA,IAAIC,iBAAJ;;;AACP,CAAC,UAAUA,iBAAV,EAA6B;EAC1BA,iBAAiB,CAAC,OAAD,CAAjB,GAA6B,OAA7B;EACAA,iBAAiB,CAAC,QAAD,CAAjB,GAA8B,QAA9B;EACAA,iBAAiB,CAAC,QAAD,CAAjB,GAA8B,QAA9B;EACAA,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,SAA/B;EACAA,iBAAiB,CAAC,OAAD,CAAjB,GAA6B,OAA7B;AACH,CAND,EAMGA,iBAAiB,iCAAKA,iBAAiB,GAAG,EAAzB,CANpB;;AAOO,IAAIC,mBAAJ;;;AACP,CAAC,UAAUA,mBAAV,EAA+B;EAC5BA,mBAAmB,CAAC,QAAD,CAAnB,GAAgC,QAAhC;AACH,CAFD,EAEGA,mBAAmB,mCAAKA,mBAAmB,GAAG,EAA3B,CAFtB;;AAGO,MAAM7D,aAAa,GAAG0C,MAAM,CAACoB,MAAP,CAAcpB,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkBF,iBAAlB,CAAd,EAAoDC,mBAApD,CAAtB;;AACA,MAAM5D,qBAAqB,GAAGyC,MAAM,CAACoB,MAAP,CAAcpB,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkBF,iBAAlB,CAAd,EAAoDG,4BAApD,CAA9B;;;AACA,MAAMC,gBAAgB,GAAIC,GAAD,IAAS;EACrC,QAAQA,GAAR;IACI,KAAKjE,aAAa,CAAC2D,KAAnB;MACI,OAAO,CAAP;;IACJ,KAAK3D,aAAa,CAACkE,MAAnB;MACI,OAAO,CAAP;;IACJ,KAAKlE,aAAa,CAACmE,MAAnB;MACI,OAAO,CAAP;;IACJ,KAAKnE,aAAa,CAACoE,OAAnB;MACI,OAAO,CAAP;;IACJ,KAAKpE,aAAa,CAACqE,KAAnB;MACI,OAAO,CAAP;EAVR;;EAYA,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH,CAdM;;;;AAeA,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;EAC3C,IAAIA,SAAS,KAAKC,4BAAlB,EAA8B;IAC1B,OAAOzE,aAAa,CAAC2D,KAArB;EACH;;EACD,IAAIa,SAAS,YAAYE,SAArB,IAAkCF,SAAS,YAAYG,kCAA3D,EAA6E;IACzE,OAAO3E,aAAa,CAACqE,KAArB;EACH;;EACD,IAAI,OAAOG,SAAP,KAAqB,QAAzB,EAAmC;IAC/B,OAAOxE,aAAa,CAACmE,MAArB;EACH,CAFD,MAGK,IAAI,IAAAS,kCAAA,EAAiBJ,SAAjB,CAAJ,EAAiC;IAClC,OAAOxE,aAAa,CAACkE,MAArB;EACH,CAFI,MAGA,IAAI,OAAOM,SAAP,KAAqB,SAAzB,EAAoC;IACrC,OAAOxE,aAAa,CAACoE,OAArB;EACH;;EACD,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACH,CAjBM;;;;AAkBA,MAAMO,wBAAwB,GAAIL,SAAD,IAAe;EACnD,IAAI,IAAAI,kCAAA,EAAiBJ,SAAjB,CAAJ,EAAiC;IAC7B,OAAO,IAAAM,yCAAA,EAAwBN,SAAxB,CAAP;EACH,CAFD,MAGK;IACD,OAAOD,gBAAgB,CAACC,SAAD,CAAvB;EACH;AACJ,CAPM;;;;AAQA,MAAMO,kBAAkB,GAAIP,SAAD,IAAe;EAC7C,IAAI,IAAAI,kCAAA,EAAiBJ,SAAjB,CAAJ,EAAiC;IAC7B,OAAO,IAAAQ,2CAAA,EAA0BR,SAA1B,CAAP;EACH,CAFD,MAGK;IACD,OAAOS,SAAP;EACH;AACJ,CAPM;;;;AAQA,MAAMP,SAAN,CAAgB;EACnBQ,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,EAAsB;IAC7B,KAAKF,IAAL,GAAYA,IAAZ;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACH;;EACkB,OAAZC,YAAY,GAAG;IAClB,OAAO,IAAIZ,SAAJ,CAAc5E,SAAS,CAACuE,KAAxB,EAA+BkB,0BAAA,CAAaC,UAA5C,CAAP;EACH;;EACDC,gBAAgB,CAACzC,MAAD,EAAS;IACrB,IAAI,KAAKqC,IAAL,KAAcJ,SAAlB,EAA6B;MACzB,OAAO,IAAIP,SAAJ,CAAc,KAAKS,IAAnB,EAAyB,KAAKC,OAA9B,EAAuCpC,MAAvC,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;;AAhBkB;;;;AAkBhB,MAAM0C,gBAAgB,GAAG,CAACC,KAAD,EAAQC,GAAR,MAAiB;EAAED,KAAF;EAASC;AAAT,CAAjB,CAAzB;;;;AACA,MAAMC,uBAAuB,GAAI5C,OAAD,IAAcA,OAAO,CAAC2C,GAAR,GAAc,CAA5D;;;;AACA,MAAME,mBAAmB,GAAG,CAACH,KAAD,EAAQI,GAAR,MAAiB;EAAEJ,KAAF;EAASI;AAAT,CAAjB,CAA5B;;;;AACA,MAAMC,0BAA0B,GAAI/C,OAAD,IAAcA,OAAO,CAAC8C,GAAR,GAAc,CAA/D;;;;AACA,MAAME,iBAAiB,GAAG,CAACN,KAAD,EAAQI,GAAR,EAAaH,GAAb,MAAsB;EAAED,KAAF;EAASI,GAAT;EAAcH;AAAd,CAAtB,CAA1B;;;;AACA,MAAMM,wBAAwB,GAAIjD,OAAD,IAAcA,OAAO,CAAC8C,GAAR,GAAc,CAAd,IAAmB9C,OAAO,CAAC2C,GAAR,GAAc,CAAhF;;;;AACA,MAAMO,sBAAsB,GAAG,CAAClD,OAAD,EAAUmD,OAAV,EAAmBC,OAAnB,EAA4BC,QAA5B,KAAyC;EAC3E,OAAOL,iBAAiB,CAACG,OAAD,EAAUnD,OAAO,CAAC8C,GAAR,GAAcM,OAAxB,EAAiCpD,OAAO,CAAC2C,GAAR,GAAcU,QAA/C,CAAxB;AACH,CAFM;;;;AAGA,MAAMC,UAAU,GAAItD,OAAD,IAAc,GAAEA,OAAO,CAAC0C,KAAM,IAAG1C,OAAO,CAAC2C,GAAI,IAAG3C,OAAO,CAAC8C,GAAI,EAA/E;;;;AACA,SAASS,mBAAT,CAA6BC,GAA7B,EAAkC;EACrC,IAAIA,GAAG,KAAK,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA/C,CAAP,EAAmE;IAC/D,OAAO,SAASA,GAAT,IAAgB,OAAOA,GAAG,CAACV,GAAX,KAAmB,QAAnC,IAA+C,SAASU,GAAxD,IAA+D,OAAOA,GAAG,CAACb,GAAX,KAAmB,QAAlF,IAA8F,WAAWa,GAAzG,IAAgH,OAAOA,GAAG,CAACd,KAAX,KAAqB,QAA5I;EACH,CAFD,MAGK;IACD,OAAO,KAAP;EACH;AACJ;;AACM,MAAMe,sBAAsB,GAAG,CAACzD,OAAD,EAAU0D,WAAV,KAA0B;EAC5D,IAAIC,EAAJ;;EACA,OAAO,CAACA,EAAE,GAAG3D,OAAO,CAAC0C,KAAd,MAAyB,IAAzB,IAAiCiB,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsDD,WAAW,CAAChB,KAAzE;AACH,CAHM;;;;AAIA,MAAMkB,sBAAsB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;EACnD,OAAOD,IAAI,CAACnB,KAAL,KAAeoB,KAAK,CAACpB,KAArB,IAA8BmB,IAAI,CAACf,GAAL,KAAagB,KAAK,CAAChB,GAAjD,IAAwDe,IAAI,CAAClB,GAAL,KAAamB,KAAK,CAACnB,GAAlF;AACH,CAFM;;;;;;;;;;;;;;AC3JP;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;ACZA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AArBA;AACA;AACA;AACA;AAmBO,MAAMoB,eAAN,CAAsB;EACzB9B,WAAW,CAAC+B,cAAD,EAAiBC,YAAjB,EAA+BC,YAA/B,EAA6CC,YAA7C,EAA2DC,KAA3D,EAAkEC,4BAAlE,EAAgGC,gBAAhG,EAAkHC,gBAAlH,EAAoI;IAC3I,KAAKP,cAAL,GAAsBA,cAAtB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,4BAAL,GAAoCA,4BAApC;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,OAAL,GAAeC,8BAAA,CAAeC,KAAf,EAAf;;IACA,KAAKC,wBAAL,GAAiC5E,MAAD,IAAY;MACxC,IAAIA,MAAM,YAAY6E,cAAtB,EAAmC;QAC/B,OAAO,KAAKC,oBAAL,CAA0B9E,MAA1B,EAAkC+E,GAAlC,CAAsC;UAAA,IAAC,CAAC9E,OAAD,EAAU+E,CAAV,CAAD;UAAA,OAAkB/E,OAAlB;QAAA,CAAtC,CAAP;MACH,CAFD,MAGK;QACD,MAAMgF,kBAAkB,GAAG,KAAKC,sBAAL,CAA4BlF,MAA5B,CAA3B;;QACA,IAAIiF,kBAAkB,KAAKhD,SAA3B,EAAsC;UAClC,MAAM,CAAChC,OAAD,EAAUkF,YAAV,IAA0BF,kBAAhC;UACA,OAAOE,YAAY,CAACJ,GAAb,CAAkBK,UAAD,IAAgB;YACpC,IAAIA,UAAU,YAAYC,iCAA1B,EAAqD;cACjD,OAAO,KAAKb,gBAAL,CAAsBc,4BAAtB,CAAmDF,UAAU,CAACG,IAA9D,EAAoEtF,OAAO,CAAC0C,KAA5E,EAAmF1C,OAA1F;YACH,CAFD,MAGK,IAAI,IAAAuD,yBAAA,EAAoB4B,UAApB,CAAJ,EAAqC;cACtC,OAAOA,UAAP;YACH,CAFI,MAGA;cACD,OAAO,IAAAI,kCAAA,EAAgBJ,UAAU,CAACK,KAA3B,EAAkCL,UAAU,CAACM,GAA7C,CAAP;YACH;UACJ,CAVM,CAAP;QAWH,CAbD,MAcK;UACD,OAAO,EAAP;QACH;MACJ;IACJ,CAxBD;;IAyBA,KAAKC,uBAAL,GAAgC3F,MAAD,IAAY;MACvC,IAAIA,MAAM,YAAY6E,cAAtB,EAAmC;QAC/B,OAAO,KAAKC,oBAAL,CAA0B9E,MAA1B,EAAkC+E,GAAlC,CAAsC;UAAA,IAAC,CAACC,CAAD,EAAIY,CAAJ,CAAD;UAAA,OAAYA,CAAZ;QAAA,CAAtC,CAAP;MACH,CAFD,MAGK;QACD,MAAMX,kBAAkB,GAAG,KAAKC,sBAAL,CAA4BlF,MAA5B,CAA3B;;QACA,IAAIiF,kBAAkB,KAAKhD,SAA3B,EAAsC;UAClC,MAAM,CAAChC,OAAD,EAAUkF,YAAV,IAA0BF,kBAAhC;UACA,OAAOE,YAAY,CAACJ,GAAb,CAAkBK,UAAD,IAAgB;YACpC,IAAIA,UAAU,YAAYS,oCAA1B,EAA6C;cACzC,OAAO,KAAK3B,YAAL,CAAkB4B,UAAlB,CAA6BV,UAAU,CAACK,KAAxC,EAA+CL,UAAU,CAACM,GAA1D,CAAP;YACH,CAFD,MAGK,IAAIN,UAAU,YAAYC,iCAA1B,EAAqD;cACtD,MAAMU,eAAe,GAAG,KAAKvB,gBAAL,CAAsBc,4BAAtB,CAAmDF,UAAU,CAACG,IAA9D,EAAoEtF,OAAO,CAAC0C,KAA5E,CAAxB;cACA,OAAO,KAAKsB,cAAL,CAAoB+B,SAApB,CAA8BD,eAAe,CAAC9F,OAA9C,CAAP;YACH,CAHI,MAIA;cACD,OAAO,KAAKgE,cAAL,CAAoB+B,SAApB,CAA8BZ,UAA9B,CAAP;YACH;UACJ,CAXM,CAAP;QAYH,CAdD,MAeK;UACD,OAAO,EAAP;QACH;MACJ;IACJ,CAzBD;;IA0BA,KAAKN,oBAAL,GAA6B9E,MAAD,IAAY;MACpC,MAAMiG,OAAO,GAAG,EAAhB;MACA,MAAM;QAAEC,kBAAF;QAAsBC;MAAtB,IAAoC,KAAKjC,YAAL,CAAkBkC,gBAAlB,CAAmCpG,MAAM,CAACqG,KAA1C,CAA1C,CAFoC,CAEwD;;MAC5F,IAAIA,KAAJ;;MACA,IAAIH,kBAAkB,KAAKjE,SAAvB,IAAoC,KAAKqE,KAAL,CAAWC,aAAX,CAAyBL,kBAAzB,EAA6CM,GAA7C,CAAiDxG,MAAjD,CAAxC,EAAkG;QAC9FqG,KAAK,GAAGF,SAAR;QACAF,OAAO,CAACQ,IAAR,CAAa,CAAC,IAAIZ,oCAAJ,CAAsBK,kBAAkB,CAACT,KAAzC,EAAgDS,kBAAkB,CAACR,GAAnE,CAAD,EAA0EQ,kBAA1E,CAAb;MACH,CAHD,MAIK;QAAE;QACHG,KAAK,GAAGrG,MAAM,CAACqG,KAAf;MACH;;MACD,KAAK,MAAMpG,OAAX,IAAsBoG,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAtB,EAA6C;QACzC,MAAMC,IAAI,GAAG,KAAK1C,cAAL,CAAoB2C,OAApB,CAA4B3G,OAA5B,CAAb;;QACA,IAAI0G,IAAI,YAAYE,kBAApB,EAAqC;UACjCF,IAAI,CAAC1G,OAAL,GAAeA,OAAf;QACH;;QACD,IAAI0G,IAAI,KAAK1E,SAAb,EAAwB;UACpBgE,OAAO,CAACQ,IAAR,CAAa,CAACxG,OAAD,EAAU0G,IAAV,CAAb;QACH;MACJ;;MACD,OAAOV,OAAP;IACH,CArBD;;IAsBA,KAAKf,sBAAL,GAA+BlF,MAAD,IAAY;MACtC,IAAI8G,OAAJ;MACA,IAAI7G,OAAJ;;MACA,IAAID,MAAM,YAAY+G,gCAAtB,EAAqC;QACjC9G,OAAO,GAAGD,MAAM,CAACgH,UAAP,CAAkB,KAAK1C,4BAAvB,CAAV;QACAwC,OAAO,GAAG9G,MAAM,CAACiH,UAAP,CAAkB,KAAK3C,4BAAvB,CAAV;MACH,CAHD,MAIK;QACD,OAAOrC,SAAP;MACH;;MACD,MAAMiF,IAAI,GAAG,IAAAC,2BAAA,EAAoBL,OAApB,EAA6B,KAAKvC,gBAAlC,CAAb;MACA,OAAO,CAACtE,OAAD,EAAU,IAAAmH,8CAAA,EAAuBF,IAAvB,EAA6BjH,OAA7B,CAAV,CAAP;IACH,CAZD;;IAaA,KAAKqG,KAAL,GAAa,IAAIe,YAAJ,CAAU,KAAK1B,uBAAf,CAAb;EACH;EACD;AACJ;AACA;AACA;;;EACqB,OAAV2B,UAAU,CAAChD,4BAAD,EAA+BiD,MAA/B,EAAuChD,gBAAvC,EAAyDC,gBAAzD,EAA2EH,KAA3E,EAAkF;IAC/F,OAAO,IAAIL,eAAJ,CAAoB,IAAIwD,8BAAJ,CAAmBD,MAAM,CAACE,0BAA1B,CAApB,EAA2E,IAAIC,0BAAJ,EAA3E,EAA+F,IAAIC,0BAAJ,CAAiBJ,MAAM,CAACK,kBAAxB,CAA/F,EAA4I,IAAIC,0BAAJ,EAA5I,EAAgKxD,KAAhK,EAAuKC,4BAAvK,EAAqMC,gBAArM,EAAuNC,gBAAvN,CAAP;EACH;;EACDsD,gBAAgB,CAAC7H,OAAD,EAAU8H,GAAV,EAAe5C,YAAf,EAA6B6C,IAA7B,EAAmCC,mBAAnC,EAAwDC,2BAAxD,EAAqF;IACjG,MAAMC,SAAS,GAAGpB,gCAAA,CAAcqB,OAAd,CAAsBL,GAAtB,EAA2B9H,OAA3B,EAAoC+H,IAApC,EAA0C,KAAK1D,4BAAL,CAAkC+D,OAAlC,EAA1C,CAAlB;;IACA,KAAKC,0BAAL,CAAgCH,SAAhC;IACA,KAAKI,uBAAL,CAA6BpD,YAA7B,EAA2CgD,SAA3C;IACA,KAAK7B,KAAL,CAAWkC,gCAAX,CAA4CL,SAA5C;;IACA,IAAIF,mBAAJ,EAAyB;MACrB,KAAKQ,cAAL,CAAoBN,SAApB;IACH;;IACD,IAAID,2BAAJ,EAAiC;MAC7B,KAAKQ,gCAAL,CAAsCP,SAAtC;IACH;;IACD,KAAKQ,+BAAL,CAAqC1I,OAArC;IACA,OAAO,KAAK2I,yBAAL,EAAP;EACH;;EACDC,qBAAqB,CAAC5I,OAAD,EAAU6I,WAAV,EAAuB;IACxC,MAAM9I,MAAM,GAAG,KAAK+I,6BAAL,CAAmC9I,OAAnC,CAAf;IACA,KAAK+I,sBAAL,CAA4BhJ,MAA5B,EAAoC8I,WAApC;IACA,KAAK7E,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqC6I,WAArC;IACA,KAAKxC,KAAL,CAAWkC,gCAAX,CAA4CM,WAA5C;IACA,KAAKH,+BAAL,CAAqC1I,OAArC;IACA,OAAO,KAAK2I,yBAAL,EAAP;EACH;;EACDM,cAAc,CAACjJ,OAAD,EAAUkJ,KAAV,EAAiB;IAC3B,MAAMnJ,MAAM,GAAG,KAAK+I,6BAAL,CAAmC9I,OAAnC,CAAf;;IACA,IAAID,MAAM,YAAYE,cAAtB,EAAmC;MAC/B,KAAKkE,YAAL,CAAkBgF,WAAlB,CAA8BpJ,MAAM,CAACqJ,QAAP,EAA9B;IACH;;IACD,IAAIrJ,MAAM,YAAYS,kBAAtB,EAAuC;MACnC,MAAM6I,SAAS,GAAGtJ,MAAM,CAACuJ,SAAP,EAAlB;;MACA,IAAID,SAAS,CAACE,QAAV,KAAuBL,KAAK,CAACK,QAAjC,EAA2C;QACvCxJ,MAAM,CAACyJ,SAAP,CAAiBN,KAAjB;QACA,KAAK7C,KAAL,CAAWkC,gCAAX,CAA4CxI,MAA5C;MACH;IACJ,CAND,MAOK;MACD,MAAMmI,SAAS,GAAG,IAAI1H,kBAAJ,CAAoB0I,KAAK,CAACO,WAA1B,EAAuCP,KAAK,CAACK,QAA7C,CAAlB;MACA,KAAKR,sBAAL,CAA4BhJ,MAA5B,EAAoCmI,SAApC;MACA,KAAKlE,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCkI,SAArC;MACA,KAAK7B,KAAL,CAAWkC,gCAAX,CAA4CL,SAA5C;IACH;;IACD,KAAKQ,+BAAL,CAAqC1I,OAArC;IACA,OAAO,KAAK2I,yBAAL,EAAP;EACH;;EACDe,YAAY,CAAC1J,OAAD,EAAU;IAClB,MAAMD,MAAM,GAAG,KAAK+I,6BAAL,CAAmC9I,OAAnC,CAAf;;IACA,IAAID,MAAM,KAAKiC,SAAf,EAA0B;MACtB,OAAOyC,8BAAA,CAAeC,KAAf,EAAP;IACH;;IACD,IAAI,KAAK2B,KAAL,CAAWC,aAAX,CAAyBvG,MAAzB,EAAiCgI,IAAjC,GAAwC,CAA5C,EAA+C;MAC3C,MAAM4B,WAAW,GAAG,IAAI/C,kBAAJ,CAAoB5G,OAApB,CAApB;MACA,KAAK4J,iBAAL,CAAuB7J,MAAvB,EAA+B4J,WAA/B;;MACA,IAAI,KAAKtD,KAAL,CAAWwD,kBAAX,CAA8BF,WAA9B,MAA+C,CAAnD,EAAsD;QAClD,KAAKG,YAAL,CAAkBH,WAAlB;QACA,KAAK3F,cAAL,CAAoB+F,UAApB,CAA+B/J,OAA/B;MACH,CAHD,MAIK;QACD,KAAKqG,KAAL,CAAWkC,gCAAX,CAA4CoB,WAA5C;QACA,KAAK3F,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqC2J,WAArC;MACH;IACJ,CAXD,MAYK;MACD,KAAKG,YAAL,CAAkB/J,MAAlB;MACA,KAAKiE,cAAL,CAAoB+F,UAApB,CAA+B/J,OAA/B;IACH;;IACD,OAAO,KAAK2I,yBAAL,EAAP;EACH;;EACDqB,oCAAoC,CAACjK,MAAD,EAAS;IACzC,IAAIA,MAAM,YAAYE,cAAtB,EAAmC;MAC/B,MAAM,IAAIoB,KAAJ,CAAU,mBAAV,CAAN;IACH;EACJ;;EACD4I,4BAA4B,GAAG;IAC3B,KAAK5D,KAAL,CAAW6D,gCAAX;EACH;;EACDC,mBAAmB,GAAG;IAClB,OAAO,IAAIC,GAAJ,CAAQ,CAAC,GAAG,KAAK/D,KAAL,CAAWgE,2BAAf,EAA4C,GAAG,KAAKC,gBAAL,EAA/C,CAAR,CAAP;EACH;;EACDhC,uBAAuB,CAACiC,gBAAD,EAAmBC,SAAnB,EAA8B;IACjDD,gBAAgB,CAACE,OAAjB,CAA0BC,GAAD,IAAS;MAC9B,IAAIA,GAAG,YAAY9E,oCAAnB,EAAsC;QAClC,MAAMQ,KAAK,GAAGsE,GAAd;QACA,IAAIC,WAAW,GAAG,KAAKvB,QAAL,CAAchD,KAAK,CAACZ,KAApB,EAA2BY,KAAK,CAACX,GAAjC,CAAlB;;QACA,IAAIkF,WAAW,KAAK3I,SAApB,EAA+B;UAC3B2I,WAAW,GAAG,IAAI/F,cAAJ,CAAgBwB,KAAhB,CAAd;UACA,KAAKnC,YAAL,CAAkB2G,QAAlB,CAA2BD,WAA3B;QACH;;QACD,KAAKtE,KAAL,CAAWwE,OAAX,CAAmBF,WAAnB;;QACA,IAAI,CAACvE,KAAK,CAAC0E,QAAN,EAAL,EAAuB;UACnB,KAAKzE,KAAL,CAAW0E,uBAAX,CAAmCJ,WAAnC;QACH;;QACD,MAAM;UAAE1E,kBAAF;UAAsBC;QAAtB,IAAoC,KAAKjC,YAAL,CAAkBkC,gBAAlB,CAAmCC,KAAnC,CAA1C;;QACA,IAAIH,kBAAkB,KAAKjE,SAA3B,EAAsC;UAClC,KAAKqE,KAAL,CAAW2E,OAAX,CAAmB/E,kBAAnB,EAAuC0E,WAAvC;;UACA,IAAIA,WAAW,CAACM,UAAhB,EAA4B;YACxBN,WAAW,CAACM,UAAZ,GAAyB,KAAzB;;YACA,KAAK,MAAMC,aAAX,IAA4B9E,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAA5B,EAAmD;cAAE;cACjD,KAAKJ,KAAL,CAAW8E,UAAX,CAAsB,KAAKpF,SAAL,CAAemF,aAAf,CAAtB,EAAqDP,WAArD;YACH;UACJ;QACJ,CARD,MASK;UACDA,WAAW,CAACM,UAAZ,GAAyB,IAAzB;QACH;;QACD,MAAMG,KAAK,GAAG,KAAKjH,YAAL,CAAkBkH,QAAlB,CAA2BnF,SAA3B,CAAd;;QACA,IAAIkF,KAAK,KAAKpJ,SAAd,EAAyB;UACrB,KAAKqE,KAAL,CAAW2E,OAAX,CAAmBI,KAAnB,EAA0BT,WAA1B;QACH,CAFD,MAGK;UACD,KAAK,MAAMO,aAAX,IAA4BhF,SAAS,CAACO,SAAV,CAAoB,IAApB,CAA5B,EAAuD;YACnD,KAAKJ,KAAL,CAAW2E,OAAX,CAAmB,KAAKM,sBAAL,CAA4BJ,aAA5B,CAAnB,EAA+DP,WAA/D;UACH;QACJ;;QACD,KAAKtE,KAAL,CAAW2E,OAAX,CAAmBL,WAAnB,EAAgCH,SAAhC;;QACA,IAAIpE,KAAK,CAAC0E,QAAN,EAAJ,EAAsB;UAClB,KAAKS,8CAAL,CAAoDZ,WAApD;QACH;MACJ,CArCD,MAsCK,IAAID,GAAG,YAAYtF,iCAAnB,EAA8C;QAC/C,MAAMoG,aAAa,GAAGhB,SAAS,CAACzD,UAAV,CAAqB,KAAK1C,4BAA1B,EAAwD3B,KAA9E;QACA,MAAM+I,qBAAqB,GAAG,KAAKC,0BAAL,CAAgChB,GAAG,CAACpF,IAApC,EAA0CkG,aAA1C,CAA9B;QACA,KAAKnF,KAAL,CAAW2E,OAAX,CAAmBS,qBAAnB,EAA0CjB,SAA1C;MACH,CAJI,MAKA;QACD,KAAKnE,KAAL,CAAW2E,OAAX,CAAmB,KAAKM,sBAAL,CAA4BZ,GAA5B,CAAnB,EAAqDF,SAArD;MACH;IACJ,CA/CD;EAgDH;;EACDkB,0BAA0B,CAACC,cAAD,EAAiBC,OAAjB,EAA0B;IAChD,MAAM9F,eAAe,GAAG,KAAKvB,gBAAL,CAAsBc,4BAAtB,CAAmDsG,cAAnD,EAAmEC,OAAnE,CAAxB;IACA,OAAO,KAAKN,sBAAL,CAA4BxF,eAAe,CAAC9F,OAA5C,CAAP;EACH;;EACD6L,YAAY,CAACC,WAAD,EAAcC,SAAd,EAAyB;IACjC,MAAMC,UAAU,GAAG,KAAKV,sBAAL,CAA4BQ,WAA5B,CAAnB;IACA,MAAMG,QAAQ,GAAG,KAAKX,sBAAL,CAA4BS,SAA5B,CAAjB;IACA,KAAK/H,cAAL,CAAoB+F,UAApB,CAA+B+B,WAA/B;IACA,KAAKlC,iBAAL,CAAuBoC,UAAvB,EAAmCC,QAAnC;EACH;;EACDvD,+BAA+B,CAAC1I,OAAD,EAAU;IACrC,IAAID,MAAM,GAAGiC,SAAb;;IACA,KAAK,MAAMoE,KAAX,IAAoB,KAAKC,KAAL,CAAW6F,cAA/B,EAA+C;MAC3C,MAAMC,mBAAmB,GAAG/F,KAA5B;;MACA,IAAI+F,mBAAmB,CAAC/F,KAApB,CAA0BgG,cAA1B,CAAyCpM,OAAzC,CAAJ,EAAuD;QACnDD,MAAM,GAAGA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD,KAAKuL,sBAAL,CAA4BtL,OAA5B,CAAzD;QACA,KAAKqG,KAAL,CAAW2E,OAAX,CAAmBjL,MAAnB,EAA2BoM,mBAA3B;MACH;IACJ;EACJ;;EACDb,sBAAsB,CAACtL,OAAD,EAAU;IAC5B,IAAID,MAAM,GAAG,KAAKiE,cAAL,CAAoB2C,OAApB,CAA4B3G,OAA5B,CAAb;;IACA,IAAID,MAAM,KAAKiC,SAAf,EAA0B;MACtBjC,MAAM,GAAG,IAAI6G,kBAAJ,CAAoB5G,OAApB,CAAT;MACA,KAAKqG,KAAL,CAAWwE,OAAX,CAAmB9K,MAAnB;MACA,KAAKiE,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCD,MAArC;IACH;;IACD,OAAOA,MAAP;EACH;;EACDsM,UAAU,CAACC,WAAD,EAAc;IACpB,KAAKlI,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASC,eAA5B,EAA6C,MAAM;MAC/C,KAAK,MAAM,CAACzM,OAAD,EAAUD,MAAV,CAAX,IAAgC,KAAKiE,cAAL,CAAoB0I,mBAApB,CAAwCJ,WAAxC,CAAhC,EAAsF;QAClF,KAAK,MAAMK,YAAX,IAA2B,KAAKtG,KAAL,CAAWC,aAAX,CAAyBvG,MAAzB,CAA3B,EAA6D;UACzD,KAAKsG,KAAL,CAAWkC,gCAAX,CAA4CoE,YAA5C;QACH;;QACD,IAAI5M,MAAM,YAAYE,cAAtB,EAAmC;UAC/B,IAAIF,MAAM,CAACG,YAAP,CAAoBF,OAApB,CAAJ,EAAkC;YAC9B,KAAK4M,mBAAL,CAAyB7M,MAAzB;YACA,KAAKoE,YAAL,CAAkBgF,WAAlB,CAA8BpJ,MAAM,CAACqJ,QAAP,EAA9B;UACH,CAHD,MAIK;YACD;UACH;QACJ;;QACD,KAAKU,YAAL,CAAkB/J,MAAlB;MACH;IACJ,CAhBD;IAiBA,KAAKqE,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASK,yBAA5B,EAAuD,MAAM;MACzD,KAAK7I,cAAL,CAAoBqI,UAApB,CAA+BC,WAA/B;IACH,CAFD;IAGA,MAAMQ,cAAc,GAAG,KAAK1I,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASO,gBAA5B,EAA8C,MAAM;MACvE,MAAMC,cAAc,GAAG,KAAKC,cAAL,CAAoBX,WAApB,EAAiCtM,OAAO,IAAIA,OAAO,CAAC2C,GAApD,CAAvB;MACA,OAAO,KAAKuK,+BAAL,CAAqCF,cAArC,CAAP;IACH,CAHsB,CAAvB;IAIA,KAAK5I,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASW,uBAA5B,EAAqD,MAAM;MACvD,KAAKC,0BAAL,CAAgCd,WAAW,CAAC5J,KAA5C,EAAmD4J,WAAW,CAACe,QAA/D,EAAyEf,WAAW,CAACgB,YAArF;IACH,CAFD;IAGA,KAAKC,6BAAL;IACA,OAAO;MACHT,cADG;MAEHU,cAAc,EAAE,KAAK7E,yBAAL;IAFb,CAAP;EAIH;;EACD8E,WAAW,CAACC,cAAD,EAAiB;IACxB,MAAMC,MAAM,GAAG,IAAIvD,GAAJ,EAAf;;IACA,KAAK,MAAM,CAACwD,GAAD,EAAM7N,MAAN,CAAX,IAA4B,KAAKiE,cAAL,CAAoB6J,YAApB,CAAiCH,cAAjC,CAA5B,EAA8E;MAC1E,IAAI3N,MAAM,YAAYE,cAAtB,EAAmC;QAC/B,IAAI0N,MAAM,CAACpH,GAAP,CAAWxG,MAAX,CAAJ,EAAwB;UACpB;QACH,CAFD,MAGK;UACD4N,MAAM,CAACG,GAAP,CAAW/N,MAAX;QACH;MACJ;;MACD,KAAK,MAAM4M,YAAX,IAA2B,KAAKtG,KAAL,CAAWC,aAAX,CAAyBvG,MAAzB,CAA3B,EAA6D;QACzD,KAAKsG,KAAL,CAAWkC,gCAAX,CAA4CoE,YAA5C;MACH;;MACD,KAAK7C,YAAL,CAAkB/J,MAAlB;MACA,KAAKiE,cAAL,CAAoB+F,UAApB,CAA+B6D,GAA/B;IACH;;IACD,KAAKxJ,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASW,uBAA5B,EAAqD,MAAM;MACvD,KAAK,MAAM/B,KAAX,IAAoBuC,MAAM,CAACI,MAAP,EAApB,EAAqC;QACjC,KAAK5J,YAAL,CAAkBgF,WAAlB,CAA8BiC,KAAK,CAAChC,QAAN,EAA9B;MACH;IACJ,CAJD;IAKA,KAAKhF,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASO,gBAA5B,EAA8C,MAAM;MAChD,MAAMiB,cAAc,GAAG,KAAK/J,YAAL,CAAkBgK,mBAAlB,CAAsCP,cAAtC,CAAvB;;MACA,KAAK,MAAMtH,KAAX,IAAoB4H,cAApB,EAAoC;QAChC,KAAKlE,YAAL,CAAkB1D,KAAlB;MACH;;MACD,KAAKhC,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASK,yBAA5B,EAAuD,MAAM;QACzD,KAAK7I,cAAL,CAAoByJ,WAApB,CAAgCC,cAAhC;MACH,CAFD;IAGH,CARD;IASA,KAAKH,6BAAL;EACH;;EACDW,UAAU,CAACtC,OAAD,EAAU;IAChB,MAAM+B,MAAM,GAAG,IAAIvD,GAAJ,EAAf;;IACA,KAAK,MAAM,CAACpK,OAAD,EAAUD,MAAV,CAAX,IAAgC,KAAKiE,cAAL,CAAoB6J,YAApB,CAAiCjC,OAAjC,CAAhC,EAA2E;MACvE,IAAI7L,MAAM,YAAYE,cAAtB,EAAmC;QAC/B0N,MAAM,CAACG,GAAP,CAAW/N,MAAX;MACH,CAFD,MAGK;QACD,KAAK2J,YAAL,CAAkB1J,OAAlB;MACH;IACJ;;IACD,KAAK,MAAMoL,KAAX,IAAoBuC,MAAM,CAACI,MAAP,EAApB,EAAqC;MACjC,KAAKI,aAAL,CAAmB/C,KAAnB;IACH;;IACD,KAAKmC,6BAAL;EACH;;EACDa,aAAa,CAACC,cAAD,EAAiB;IAC1B,KAAKjK,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASC,eAA5B,EAA6C,MAAM;MAC/C,KAAK,MAAM,CAACzM,OAAD,EAAUD,MAAV,CAAX,IAAgC,KAAKiE,cAAL,CAAoBsK,sBAApB,CAA2CD,cAA3C,CAAhC,EAA4F;QACxF,KAAK,MAAM1B,YAAX,IAA2B,KAAKtG,KAAL,CAAWC,aAAX,CAAyBvG,MAAzB,CAA3B,EAA6D;UACzD,KAAKsG,KAAL,CAAWkC,gCAAX,CAA4CoE,YAA5C;QACH;;QACD,IAAI5M,MAAM,YAAYE,cAAtB,EAAmC;UAC/B,IAAIF,MAAM,CAACG,YAAP,CAAoBF,OAApB,CAAJ,EAAkC;YAC9B,KAAK4M,mBAAL,CAAyB7M,MAAzB;YACA,KAAKoE,YAAL,CAAkBgF,WAAlB,CAA8BpJ,MAAM,CAACqJ,QAAP,EAA9B;UACH,CAHD,MAIK;YACD;UACH;QACJ;;QACD,KAAKU,YAAL,CAAkB/J,MAAlB;MACH;IACJ,CAhBD;IAiBA,KAAKqE,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASK,yBAA5B,EAAuD,MAAM;MACzD,KAAK7I,cAAL,CAAoBoK,aAApB,CAAkCC,cAAlC;IACH,CAFD;IAGA,MAAMvB,cAAc,GAAG,KAAK1I,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASO,gBAA5B,EAA8C,MAAM;MACvE,MAAMC,cAAc,GAAG,KAAKC,cAAL,CAAoBoB,cAApB,EAAoCrO,OAAO,IAAIA,OAAO,CAAC8C,GAAvD,CAAvB;MACA,OAAO,KAAKoK,+BAAL,CAAqCF,cAArC,CAAP;IACH,CAHsB,CAAvB;IAIA,KAAK5I,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASW,uBAA5B,EAAqD,MAAM;MACvD,OAAO,KAAKoB,6BAAL,CAAmCF,cAAc,CAAC3L,KAAlD,EAAyD2L,cAAc,CAACG,WAAxE,EAAqFH,cAAc,CAACI,eAApG,CAAP;IACH,CAFD;IAGA,KAAKlB,6BAAL;IACA,OAAO;MACHT,cADG;MAEHU,cAAc,EAAE,KAAK7E,yBAAL;IAFb,CAAP;EAIH;;EACD+F,OAAO,CAACC,SAAD,EAAY;IACf,KAAKvK,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASK,yBAA5B,EAAuD,MAAM;MACzD,KAAK7I,cAAL,CAAoB0K,OAApB,CAA4BC,SAAS,CAACjM,KAAtC,EAA6CiM,SAAS,CAACtB,QAAvD,EAAiEsB,SAAS,CAACrB,YAA3E;IACH,CAFD;IAGA,MAAMR,cAAc,GAAG,KAAK1I,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASO,gBAA5B,EAA8C,MAAM;MACvE,MAAM6B,MAAM,GAAG,KAAK3K,YAAL,CAAkB4K,kCAAlB,CAAqDF,SAAS,CAACjM,KAA/D,EAAsEiM,SAAS,CAACtB,QAAhF,EAA0FsB,SAAS,CAACrB,YAApG,CAAf;MACA,KAAKwB,uBAAL,CAA6BH,SAAS,CAACjM,KAAvC,EAA8CiM,SAAS,CAACtB,QAAxD,EAAkEsB,SAAS,CAACrB,YAA5E;MACA,OAAO,KAAKJ,+BAAL,CAAqC0B,MAAM,CAACG,uBAA5C,CAAP;IACH,CAJsB,CAAvB;IAKA,KAAK3K,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASW,uBAA5B,EAAqD,MAAM;MACvD,KAAK6B,uBAAL,CAA6BL,SAAS,CAACjM,KAAvC,EAA8CiM,SAAS,CAACtB,QAAxD,EAAkEsB,SAAS,CAACrB,YAA5E;IACH,CAFD;;IAGA,KAAK,MAAMvN,MAAX,IAAqB,KAAKiE,cAAL,CAAoBiL,oBAApB,CAAyCN,SAAzC,CAArB,EAA0E;MACtE,KAAKtI,KAAL,CAAWkC,gCAAX,CAA4CxI,MAA5C;IACH;;IACD,KAAKwN,6BAAL;IACA,OAAO;MAAET;IAAF,CAAP;EACH;;EACDoC,UAAU,CAACC,YAAD,EAAe;IACrB,KAAK/K,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASK,yBAA5B,EAAuD,MAAM;MACzD,KAAK7I,cAAL,CAAoBkL,UAApB,CAA+BC,YAAY,CAACzM,KAA5C,EAAmDyM,YAAY,CAACX,WAAhE,EAA6EW,YAAY,CAACV,eAA1F;IACH,CAFD;IAGA,MAAM3B,cAAc,GAAG,KAAK1I,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASO,gBAA5B,EAA8C,MAAM;MACvE,MAAM6B,MAAM,GAAG,KAAK3K,YAAL,CAAkBmL,wCAAlB,CAA2DD,YAAY,CAACzM,KAAxE,EAA+EyM,YAAY,CAACX,WAA5F,EAAyGW,YAAY,CAACV,eAAtH,CAAf;MACA,KAAKY,0BAAL,CAAgCF,YAAY,CAACzM,KAA7C,EAAoDyM,YAAY,CAACX,WAAjE,EAA8EW,YAAY,CAACV,eAA3F;MACA,OAAO,KAAKvB,+BAAL,CAAqC0B,MAAM,CAACG,uBAA5C,CAAP;IACH,CAJsB,CAAvB;IAKA,KAAK3K,KAAL,CAAWmI,OAAX,CAAmBC,oBAAA,CAASW,uBAA5B,EAAqD,MAAM;MACvD,OAAO,KAAKmC,0BAAL,CAAgCH,YAAY,CAACzM,KAA7C,EAAoDyM,YAAY,CAACX,WAAjE,EAA8EW,YAAY,CAACV,eAA3F,CAAP;IACH,CAFD;;IAGA,KAAK,MAAM1O,MAAX,IAAqB,KAAKiE,cAAL,CAAoBuL,uBAApB,CAA4CJ,YAA5C,CAArB,EAAgF;MAC5E,KAAK9I,KAAL,CAAWkC,gCAAX,CAA4CxI,MAA5C;IACH;;IACD,KAAKwN,6BAAL;IACA,OAAO;MAAET,cAAF;MAAkBU,cAAc,EAAE,KAAK7E,yBAAL;IAAlC,CAAP;EACH;;EACD6G,oBAAoB,CAACpJ,KAAD,EAAQ;IACxB,IAAI,KAAKjC,YAAL,CAAkBsL,qBAAlB,CAAwCrJ,KAAxC,CAAJ,EAAoD;MAChD,MAAM/E,KAAK,CAAC,uDAAD,CAAX;IACH;EACJ;;EACDqO,oBAAoB,CAACC,WAAD,EAAc;IAC9B,MAAMvJ,KAAK,GAAGuJ,WAAW,CAACC,eAAZ,EAAd;;IACA,IAAIxJ,KAAK,KAAKpE,SAAd,EAAyB;MACrB,OAAO,KAAP;IACH;;IACD,KAAK,MAAMhC,OAAX,IAAsBoG,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAtB,EAA6C;MACzC,MAAMoJ,kBAAkB,GAAG,KAAK7L,cAAL,CAAoB2C,OAApB,CAA4B3G,OAA5B,CAA3B;;MACA,IAAI6P,kBAAkB,KAAK7N,SAAvB,IAAoC,EAAE6N,kBAAkB,YAAYjJ,kBAAhC,CAApC,IAAwFiJ,kBAAkB,KAAKF,WAAnH,EAAgI;QAC5H,OAAO,KAAP;MACH;IACJ;;IACD,OAAO,IAAP;EACH;;EACDG,SAAS,CAACC,WAAD,EAAc3M,OAAd,EAAuBC,QAAvB,EAAiCF,OAAjC,EAA0C;IAC/C,KAAK,MAAM6M,aAAX,IAA4BD,WAAW,CAACE,sBAAZ,CAAmC7M,OAAnC,EAA4CC,QAA5C,EAAsD,IAAtD,CAA5B,EAAyF;MACrF,MAAM6M,aAAa,GAAG,IAAAlN,uBAAA,EAAkBG,OAAlB,EAA2B6M,aAAa,CAAClN,GAAd,GAAoBM,OAA/C,EAAwD4M,aAAa,CAACrN,GAAd,GAAoBU,QAA5E,CAAtB;MACA,IAAI8M,YAAY,GAAG,KAAKnM,cAAL,CAAoB2C,OAApB,CAA4BqJ,aAA5B,CAAnB;MACA,MAAMI,YAAY,GAAG,KAAKpM,cAAL,CAAoB2C,OAApB,CAA4BuJ,aAA5B,CAArB;MACA,KAAKlM,cAAL,CAAoB+F,UAApB,CAA+BiG,aAA/B;;MACA,IAAIG,YAAY,KAAKnO,SAArB,EAAgC;QAC5B,KAAKqE,KAAL,CAAWkC,gCAAX,CAA4C4H,YAA5C;QACA,KAAKnM,cAAL,CAAoBgF,OAApB,CAA4BkH,aAA5B,EAA2CC,YAA3C;QACA,IAAIxG,WAAW,GAAG3H,SAAlB;;QACA,KAAK,MAAM2K,YAAX,IAA2B,KAAKtG,KAAL,CAAWC,aAAX,CAAyB6J,YAAzB,CAA3B,EAAmE;UAC/D,IAAIxD,YAAY,YAAY/H,cAAxB,IAAuC,CAACmL,WAAW,CAACM,aAAZ,CAA0B1D,YAAY,CAACvG,KAAvC,CAA5C,EAA2F;YACvFuD,WAAW,GAAGA,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiDA,WAAjD,GAA+D,KAAK2B,sBAAL,CAA4B0E,aAA5B,CAA7E;YACA,KAAK3J,KAAL,CAAW2E,OAAX,CAAmBrB,WAAnB,EAAgCgD,YAAhC;YACA,KAAKtG,KAAL,CAAW8E,UAAX,CAAsBgF,YAAtB,EAAoCxD,YAApC;UACH;QACJ;;QACD,IAAIhD,WAAJ,EAAiB;UACb,KAAKtD,KAAL,CAAWkC,gCAAX,CAA4CoB,WAA5C;UACA,KAAK3F,cAAL,CAAoBgF,OAApB,CAA4BgH,aAA5B,EAA2CrG,WAA3C;QACH;MACJ;;MACD,IAAIyG,YAAY,KAAKpO,SAArB,EAAgC;QAC5B,IAAImO,YAAY,KAAKnO,SAArB,EAAgC;UAC5B,KAAKgC,cAAL,CAAoB+F,UAApB,CAA+BmG,aAA/B;QACH;;QACD,KAAK,MAAMvD,YAAX,IAA2B,KAAKtG,KAAL,CAAWC,aAAX,CAAyB8J,YAAzB,CAA3B,EAAmE;UAC/DD,YAAY,GAAGA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkE,KAAK7E,sBAAL,CAA4B4E,aAA5B,CAAjF;UACA,KAAK7J,KAAL,CAAW2E,OAAX,CAAmBmF,YAAnB,EAAiCxD,YAAjC;UACA,KAAKtG,KAAL,CAAWkC,gCAAX,CAA4C4H,YAA5C;QACH;;QACD,KAAKrG,YAAL,CAAkBsG,YAAlB;MACH;IACJ;;IACD,KAAK,MAAMzF,WAAX,IAA0B,KAAK1G,YAAL,CAAkBqM,6BAAlB,CAAgDP,WAAhD,CAA1B,EAAwF;MACpF,KAAK,MAAMpD,YAAX,IAA2B,KAAKtG,KAAL,CAAWC,aAAX,CAAyBqE,WAAzB,CAA3B,EAAkE;QAC9D,IAAIgC,YAAY,YAAY/H,cAAxB,IAAuC,CAACmL,WAAW,CAACM,aAAZ,CAA0B1D,YAAY,CAACvG,KAAvC,CAA5C,EAA2F;UACvF,KAAKC,KAAL,CAAW8E,UAAX,CAAsBR,WAAtB,EAAmCgC,YAAnC;;UACA,KAAK,MAAM3M,OAAX,IAAsB2K,WAAW,CAACvE,KAAZ,CAAkBK,SAAlB,CAA4B,IAA5B,CAAtB,EAAyD;YACrD,MAAM8J,cAAc,GAAG,KAAKjF,sBAAL,CAA4BtL,OAA5B,CAAvB;YACA,KAAKqG,KAAL,CAAW2E,OAAX,CAAmBuF,cAAnB,EAAmC5D,YAAnC;YACA,KAAK3I,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCuQ,cAArC;YACA,KAAKlK,KAAL,CAAWkC,gCAAX,CAA4CgI,cAA5C;UACH;QACJ;MACJ;IACJ;;IACD,KAAKtM,YAAL,CAAkBuM,2BAAlB,CAA8CT,WAA9C,EAA2D3M,OAA3D,EAAoEC,QAApE,EAA8EF,OAA9E;EACH;;EACDgL,aAAa,CAACwB,WAAD,EAAc;IACvB,MAAMc,UAAU,GAAG7K,oCAAA,CAAkB8K,QAAlB,CAA2Bf,WAAW,CAAC5I,UAAZ,CAAuB,KAAK1C,4BAA5B,CAA3B,EAAsFsL,WAAW,CAACgB,KAAlG,EAAyGhB,WAAW,CAACiB,MAArH,CAAnB;;IACA,MAAMtK,aAAa,GAAG,KAAKD,KAAL,CAAWC,aAAX,CAAyBqJ,WAAzB,CAAtB;;IACA,KAAK,MAAM3P,OAAX,IAAsByQ,UAAU,CAAChK,SAAX,CAAqB,IAArB,CAAtB,EAAkD;MAC9C,KAAKzC,cAAL,CAAoB+F,UAApB,CAA+B/J,OAA/B;IACH;;IACD,KAAK,MAAM2M,YAAX,IAA2BrG,aAAa,CAACyH,MAAd,EAA3B,EAAmD;MAC/C,MAAM8C,gBAAgB,GAAG,IAAAC,kEAAA,EAAiC,KAAKxM,gBAAtC,EAAwDqI,YAAxD,EAAsEgD,WAAW,CAACvG,QAAZ,EAAtE,EAA8F,KAAK/E,4BAAnG,EAAiI,IAAjI,CAAzB;;MACA,KAAK,MAAMrE,OAAX,IAAsB6Q,gBAAtB,EAAwC;QACpC,MAAM9Q,MAAM,GAAG,KAAKuL,sBAAL,CAA4BtL,OAA5B,CAAf;QACA,KAAKqG,KAAL,CAAW2E,OAAX,CAAmBjL,MAAnB,EAA2B4M,YAA3B;MACH;;MACD,IAAIkE,gBAAgB,CAACE,MAAjB,GAA0B,CAA9B,EAAiC;QAC7B,KAAK1K,KAAL,CAAWkC,gCAAX,CAA4CoE,YAA5C;MACH;IACJ;;IACD,KAAK7C,YAAL,CAAkB6F,WAAlB;IACA,KAAKxL,YAAL,CAAkBgF,WAAlB,CAA8BwG,WAAW,CAACvG,QAAZ,EAA9B;EACH;;EACD4H,SAAS,CAAChR,OAAD,EAAUD,MAAV,EAAkB;IACvB,KAAKsG,KAAL,CAAWwE,OAAX,CAAmB9K,MAAnB;IACA,KAAKiE,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCD,MAArC;EACH;;EACDkR,cAAc,CAACjR,OAAD,EAAUD,MAAV,EAAkB;IAC5B,KAAKsG,KAAL,CAAWwE,OAAX,CAAmB9K,MAAnB;IACA,KAAKmR,+BAAL,CAAqCnR,MAArC,EAA6CC,OAA7C;EACH;;EACiB,CAAjBmR,iBAAiB,GAAG;IACjB,KAAK,MAAMpR,MAAX,IAAqB,KAAKsG,KAAL,CAAW+K,KAAhC,EAAuC;MACnC,IAAIrR,MAAM,YAAYE,cAAtB,EAAmC;QAC/B,MAAMF,MAAN;MACH;IACJ;EACJ;;EACmB,CAAnB2M,mBAAmB,CAAC2E,QAAD,EAAW;IAC3B,OAAO,KAAKrN,cAAL,CAAoB0I,mBAApB,CAAwC2E,QAAxC,CAAP;EACH;;EACsB,CAAtB/C,sBAAsB,CAACgD,WAAD,EAAc;IACjC,OAAO,KAAKtN,cAAL,CAAoBsK,sBAApB,CAA2CgD,WAA3C,CAAP;EACH;;EACDC,YAAY,CAACvR,OAAD,EAAU;IAClB,OAAO,KAAKgE,cAAL,CAAoBuC,GAApB,CAAwBvG,OAAxB,CAAP;EACH;;EACD+F,SAAS,CAAC/F,OAAD,EAAU;IACf,OAAO,KAAKgE,cAAL,CAAoB+B,SAApB,CAA8B/F,OAA9B,CAAP;EACH;;EACD2G,OAAO,CAAC3G,OAAD,EAAU;IACb,OAAO,KAAKgE,cAAL,CAAoB2C,OAApB,CAA4B3G,OAA5B,CAAP;EACH;;EACDwR,YAAY,CAACxR,OAAD,EAAU;IAClB,OAAO,KAAKgE,cAAL,CAAoBwN,YAApB,CAAiCxR,OAAjC,CAAP;EACH;;EACDyR,WAAW,CAACzR,OAAD,EAAU;IACjB,OAAO,KAAKgE,cAAL,CAAoByN,WAApB,CAAgCzR,OAAhC,CAAP;EACH;;EACD0R,cAAc,CAAC1R,OAAD,EAAU;IACpB,MAAMkJ,KAAK,GAAG,KAAKlF,cAAL,CAAoBwN,YAApB,CAAiCxR,OAAjC,CAAd;;IACA,IAAIkJ,KAAK,YAAYxH,kCAArB,EAAuC;MACnC,OAAO,IAAID,eAAJ,CAAc5E,eAAA,CAAU4D,KAAxB,EAA+B6B,0BAAA,CAAaqP,cAA5C,CAAP;IACH;;IACD,OAAOzI,KAAP;EACH;;EACD0I,UAAU,CAACC,QAAD,EAAWC,MAAX,EAAmB;IACzB,OAAO,KAAKzL,KAAL,CAAWuL,UAAX,CAAsBC,QAAtB,EAAgCC,MAAhC,CAAP;EACH;;EACDC,UAAU,CAACC,SAAD,EAAY;IAClB,OAAO,KAAK9N,YAAL,CAAkB+N,KAAlB,CAAwBD,SAAxB,CAAP;EACH;;EACDE,cAAc,CAACxP,KAAD,EAAQ;IAClB,OAAO,KAAKsB,cAAL,CAAoBmO,SAApB,CAA8BzP,KAA9B,CAAP;EACH;;EACD0P,aAAa,CAAC1P,KAAD,EAAQ;IACjB,OAAO,KAAKsB,cAAL,CAAoBqO,QAApB,CAA6B3P,KAA7B,CAAP;EACH;;EACD2I,QAAQ,CAACjF,KAAD,EAAQ;IACZ,OAAO,KAAKjC,YAAL,CAAkBkH,QAAlB,CAA2BjF,KAA3B,CAAP;EACH;;EACDkM,QAAQ,CAAClM,KAAD,EAAQrG,MAAR,EAAgB;IACpB,KAAKoE,YAAL,CAAkBmO,QAAlB,CAA2BlM,KAA3B,EAAkCrG,MAAlC;EACH;;EACDqJ,QAAQ,CAAC5D,KAAD,EAAQC,GAAR,EAAa;IACjB,OAAO,KAAKxB,YAAL,CAAkBmF,QAAlB,CAA2B5D,KAA3B,EAAkCC,GAAlC,CAAP;EACH;;EACD8M,cAAc,GAAG;IACb,OAAO,KAAKlM,KAAL,CAAWkM,cAAX,EAAP;EACH;;EACD/J,cAAc,CAACzI,MAAD,EAAS;IACnB,KAAKsG,KAAL,CAAWmM,iBAAX,CAA6BzS,MAA7B;EACH;;EACD0I,gCAAgC,CAAC1I,MAAD,EAAS;IACrC,KAAKsG,KAAL,CAAWoM,+BAAX,CAA2C1S,MAA3C;EACH;;EACD2S,kCAAkC,GAAG;IACjC,KAAK,MAAM3S,MAAX,IAAqB,KAAKsG,KAAL,CAAW+K,KAAX,CAAiBrD,MAAjB,EAArB,EAAgD;MAC5C,IAAIhO,MAAM,YAAYM,oBAAtB,EAAyC;QACrCN,MAAM,CAAC4S,gBAAP,CAAwB,KAAKtO,4BAA7B;MACH;IACJ;EACJ;;EACDiG,gBAAgB,GAAG;IACf,OAAO,KAAKjE,KAAL,CAAWuM,YAAlB;EACH;;EACD1F,+BAA+B,CAAC2F,MAAD,EAAS;IACpC,MAAMC,aAAa,GAAGD,MAAM,CAAC/N,GAAP,CAAWsB,KAAK,IAAI;MACtC,IAAI,KAAKC,KAAL,CAAW0M,OAAX,CAAmB3M,KAAnB,CAAJ,EAA+B;QAC3B,OAAO4M,KAAK,CAACC,IAAN,CAAW,KAAK5M,KAAL,CAAWC,aAAX,CAAyBF,KAAzB,CAAX,EAA4C8M,MAA5C,CAAmDC,IAAI,IAAIA,IAAI,YAAYlT,cAA3E,CAAP;MACH,CAFD,MAGK;QACD,OAAO,EAAP;MACH;IACJ,CAPqB,CAAtB;IAQA,OAAO,IAAImK,GAAJ,CAAQ,GAAG0I,aAAX,CAAP;EACH;;EACkB,CAAlBM,kBAAkB,CAAChN,KAAD,EAAQ;IACvB,KAAK,MAAMpG,OAAX,IAAsBoG,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAtB,EAA6C;MACzC,MAAMyC,KAAK,GAAG,KAAKwI,cAAL,CAAoB1R,OAApB,CAAd;;MACA,IAAIkJ,KAAK,KAAK1H,4BAAd,EAA0B;QACtB,MAAM,CAAC,IAAAiQ,6BAAA,EAAYvI,KAAZ,CAAD,EAAqBlJ,OAArB,CAAN;MACH;IACJ;EACJ;;EACgB,CAAhBqT,gBAAgB,CAACjN,KAAD,EAAQ;IACrB,KAAK,MAAMpG,OAAX,IAAsBoG,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAtB,EAA6C;MACzC,MAAM,CAACzG,OAAD,EAAU,KAAK2G,OAAL,CAAa3G,OAAb,CAAV,CAAN;IACH;EACJ;;EACD4J,iBAAiB,CAAC0J,OAAD,EAAUC,OAAV,EAAmB;IAChC,KAAKlN,KAAL,CAAWwE,OAAX,CAAmB0I,OAAnB;IACA,MAAMC,cAAc,GAAG,KAAKnN,KAAL,CAAWC,aAAX,CAAyBgN,OAAzB,CAAvB;IACA,KAAKxJ,YAAL,CAAkBwJ,OAAlB;IACAE,cAAc,CAAC/I,OAAf,CAAwBkC,YAAD,IAAkB;MACrC,IAAI,KAAKtG,KAAL,CAAW0M,OAAX,CAAmBpG,YAAnB,CAAJ,EAAsC;QAClC,KAAKtG,KAAL,CAAW2E,OAAX,CAAmBuI,OAAnB,EAA4B5G,YAA5B;MACH;IACJ,CAJD;EAKH;;EACD5D,sBAAsB,CAACuK,OAAD,EAAUC,OAAV,EAAmB;IACrC,IAAID,OAAJ,EAAa;MACT,KAAK1J,iBAAL,CAAuB0J,OAAvB,EAAgCC,OAAhC;IACH,CAFD,MAGK;MACD,KAAKlN,KAAL,CAAWwE,OAAX,CAAmB0I,OAAnB;IACH;EACJ;;EACDE,0BAA0B,CAACrN,KAAD,EAAQ;IAC9B,MAAM2H,MAAM,GAAG,EAAf;;IACA,KAAK,MAAM7C,aAAX,IAA4B9E,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAA5B,EAAmD;MAC/C,MAAMyC,KAAK,GAAG,KAAKwI,cAAL,CAAoBxG,aAApB,CAAd;MACA6C,MAAM,CAACvH,IAAP,CAAY0C,KAAZ;IACH;;IACD,OAAO6E,MAAP;EACH;;EACDnB,mBAAmB,CAACxB,KAAD,EAAQ;IACvB,KAAKsI,6BAAL,CAAmCtI,KAAnC;;IACA,KAAK,MAAMuI,cAAX,IAA6B,KAAKC,qBAAL,CAA2BxI,KAA3B,CAA7B,EAAgE;MAC5D,IAAIyI,oBAAJ;;MACA,IAAIF,cAAc,YAAY7M,gCAA9B,EAA6C;QACzC+M,oBAAoB,GAAG,KAAKC,gCAAL,CAAsCH,cAAtC,EAAsDvI,KAAtD,CAAvB;MACH,CAFD,MAGK;QACDyI,oBAAoB,GAAG,KAAKE,8BAAL,CAAoCJ,cAApC,EAAoDvI,KAApD,CAAvB;MACH;;MACD,IAAI4I,iBAAiB,GAAG,KAAxB;;MACA,KAAK,MAAM,CAAChU,OAAD,EAAUD,MAAV,CAAX,IAAgC8T,oBAAhC,EAAsD;QAClD,IAAIzI,KAAK,CAAClL,YAAN,CAAmBF,OAAnB,CAAJ,EAAiC;UAC7BgU,iBAAiB,GAAG,IAApB;QACH;;QACD,KAAK3N,KAAL,CAAW2E,OAAX,CAAmBjL,MAAnB,EAA2B4T,cAA3B;QACA,KAAKtN,KAAL,CAAWkC,gCAAX,CAA4CxI,MAA5C;MACH;;MACD,IAAI,CAACiU,iBAAL,EAAwB;QACpB,KAAK3N,KAAL,CAAW8E,UAAX,CAAsBC,KAAtB,EAA6BuI,cAA7B;MACH;IACJ;;IACD,KAAKtN,KAAL,CAAWkC,gCAAX,CAA4C6C,KAA5C;EACH;;EACD6I,mBAAmB,CAACjU,OAAD,EAAU;IACzB,MAAMD,MAAM,GAAG,KAAK4G,OAAL,CAAa3G,OAAb,CAAf;IACA,OAAOD,MAAM,YAAYE,cAAlB,IAAiC,CAACF,MAAM,CAACG,YAAP,CAAoBF,OAApB,CAAzC;EACH;;EACD2I,yBAAyB,GAAG;IACxB,MAAMnE,OAAO,GAAG,KAAKA,OAArB;IACA,KAAKA,OAAL,GAAeC,8BAAA,CAAeC,KAAf,EAAf;IACA,OAAOF,OAAP;EACH;;EACD0P,yBAAyB,CAACC,WAAD,EAAc;IACnC,MAAMlN,IAAI,GAAG,KAAKZ,KAAL,CAAWC,aAAX,CAAyB6N,WAAzB,CAAb;IACA,MAAMC,GAAG,GAAG,EAAZ;IACAnN,IAAI,CAACwD,OAAL,CAAc1K,MAAD,IAAY;MACrB,MAAMsU,UAAU,GAAGtU,MAAnB;;MACA,IAAIsU,UAAU,YAAYzP,cAA1B,EAAuC;QACnCwP,GAAG,CAAC5N,IAAJ,CAAS,IAAAjB,kCAAA,EAAgB8O,UAAU,CAAC7O,KAA3B,EAAkC6O,UAAU,CAAC5O,GAA7C,CAAT;MACH,CAFD,MAGK;QACD2O,GAAG,CAAC5N,IAAJ,CAAS6N,UAAU,CAACtN,UAAX,CAAsB,KAAK1C,4BAA3B,CAAT;MACH;IACJ,CARD;IASA,OAAO+P,GAAP;EACH;;EACD7I,8CAA8C,CAACxL,MAAD,EAAS;IACnD,KAAK,MAAMqG,KAAX,IAAoB,KAAKC,KAAL,CAAW6F,cAA/B,EAA+C;MAC3C,MAAMC,mBAAmB,GAAG/F,KAA5B;MACA,MAAMkO,YAAY,GAAGvU,MAAM,CAACqG,KAAP,CAAamO,gBAAb,CAA8BpI,mBAAmB,CAAC/F,KAAlD,CAArB;;MACA,IAAIkO,YAAY,KAAKtS,SAArB,EAAgC;QAC5B;MACH;;MACD,KAAK,MAAMhC,OAAX,IAAsBsU,YAAY,CAAC7N,SAAb,CAAuB,IAAvB,CAAtB,EAAoD;QAChD,KAAKJ,KAAL,CAAW2E,OAAX,CAAmB,KAAKM,sBAAL,CAA4BtL,OAA5B,CAAnB,EAAyDoG,KAAzD;MACH;IACJ;EACJ;;EACDsN,6BAA6B,CAAC3T,MAAD,EAAS;IAClC,MAAM0Q,UAAU,GAAG1Q,MAAM,CAACqJ,QAAP,EAAnB;;IACA,KAAK,MAAMpJ,OAAX,IAAsByQ,UAAU,CAAChK,SAAX,CAAqB,IAArB,CAAtB,EAAkD;MAC9C,MAAM+N,QAAQ,GAAGzU,MAAM,CAAC0U,iBAAP,CAAyBzU,OAAzB,CAAjB;;MACA,IAAI,KAAK2G,OAAL,CAAa3G,OAAb,MAA0BD,MAA9B,EAAsC;QAClC,IAAIA,MAAM,CAACG,YAAP,CAAoBF,OAApB,CAAJ,EAAkC;UAC9B,KAAKwE,OAAL,CAAakQ,SAAb,CAAuB,IAAIjT,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAvB,EAAqD3U,OAArD,EAA8DwU,QAA9D;QACH,CAFD,MAGK;UACD,KAAKxQ,cAAL,CAAoB+F,UAApB,CAA+B/J,OAA/B;UACA,KAAKwE,OAAL,CAAakQ,SAAb,CAAuBlT,4BAAvB,EAAmCxB,OAAnC,EAA4CwU,QAA5C;QACH;MACJ,CARD,MASK;QACD,KAAKhQ,OAAL,CAAakQ,SAAb,CAAuBlT,4BAAvB,EAAmCxB,OAAnC,EAA4CwU,QAA5C;MACH;IACJ;EACJ;;EACgC,CAAhCV,gCAAgC,CAAC/T,MAAD,EAASqL,KAAT,EAAgB;IAC7C,IAAIzH,EAAJ;;IACA,MAAM,GAAGiR,mBAAH,IAA0B,CAACjR,EAAE,GAAG,KAAKsB,sBAAL,CAA4BlF,MAA5B,CAAN,MAA+C,IAA/C,IAAuD4D,EAAE,KAAK,KAAK,CAAnE,GAAuEA,EAAvE,GAA4E,EAA5G;;IACA,IAAIiR,mBAAmB,KAAK5S,SAA5B,EAAuC;MACnC;IACH;;IACD,KAAK,MAAMmD,UAAX,IAAyByP,mBAAzB,EAA8C;MAC1C,IAAIzP,UAAU,YAAYC,iCAAtB,IAAmDD,UAAU,YAAYS,oCAA7E,EAAgG;QAC5F;MACH;;MACD,IAAIwF,KAAK,CAAChC,QAAN,GAAiBgD,cAAjB,CAAgCjH,UAAhC,CAAJ,EAAiD;QAC7C,MAAMpF,MAAM,GAAG,KAAKuL,sBAAL,CAA4BnG,UAA5B,CAAf;QACA,MAAM,CAACA,UAAD,EAAapF,MAAb,CAAN;MACH;IACJ;EACJ;;EAC8B,CAA9BgU,8BAA8B,CAAChU,MAAD,EAASqL,KAAT,EAAgB;IAC3C,MAAM;MAAElF,SAAS,EAAEE;IAAb,IAAuB,KAAKnC,YAAL,CAAkBkC,gBAAlB,CAAmCpG,MAAM,CAACqG,KAA1C,CAA7B;;IACA,KAAK,MAAMpG,OAAX,IAAsBoG,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAtB,EAA6C;MACzC,IAAI2E,KAAK,CAAChC,QAAN,GAAiBgD,cAAjB,CAAgCpM,OAAhC,CAAJ,EAA8C;QAC1C,MAAM0G,IAAI,GAAG,KAAK4E,sBAAL,CAA4BtL,OAA5B,CAAb;QACA,MAAM,CAACA,OAAD,EAAU0G,IAAV,CAAN;MACH;IACJ;EACJ;;EACqB,CAArBkN,qBAAqB,CAAC7T,MAAD,EAAS;IAC3B,MAAMuG,aAAa,GAAG,KAAKD,KAAL,CAAWC,aAAX,CAAyBvG,MAAzB,CAAtB;;IACA,KAAK,MAAM8U,IAAX,IAAmBvO,aAAnB,EAAkC;MAC9B,IAAIuO,IAAI,YAAY/N,gCAAhB,IAAiC+N,IAAI,YAAYjQ,cAArD,EAAkE;QAC9D,MAAMiQ,IAAN;MACH;IACJ;EACJ;;EACDtH,6BAA6B,GAAG;IAC5B,KAAK,MAAMxN,MAAX,IAAqB,KAAKsG,KAAL,CAAWyO,6BAAhC,EAA+D;MAC3D,KAAKzO,KAAL,CAAWkC,gCAAX,CAA4CxI,MAA5C;IACH;EACJ;;EACD+O,uBAAuB,CAACpM,KAAD,EAAQC,GAAR,EAAa2K,YAAb,EAA2B;IAC9C,MAAMyH,cAAc,GAAG/B,KAAK,CAACC,IAAN,CAAW,KAAKhP,YAAL,CAAkB+Q,aAAlB,CAAgCtS,KAAhC,CAAX,CAAvB;;IACA,KAAK,MAAMiI,WAAX,IAA0BoK,cAA1B,EAA0C;MACtC,IAAIpK,WAAW,CAACvE,KAAZ,CAAkB6O,WAAlB,CAA8BtS,GAAG,GAAG2K,YAApC,CAAJ,EAAuD;QACnD,IAAI3C,WAAW,CAACM,UAAhB,EAA4B;UACxB,MAAMiK,wBAAwB,GAAGvK,WAAW,CAACvE,KAAZ,CAAkB+O,kBAAlB,CAAqCxS,GAArC,EAA0C2K,YAA1C,CAAjC;;UACA,KAAK,MAAMtN,OAAX,IAAsBkV,wBAAwB,CAACzO,SAAzB,CAAmC,IAAnC,CAAtB,EAAgE;YAC5D,KAAKJ,KAAL,CAAW2E,OAAX,CAAmB,KAAKM,sBAAL,CAA4BtL,OAA5B,CAAnB,EAAyD2K,WAAzD;UACH;QACJ,CALD,MAMK;UACD,IAAIyK,kBAAkB,GAAGzK,WAAzB;UACA,IAAI0K,IAAI,GAAG,KAAKpR,YAAL,CAAkBkC,gBAAlB,CAAmCiP,kBAAkB,CAAChP,KAAtD,CAAX;;UACA,IAAIiP,IAAI,CAACpP,kBAAL,KAA4BjE,SAAhC,EAA2C;YACvC;UACH;;UACD,OAAOqT,IAAI,CAACpP,kBAAL,KAA4BjE,SAAnC,EAA8C;YAC1C,MAAMsT,cAAc,GAAG,IAAI1Q,cAAJ,CAAgBgB,oCAAA,CAAkB8K,QAAlB,CAA2B0E,kBAAkB,CAAChP,KAAnB,CAAyBZ,KAApD,EAA2D4P,kBAAkB,CAAChP,KAAnB,CAAyBuK,KAAzB,EAA3D,EAA6FyE,kBAAkB,CAAChP,KAAnB,CAAyBwK,MAAzB,KAAoC,CAAjI,CAAhB,CAAvB;YACA,KAAK3M,YAAL,CAAkB2G,QAAlB,CAA2B0K,cAA3B;YACA,KAAKjP,KAAL,CAAWwE,OAAX,CAAmByK,cAAnB;YACA,MAAMpP,SAAS,GAAG,IAAIN,oCAAJ,CAAsB,IAAA5C,uBAAA,EAAkBoS,kBAAkB,CAAChP,KAAnB,CAAyBZ,KAAzB,CAA+B9C,KAAjD,EAAwD0S,kBAAkB,CAAChP,KAAnB,CAAyBZ,KAAzB,CAA+B1C,GAAvF,EAA4FsS,kBAAkB,CAAChP,KAAnB,CAAyBX,GAAzB,CAA6B9C,GAAzH,CAAtB,EAAqJyS,kBAAkB,CAAChP,KAAnB,CAAyBX,GAA9K,CAAlB;YACA,KAAK8P,eAAL,CAAqBrP,SAArB,EAAgCkP,kBAAhC;YACA,KAAK/O,KAAL,CAAW2E,OAAX,CAAmBsK,cAAnB,EAAmCF,kBAAnC;YACAA,kBAAkB,GAAGE,cAArB;YACAD,IAAI,GAAG,KAAKpR,YAAL,CAAkBkC,gBAAlB,CAAmCiP,kBAAkB,CAAChP,KAAtD,CAAP;UACH;;UACD,KAAKC,KAAL,CAAW2E,OAAX,CAAmBqK,IAAI,CAACpP,kBAAxB,EAA4CmP,kBAA5C;UACA,KAAKG,eAAL,CAAqBF,IAAI,CAACnP,SAA1B,EAAqCkP,kBAArC;UACA,KAAK/O,KAAL,CAAW8E,UAAX,CAAsBkK,IAAI,CAACpP,kBAA3B,EAA+C0E,WAA/C;QACH;MACJ;IACJ;EACJ;;EACD4K,eAAe,CAACnP,KAAD,EAAQrG,MAAR,EAAgB;IAC3B,KAAK,MAAMC,OAAX,IAAsBoG,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAtB,EAA6C;MACzC,KAAKJ,KAAL,CAAW2E,OAAX,CAAmB,KAAKM,sBAAL,CAA4BtL,OAA5B,CAAnB,EAAyDD,MAAzD;IACH;EACJ;;EACDsP,0BAA0B,CAAC3M,KAAD,EAAQ8S,MAAR,EAAgB/G,eAAhB,EAAiC;IACvD,KAAK,MAAM9D,WAAX,IAA0B,KAAK1G,YAAL,CAAkB+Q,aAAlB,CAAgCtS,KAAhC,CAA1B,EAAkE;MAC9D,IAAIiI,WAAW,CAACvE,KAAZ,CAAkBqP,cAAlB,CAAiCD,MAAM,GAAG/G,eAA1C,CAAJ,EAAgE;QAC5D,IAAIiH,QAAJ;;QACA,IAAI/K,WAAW,CAACM,UAAhB,EAA4B;UACxByK,QAAQ,GAAG/K,WAAW,CAACvE,KAAZ,CAAkBuP,mBAAlB,CAAsCH,MAAtC,EAA8C/G,eAA9C,CAAX;QACH,CAFD,MAGK;UACDiH,QAAQ,GAAG9P,oCAAA,CAAkB8K,QAAlB,CAA2B,IAAA1N,uBAAA,EAAkBN,KAAlB,EAAyB8S,MAAzB,EAAiC7K,WAAW,CAACvE,KAAZ,CAAkBX,GAAlB,CAAsB9C,GAAvD,CAA3B,EAAwF8L,eAAxF,EAAyG,CAAzG,CAAX;QACH;;QACD,KAAK,MAAMzO,OAAX,IAAsB0V,QAAQ,CAACjP,SAAT,CAAmB,IAAnB,CAAtB,EAAgD;UAC5C,KAAKJ,KAAL,CAAW2E,OAAX,CAAmB,KAAKM,sBAAL,CAA4BtL,OAA5B,CAAnB,EAAyD2K,WAAzD;QACH;MACJ;IACJ;EACJ;;EACDtC,0BAA0B,CAACtI,MAAD,EAAS;IAC/B,MAAMC,OAAO,GAAGD,MAAM,CAACgH,UAAP,CAAkB,KAAK1C,4BAAvB,CAAhB;;IACA,MAAM+B,KAAK,GAAGR,oCAAA,CAAkB8K,QAAlB,CAA2B1Q,OAA3B,EAAoCD,MAAM,CAAC4Q,KAA3C,EAAkD5Q,MAAM,CAAC6Q,MAAzD,CAAd;;IACA,MAAM0C,OAAO,GAAG,KAAKxK,6BAAL,CAAmC9I,OAAnC,CAAhB;;IACA,IAAID,MAAM,YAAYE,cAAtB,EAAmC;MAC/B,KAAKqS,QAAL,CAAclM,KAAd,EAAqBrG,MAArB;IACH;;IACD,KAAKgJ,sBAAL,CAA4BuK,OAA5B,EAAqCvT,MAArC;IACA,KAAKiE,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCD,MAArC;;IACA,IAAIA,MAAM,YAAYE,cAAtB,EAAmC;MAC/B,IAAI,CAAC,KAAKyP,oBAAL,CAA0B3P,MAA1B,CAAL,EAAwC;QACpC;MACH;;MACD,KAAK,MAAM6V,WAAX,IAA0BxP,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAA1B,EAAiD;QAC7C,IAAI1G,MAAM,CAACG,YAAP,CAAoB0V,WAApB,CAAJ,EAAsC;UAClC;QACH;;QACD,MAAMC,GAAG,GAAG,KAAKlP,OAAL,CAAaiP,WAAb,CAAZ;QACA,KAAK7M,sBAAL,CAA4B8M,GAA5B,EAAiC9V,MAAjC;MACH;IACJ;;IACD,KAAK,MAAM6V,WAAX,IAA0BxP,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAA1B,EAAiD;MAC7C,KAAKzC,cAAL,CAAoBgF,OAApB,CAA4B4M,WAA5B,EAAyC7V,MAAzC;IACH;EACJ;;EACDmR,+BAA+B,CAACnR,MAAD,EAAS+V,cAAT,EAAyB;IACpD,KAAK9R,cAAL,CAAoBgF,OAApB,CAA4B8M,cAA5B,EAA4C/V,MAA5C;;IACA,IAAI,EAAEA,MAAM,YAAYE,cAApB,CAAJ,EAAsC;MAClC;IACH;;IACD,MAAMmG,KAAK,GAAGR,oCAAA,CAAkBmQ,eAAlB,CAAkCD,cAAlC,EAAkD/V,MAAM,CAAC4Q,KAAzD,EAAgE5Q,MAAM,CAAC6Q,MAAvE,CAAd;;IACA,IAAIxK,KAAK,KAAKpE,SAAd,EAAyB;MACrB;IACH;;IACD,KAAKsQ,QAAL,CAAclM,KAAd,EAAqBrG,MAArB;;IACA,IAAI,CAAC,KAAK2P,oBAAL,CAA0B3P,MAA1B,CAAL,EAAwC;MACpC;IACH;;IACD,KAAK,MAAMC,OAAX,IAAsBoG,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAtB,EAA6C;MACzC,KAAKzC,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCD,MAArC;IACH;EACJ;;EACDkN,cAAc,CAAC+I,IAAD,EAAOC,UAAP,EAAmB;IAC7B,MAAM;MAAEC,gBAAF;MAAoBC,eAApB;MAAqCpH;IAArC,IAAiE,KAAK9K,YAAL,CAAkBgJ,cAAlB,CAAiC+I,IAAjC,EAAuCC,UAAvC,CAAvE;;IACA,KAAK,MAAM,CAACG,cAAD,EAAiBC,YAAjB,CAAX,IAA6CF,eAA7C,EAA8D;MAC1D,KAAKG,kBAAL,CAAwBF,cAAxB,EAAwCC,YAAxC;IACH;;IACD,KAAK,MAAM1L,WAAX,IAA0BuL,gBAA1B,EAA4C;MACxC,KAAKK,kCAAL,CAAwC5L,WAAxC;IACH;;IACD,OAAOoE,uBAAP;EACH;;EACDC,uBAAuB,CAACtM,KAAD,EAAQ2K,QAAR,EAAkBC,YAAlB,EAAgC;IACnD,KAAKnJ,YAAL,CAAkBqS,+BAAlB,CAAkD9T,KAAlD,EAAyD2K,QAAzD,EAAmEC,YAAnE;;IACA,IAAID,QAAQ,IAAI,CAAhB,EAAmB;MACf;IACH;;IACD,KAAK,MAAM,GAAGjC,KAAH,CAAX,IAAwB,KAAKjH,YAAL,CAAkBsS,YAAlB,CAA+BC,cAAA,CAASC,kBAAT,CAA4BjU,KAA5B,EAAmC2K,QAAQ,GAAG,CAA9C,EAAiDA,QAAQ,GAAG,CAA5D,CAA/B,CAAxB,EAAwH;MACpH,MAAMoD,UAAU,GAAGrF,KAAK,CAAChC,QAAN,EAAnB;;MACA,KAAK,IAAItG,GAAG,GAAG2N,UAAU,CAACjL,KAAX,CAAiB1C,GAAhC,EAAqCA,GAAG,IAAI2N,UAAU,CAAChL,GAAX,CAAe3C,GAA3D,EAAgE,EAAEA,GAAlE,EAAuE;QACnE,KAAK,IAAIH,GAAG,GAAG0K,QAAf,EAAyB1K,GAAG,IAAI8N,UAAU,CAAChL,GAAX,CAAe9C,GAA/C,EAAoD,EAAEA,GAAtD,EAA2D;UACvD,MAAMiU,WAAW,GAAG,IAAA5T,uBAAA,EAAkBN,KAAlB,EAAyBI,GAAzB,EAA8BH,GAA9B,CAApB;UACA,MAAMkU,MAAM,GAAG,IAAA7T,uBAAA,EAAkBN,KAAlB,EAAyBI,GAAzB,EAA8BH,GAAG,GAAG2K,YAApC,CAAf;UACA,MAAMpE,KAAK,GAAGkC,KAAK,CAACqJ,iBAAN,CAAwBmC,WAAxB,CAAd;UACA,KAAK5S,cAAL,CAAoB8S,QAApB,CAA6BD,MAA7B,EAAqCD,WAArC;UACA,KAAKpS,OAAL,CAAakQ,SAAb,CAAuBlT,4BAAvB,EAAmCqV,MAAnC,EAA2C3N,KAA3C;QACH;MACJ;IACJ;EACJ;;EACDkE,0BAA0B,CAAC1K,KAAD,EAAQ2K,QAAR,EAAkBC,YAAlB,EAAgC;IACtD,KAAKnJ,YAAL,CAAkBqS,+BAAlB,CAAkD9T,KAAlD,EAAyD2K,QAAzD,EAAmE,CAACC,YAApE;;IACA,IAAID,QAAQ,IAAI,CAAhB,EAAmB;MACf;IACH;;IACD,KAAK,MAAM,GAAGjC,KAAH,CAAX,IAAwB,KAAKjH,YAAL,CAAkBsS,YAAlB,CAA+BC,cAAA,CAASC,kBAAT,CAA4BjU,KAA5B,EAAmC2K,QAAQ,GAAG,CAA9C,EAAiDA,QAAQ,GAAG,CAA5D,CAA/B,CAAxB,EAAwH;MACpH,IAAI,KAAKqC,oBAAL,CAA0BtE,KAA1B,CAAJ,EAAsC;QAClC,KAAK,MAAMpL,OAAX,IAAsBoL,KAAK,CAAChC,QAAN,GAAiB3C,SAAjB,CAA2B,IAA3B,CAAtB,EAAwD;UACpD,KAAKzC,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCoL,KAArC;QACH;MACJ,CAJD,MAKK;QACD,KAAK2L,iBAAL,CAAuB3L,KAAvB;MACH;IACJ;EACJ;;EACDkE,0BAA0B,CAAC5M,KAAD,EAAQ8L,WAAR,EAAqBC,eAArB,EAAsC;IAC5D,KAAKtK,YAAL,CAAkB6S,qCAAlB,CAAwDtU,KAAxD,EAA+D8L,WAA/D,EAA4EC,eAA5E;;IACA,IAAID,WAAW,IAAI,CAAnB,EAAsB;MAClB;IACH;;IACD,KAAK,MAAM,GAAGpD,KAAH,CAAX,IAAwB,KAAKjH,YAAL,CAAkB8S,YAAlB,CAA+BC,iBAAA,CAAYC,qBAAZ,CAAkCzU,KAAlC,EAAyC8L,WAAW,GAAG,CAAvD,EAA0DA,WAAW,GAAG,CAAxE,CAA/B,CAAxB,EAAoI;MAChI,MAAMiC,UAAU,GAAGrF,KAAK,CAAChC,QAAN,EAAnB;;MACA,KAAK,IAAIzG,GAAG,GAAG8N,UAAU,CAACjL,KAAX,CAAiB7C,GAAhC,EAAqCA,GAAG,IAAI8N,UAAU,CAAChL,GAAX,CAAe9C,GAA3D,EAAgE,EAAEA,GAAlE,EAAuE;QACnE,KAAK,IAAIG,GAAG,GAAG0L,WAAf,EAA4B1L,GAAG,IAAI2N,UAAU,CAAChL,GAAX,CAAe3C,GAAlD,EAAuD,EAAEA,GAAzD,EAA8D;UAC1D,MAAM8T,WAAW,GAAG,IAAA5T,uBAAA,EAAkBN,KAAlB,EAAyBI,GAAzB,EAA8BH,GAA9B,CAApB;UACA,MAAMkU,MAAM,GAAG,IAAA7T,uBAAA,EAAkBN,KAAlB,EAAyBI,GAAG,GAAG2L,eAA/B,EAAgD9L,GAAhD,CAAf;UACA,MAAMuG,KAAK,GAAGkC,KAAK,CAACqJ,iBAAN,CAAwBmC,WAAxB,CAAd;UACA,KAAK5S,cAAL,CAAoB8S,QAApB,CAA6BD,MAA7B,EAAqCD,WAArC;UACA,KAAKpS,OAAL,CAAakQ,SAAb,CAAuBlT,4BAAvB,EAAmCqV,MAAnC,EAA2C3N,KAA3C;QACH;MACJ;IACJ;EACJ;;EACDqF,6BAA6B,CAAC7L,KAAD,EAAQ8L,WAAR,EAAqBC,eAArB,EAAsC;IAC/D,KAAKtK,YAAL,CAAkB6S,qCAAlB,CAAwDtU,KAAxD,EAA+D8L,WAA/D,EAA4E,CAACC,eAA7E;;IACA,IAAID,WAAW,IAAI,CAAnB,EAAsB;MAClB;IACH;;IACD,KAAK,MAAM,GAAGpD,KAAH,CAAX,IAAwB,KAAKjH,YAAL,CAAkB8S,YAAlB,CAA+BC,iBAAA,CAAYC,qBAAZ,CAAkCzU,KAAlC,EAAyC8L,WAAW,GAAG,CAAvD,EAA0DA,WAAW,GAAG,CAAxE,CAA/B,CAAxB,EAAoI;MAChI,IAAI,KAAKkB,oBAAL,CAA0BtE,KAA1B,CAAJ,EAAsC;QAClC,KAAK,MAAMpL,OAAX,IAAsBoL,KAAK,CAAChC,QAAN,GAAiB3C,SAAjB,CAA2B,IAA3B,CAAtB,EAAwD;UACpD,KAAKzC,cAAL,CAAoBgF,OAApB,CAA4BhJ,OAA5B,EAAqCoL,KAArC;QACH;MACJ,CAJD,MAKK;QACD,KAAK2L,iBAAL,CAAuB3L,KAAvB;MACH;IACJ;EACJ;;EACDtC,6BAA6B,CAAC9I,OAAD,EAAU;IACnC,MAAMD,MAAM,GAAG,KAAK4G,OAAL,CAAa3G,OAAb,CAAf;;IACA,IAAI,EAAED,MAAM,YAAYE,cAApB,CAAJ,EAAsC;MAClC,OAAOF,MAAP;IACH;;IACD,KAAKgX,iBAAL,CAAuBhX,MAAvB;IACA,OAAO,KAAK4G,OAAL,CAAa3G,OAAb,CAAP;EACH;;EACD+W,iBAAiB,CAAChX,MAAD,EAAS;IACtB,IAAIA,MAAM,YAAYE,cAAtB,EAAmC;MAC/B,KAAK2M,mBAAL,CAAyB7M,MAAzB;MACAA,MAAM,CAACqX,UAAP;IACH;EACJ;;EACDtN,YAAY,CAAC/J,MAAD,EAAS;IACjB,KAAKwW,kCAAL,CAAwCxW,MAAxC;;IACA,IAAIA,MAAM,YAAY6E,cAAtB,EAAmC;MAC/B,KAAKX,YAAL,CAAkBoT,WAAlB,CAA8BtX,MAA9B;IACH;EACJ;;EACDuW,kBAAkB,CAACF,cAAD,EAAiBlO,SAAjB,EAA4B;IAC1C,MAAMsL,cAAc,GAAG,KAAKnN,KAAL,CAAWC,aAAX,CAAyB4B,SAAzB,CAAvB;IACA,KAAKqO,kCAAL,CAAwCrO,SAAxC;IACA,KAAK7B,KAAL,CAAWiR,cAAX,CAA0BlB,cAA1B,EAA0ClO,SAA1C;IACAsL,cAAc,CAAC/I,OAAf,CAAwBkC,YAAD,IAAkB;MACrC,IAAI,KAAKtG,KAAL,CAAW0M,OAAX,CAAmBpG,YAAnB,CAAJ,EAAsC;QAClC,KAAKtG,KAAL,CAAW2E,OAAX,CAAmBoL,cAAnB,EAAmCzJ,YAAnC;MACH;IACJ,CAJD;EAKH;;EACD4J,kCAAkC,CAACpC,WAAD,EAAc;IAC5C,MAAMjP,YAAY,GAAG,IAAIkF,GAAJ,CAAQ,KAAK/D,KAAL,CAAWkR,UAAX,CAAsBpD,WAAtB,CAAR,CAArB;;IACA,OAAOjP,YAAY,CAAC6C,IAAb,GAAoB,CAA3B,EAA8B;MAC1B,MAAMhI,MAAM,GAAGmF,YAAY,CAAC6I,MAAb,GAAsByJ,IAAtB,GAA6BtO,KAA5C;MACAhE,YAAY,CAACuS,MAAb,CAAoB1X,MAApB;;MACA,IAAI,KAAKsG,KAAL,CAAW0M,OAAX,CAAmBhT,MAAnB,KAA8B,KAAKsG,KAAL,CAAWwD,kBAAX,CAA8B9J,MAA9B,MAA0C,CAA5E,EAA+E;QAC3E,IAAIA,MAAM,YAAY6E,cAAlB,IAAiC7E,MAAM,YAAY6G,kBAAvD,EAAwE;UACpE,KAAKP,KAAL,CAAWkR,UAAX,CAAsBxX,MAAtB,EAA8B0K,OAA9B,CAAuCiN,SAAD,IAAexS,YAAY,CAAC4I,GAAb,CAAiB4J,SAAjB,CAArD;QACH;;QACD,IAAI3X,MAAM,YAAY6E,cAAtB,EAAmC;UAC/B,KAAKX,YAAL,CAAkBoT,WAAlB,CAA8BtX,MAA9B;QACH,CAFD,MAGK,IAAIA,MAAM,YAAY6G,kBAAtB,EAAuC;UACxC,KAAK5C,cAAL,CAAoB+F,UAApB,CAA+BhK,MAAM,CAACC,OAAtC;QACH;MACJ;IACJ;EACJ;;AAz8BwB;;;;;;;;;;;;;;;;AClB7B;;AACA;;AACA;;AACA;;AAPA;AACA;AACA;AACA;AAKO,MAAM2X,gBAAgB,GAAG,qCAAzB;;;AACA,SAASC,iBAAT,CAA2BpU,GAA3B,EAAgC;EACnC,IAAIA,GAAG,KAAK,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA/C,CAAP,EAAmE;IAC/D,OAAO,WAAWA,GAAX,IAAkB,IAAAD,yBAAA,EAAoBC,GAAG,CAACgC,KAAxB,CAAlB,IAAoD,SAAShC,GAA7D,IAAoE,IAAAD,yBAAA,EAAoBC,GAAG,CAACiC,GAAxB,CAA3E;EACH,CAFD,MAGK;IACD,OAAO,KAAP;EACH;AACJ;;AACM,MAAMF,eAAe,GAAG,CAACC,KAAD,EAAQC,GAAR,MAAiB;EAAED,KAAF;EAASC;AAAT,CAAjB,CAAxB;;;;AACA,MAAMG,iBAAN,CAAwB;EAC3B3D,WAAW,CAACuD,KAAD,EAAQC,GAAR,EAAa;IACpB,IAAID,KAAK,CAAC9C,KAAN,KAAgB+C,GAAG,CAAC/C,KAAxB,EAA+B;MAC3B,MAAM,IAAImV,sBAAJ,CAAmBrS,KAAK,CAAC9C,KAAzB,EAAgC+C,GAAG,CAAC/C,KAApC,CAAN;IACH;;IACD,KAAK8C,KAAL,GAAa,IAAAxC,uBAAA,EAAkBwC,KAAK,CAAC9C,KAAxB,EAA+B8C,KAAK,CAAC1C,GAArC,EAA0C0C,KAAK,CAAC7C,GAAhD,CAAb;IACA,KAAK8C,GAAL,GAAW,IAAAzC,uBAAA,EAAkByC,GAAG,CAAC/C,KAAtB,EAA6B+C,GAAG,CAAC3C,GAAjC,EAAsC2C,GAAG,CAAC9C,GAA1C,CAAX;EACH;;EACQ,IAALD,KAAK,GAAG;IACR,OAAO,KAAK8C,KAAL,CAAW9C,KAAlB;EACH;;EACa,OAAPyF,OAAO,CAACL,GAAD,EAAMpE,WAAN,EAAmB;IAC7B,IAAIoE,GAAG,CAAC5F,IAAJ,KAAa4V,mBAAA,CAAYC,UAA7B,EAAyC;MACrC,OAAOnS,iBAAiB,CAACoS,aAAlB,CAAgClQ,GAAhC,EAAqCpE,WAArC,CAAP;IACH,CAFD,MAGK,IAAIoE,GAAG,CAAC5F,IAAJ,KAAa4V,mBAAA,CAAYG,YAA7B,EAA2C;MAC5C,OAAOC,mBAAmB,CAACC,eAApB,CAAoCrQ,GAApC,EAAyCpE,WAAzC,CAAP;IACH,CAFI,MAGA;MACD,OAAO0U,gBAAgB,CAACC,eAAjB,CAAiCvQ,GAAjC,EAAsCpE,WAAtC,CAAP;IACH;EACJ;;EACoB,OAAd4U,cAAc,CAACxQ,GAAD,EAAMpE,WAAN,EAAmB;IACpC,IAAI;MACA,OAAOkC,iBAAiB,CAACuC,OAAlB,CAA0BL,GAA1B,EAA+BpE,WAA/B,CAAP;IACH,CAFD,CAGA,OAAO6U,EAAP,EAAW;MACP,OAAOvW,SAAP;IACH;EACJ;;EACmB,OAAbgW,aAAa,CAACQ,CAAD,EAAI9U,WAAJ,EAAiB;IACjC,OAAO,IAAIkC,iBAAJ,CAAsB4S,CAAC,CAAChT,KAAF,CAAQiT,mBAAR,CAA4B/U,WAA5B,CAAtB,EAAgE8U,CAAC,CAAC/S,GAAF,CAAMgT,mBAAN,CAA0B/U,WAA1B,CAAhE,CAAP;EACH;;EACc,OAARgN,QAAQ,CAACgI,aAAD,EAAgB/H,KAAhB,EAAuBC,MAAvB,EAA+B;IAC1C,MAAMwD,GAAG,GAAGxO,iBAAiB,CAACmQ,eAAlB,CAAkC2C,aAAlC,EAAiD/H,KAAjD,EAAwDC,MAAxD,CAAZ;;IACA,IAAIwD,GAAG,KAAKpS,SAAZ,EAAuB;MACnB,MAAM,IAAIX,KAAJ,CAAUsW,gBAAV,CAAN;IACH;;IACD,OAAOvD,GAAP;EACH;;EACqB,OAAf2B,eAAe,CAAC2C,aAAD,EAAgB/H,KAAhB,EAAuBC,MAAvB,EAA+B;IACjD,IAAI,CAAC+H,MAAM,CAAC7N,QAAP,CAAgB6F,KAAhB,CAAD,IAA2BgI,MAAM,CAAC7N,QAAP,CAAgB8F,MAAhB,CAA/B,EAAwD;MACpD,IAAI8H,aAAa,CAAC5V,GAAd,KAAsB,CAA1B,EAA6B;QACzB,OAAOd,SAAP;MACH;;MACD,OAAO,IAAIoW,gBAAJ,CAAqBM,aAAa,CAAChW,KAAnC,EAA0CgW,aAAa,CAAC/V,GAAxD,EAA6D+V,aAAa,CAAC/V,GAAd,GAAoBiO,MAApB,GAA6B,CAA1F,CAAP;IACH,CALD,MAMK,IAAI,CAAC+H,MAAM,CAAC7N,QAAP,CAAgB8F,MAAhB,CAAD,IAA4B+H,MAAM,CAAC7N,QAAP,CAAgB6F,KAAhB,CAAhC,EAAwD;MACzD,IAAI+H,aAAa,CAAC/V,GAAd,KAAsB,CAA1B,EAA6B;QACzB,OAAOX,SAAP;MACH;;MACD,OAAO,IAAIkW,mBAAJ,CAAwBQ,aAAa,CAAChW,KAAtC,EAA6CgW,aAAa,CAAC5V,GAA3D,EAAgE4V,aAAa,CAAC5V,GAAd,GAAoB6N,KAApB,GAA4B,CAA5F,CAAP;IACH,CALI,MAMA,IAAIgI,MAAM,CAAC7N,QAAP,CAAgB8F,MAAhB,KAA2B+H,MAAM,CAAC7N,QAAP,CAAgB6F,KAAhB,CAA/B,EAAuD;MACxD,OAAO,IAAI/K,iBAAJ,CAAsB8S,aAAtB,EAAqC,IAAA1V,uBAAA,EAAkB0V,aAAa,CAAChW,KAAhC,EAAuCgW,aAAa,CAAC5V,GAAd,GAAoB6N,KAApB,GAA4B,CAAnE,EAAsE+H,aAAa,CAAC/V,GAAd,GAAoBiO,MAApB,GAA6B,CAAnG,CAArC,CAAP;IACH;;IACD,OAAO5O,SAAP;EACH;;EACqB,OAAf4W,eAAe,CAAClW,KAAD,EAAQmW,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;IAC1C,OAAO,IAAIpT,iBAAJ,CAAsB,IAAA5C,uBAAA,EAAkBN,KAAlB,EAAyBmW,EAAzB,EAA6BC,EAA7B,CAAtB,EAAwD,IAAA9V,uBAAA,EAAkBN,KAAlB,EAAyBqW,EAAzB,EAA6BC,EAA7B,CAAxD,CAAP;EACH;;EACDlO,QAAQ,GAAG;IACP,OAAO6N,MAAM,CAAC7N,QAAP,CAAgB,KAAK/C,IAAL,EAAhB,CAAP;EACH;;EACDkR,WAAW,CAACC,KAAD,EAAQ;IACf,IAAI,KAAK1T,KAAL,CAAW9C,KAAX,IAAoBwW,KAAK,CAAC1T,KAAN,CAAY9C,KAApC,EAA2C;MACvC,OAAO,KAAP;IACH;;IACD,IAAI,KAAK+C,GAAL,CAAS9C,GAAT,GAAeuW,KAAK,CAAC1T,KAAN,CAAY7C,GAA3B,IAAkC,KAAK6C,KAAL,CAAW7C,GAAX,GAAiBuW,KAAK,CAACzT,GAAN,CAAU9C,GAAjE,EAAsE;MAClE,OAAO,KAAP;IACH;;IACD,IAAI,KAAK8C,GAAL,CAAS3C,GAAT,GAAeoW,KAAK,CAAC1T,KAAN,CAAY1C,GAA3B,IAAkC,KAAK0C,KAAL,CAAW1C,GAAX,GAAiBoW,KAAK,CAACzT,GAAN,CAAU3C,GAAjE,EAAsE;MAClE,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH;;EACDsJ,cAAc,CAACpM,OAAD,EAAU;IACpB,IAAI,KAAK0C,KAAL,KAAe1C,OAAO,CAAC0C,KAA3B,EAAkC;MAC9B,OAAO,KAAP;IACH;;IACD,OAAO,KAAK8C,KAAL,CAAW7C,GAAX,IAAkB3C,OAAO,CAAC2C,GAA1B,IACA,KAAK8C,GAAL,CAAS9C,GAAT,IAAgB3C,OAAO,CAAC2C,GADxB,IAEA,KAAK6C,KAAL,CAAW1C,GAAX,IAAkB9C,OAAO,CAAC8C,GAF1B,IAGA,KAAK2C,GAAL,CAAS3C,GAAT,IAAgB9C,OAAO,CAAC8C,GAH/B;EAIH;;EACDqW,aAAa,CAACnZ,OAAD,EAAU;IACnB,IAAI,KAAK0C,KAAL,KAAe1C,OAAO,CAAC0C,KAA3B,EAAkC;MAC9B,OAAO,KAAP;IACH;;IACD,OAAO,KAAK8C,KAAL,CAAW1C,GAAX,IAAkB9C,OAAO,CAAC8C,GAA1B,IAAiC,KAAK2C,GAAL,CAAS3C,GAAT,IAAgB9C,OAAO,CAAC8C,GAAhE;EACH;;EACDsW,UAAU,CAACpZ,OAAD,EAAU;IAChB,IAAI,KAAK0C,KAAL,KAAe1C,OAAO,CAAC0C,KAA3B,EAAkC;MAC9B,OAAO,KAAP;IACH;;IACD,OAAO,KAAK8C,KAAL,CAAW7C,GAAX,IAAkB3C,OAAO,CAAC2C,GAA1B,IAAiC,KAAK8C,GAAL,CAAS9C,GAAT,IAAgB3C,OAAO,CAAC2C,GAAhE;EACH;;EACD0N,aAAa,CAACjK,KAAD,EAAQ;IACjB,OAAO,KAAKgG,cAAL,CAAoBhG,KAAK,CAACZ,KAA1B,KAAoC,KAAK4G,cAAL,CAAoBhG,KAAK,CAACX,GAA1B,CAA3C;EACH;;EACD8O,gBAAgB,CAAC2E,KAAD,EAAQ;IACpB,IAAI,KAAKxW,KAAL,KAAewW,KAAK,CAAC1T,KAAN,CAAY9C,KAA/B,EAAsC;MAClC,OAAOV,SAAP;IACH;;IACD,MAAMqX,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAK/T,KAAL,CAAW7C,GAApB,EAAyBuW,KAAK,CAAC1T,KAAN,CAAY7C,GAArC,CAAjB;IACA,MAAM6W,MAAM,GAAGF,IAAI,CAACG,GAAL,CAAS,KAAKhU,GAAL,CAAS9C,GAAlB,EAAuBuW,KAAK,CAACzT,GAAN,CAAU9C,GAAjC,CAAf;IACA,MAAM+W,QAAQ,GAAGJ,IAAI,CAACC,GAAL,CAAS,KAAK/T,KAAL,CAAW1C,GAApB,EAAyBoW,KAAK,CAAC1T,KAAN,CAAY1C,GAArC,CAAjB;IACA,MAAM6W,MAAM,GAAGL,IAAI,CAACG,GAAL,CAAS,KAAKhU,GAAL,CAAS3C,GAAlB,EAAuBoW,KAAK,CAACzT,GAAN,CAAU3C,GAAjC,CAAf;;IACA,IAAIuW,QAAQ,GAAGG,MAAX,IAAqBE,QAAQ,GAAGC,MAApC,EAA4C;MACxC,OAAO3X,SAAP;IACH;;IACD,OAAO,IAAI4D,iBAAJ,CAAsB,IAAA5C,uBAAA,EAAkB,KAAKN,KAAvB,EAA8BgX,QAA9B,EAAwCL,QAAxC,CAAtB,EAAyE,IAAArW,uBAAA,EAAkB,KAAKN,KAAvB,EAA8BiX,MAA9B,EAAsCH,MAAtC,CAAzE,CAAP;EACH;;EACDvE,WAAW,CAACtS,GAAD,EAAM;IACb,OAAO,KAAK6C,KAAL,CAAW7C,GAAX,GAAiBA,GAAjB,IAAwB,KAAK8C,GAAL,CAAS9C,GAAT,IAAgBA,GAA/C;EACH;;EACD8S,cAAc,CAACD,MAAD,EAAS;IACnB,OAAO,KAAKhQ,KAAL,CAAW1C,GAAX,GAAiB0S,MAAjB,IAA2B,KAAK/P,GAAL,CAAS3C,GAAT,IAAgB0S,MAAlD;EACH;;EACDoE,WAAW,CAACtM,YAAD,EAAe;IACtB,KAAK9H,KAAL,CAAW7C,GAAX,IAAkB2K,YAAlB;IACA,KAAK7H,GAAL,CAAS9C,GAAT,IAAgB2K,YAAhB;EACH;;EACDuM,YAAY,CAACvM,YAAD,EAAe;IACvB,KAAK7H,GAAL,CAAS9C,GAAT,IAAgB2K,YAAhB;EACH;;EACDwM,cAAc,CAACrL,eAAD,EAAkB;IAC5B,KAAKjJ,KAAL,CAAW1C,GAAX,IAAkB2L,eAAlB;IACA,KAAKhJ,GAAL,CAAS3C,GAAT,IAAgB2L,eAAhB;EACH;;EACDsL,OAAO,CAACC,MAAD,EAASC,MAAT,EAAiB;IACpB,OAAOrU,iBAAiB,CAAC8K,QAAlB,CAA2B,IAAA1N,uBAAA,EAAkB,KAAKN,KAAvB,EAA8B,KAAK8C,KAAL,CAAW1C,GAAX,GAAiBkX,MAA/C,EAAuD,KAAKxU,KAAL,CAAW7C,GAAX,GAAiBsX,MAAxE,CAA3B,EAA4G,KAAKtJ,KAAL,EAA5G,EAA0H,KAAKC,MAAL,EAA1H,CAAP;EACH;;EACDsJ,eAAe,CAACzL,eAAD,EAAkB;IAC7B,KAAKhJ,GAAL,CAAS3C,GAAT,IAAgB2L,eAAhB;EACH;;EACD0L,WAAW,CAAChX,OAAD,EAAU;IACjB,KAAKqC,KAAL,CAAW9C,KAAX,GAAmBS,OAAnB;IACA,KAAKsC,GAAL,CAAS/C,KAAT,GAAiBS,OAAjB;EACH;;EACDiX,UAAU,CAACpE,IAAD,EAAO;IACb,IAAIA,IAAI,YAAYU,cAApB,EAA8B;MAC1B,KAAKrK,UAAL,CAAgB2J,IAAI,CAACxQ,KAArB,EAA4BwQ,IAAI,CAACvQ,GAAjC;IACH,CAFD,MAGK;MACD,KAAK2I,aAAL,CAAmB4H,IAAI,CAACxQ,KAAxB,EAA+BwQ,IAAI,CAACvQ,GAApC;IACH;EACJ;;EACD4U,eAAe,GAAG;IACd,OAAO,KAAK1J,KAAL,MAAgB,CAAhB,IAAqB,KAAKC,MAAL,MAAiB,CAA7C;EACH;;EACDuE,kBAAkB,CAACkE,QAAD,EAAW/L,YAAX,EAAyB;IACvC,OAAO1H,iBAAiB,CAAC8K,QAAlB,CAA2B,IAAA1N,uBAAA,EAAkB,KAAKN,KAAvB,EAA8B,KAAK8C,KAAL,CAAW1C,GAAzC,EAA8CuW,QAA9C,CAA3B,EAAoF,KAAK1I,KAAL,EAApF,EAAkGrD,YAAlG,CAAP;EACH;;EACDqI,mBAAmB,CAAC2E,WAAD,EAAc7L,eAAd,EAA+B;IAC9C,OAAO7I,iBAAiB,CAAC8K,QAAlB,CAA2B,IAAA1N,uBAAA,EAAkB,KAAKN,KAAvB,EAA8B4X,WAA9B,EAA2C,KAAK9U,KAAL,CAAW7C,GAAtD,CAA3B,EAAuF8L,eAAvF,EAAwG,KAAKmC,MAAL,EAAxG,CAAP;EACH;;EACD2J,QAAQ,GAAG;IACP,OAAQ,GAAE,KAAK/U,KAAL,CAAW9C,KAAM,IAAG,KAAK8C,KAAL,CAAW1C,GAAI,IAAG,KAAK0C,KAAL,CAAW7C,GAAI,IAAG,KAAK8C,GAAL,CAAS3C,GAAI,IAAG,KAAK2C,GAAL,CAAS9C,GAAI,EAA/F;EACH;;EACDgO,KAAK,GAAG;IACJ,OAAO,KAAKlL,GAAL,CAAS3C,GAAT,GAAe,KAAK0C,KAAL,CAAW1C,GAA1B,GAAgC,CAAvC;EACH;;EACD8N,MAAM,GAAG;IACL,OAAO,KAAKnL,GAAL,CAAS9C,GAAT,GAAe,KAAK6C,KAAL,CAAW7C,GAA1B,GAAgC,CAAvC;EACH;;EACDoF,IAAI,GAAG;IACH,OAAO,KAAK6I,MAAL,KAAgB,KAAKD,KAAL,EAAvB;EACH;;EACD6J,uBAAuB,GAAG;IACtB,MAAM5L,MAAM,GAAG,EAAf;;IACA,KAAK,IAAI6L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7J,MAAL,EAApB,EAAmC,EAAE6J,CAArC,EAAwC;MACpC7L,MAAM,CAAC6L,CAAD,CAAN,GAAY,EAAZ;;MACA,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,KAAL,EAApB,EAAkC,EAAE6H,CAApC,EAAuC;QACnC,MAAMtP,KAAK,GAAG,IAAAlG,uBAAA,EAAkB,KAAKN,KAAvB,EAA8B,KAAK8C,KAAL,CAAW1C,GAAX,GAAiB0V,CAA/C,EAAkD,KAAKhT,KAAL,CAAW7C,GAAX,GAAiB8X,CAAnE,CAAd;QACA7L,MAAM,CAAC6L,CAAD,CAAN,CAAUjU,IAAV,CAAe0C,KAAf;MACH;IACJ;;IACD,OAAO0F,MAAP;EACH;;EACD8L,SAAS,CAACC,QAAD,EAAW;IAChB,OAAO,IAAI/U,iBAAJ,CAAsB+U,QAAtB,EAAgC,KAAKlV,GAArC,CAAP;EACH;;EACDmV,gBAAgB,CAAC1B,KAAD,EAAQ;IACpB,OAAO,KAAKvI,KAAL,OAAiBuI,KAAK,CAACvI,KAAN,EAAjB,IAAkC,KAAKC,MAAL,OAAkBsI,KAAK,CAACtI,MAAN,EAA3D;EACH;;EACDiK,MAAM,CAAC3B,KAAD,EAAQ;IACV,OAAO,IAAAtV,4BAAA,EAAuB,KAAK4B,KAA5B,EAAmC0T,KAAK,CAAC1T,KAAzC,KAAmD,IAAA5B,4BAAA,EAAuB,KAAK6B,GAA5B,EAAiCyT,KAAK,CAACzT,GAAvC,CAA1D;EACH;;EACDqV,iBAAiB,CAACC,eAAD,EAAkBC,EAAlB,EAAsB;IACnC,MAAM5G,GAAG,GAAG,EAAZ;IACA,IAAI6G,UAAU,GAAG,KAAKzV,KAAL,CAAW7C,GAA5B;;IACA,OAAOsY,UAAU,IAAI,KAAKC,eAAL,CAAqBH,eAArB,CAArB,EAA4D;MACxD,IAAII,aAAa,GAAG,KAAK3V,KAAL,CAAW1C,GAA/B;MACA,MAAMsY,GAAG,GAAG,EAAZ;;MACA,OAAOD,aAAa,IAAI,KAAKE,kBAAL,CAAwBN,eAAxB,CAAxB,EAAkE;QAC9DK,GAAG,CAAC5U,IAAJ,CAASwU,EAAE,CAAC,IAAAhY,uBAAA,EAAkB,KAAKwC,KAAL,CAAW9C,KAA7B,EAAoCyY,aAApC,EAAmDF,UAAnD,CAAD,CAAX;QACAE,aAAa;MAChB;;MACD/G,GAAG,CAAC5N,IAAJ,CAAS4U,GAAT;MACAH,UAAU;IACb;;IACD,OAAO7G,GAAP;EACH;;EACD3N,SAAS,CAACsU,eAAD,EAAkB;IACvB,MAAM3G,GAAG,GAAG,EAAZ;IACA,IAAI6G,UAAU,GAAG,KAAKzV,KAAL,CAAW7C,GAA5B;IACA,MAAM2Y,QAAQ,GAAG,KAAKJ,eAAL,CAAqBH,eAArB,CAAjB;IACA,MAAMQ,WAAW,GAAG,KAAKF,kBAAL,CAAwBN,eAAxB,CAApB;;IACA,OAAOE,UAAU,IAAIK,QAArB,EAA+B;MAC3B,IAAIH,aAAa,GAAG,KAAK3V,KAAL,CAAW1C,GAA/B;;MACA,OAAOqY,aAAa,IAAII,WAAxB,EAAqC;QACjCnH,GAAG,CAAC5N,IAAJ,CAAS,IAAAxD,uBAAA,EAAkB,KAAKwC,KAAL,CAAW9C,KAA7B,EAAoCyY,aAApC,EAAmDF,UAAnD,CAAT;QACAE,aAAa;MAChB;;MACDF,UAAU;IACb;;IACD,OAAO7G,GAAP;EACH;;EACsB,CAAtBnE,sBAAsB,CAACnM,KAAD,EAAQ0X,MAAR,EAAgBT,eAAhB,EAAiC;IACpD,IAAIjX,KAAK,GAAG,CAAZ,EAAe;MACX,IAAI0X,MAAM,GAAG,CAAb,EAAgB;QACZ,IAAIP,UAAU,GAAG,KAAKC,eAAL,CAAqBH,eAArB,CAAjB;;QACA,OAAOE,UAAU,IAAI,KAAKzV,KAAL,CAAW7C,GAAhC,EAAqC;UACjC,IAAIwY,aAAa,GAAG,KAAKE,kBAAL,CAAwBN,eAAxB,CAApB;;UACA,OAAOI,aAAa,IAAI,KAAK3V,KAAL,CAAW1C,GAAnC,EAAwC;YACpC,MAAM,IAAAE,uBAAA,EAAkB,KAAKwC,KAAL,CAAW9C,KAA7B,EAAoCyY,aAApC,EAAmDF,UAAnD,CAAN;YACAE,aAAa,IAAI,CAAjB;UACH;;UACDF,UAAU,IAAI,CAAd;QACH;MACJ,CAVD,MAWK;QACD,IAAIA,UAAU,GAAG,KAAKzV,KAAL,CAAW7C,GAA5B;;QACA,OAAOsY,UAAU,IAAI,KAAKC,eAAL,CAAqBH,eAArB,CAArB,EAA4D;UACxD,IAAII,aAAa,GAAG,KAAKE,kBAAL,CAAwBN,eAAxB,CAApB;;UACA,OAAOI,aAAa,IAAI,KAAK3V,KAAL,CAAW1C,GAAnC,EAAwC;YACpC,MAAM,IAAAE,uBAAA,EAAkB,KAAKwC,KAAL,CAAW9C,KAA7B,EAAoCyY,aAApC,EAAmDF,UAAnD,CAAN;YACAE,aAAa,IAAI,CAAjB;UACH;;UACDF,UAAU,IAAI,CAAd;QACH;MACJ;IACJ,CAvBD,MAwBK;MACD,IAAIO,MAAM,GAAG,CAAb,EAAgB;QACZ,IAAIP,UAAU,GAAG,KAAKC,eAAL,CAAqBH,eAArB,CAAjB;;QACA,OAAOE,UAAU,IAAI,KAAKzV,KAAL,CAAW7C,GAAhC,EAAqC;UACjC,IAAIwY,aAAa,GAAG,KAAK3V,KAAL,CAAW1C,GAA/B;;UACA,OAAOqY,aAAa,IAAI,KAAKE,kBAAL,CAAwBN,eAAxB,CAAxB,EAAkE;YAC9D,MAAM,IAAA/X,uBAAA,EAAkB,KAAKwC,KAAL,CAAW9C,KAA7B,EAAoCyY,aAApC,EAAmDF,UAAnD,CAAN;YACAE,aAAa,IAAI,CAAjB;UACH;;UACDF,UAAU,IAAI,CAAd;QACH;MACJ,CAVD,MAWK;QACD,IAAIA,UAAU,GAAG,KAAKzV,KAAL,CAAW7C,GAA5B;;QACA,OAAOsY,UAAU,IAAI,KAAKC,eAAL,CAAqBH,eAArB,CAArB,EAA4D;UACxD,IAAII,aAAa,GAAG,KAAK3V,KAAL,CAAW1C,GAA/B;;UACA,OAAOqY,aAAa,IAAI,KAAKE,kBAAL,CAAwBN,eAAxB,CAAxB,EAAkE;YAC9D,MAAM,IAAA/X,uBAAA,EAAkB,KAAKwC,KAAL,CAAW9C,KAA7B,EAAoCyY,aAApC,EAAmDF,UAAnD,CAAN;YACAE,aAAa,IAAI,CAAjB;UACH;;UACDF,UAAU,IAAI,CAAd;QACH;MACJ;IACJ;EACJ;;EACDlU,UAAU,CAACjE,GAAD,EAAMH,GAAN,EAAW;IACjB,IAAIG,GAAG,GAAG,CAAN,IAAWH,GAAG,GAAG,CAAjB,IAAsBA,GAAG,GAAG,KAAKiO,MAAL,KAAgB,CAA5C,IAAiD9N,GAAG,GAAG,KAAK6N,KAAL,KAAe,CAA1E,EAA6E;MACzE,MAAMtP,KAAK,CAAC,oBAAD,CAAX;IACH;;IACD,OAAO,IAAA2B,uBAAA,EAAkB,KAAKwC,KAAL,CAAW9C,KAA7B,EAAoC,KAAK8C,KAAL,CAAW1C,GAAX,GAAiBA,GAArD,EAA0D,KAAK0C,KAAL,CAAW7C,GAAX,GAAiBA,GAA3E,CAAP;EACH;;EACD8Y,sBAAsB,CAACC,UAAD,EAAaC,OAAb,EAAsB;IACxC,OAAO,KAAKlW,GAAL,CAAS3C,GAAT,IAAgB4Y,UAAhB,IAA8B,KAAKjW,GAAL,CAAS9C,GAAT,IAAgBgZ,OAArD;EACH;;EACDN,kBAAkB,CAACO,gBAAD,EAAmB;IACjC,OAAO,KAAKnW,GAAL,CAAS3C,GAAhB;EACH;;EACDoY,eAAe,CAACU,gBAAD,EAAmB;IAC9B,OAAO,KAAKnW,GAAL,CAAS9C,GAAhB;EACH;;EACDkZ,cAAc,CAACD,gBAAD,EAAmB;IAC7B,OAAO,KAAKjL,KAAL,EAAP;EACH;;EACDmL,eAAe,CAACF,gBAAD,EAAmB;IAC9B,OAAO,KAAKhL,MAAL,EAAP;EACH;;EACDvE,UAAU,CAACgB,QAAD,EAAW0O,MAAX,EAAmB;IACzB,IAAI1O,QAAQ,GAAG,KAAK5H,GAAL,CAAS9C,GAAxB,EAA6B;MACzB;IACH;;IACD,IAAIoZ,MAAM,GAAG,KAAKvW,KAAL,CAAW7C,GAAxB,EAA6B;MACzB,MAAM2K,YAAY,GAAGyO,MAAM,GAAG1O,QAAT,GAAoB,CAAzC;MACA,OAAO,KAAKuM,WAAL,CAAiB,CAACtM,YAAlB,CAAP;IACH;;IACD,IAAID,QAAQ,IAAI,KAAK7H,KAAL,CAAW7C,GAA3B,EAAgC;MAC5B,KAAK6C,KAAL,CAAW7C,GAAX,GAAiB0K,QAAjB;IACH;;IACD,KAAK5H,GAAL,CAAS9C,GAAT,IAAgB2W,IAAI,CAACG,GAAL,CAASsC,MAAT,EAAiB,KAAKtW,GAAL,CAAS9C,GAA1B,IAAiC0K,QAAjC,GAA4C,CAA5D;EACH;;EACDe,aAAa,CAACI,WAAD,EAAcwN,SAAd,EAAyB;IAClC,IAAIxN,WAAW,GAAG,KAAK/I,GAAL,CAAS3C,GAA3B,EAAgC;MAC5B;IACH;;IACD,IAAIkZ,SAAS,GAAG,KAAKxW,KAAL,CAAW1C,GAA3B,EAAgC;MAC5B,MAAM2L,eAAe,GAAGuN,SAAS,GAAGxN,WAAZ,GAA0B,CAAlD;MACA,OAAO,KAAKsL,cAAL,CAAoB,CAACrL,eAArB,CAAP;IACH;;IACD,IAAID,WAAW,IAAI,KAAKhJ,KAAL,CAAW1C,GAA9B,EAAmC;MAC/B,KAAK0C,KAAL,CAAW1C,GAAX,GAAiB0L,WAAjB;IACH;;IACD,KAAK/I,GAAL,CAAS3C,GAAT,IAAgBwW,IAAI,CAACG,GAAL,CAASuC,SAAT,EAAoB,KAAKvW,GAAL,CAAS3C,GAA7B,IAAoC0L,WAApC,GAAkD,CAAlE;EACH;;AA3T0B;;;;AA6TxB,MAAM0J,mBAAN,SAAkCtS,iBAAlC,CAAoD;EACvD3D,WAAW,CAACS,KAAD,EAAQ8L,WAAR,EAAqBwN,SAArB,EAAgC;IACvC,MAAM,IAAAhZ,uBAAA,EAAkBN,KAAlB,EAAyB8L,WAAzB,EAAsC,CAAtC,CAAN,EAAgD,IAAAxL,uBAAA,EAAkBN,KAAlB,EAAyBsZ,SAAzB,EAAoCrD,MAAM,CAACsD,iBAA3C,CAAhD;EACH;;EACqB,OAAf9D,eAAe,CAACK,CAAD,EAAI9U,WAAJ,EAAiB;IACnC,MAAM8B,KAAK,GAAGgT,CAAC,CAAChT,KAAF,CAAQ0W,qBAAR,CAA8BxY,WAA9B,CAAd;IACA,MAAM+B,GAAG,GAAG+S,CAAC,CAAC/S,GAAF,CAAMyW,qBAAN,CAA4BxY,WAA5B,CAAZ;;IACA,IAAI8B,KAAK,CAAC9C,KAAN,KAAgB+C,GAAG,CAAC/C,KAAxB,EAA+B;MAC3B,MAAM,IAAImV,sBAAJ,CAAmBrS,KAAK,CAAC9C,KAAzB,EAAgC+C,GAAG,CAAC/C,KAApC,CAAN;IACH;;IACD,OAAO,IAAIwV,mBAAJ,CAAwB1S,KAAK,CAAC9C,KAA9B,EAAqC8C,KAAK,CAAC1C,GAA3C,EAAgD2C,GAAG,CAAC3C,GAApD,CAAP;EACH;;EACDuX,eAAe,GAAG;IACd,OAAO,KAAK1J,KAAL,MAAgB,CAAvB;EACH;;EACDiJ,WAAW,CAACuC,aAAD,EAAgB;IACvB;EACH;;EACDtC,YAAY,CAACsC,aAAD,EAAgB;IACxB;EACH;;EACDpC,OAAO,CAACC,MAAD,EAASoC,OAAT,EAAkB;IACrB,OAAO,IAAIlE,mBAAJ,CAAwB,KAAKxV,KAA7B,EAAoC,KAAK8C,KAAL,CAAW1C,GAAX,GAAiBkX,MAArD,EAA6D,KAAKvU,GAAL,CAAS3C,GAAT,GAAekX,MAA5E,CAAP;EACH;;EACDrE,mBAAmB,CAAC2E,WAAD,EAAc7L,eAAd,EAA+B;IAC9C,OAAO,IAAIyJ,mBAAJ,CAAwB,KAAKxV,KAA7B,EAAoC4X,WAApC,EAAiDA,WAAW,GAAG7L,eAAd,GAAgC,CAAjF,CAAP;EACH;;EACDgN,sBAAsB,CAACC,UAAD,EAAaW,QAAb,EAAuB;IACzC,OAAO,KAAK5W,GAAL,CAAS3C,GAAT,IAAgB4Y,UAAvB;EACH;;EACDR,eAAe,CAACH,eAAD,EAAkB;IAC7B,OAAO,KAAKe,eAAL,CAAqBf,eAArB,IAAwC,CAA/C;EACH;;EACDe,eAAe,CAACf,eAAD,EAAkB;IAC7B,OAAOA,eAAe,CAAC7I,cAAhB,CAA+B,KAAKxP,KAApC,CAAP;EACH;;EACD2J,UAAU,CAACiQ,SAAD,EAAYC,OAAZ,EAAqB;IAC3B;EACH;;AAtCsD;;;;AAwCpD,MAAMnE,gBAAN,SAA+BxS,iBAA/B,CAAiD;EACpD3D,WAAW,CAACS,KAAD,EAAQ2K,QAAR,EAAkB0O,MAAlB,EAA0B;IACjC,MAAM,IAAA/Y,uBAAA,EAAkBN,KAAlB,EAAyB,CAAzB,EAA4B2K,QAA5B,CAAN,EAA6C,IAAArK,uBAAA,EAAkBN,KAAlB,EAAyBiW,MAAM,CAACsD,iBAAhC,EAAmDF,MAAnD,CAA7C;EACH;;EACqB,OAAf1D,eAAe,CAACG,CAAD,EAAI9U,WAAJ,EAAiB;IACnC,MAAM8B,KAAK,GAAGgT,CAAC,CAAChT,KAAF,CAAQgX,kBAAR,CAA2B9Y,WAA3B,CAAd;IACA,MAAM+B,GAAG,GAAG+S,CAAC,CAAC/S,GAAF,CAAM+W,kBAAN,CAAyB9Y,WAAzB,CAAZ;;IACA,IAAI8B,KAAK,CAAC9C,KAAN,KAAgB+C,GAAG,CAAC/C,KAAxB,EAA+B;MAC3B,MAAM,IAAImV,sBAAJ,CAAmBrS,KAAK,CAAC9C,KAAzB,EAAgC+C,GAAG,CAAC/C,KAApC,CAAN;IACH;;IACD,OAAO,IAAI0V,gBAAJ,CAAqB5S,KAAK,CAAC9C,KAA3B,EAAkC8C,KAAK,CAAC7C,GAAxC,EAA6C8C,GAAG,CAAC9C,GAAjD,CAAP;EACH;;EACD0X,eAAe,GAAG;IACd,OAAO,KAAKzJ,MAAL,MAAiB,CAAxB;EACH;;EACDkJ,cAAc,CAAC2C,gBAAD,EAAmB;IAC7B;EACH;;EACDvC,eAAe,CAACuC,gBAAD,EAAmB;IAC9B;EACH;;EACD1C,OAAO,CAACC,MAAD,EAASC,MAAT,EAAiB;IACpB,OAAO,IAAI7B,gBAAJ,CAAqB,KAAK1V,KAA1B,EAAiC,KAAK8C,KAAL,CAAW7C,GAAX,GAAiBsX,MAAlD,EAA0D,KAAKxU,GAAL,CAAS9C,GAAT,GAAesX,MAAzE,CAAP;EACH;;EACD9E,kBAAkB,CAACkE,QAAD,EAAW/L,YAAX,EAAyB;IACvC,OAAO,IAAI8K,gBAAJ,CAAqB,KAAK1V,KAA1B,EAAiC2W,QAAjC,EAA2CA,QAAQ,GAAG/L,YAAX,GAA0B,CAArE,CAAP;EACH;;EACDmO,sBAAsB,CAACiB,WAAD,EAAcf,OAAd,EAAuB;IACzC,OAAO,KAAKlW,GAAL,CAAS9C,GAAT,IAAgBgZ,OAAvB;EACH;;EACDN,kBAAkB,CAACN,eAAD,EAAkB;IAChC,OAAO,KAAKc,cAAL,CAAoBd,eAApB,IAAuC,CAA9C;EACH;;EACDc,cAAc,CAACd,eAAD,EAAkB;IAC5B,OAAOA,eAAe,CAAC3I,aAAhB,CAA8B,KAAK1P,KAAnC,CAAP;EACH;;EACD0L,aAAa,CAACuO,YAAD,EAAeC,UAAf,EAA2B;IACpC;EACH;;AAtCmD;;;;;;;;;;;;;;ACvXxD;AACA;AACA;AACA;;AACA;AACA;AACA;AACO,MAAMte,kBAAN,SAAiC+C,KAAjC,CAAuC;EAC1CY,WAAW,CAAC2J,OAAD,EAAU;IACjB,MAAO,8BAA6BA,OAAQ,EAA5C;EACH;;AAHyC;AAK9C;AACA;AACA;;;;;AACO,MAAMrN,oBAAN,SAAmC8C,KAAnC,CAAyC;EAC5CY,WAAW,CAAC+P,SAAD,EAAY;IACnB,MAAO,+BAA8BA,SAAU,GAA/C;EACH;;AAH2C;AAKhD;AACA;AACA;;;;;AACO,MAAMrT,0BAAN,SAAyC0C,KAAzC,CAA+C;EAClDY,WAAW,CAAC+P,SAAD,EAAY;IACnB,MAAO,mBAAkBA,SAAU,iBAAnC;EACH;;AAHiD;AAKtD;AACA;AACA;;;;;AACO,MAAMpT,2BAAN,SAA0CyC,KAA1C,CAAgD;EACnDY,WAAW,GAAG;IACV,MAAM,2BAAN;EACH;;AAHkD;AAKvD;AACA;AACA;;;;;AACO,MAAMzD,gBAAN,SAA+B6C,KAA/B,CAAqC;EACxCY,WAAW,GAAG;IACV,MAAM,uBAAN;EACH;;AAHuC;AAK5C;AACA;AACA;;;;;AACO,MAAMtE,mBAAN,SAAkC0D,KAAlC,CAAwC;EAC3CY,WAAW,CAACjC,OAAD,EAAU;IACjB,MAAO,kBAAiBA,OAAO,CAAC2C,GAAI,WAAU3C,OAAO,CAAC8C,GAAI,cAA1D;EACH;;AAH0C;AAK/C;AACA;AACA;;;;;AACO,MAAMlF,qBAAN,SAAoCyD,KAApC,CAA0C;EAC7CY,WAAW,CAAC4a,iBAAD,EAAoB;IAC3B,MAAO,+BAA8BA,iBAAkB,EAAvD;EACH;;AAH4C;AAKjD;AACA;AACA;;;;;AACO,MAAMhF,cAAN,SAA6BxW,KAA7B,CAAmC;EACtCY,WAAW,CAAC6a,MAAD,EAASC,MAAT,EAAiB;IACxB,MAAO,UAASD,MAAO,QAAOC,MAAO,iBAArC;EACH;;AAHqC;AAK1C;AACA;AACA;;;;;AACO,MAAM9e,sCAAN,SAAqDoD,KAArD,CAA2D;EAC9DY,WAAW,CAAC0J,cAAD,EAAiB;IACxB,MAAO,6BAA4BA,cAAe,sBAAlD;EACH;;AAH6D;AAKlE;AACA;AACA;;;;;AACO,MAAMzN,iCAAN,SAAgDmD,KAAhD,CAAsD;EACzDY,WAAW,CAAC0J,cAAD,EAAiB;IACxB,MAAO,6BAA4BA,cAAe,cAAlD;EACH;;AAHwD;AAK7D;AACA;AACA;;;;;AACO,MAAM3N,gCAAN,SAA+CqD,KAA/C,CAAqD;EACxDY,WAAW,CAAC0J,cAAD,EAAiB;IACxB,MAAO,qBAAoBA,cAAe,kBAA1C;EACH;;AAHuD;AAK5D;AACA;AACA;;;;;AACO,MAAMvN,sBAAN,SAAqCiD,KAArC,CAA2C;EAC9CY,WAAW,GAAG;IACV,MAAM,+BAAN;EACH;;AAH6C;AAKlD;AACA;AACA;;;;;AACO,MAAM9D,sBAAN,SAAqCkD,KAArC,CAA2C;EAC9CY,WAAW,GAAG;IACV,MAAM,+BAAN;EACH;;AAH6C;AAKlD;AACA;AACA;;;;;AACO,MAAMxD,mBAAN,SAAkC4C,KAAlC,CAAwC;EAC3CY,WAAW,GAAG;IACV,MAAM,2BAAN;EACH;;AAH0C;;;;AAK/C,SAAS+a,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;EACxB,QAAQ,OAAOA,GAAf;IACI,KAAK,UAAL;IACA,KAAK,QAAL;MACI,OAAOA,GAAG,CAAC3C,QAAJ,EAAP;;IACJ,KAAK,QAAL;MACI,OAAO,YAAY2C,GAAG,CAAC3C,QAAJ,EAAZ,GAA6B,GAApC;;IACJ;MAAS;QACL,IAAI2C,GAAG,YAAYC,MAAnB,EAA2B;UACvB,OAAO,YAAYD,GAAG,CAAC3C,QAAJ,EAAZ,GAA6B,GAApC;QACH,CAFD,MAGK;UACD,OAAO2C,GAAP;QACH;MACJ;EAbL;AAeH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,MAAMne,kBAAN,SAAiCsC,KAAjC,CAAuC;EAC1CY,WAAW,CAACiH,KAAD,EAAQ;IACf,MAAO,0BAAyBkU,IAAI,CAACC,SAAL,CAAenU,KAAf,EAAsB8T,QAAtB,EAAgC,CAAhC,CAAmC,EAAnE;EACH;;AAHyC;AAK9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMxf,wBAAN,SAAuC6D,KAAvC,CAA6C;EAChDY,WAAW,CAACqb,YAAD,EAAeC,SAAf,EAA0B;IACjC,MAAO,2BAA0BD,YAAa,0BAAyBC,SAAU,EAAjF;EACH;;AAH+C;AAKpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMC,gBAAN,SAA+Bnc,KAA/B,CAAqC;EACxCY,WAAW,CAACsb,SAAD,EAAY;IACnB,MAAO,oBAAmBA,SAAU,mBAApC;EACH;;AAHuC;AAK5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMlgB,wBAAN,SAAuCgE,KAAvC,CAA6C;EAChDY,WAAW,CAACsb,SAAD,EAAYE,OAAZ,EAAqB;IAC5B,MAAO,oBAAmBF,SAAU,uBAAsBE,OAAQ,EAAlE;EACH;;AAH+C;AAKpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMrgB,sBAAN,SAAqCiE,KAArC,CAA2C;EAC9CY,WAAW,CAACsb,SAAD,EAAYG,OAAZ,EAAqB;IAC5B,MAAO,oBAAmBH,SAAU,sBAAqBG,OAAQ,EAAjE;EACH;;AAH6C;AAKlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMngB,wBAAN,SAAuC8D,KAAvC,CAA6C;EAChDY,WAAW,CAAC8L,MAAD,EAASwP,SAAT,EAAoB;IAC3B,MAAO,mBAAkBxP,MAAO,0BAAyBwP,SAAU,EAAnE;EACH;;AAH+C;AAKpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMjgB,wBAAN,SAAuC+D,KAAvC,CAA6C;EAChDY,WAAW,GAAG;IACV,MAAM,4BAAN;EACH;;AAH+C;AAKpD;AACA;AACA;AACA;AACA;;;;;AACO,MAAMlE,uBAAN,SAAsCsD,KAAtC,CAA4C;EAC/CY,WAAW,CAACgb,GAAD,EAAM;IACb,MAAO,mBAAkBA,GAAI,sDAA7B;EACH;;AAH8C;AAKnD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMve,iCAAN,SAAgD2C,KAAhD,CAAsD;EACzDY,WAAW,CAACgb,GAAD,EAAM;IACb,MAAO,qDAAoDA,GAAI,EAA/D;EACH;;AAHwD;AAK7D;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMpf,0BAAN,SAAyCwD,KAAzC,CAA+C;EAClDY,WAAW,GAAG;IACV,MAAM,0BAAN;EACH;;AAHiD;AAKtD;AACA;AACA;AACA;AACA;;;;;AACO,MAAMnE,8BAAN,SAA6CuD,KAA7C,CAAmD;EACtDY,WAAW,GAAG;IACV,MAAM,8BAAN;EACH;;AAHqD;AAK1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMvE,6BAAN,SAA4C2D,KAA5C,CAAkD;EACnB,OAA3Bsc,2BAA2B,CAACC,UAAD,EAAape,UAAb,EAAyB;IACvD,OAAO,IAAI9B,6BAAJ,CAAmC,oBAAmBkgB,UAAW,2BAA0Bpe,UAAW,EAAtG,CAAP;EACH;;EAC4B,OAAtBqe,sBAAsB,CAACC,YAAD,EAAete,UAAf,EAA2B;IACpD,OAAO,IAAI9B,6BAAJ,CAAmC,mBAAkBogB,YAAa,wBAAuBte,UAAW,EAApG,CAAP;EACH;;AANoD;AAQzD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMue,sBAAN,SAAqC1c,KAArC,CAA2C;EACX,OAA5B2c,4BAA4B,CAACJ,UAAD,EAAa;IAC5C,OAAO,IAAIG,sBAAJ,CAA4B,oCAAmCH,UAAW,EAA1E,CAAP;EACH;;EACoC,OAA9BK,8BAA8B,CAACL,UAAD,EAAa;IAC9C,OAAO,IAAIG,sBAAJ,CAA4B,sCAAqCH,UAAW,EAA5E,CAAP;EACH;;EACqC,OAA/BM,+BAA+B,GAAG;IACrC,OAAO,IAAIH,sBAAJ,CAA2B,oCAA3B,CAAP;EACH;;AAT6C;AAWlD;AACA;AACA;;;;;AACO,MAAMlf,2BAAN,SAA0CwC,KAA1C,CAAgD;EACnDY,WAAW,GAAG;IACV,MAAM,qEAAN;EACH;;AAHkD;AAKvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMnD,2BAAN,SAA0CuC,KAA1C,CAAgD;EACnDY,WAAW,GAAG;IACV,MAAM,qEAAN;EACH;;AAHkD;AAKvD;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAM5D,+BAAN,SAA8CgD,KAA9C,CAAoD;EACvDY,WAAW,GAAG;IACV,MAAM,sDAAN;EACH;;AAHsD;AAK3D;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMkc,oBAAN,SAAmC9c,KAAnC,CAAyC;EAC5CY,WAAW,CAACqD,IAAD,EAAO9F,UAAP,EAAmB;IAC1B,MAAO,YAAW8F,IAAK,cAAa9F,UAAW,0CAA/C;EACH;;AAH2C;;;;;;;;;;;;;;AC/VhD;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;ACRA;;AACA;;AACA;;AACA;;AACA;;AACA;;AATA;AACA;AACA;AACA;AAOA,MAAM4e,YAAY,GAAG,IAAIjB,MAAJ,CAAY,KAAIkB,4BAAgB,QAAOC,8BAAkB,mBAAkBA,8BAAkB,aAA7F,CAArB;AACA,MAAMC,WAAW,GAAG,IAAIpB,MAAJ,CAAY,KAAIkB,4BAAgB,QAAOC,8BAAkB,gBAAzD,CAApB;AACA,MAAME,QAAQ,GAAG,IAAIrB,MAAJ,CAAY,KAAIkB,4BAAgB,QAAOC,8BAAkB,aAAzD,CAAjB;AACA,MAAMG,oBAAoB,GAAG,IAAItB,MAAJ,CAAY,IAAGuB,4BAAgB,GAA/B,CAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMC,qBAAqB,GAAG,CAACza,YAAD,EAAe0a,aAAf,EAA8Blb,WAA9B,KAA8C;EAC/E,MAAMkL,MAAM,GAAGwP,YAAY,CAACS,IAAb,CAAkBD,aAAlB,CAAf;EACA,MAAM9b,GAAG,GAAGgc,kBAAkB,CAAClQ,MAAM,CAAC,CAAD,CAAP,CAA9B;EACA,IAAIlM,KAAK,GAAGqc,kBAAkB,CAACnQ,MAAD,EAAS1K,YAAT,CAA9B;;EACA,IAAIxB,KAAK,KAAKV,SAAd,EAAyB;IACrB,OAAOA,SAAP;EACH;;EACD,IAAIU,KAAK,KAAK,IAAd,EAAoB;IAChBA,KAAK,GAAGV,SAAR;EACH;;EACD,MAAMW,GAAG,GAAGgW,MAAM,CAAC/J,MAAM,CAAC,CAAD,CAAP,CAAN,GAAoB,CAAhC;;EACA,IAAIA,MAAM,CAAC,CAAD,CAAN,KAAc0P,8BAAd,IAAmC1P,MAAM,CAAC,CAAD,CAAN,KAAc0P,8BAArD,EAAwE;IACpE,OAAOU,wBAAA,CAAYC,QAAZ,CAAqBnc,GAArB,EAA0BH,GAA1B,EAA+BD,KAA/B,CAAP;EACH,CAFD,MAGK,IAAIkM,MAAM,CAAC,CAAD,CAAN,KAAc0P,8BAAlB,EAAqC;IACtC,OAAOU,wBAAA,CAAYE,WAAZ,CAAwBpc,GAAxB,EAA6BH,GAAG,GAAGe,WAAW,CAACf,GAA/C,EAAoDD,KAApD,CAAP;EACH,CAFI,MAGA,IAAIkM,MAAM,CAAC,CAAD,CAAN,KAAc0P,8BAAlB,EAAqC;IACtC,OAAOU,wBAAA,CAAYG,WAAZ,CAAwBrc,GAAG,GAAGY,WAAW,CAACZ,GAA1C,EAA+CH,GAA/C,EAAoDD,KAApD,CAAP;EACH,CAFI,MAGA;IACD,OAAOsc,wBAAA,CAAYI,QAAZ,CAAqBzc,GAAG,GAAGe,WAAW,CAACf,GAAvC,EAA4CG,GAAG,GAAGY,WAAW,CAACZ,GAA9D,EAAmEJ,KAAnE,CAAP;EACH;AACJ,CAvBM;;;;AAwBA,MAAM2c,uBAAuB,GAAG,CAACnb,YAAD,EAAe0a,aAAf,EAA8Blb,WAA9B,KAA8C;EACjF,MAAMkL,MAAM,GAAG2P,WAAW,CAACM,IAAZ,CAAiBD,aAAjB,CAAf;EACA,IAAIlc,KAAK,GAAGqc,kBAAkB,CAACnQ,MAAD,EAAS1K,YAAT,CAA9B;;EACA,IAAIxB,KAAK,KAAKV,SAAd,EAAyB;IACrB,OAAOA,SAAP;EACH;;EACD,IAAIU,KAAK,KAAK,IAAd,EAAoB;IAChBA,KAAK,GAAGV,SAAR;EACH;;EACD,MAAMc,GAAG,GAAGgc,kBAAkB,CAAClQ,MAAM,CAAC,CAAD,CAAP,CAA9B;;EACA,IAAIA,MAAM,CAAC,CAAD,CAAN,KAAc0P,8BAAlB,EAAqC;IACjC,OAAOgB,4BAAA,CAAcL,QAAd,CAAuBnc,GAAvB,EAA4BJ,KAA5B,CAAP;EACH,CAFD,MAGK;IACD,OAAO4c,4BAAA,CAAcF,QAAd,CAAuBtc,GAAG,GAAGY,WAAW,CAACZ,GAAzC,EAA8CJ,KAA9C,CAAP;EACH;AACJ,CAhBM;;;;AAiBA,MAAM6c,oBAAoB,GAAG,CAACrb,YAAD,EAAe0a,aAAf,EAA8Blb,WAA9B,KAA8C;EAC9E,MAAMkL,MAAM,GAAG4P,QAAQ,CAACK,IAAT,CAAcD,aAAd,CAAf;EACA,IAAIlc,KAAK,GAAGqc,kBAAkB,CAACnQ,MAAD,EAAS1K,YAAT,CAA9B;;EACA,IAAIxB,KAAK,KAAKV,SAAd,EAAyB;IACrB,OAAOA,SAAP;EACH;;EACD,IAAIU,KAAK,KAAK,IAAd,EAAoB;IAChBA,KAAK,GAAGV,SAAR;EACH;;EACD,MAAMW,GAAG,GAAGgW,MAAM,CAAC/J,MAAM,CAAC,CAAD,CAAP,CAAN,GAAoB,CAAhC;;EACA,IAAIA,MAAM,CAAC,CAAD,CAAN,KAAc0P,8BAAlB,EAAqC;IACjC,OAAOkB,sBAAA,CAAWP,QAAX,CAAoBtc,GAApB,EAAyBD,KAAzB,CAAP;EACH,CAFD,MAGK;IACD,OAAO8c,sBAAA,CAAWJ,QAAX,CAAoBzc,GAAG,GAAGe,WAAW,CAACf,GAAtC,EAA2CD,KAA3C,CAAP;EACH;AACJ,CAhBM;AAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAM+c,2BAA2B,GAAG,CAACvb,YAAD,EAAe0a,aAAf,EAA8Bc,YAA9B,KAA+C;EACtF,MAAM9Q,MAAM,GAAGwP,YAAY,CAACS,IAAb,CAAkBD,aAAlB,CAAf;EACA,MAAM9b,GAAG,GAAGgc,kBAAkB,CAAClQ,MAAM,CAAC,CAAD,CAAP,CAA9B;EACA,IAAIlM,KAAK,GAAGqc,kBAAkB,CAACnQ,MAAD,EAAS1K,YAAT,CAA9B;;EACA,IAAIxB,KAAK,KAAKV,SAAd,EAAyB;IACrB,OAAOA,SAAP;EACH;;EACD,IAAIU,KAAK,KAAK,IAAd,EAAoB;IAChBA,KAAK,GAAGgd,YAAR;EACH;;EACD,MAAM/c,GAAG,GAAGgW,MAAM,CAAC/J,MAAM,CAAC,CAAD,CAAP,CAAN,GAAoB,CAAhC;EACA,OAAO,IAAA5L,uBAAA,EAAkBN,KAAlB,EAAyBI,GAAzB,EAA8BH,GAA9B,CAAP;AACH,CAZM;;;;AAaA,MAAMgd,yBAAyB,GAAG,CAACzb,YAAD,EAAe0a,aAAf,EAA8Bc,YAA9B,KAA+C;EACpF,MAAME,KAAK,GAAGhB,aAAa,CAACgB,KAAd,CAAoBC,2BAApB,CAAd;;EACA,IAAID,KAAK,CAAC7O,MAAN,KAAiB,CAArB,EAAwB;IACpB,OAAO/O,SAAP;EACH;;EACD,MAAM,CAAC8d,WAAD,EAAcC,SAAd,IAA2BH,KAAjC;EACA,MAAMpa,KAAK,GAAGia,2BAA2B,CAACvb,YAAD,EAAe4b,WAAf,EAA4BJ,YAA5B,CAAzC;;EACA,IAAIla,KAAK,KAAKxD,SAAd,EAAyB;IACrB,OAAOA,SAAP;EACH;;EACD,MAAMyD,GAAG,GAAGga,2BAA2B,CAACvb,YAAD,EAAe6b,SAAf,EAA0Bva,KAAK,CAAC9C,KAAhC,CAAvC;;EACA,IAAI+C,GAAG,KAAKzD,SAAZ,EAAuB;IACnB,OAAOA,SAAP;EACH;;EACD,IAAIwD,KAAK,CAAC9C,KAAN,KAAgB+C,GAAG,CAAC/C,KAAxB,EAA+B;IAC3B,OAAOV,SAAP;EACH;;EACD,OAAO,IAAAuD,kCAAA,EAAgBC,KAAhB,EAAuBC,GAAvB,CAAP;AACH,CAlBM;AAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMua,yBAAyB,GAAG,CAACC,iBAAD,EAAoBjgB,OAApB,EAA6BkgB,UAA7B,KAA4C;EACjF,MAAM1K,MAAM,GAAG2K,kBAAkB,CAACngB,OAAO,CAAC8C,GAAT,CAAjC;EACA,MAAMkP,SAAS,GAAGoO,kBAAkB,CAACpgB,OAAO,CAAC0C,KAAT,EAAgBud,iBAAhB,CAApC;;EACA,IAAIjO,SAAS,KAAKhQ,SAAlB,EAA6B;IACzB,OAAOA,SAAP;EACH;;EACD,IAAIke,UAAU,KAAKlgB,OAAO,CAAC0C,KAA3B,EAAkC;IAC9B,OAAQ,GAAEsP,SAAU,IAAGwD,MAAO,GAAExV,OAAO,CAAC2C,GAAR,GAAc,CAAE,EAAhD;EACH,CAFD,MAGK;IACD,OAAQ,GAAE6S,MAAO,GAAExV,OAAO,CAAC2C,GAAR,GAAc,CAAE,EAAnC;EACH;AACJ,CAZM;;;;AAaA,MAAM0d,uBAAuB,GAAG,CAACJ,iBAAD,EAAoBjgB,OAApB,EAA6BkgB,UAA7B,KAA4C;EAC/E,MAAMJ,WAAW,GAAGE,yBAAyB,CAACC,iBAAD,EAAoBjgB,OAAO,CAACwF,KAA5B,EAAmC0a,UAAnC,CAA7C;EACA,MAAMH,SAAS,GAAGC,yBAAyB,CAACC,iBAAD,EAAoBjgB,OAAO,CAACyF,GAA5B,EAAiCzF,OAAO,CAACwF,KAAR,CAAc9C,KAA/C,CAA3C;;EACA,IAAIod,WAAW,KAAK9d,SAAhB,IAA6B+d,SAAS,KAAK/d,SAA/C,EAA0D;IACtD,OAAOA,SAAP;EACH,CAFD,MAGK;IACD,OAAQ,GAAE8d,WAAY,GAAED,2BAAe,GAAEE,SAAU,EAAnD;EACH;AACJ,CATM;AAUP;AACA;AACA;AACA;AACA;AACA;;;;;AACA,SAASjB,kBAAT,CAA4BwB,0BAA5B,EAAwD;EACpD,IAAIA,0BAA0B,CAACvP,MAA3B,KAAsC,CAA1C,EAA6C;IACzC,OAAOuP,0BAA0B,CAACC,WAA3B,GAAyCC,UAAzC,CAAoD,CAApD,IAAyD,EAAhE;EACH,CAFD,MAGK;IACD,OAAOF,0BAA0B,CAACV,KAA3B,CAAiC,EAAjC,EAAqCa,MAArC,CAA4C,CAACtF,aAAD,EAAgBuF,UAAhB,KAA+B;MAC9E,OAAOvF,aAAa,GAAG,EAAhB,IAAsBuF,UAAU,CAACH,WAAX,GAAyBC,UAAzB,CAAoC,CAApC,IAAyC,EAA/D,CAAP;IACH,CAFM,EAEJ,CAFI,IAEC,CAFR;EAGH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASL,kBAAT,CAA4B3K,MAA5B,EAAoC;EACvC,IAAI5G,MAAM,GAAG,EAAb;;EACA,OAAO4G,MAAM,IAAI,CAAjB,EAAoB;IAChB5G,MAAM,GAAG+R,MAAM,CAACC,YAAP,CAAqBpL,MAAM,GAAG,EAAV,GAAgB,EAApC,IAA0C5G,MAAnD;IACA4G,MAAM,GAAG8D,IAAI,CAACuH,KAAL,CAAWrL,MAAM,GAAG,EAApB,IAA0B,CAAnC;EACH;;EACD,OAAO5G,MAAM,CAAC2R,WAAP,EAAP;AACH;;AACM,SAASH,kBAAT,CAA4BxU,OAA5B,EAAqCkV,cAArC,EAAqD;EACxD,IAAI9O,SAAS,GAAG8O,cAAc,CAAClV,OAAD,CAA9B;;EACA,IAAIoG,SAAS,KAAKhQ,SAAlB,EAA6B;IACzB,OAAOA,SAAP;EACH;;EACD,IAAIyc,oBAAoB,CAACsC,IAArB,CAA0B/O,SAA1B,CAAJ,EAA0C;IACtC,OAAOA,SAAP;EACH,CAFD,MAGK;IACDA,SAAS,GAAGA,SAAS,CAACgP,OAAV,CAAkB,IAAlB,EAAwB,IAAxB,CAAZ;IACA,OAAQ,IAAGhP,SAAU,GAArB;EACH;AACJ;;AACD,SAAS+M,kBAAT,CAA4BkC,WAA5B,EAAyC/c,YAAzC,EAAuD;EACnD,IAAIP,EAAJ;;EACA,IAAIud,cAAc,GAAG,CAACvd,EAAE,GAAGsd,WAAW,CAAC,CAAD,CAAjB,MAA0B,IAA1B,IAAkCtd,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuDsd,WAAW,CAAC,CAAD,CAAvF;;EACA,IAAIC,cAAJ,EAAoB;IAChBA,cAAc,GAAGA,cAAc,CAACF,OAAf,CAAuB,KAAvB,EAA8B,GAA9B,CAAjB;IACA,OAAO9c,YAAY,CAACgd,cAAD,CAAnB;EACH,CAHD,MAIK;IACD,OAAO,IAAP;EACH;AACJ,C;;;;;;;;;;;;AC1MD;;AACA;;AACA;;AACA;;AAPA;AACA;AACA;AACA;;AAKA;AACO,IAAIC,iBAAJ;;;AACP,CAAC,UAAUA,iBAAV,EAA6B;EAC1B;EACAA,iBAAiB,CAAC,yBAAD,CAAjB,GAA+C,gBAA/C;EACA;;EACAA,iBAAiB,CAAC,yBAAD,CAAjB,GAA+C,yBAA/C;EACA;;EACAA,iBAAiB,CAAC,6BAAD,CAAjB,GAAmD,6BAAnD;EACA;;EACAA,iBAAiB,CAAC,6BAAD,CAAjB,GAAmD,6BAAnD;AACH,CATD,EASGA,iBAAiB,iCAAKA,iBAAiB,GAAG,EAAzB,CATpB;;AAUO,MAAMnC,WAAN,CAAkB;EACrB/c,WAAW,CAACa,GAAD,EAAMH,GAAN,EAAWT,IAAX,EAAiBQ,KAAjB,EAAwB;IAC/B,KAAKI,GAAL,GAAWA,GAAX;IACA,KAAKH,GAAL,GAAWA,GAAX;IACA,KAAKT,IAAL,GAAYA,IAAZ;IACA,KAAKQ,KAAL,GAAaA,KAAb;EACH;;EACmB,OAAb0e,aAAa,CAACte,GAAD,EAAMH,GAAN,EAAWD,KAAX,EAAkB;IAClC,MAAM2e,aAAa,GAAGve,GAAG,CAACwe,gBAAJ,MAA0B3e,GAAG,CAAC4e,aAAJ,EAA1B,GAChBvC,WAAW,CAACC,QAAZ,CAAqBuC,IAArB,CAA0B,IAA1B,CADgB,GAEhB1e,GAAG,CAACwe,gBAAJ,KACItC,WAAW,CAACE,WAAZ,CAAwBsC,IAAxB,CAA6B,IAA7B,CADJ,GAEI7e,GAAG,CAAC4e,aAAJ,KACIvC,WAAW,CAACG,WAAZ,CAAwBqC,IAAxB,CAA6B,IAA7B,CADJ,CAEE;IAFF,EAGI,CAAC1e,GAAD,EAAMH,GAAN,EAAWD,KAAX,KAAqBsc,WAAW,CAACI,QAAZ,CAAqBzc,GAArB,EAA0BG,GAA1B,EAA+BJ,KAA/B,CAPnC;IAQA,OAAO2e,aAAa,CAACve,GAAG,CAACA,GAAL,EAAUH,GAAG,CAACA,GAAd,EAAmBD,KAAnB,CAApB;EACH;;EACc,OAAR0c,QAAQ,CAACzc,GAAD,EAAMG,GAAN,EAAWJ,KAAX,EAAkB;IAC7B,OAAO,IAAIsc,WAAJ,CAAgBlc,GAAhB,EAAqBH,GAArB,EAA0Bwe,iBAAiB,CAACM,uBAA5C,EAAqE/e,KAArE,CAAP;EACH;;EACc,OAARuc,QAAQ,CAACnc,GAAD,EAAMH,GAAN,EAAWD,KAAX,EAAkB;IAC7B,OAAO,IAAIsc,WAAJ,CAAgBlc,GAAhB,EAAqBH,GAArB,EAA0Bwe,iBAAiB,CAACO,uBAA5C,EAAqEhf,KAArE,CAAP;EACH;;EACiB,OAAXwc,WAAW,CAACpc,GAAD,EAAMH,GAAN,EAAWD,KAAX,EAAkB;IAChC,OAAO,IAAIsc,WAAJ,CAAgBlc,GAAhB,EAAqBH,GAArB,EAA0Bwe,iBAAiB,CAACQ,2BAA5C,EAAyEjf,KAAzE,CAAP;EACH;;EACiB,OAAXyc,WAAW,CAACrc,GAAD,EAAMH,GAAN,EAAWD,KAAX,EAAkB;IAChC,OAAO,IAAIsc,WAAJ,CAAgBlc,GAAhB,EAAqBH,GAArB,EAA0Bwe,iBAAiB,CAACS,2BAA5C,EAAyElf,KAAzE,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI+V,mBAAmB,CAAC/U,WAAD,EAAc;IAC7B,MAAMhB,KAAK,GAAG,IAAAe,4BAAA,EAAuB,IAAvB,EAA6BC,WAA7B,CAAd;;IACA,IAAI,KAAKxB,IAAL,KAAcif,iBAAiB,CAACO,uBAApC,EAA6D;MACzD,OAAO,IAAA1e,uBAAA,EAAkBN,KAAlB,EAAyB,KAAKI,GAA9B,EAAmC,KAAKH,GAAxC,CAAP;IACH,CAFD,MAGK,IAAI,KAAKT,IAAL,KAAcif,iBAAiB,CAACS,2BAApC,EAAiE;MAClE,OAAO,IAAA5e,uBAAA,EAAkBN,KAAlB,EAAyBgB,WAAW,CAACZ,GAAZ,GAAkB,KAAKA,GAAhD,EAAqD,KAAKH,GAA1D,CAAP;IACH,CAFI,MAGA,IAAI,KAAKT,IAAL,KAAcif,iBAAiB,CAACQ,2BAApC,EAAiE;MAClE,OAAO,IAAA3e,uBAAA,EAAkBN,KAAlB,EAAyB,KAAKI,GAA9B,EAAmCY,WAAW,CAACf,GAAZ,GAAkB,KAAKA,GAA1D,CAAP;IACH,CAFI,MAGA;MACD,OAAO,IAAAK,uBAAA,EAAkBN,KAAlB,EAAyBgB,WAAW,CAACZ,GAAZ,GAAkB,KAAKA,GAAhD,EAAqDY,WAAW,CAACf,GAAZ,GAAkB,KAAKA,GAA5E,CAAP;IACH;EACJ;;EACDkf,eAAe,GAAG;IACd,MAAMC,OAAO,GAAG,KAAKC,gBAAL,KAA0BC,4BAAA,CAAcC,QAAxC,GAAmDD,4BAAA,CAAcE,QAAjF;IACA,OAAO,IAAI5C,4BAAJ,CAAkBwC,OAAlB,EAA2B,KAAKhf,GAAhC,EAAqC,KAAKJ,KAA1C,CAAP;EACH;;EACDyf,YAAY,GAAG;IACX,MAAML,OAAO,GAAG,KAAKM,aAAL,KAAuBJ,4BAAA,CAAcC,QAArC,GAAgDD,4BAAA,CAAcE,QAA9E;IACA,OAAO,IAAI1C,sBAAJ,CAAesC,OAAf,EAAwB,KAAKnf,GAA7B,EAAkC,KAAKD,KAAvC,CAAP;EACH;;EACDwZ,qBAAqB,CAACxY,WAAD,EAAc;IAC/B,MAAMhB,KAAK,GAAG,IAAAe,4BAAA,EAAuB,IAAvB,EAA6BC,WAA7B,CAAd;IACA,IAAI8R,MAAM,GAAG,KAAK1S,GAAlB;;IACA,IAAI,KAAKif,gBAAL,EAAJ,EAA6B;MACzBvM,MAAM,IAAI9R,WAAW,CAACZ,GAAtB;IACH;;IACD,OAAO,IAAAD,yBAAA,EAAoBH,KAApB,EAA2B8S,MAA3B,CAAP;EACH;;EACDgH,kBAAkB,CAAC9Y,WAAD,EAAc;IAC5B,MAAMhB,KAAK,GAAG,IAAAe,4BAAA,EAAuB,IAAvB,EAA6BC,WAA7B,CAAd;IACA,IAAIf,GAAG,GAAG,KAAKA,GAAf;;IACA,IAAI,KAAKyf,aAAL,EAAJ,EAA0B;MACtBzf,GAAG,IAAIe,WAAW,CAACf,GAAnB;IACH;;IACD,OAAO,IAAAF,sBAAA,EAAiBC,KAAjB,EAAwBC,GAAxB,CAAP;EACH;;EACD4e,aAAa,GAAG;IACZ,OAAQ,KAAKrf,IAAL,KAAcif,iBAAiB,CAACO,uBAAhC,IAA2D,KAAKxf,IAAL,KAAcif,iBAAiB,CAACS,2BAAnG;EACH;;EACDN,gBAAgB,GAAG;IACf,OAAQ,KAAKpf,IAAL,KAAcif,iBAAiB,CAACO,uBAAhC,IAA2D,KAAKxf,IAAL,KAAcif,iBAAiB,CAACQ,2BAAnG;EACH;;EACDI,gBAAgB,GAAG;IACf,OAAQ,KAAK7f,IAAL,KAAcif,iBAAiB,CAACM,uBAAhC,IAA2D,KAAKvf,IAAL,KAAcif,iBAAiB,CAACS,2BAAnG;EACH;;EACDQ,aAAa,GAAG;IACZ,OAAQ,KAAKlgB,IAAL,KAAcif,iBAAiB,CAACM,uBAAhC,IAA2D,KAAKvf,IAAL,KAAcif,iBAAiB,CAACQ,2BAAnG;EACH;;EACDU,UAAU,GAAG;IACT,OAAQ,KAAKngB,IAAL,KAAcif,iBAAiB,CAACO,uBAAhC,IAA2D,KAAKhf,KAAL,KAAeV,SAAlF;EACH;;EACDsgB,aAAa,CAAChV,YAAD,EAAe;IACxB,OAAO,IAAI0R,WAAJ,CAAgB,KAAKlc,GAArB,EAA0B,KAAKH,GAAL,GAAW2K,YAArC,EAAmD,KAAKpL,IAAxD,EAA8D,KAAKQ,KAAnE,CAAP;EACH;;EACD6f,gBAAgB,CAAC9T,eAAD,EAAkB;IAC9B,OAAO,IAAIuQ,WAAJ,CAAgB,KAAKlc,GAAL,GAAW2L,eAA3B,EAA4C,KAAK9L,GAAjD,EAAsD,KAAKT,IAA3D,EAAiE,KAAKQ,KAAtE,CAAP;EACH;;EACD8f,KAAK,CAACrf,OAAD,EAAUC,OAAV,EAAmBC,QAAnB,EAA6B;IAC9B,MAAMof,QAAQ,GAAG,KAAK/f,KAAL,KAAeV,SAAf,GAA2BA,SAA3B,GAAuCmB,OAAxD;IACA,OAAO,IAAI6b,WAAJ,CAAgB,KAAKlc,GAAL,GAAWM,OAA3B,EAAoC,KAAKT,GAAL,GAAWU,QAA/C,EAAyD,KAAKnB,IAA9D,EAAoEugB,QAApE,CAAP;EACH;;EACDC,SAAS,CAAChgB,KAAD,EAAQ;IACb,OAAO,IAAIsc,WAAJ,CAAgB,KAAKlc,GAArB,EAA0B,KAAKH,GAA/B,EAAoC,KAAKT,IAAzC,EAA+CQ,KAA/C,CAAP;EACH;;EACDigB,SAAS,CAACjf,WAAD,EAAc;IACnB,OAAO,IAAAT,8BAAA,EAAyB,KAAKwV,mBAAL,CAAyB/U,WAAzB,CAAzB,CAAP;EACH;;EACDkf,uBAAuB,CAACxf,OAAD,EAAUC,QAAV,EAAoB;IACvC,MAAMP,GAAG,GAAG,KAAKwe,gBAAL,KAA0B,KAAKxe,GAA/B,GAAqC,KAAKA,GAAL,GAAWM,OAA5D;IACA,MAAMT,GAAG,GAAG,KAAK4e,aAAL,KAAuB,KAAK5e,GAA5B,GAAkC,KAAKA,GAAL,GAAWU,QAAzD;IACA,OAAO,IAAI2b,WAAJ,CAAgBlc,GAAhB,EAAqBH,GAArB,EAA0B,KAAKT,IAA/B,EAAqC,KAAKQ,KAA1C,CAAP;EACH;;EACDmgB,uBAAuB,CAACzf,OAAD,EAAUC,QAAV,EAAoB;IACvC,MAAMP,GAAG,GAAG,KAAKif,gBAAL,KAA0B,KAAKjf,GAA/B,GAAqC,KAAKA,GAAL,GAAWM,OAA5D;IACA,MAAMT,GAAG,GAAG,KAAKyf,aAAL,KAAuB,KAAKzf,GAA5B,GAAkC,KAAKA,GAAL,GAAWU,QAAzD;IACA,OAAO,IAAI2b,WAAJ,CAAgBlc,GAAhB,EAAqBH,GAArB,EAA0B,KAAKT,IAA/B,EAAqC,KAAKQ,KAA1C,CAAP;EACH;;EACDogB,IAAI,CAACJ,SAAD,EAAY;IACZ,MAAMK,SAAS,GAAGL,SAAS,IAAI,KAAKhgB,KAAL,KAAeV,SAA5B,GAAyC,IAAG,KAAKU,KAAM,EAAvD,GAA2D,EAA7E;;IACA,QAAQ,KAAKR,IAAb;MACI,KAAKif,iBAAiB,CAACM,uBAAvB;QAAgD;UAC5C,OAAQ,GAAEsB,SAAU,IAAG,KAAKpgB,GAAI,IAAG,KAAKG,GAAI,EAA5C;QACH;;MACD,KAAKqe,iBAAiB,CAACO,uBAAvB;QAAgD;UAC5C,OAAQ,GAAEqB,SAAU,IAAG,KAAKpgB,GAAI,IAAG,KAAKG,GAAI,EAA5C;QACH;;MACD,KAAKqe,iBAAiB,CAACQ,2BAAvB;QAAoD;UAChD,OAAQ,GAAEoB,SAAU,IAAG,KAAKpgB,GAAI,KAAI,KAAKG,GAAI,EAA7C;QACH;;MACD,KAAKqe,iBAAiB,CAACS,2BAAvB;QAAoD;UAChD,OAAQ,GAAEmB,SAAU,IAAG,KAAKpgB,GAAI,KAAI,KAAKG,GAAI,EAA7C;QACH;IAZL;EAcH;;EACDkgB,OAAO,CAACtf,WAAD,EAAc;IACjB,MAAMuf,aAAa,GAAG,KAAKxK,mBAAL,CAAyB/U,WAAzB,CAAtB;;IACA,IAAI,IAAAT,8BAAA,EAAyBggB,aAAzB,CAAJ,EAA6C;MACzC,OAAOjhB,SAAP;IACH;;IACD,MAAMwT,MAAM,GAAG,IAAA2K,mDAAA,EAAmB8C,aAAa,CAACngB,GAAjC,CAAf;IACA,MAAMogB,SAAS,GAAG,KAAKhhB,IAAL,KAAcif,iBAAiB,CAACO,uBAAhC,IAA2D,KAAKxf,IAAL,KAAcif,iBAAiB,CAACS,2BAA3F,GAAyH,GAAzH,GAA+H,EAAjJ;IACA,MAAMuB,SAAS,GAAG,KAAKjhB,IAAL,KAAcif,iBAAiB,CAACO,uBAAhC,IAA2D,KAAKxf,IAAL,KAAcif,iBAAiB,CAACQ,2BAA3F,GAAyH,GAAzH,GAA+H,EAAjJ;IACA,OAAQ,GAAEwB,SAAU,GAAE3N,MAAO,GAAE0N,SAAU,GAAED,aAAa,CAACtgB,GAAd,GAAoB,CAAE,EAAjE;EACH;;EACD8Y,sBAAsB,CAACC,UAAD,EAAaC,OAAb,EAAsB;IACxC,OAAO,KAAKhZ,GAAL,IAAYgZ,OAAZ,IAAuB,KAAK7Y,GAAL,IAAY4Y,UAA1C;EACH;;AAhJoB;;;;;;;;;;;;;;AChBzB;;AACA;;AALA;AACA;AACA;AACA;AAGO,IAAIsG,aAAJ;;;AACP,CAAC,UAAUA,aAAV,EAAyB;EACtBA,aAAa,CAAC,UAAD,CAAb,GAA4B,UAA5B;EACAA,aAAa,CAAC,UAAD,CAAb,GAA4B,UAA5B;AACH,CAHD,EAGGA,aAAa,6BAAKA,aAAa,GAAG,EAArB,CAHhB;;AAIO,MAAM1C,aAAN,CAAoB;EACvBrd,WAAW,CAACC,IAAD,EAAOY,GAAP,EAAYJ,KAAZ,EAAmB;IAC1B,KAAKR,IAAL,GAAYA,IAAZ;IACA,KAAKY,GAAL,GAAWA,GAAX;IACA,KAAKJ,KAAL,GAAaA,KAAb;EACH;;EACc,OAARuc,QAAQ,CAACzJ,MAAD,EAAS9S,KAAT,EAAgB;IAC3B,OAAO,IAAI4c,aAAJ,CAAkB0C,aAAa,CAACE,QAAhC,EAA0C1M,MAA1C,EAAkD9S,KAAlD,CAAP;EACH;;EACc,OAAR0c,QAAQ,CAAC5J,MAAD,EAAS9S,KAAT,EAAgB;IAC3B,OAAO,IAAI4c,aAAJ,CAAkB0C,aAAa,CAACC,QAAhC,EAA0CzM,MAA1C,EAAkD9S,KAAlD,CAAP;EACH;;EAC8B,OAAxB0gB,wBAAwB,CAAC1f,WAAD,EAAc;IACzC,OAAO,CAAC2f,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACnH,qBAAL,CAA2BxY,WAA3B,EAAwCZ,GAAxC,GAA8CwgB,IAAI,CAACpH,qBAAL,CAA2BxY,WAA3B,EAAwCZ,GAA7G;EACH;;EACDwe,gBAAgB,GAAG;IACf,OAAQ,KAAKpf,IAAL,KAAc8f,aAAa,CAACE,QAApC;EACH;;EACDH,gBAAgB,GAAG;IACf,OAAQ,KAAK7f,IAAL,KAAc8f,aAAa,CAACC,QAApC;EACH;;EACDI,UAAU,GAAG;IACT,OAAQ,KAAKngB,IAAL,KAAc8f,aAAa,CAACE,QAA5B,IAAwC,KAAKxf,KAAL,KAAeV,SAA/D;EACH;;EACDwgB,KAAK,CAACrf,OAAD,EAAUC,OAAV,EAAmBmgB,SAAnB,EAA8B;IAC/B,MAAMd,QAAQ,GAAG,KAAK/f,KAAL,KAAeV,SAAf,GAA2BA,SAA3B,GAAuCmB,OAAxD;IACA,OAAO,IAAImc,aAAJ,CAAkB,KAAKpd,IAAvB,EAA6B,KAAKY,GAAL,GAAWM,OAAxC,EAAiDqf,QAAjD,CAAP;EACH;;EACDF,gBAAgB,CAAC9T,eAAD,EAAkB;IAC9B,OAAO,IAAI6Q,aAAJ,CAAkB,KAAKpd,IAAvB,EAA6B,KAAKY,GAAL,GAAW2L,eAAxC,EAAyD,KAAK/L,KAA9D,CAAP;EACH;;EACDwZ,qBAAqB,CAACxY,WAAD,EAAc;IAC/B,MAAMhB,KAAK,GAAG,IAAAe,4BAAA,EAAuB,IAAvB,EAA6BC,WAA7B,CAAd;IACA,IAAI8R,MAAM,GAAG,KAAK1S,GAAlB;;IACA,IAAI,KAAKif,gBAAL,EAAJ,EAA6B;MACzBvM,MAAM,GAAG9R,WAAW,CAACZ,GAAZ,GAAkB,KAAKA,GAAhC;IACH;;IACD,OAAO,IAAAD,yBAAA,EAAoBH,KAApB,EAA2B8S,MAA3B,CAAP;EACH;;EACDoN,uBAAuB,CAACxf,OAAD,EAAUmgB,SAAV,EAAqB;IACxC,MAAMzgB,GAAG,GAAG,KAAKif,gBAAL,KAA0B,KAAKjf,GAAL,GAAWM,OAArC,GAA+C,KAAKN,GAAhE;IACA,OAAO,IAAIwc,aAAJ,CAAkB,KAAKpd,IAAvB,EAA6BY,GAA7B,EAAkC,KAAKJ,KAAvC,CAAP;EACH;;EACDmgB,uBAAuB,CAACzf,OAAD,EAAUmgB,SAAV,EAAqB;IACxC,MAAMzgB,GAAG,GAAG,KAAKwe,gBAAL,KAA0B,KAAKxe,GAAL,GAAWM,OAArC,GAA+C,KAAKN,GAAhE;IACA,OAAO,IAAIwc,aAAJ,CAAkB,KAAKpd,IAAvB,EAA6BY,GAA7B,EAAkC,KAAKJ,KAAvC,CAAP;EACH;;EACDggB,SAAS,CAAChgB,KAAD,EAAQ;IACb,OAAO,IAAI4c,aAAJ,CAAkB,KAAKpd,IAAvB,EAA6B,KAAKY,GAAlC,EAAuCJ,KAAvC,CAAP;EACH;;EACDigB,SAAS,CAACjf,WAAD,EAAc;IACnB,OAAO,KAAKwY,qBAAL,CAA2BxY,WAA3B,EAAwCZ,GAAxC,GAA8C,CAArD;EACH;;EACDggB,IAAI,CAACJ,SAAD,EAAY;IACZ,MAAMK,SAAS,GAAGL,SAAS,IAAI,KAAKhgB,KAAL,KAAeV,SAA5B,GAAyC,IAAG,KAAKU,KAAM,EAAvD,GAA2D,EAA7E;;IACA,QAAQ,KAAKR,IAAb;MACI,KAAK8f,aAAa,CAACC,QAAnB;QAA6B;UACzB,OAAQ,GAAEc,SAAU,QAAO,KAAKjgB,GAAI,EAApC;QACH;;MACD,KAAKkf,aAAa,CAACE,QAAnB;QAA6B;UACzB,OAAQ,GAAEa,SAAU,QAAO,KAAKjgB,GAAI,EAApC;QACH;IANL;EAQH;;EACDkgB,OAAO,CAACtf,WAAD,EAAc;IACjB,MAAMuf,aAAa,GAAG,KAAK/G,qBAAL,CAA2BxY,WAA3B,CAAtB;;IACA,IAAI,IAAAX,gCAAA,EAA2BkgB,aAA3B,CAAJ,EAA+C;MAC3C,OAAOjhB,SAAP;IACH;;IACD,MAAMwT,MAAM,GAAG,IAAA2K,mDAAA,EAAmB8C,aAAa,CAACngB,GAAjC,CAAf;IACA,MAAM0gB,MAAM,GAAG,KAAKthB,IAAL,KAAc8f,aAAa,CAACE,QAA5B,GAAuC,GAAvC,GAA6C,EAA5D;IACA,OAAQ,GAAEsB,MAAO,GAAEhO,MAAO,EAA1B;EACH;;EACDiG,sBAAsB,CAACC,UAAD,EAAa;IAC/B,OAAO,KAAK5Y,GAAL,IAAY4Y,UAAnB;EACH;;AA3EsB;;;;;;;;;;;;;;ACP3B;;AACA;;AALA;AACA;AACA;AACA;AAGO,MAAM8D,UAAN,CAAiB;EACpBvd,WAAW,CAACC,IAAD,EAAOS,GAAP,EAAYD,KAAZ,EAAmB;IAC1B,KAAKR,IAAL,GAAYA,IAAZ;IACA,KAAKS,GAAL,GAAWA,GAAX;IACA,KAAKD,KAAL,GAAaA,KAAb;EACH;;EACc,OAARuc,QAAQ,CAACtc,GAAD,EAAMD,KAAN,EAAa;IACxB,OAAO,IAAI8c,UAAJ,CAAewC,4BAAA,CAAcE,QAA7B,EAAuCvf,GAAvC,EAA4CD,KAA5C,CAAP;EACH;;EACc,OAAR0c,QAAQ,CAACzc,GAAD,EAAMD,KAAN,EAAa;IACxB,OAAO,IAAI8c,UAAJ,CAAewC,4BAAA,CAAcC,QAA7B,EAAuCtf,GAAvC,EAA4CD,KAA5C,CAAP;EACH;;EAC8B,OAAxB0gB,wBAAwB,CAAC1f,WAAD,EAAc;IACzC,OAAO,CAAC+f,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACjH,kBAAL,CAAwB9Y,WAAxB,EAAqCf,GAArC,GAA2C+gB,IAAI,CAAClH,kBAAL,CAAwB9Y,WAAxB,EAAqCf,GAAvG;EACH;;EACD4e,aAAa,GAAG;IACZ,OAAQ,KAAKrf,IAAL,KAAc8f,4BAAA,CAAcE,QAApC;EACH;;EACDE,aAAa,GAAG;IACZ,OAAQ,KAAKlgB,IAAL,KAAc8f,4BAAA,CAAcC,QAApC;EACH;;EACDI,UAAU,GAAG;IACT,OAAQ,KAAKngB,IAAL,KAAc8f,4BAAA,CAAcE,QAA5B,IAAwC,KAAKxf,KAAL,KAAeV,SAA/D;EACH;;EACDwgB,KAAK,CAACrf,OAAD,EAAUC,OAAV,EAAmBC,QAAnB,EAA6B;IAC9B,MAAMof,QAAQ,GAAG,KAAK/f,KAAL,KAAeV,SAAf,GAA2BA,SAA3B,GAAuCmB,OAAxD;IACA,OAAO,IAAIqc,UAAJ,CAAe,KAAKtd,IAApB,EAA0B,KAAKS,GAAL,GAAWU,QAArC,EAA+Cof,QAA/C,CAAP;EACH;;EACDH,aAAa,CAAC7T,eAAD,EAAkB;IAC3B,OAAO,IAAI+Q,UAAJ,CAAe,KAAKtd,IAApB,EAA0B,KAAKS,GAAL,GAAW8L,eAArC,EAAsD,KAAK/L,KAA3D,CAAP;EACH;;EACD8Z,kBAAkB,CAAC9Y,WAAD,EAAc;IAC5B,MAAMhB,KAAK,GAAG,IAAAe,4BAAA,EAAuB,IAAvB,EAA6BC,WAA7B,CAAd;IACA,IAAIf,GAAG,GAAG,KAAKA,GAAf;;IACA,IAAI,KAAKyf,aAAL,EAAJ,EAA0B;MACtBzf,GAAG,GAAGe,WAAW,CAACf,GAAZ,GAAkB,KAAKA,GAA7B;IACH;;IACD,OAAO,IAAAF,sBAAA,EAAiBC,KAAjB,EAAwBC,GAAxB,CAAP;EACH;;EACDigB,uBAAuB,CAACxf,OAAD,EAAUC,QAAV,EAAoB;IACvC,MAAMV,GAAG,GAAG,KAAKyf,aAAL,KAAuB,KAAKzf,GAAL,GAAWU,QAAlC,GAA6C,KAAKV,GAA9D;IACA,OAAO,IAAI6c,UAAJ,CAAe,KAAKtd,IAApB,EAA0BS,GAA1B,EAA+B,KAAKD,KAApC,CAAP;EACH;;EACDmgB,uBAAuB,CAACzf,OAAD,EAAUC,QAAV,EAAoB;IACvC,MAAMV,GAAG,GAAG,KAAK4e,aAAL,KAAuB,KAAK5e,GAAL,GAAWU,QAAlC,GAA6C,KAAKV,GAA9D;IACA,OAAO,IAAI6c,UAAJ,CAAe,KAAKtd,IAApB,EAA0BS,GAA1B,EAA+B,KAAKD,KAApC,CAAP;EACH;;EACDggB,SAAS,CAAChgB,KAAD,EAAQ;IACb,OAAO,IAAI8c,UAAJ,CAAe,KAAKtd,IAApB,EAA0B,KAAKS,GAA/B,EAAoCD,KAApC,CAAP;EACH;;EACDigB,SAAS,CAACjf,WAAD,EAAc;IACnB,OAAO,KAAK8Y,kBAAL,CAAwB9Y,WAAxB,EAAqCf,GAArC,GAA2C,CAAlD;EACH;;EACDmgB,IAAI,CAACJ,SAAD,EAAY;IACZ,MAAMK,SAAS,GAAGL,SAAS,IAAI,KAAKhgB,KAAL,KAAeV,SAA5B,GAAyC,IAAG,KAAKU,KAAM,EAAvD,GAA2D,EAA7E;;IACA,QAAQ,KAAKR,IAAb;MACI,KAAK8f,4BAAA,CAAcC,QAAnB;QAA6B;UACzB,OAAQ,GAAEc,SAAU,QAAO,KAAKpgB,GAAI,EAApC;QACH;;MACD,KAAKqf,4BAAA,CAAcE,QAAnB;QAA6B;UACzB,OAAQ,GAAEa,SAAU,QAAO,KAAKpgB,GAAI,EAApC;QACH;IANL;EAQH;;EACDqgB,OAAO,CAACtf,WAAD,EAAc;IACjB,MAAMuf,aAAa,GAAG,KAAKzG,kBAAL,CAAwB9Y,WAAxB,CAAtB;;IACA,IAAI,IAAAd,6BAAA,EAAwBqgB,aAAxB,CAAJ,EAA4C;MACxC,OAAOjhB,SAAP;IACH;;IACD,MAAMwhB,MAAM,GAAG,KAAKthB,IAAL,KAAc8f,4BAAA,CAAcE,QAA5B,GAAuC,GAAvC,GAA6C,EAA5D;IACA,OAAQ,GAAEsB,MAAO,GAAEP,aAAa,CAACtgB,GAAd,GAAoB,CAAE,EAAzC;EACH;;EACD8Y,sBAAsB,CAACE,OAAD,EAAU;IAC5B,OAAO,KAAKhZ,GAAL,IAAYgZ,OAAnB;EACH;;AA1EmB;;;;;;;;;;;;;;ACFxB;;AAJA;AACA;AACA;AACA;AAEO,MAAMkE,cAAc,GAAG,GAAvB;;AACA,MAAMvB,iBAAiB,GAAG,GAA1B;;AACA,MAAMqF,qBAAqB,GAAG,KAA9B;;AACA,MAAMC,sBAAsB,GAAG,YAA/B;AACP;AACA;;;AACO,MAAMC,UAAU,GAAG,IAAAC,uBAAA,EAAY;EAClCxe,IAAI,EAAE,YAD4B;EAElCye,OAAO,EAAEC,iBAAA,CAAMC;AAFmB,CAAZ,CAAnB;;AAIA,MAAMC,MAAM,GAAG,IAAAJ,uBAAA,EAAY;EAAExe,IAAI,EAAE,QAAR;EAAkBye,OAAO,EAAE,IAA3B;EAAiCI,UAAU,EAAEN;AAA7C,CAAZ,CAAf;;AACA,MAAMO,OAAO,GAAG,IAAAN,uBAAA,EAAY;EAAExe,IAAI,EAAE,SAAR;EAAmBye,OAAO,EAAE,GAA5B;EAAiCI,UAAU,EAAEN;AAA7C,CAAZ,CAAhB,C,CACP;;;AACO,MAAMQ,gBAAgB,GAAG,IAAAP,uBAAA,EAAY;EACxCxe,IAAI,EAAE,kBADkC;EAExCye,OAAO,EAAEC,iBAAA,CAAMC;AAFyB,CAAZ,CAAzB;;AAIA,MAAMK,OAAO,GAAG,IAAAR,uBAAA,EAAY;EAAExe,IAAI,EAAE,SAAR;EAAmBye,OAAO,EAAE,IAA5B;EAAkCI,UAAU,EAAEE;AAA9C,CAAZ,CAAhB;;AACA,MAAME,KAAK,GAAG,IAAAT,uBAAA,EAAY;EAAExe,IAAI,EAAE,OAAR;EAAiBye,OAAO,EAAE,IAA1B;EAAgCI,UAAU,EAAEE;AAA5C,CAAZ,CAAd;;AACA,MAAMG,OAAO,GAAG,IAAAV,uBAAA,EAAY;EAAExe,IAAI,EAAE,SAAR;EAAmBye,OAAO,EAAE;AAA5B,CAAZ,CAAhB;;AACA,MAAMU,SAAS,GAAG,IAAAX,uBAAA,EAAY;EAAExe,IAAI,EAAE,WAAR;EAAqBye,OAAO,EAAE;AAA9B,CAAZ,CAAlB;;AACA,MAAMW,SAAS,GAAG,IAAAZ,uBAAA,EAAY;EACjCxe,IAAI,EAAE,WAD2B;EAEjCye,OAAO,EAAEC,iBAAA,CAAMC;AAFkB,CAAZ,CAAlB;;AAIA,MAAMU,QAAQ,GAAG,IAAAb,uBAAA,EAAY;EAAExe,IAAI,EAAE,UAAR;EAAoBye,OAAO,EAAE,GAA7B;EAAkCI,UAAU,EAAEO;AAA9C,CAAZ,CAAjB;;AACA,MAAME,UAAU,GAAG,IAAAd,uBAAA,EAAY;EAAExe,IAAI,EAAE,YAAR;EAAsBye,OAAO,EAAE,IAA/B;EAAqCI,UAAU,EAAEO;AAAjD,CAAZ,CAAnB;;AACA,MAAMG,aAAa,GAAG,IAAAf,uBAAA,EAAY;EAAExe,IAAI,EAAE,eAAR;EAAyBye,OAAO,EAAE,GAAlC;EAAuCI,UAAU,EAAEO;AAAnD,CAAZ,CAAtB;;AACA,MAAMI,UAAU,GAAG,IAAAhB,uBAAA,EAAY;EAAExe,IAAI,EAAE,YAAR;EAAsBye,OAAO,EAAE,GAA/B;EAAoCI,UAAU,EAAEO;AAAhD,CAAZ,CAAnB;;AACA,MAAMK,oBAAoB,GAAG,IAAAjB,uBAAA,EAAY;EAAExe,IAAI,EAAE,sBAAR;EAAgCye,OAAO,EAAE,IAAzC;EAA+CI,UAAU,EAAEO;AAA3D,CAAZ,CAA7B;;AACA,MAAMM,iBAAiB,GAAG,IAAAlB,uBAAA,EAAY;EAAExe,IAAI,EAAE,mBAAR;EAA6Bye,OAAO,EAAE,IAAtC;EAA4CI,UAAU,EAAEO;AAAxD,CAAZ,CAA1B;;AACA,MAAMO,aAAa,GAAG,IAAAnB,uBAAA,EAAY;EAAExe,IAAI,EAAE,eAAR;EAAyBye,OAAO,EAAE;AAAlC,CAAZ,CAAtB;AACP;;;AACO,MAAMrF,eAAe,GAAG,4BAAxB;;AACA,MAAMwG,eAAe,GAAG,kBAAxB;;AACA,MAAM7G,eAAe,GAAI,IAAGK,eAAgB,IAAGwG,eAAgB,IAA/D;;AACA,MAAMC,aAAa,GAAG,IAAArB,uBAAA,EAAY;EACrCxe,IAAI,EAAE,eAD+B;EAErCye,OAAO,EAAE,IAAI5G,MAAJ,CAAY,IAAGkB,eAAgB,OAAMC,iBAAkB,eAAcA,iBAAkB,SAAvF;AAF4B,CAAZ,CAAtB;;AAIA,MAAM8G,WAAW,GAAG,IAAAtB,uBAAA,EAAY;EACnCxe,IAAI,EAAE,aAD6B;EAEnCye,OAAO,EAAE,IAAI5G,MAAJ,CAAY,IAAGkB,eAAgB,OAAMC,iBAAkB,aAAYuB,cAAe,IAAGxB,eAAgB,OAAMC,iBAAkB,YAA7H;AAF0B,CAAZ,CAApB;;AAIA,MAAM+G,QAAQ,GAAG,IAAAvB,uBAAA,EAAY;EAChCxe,IAAI,EAAE,UAD0B;EAEhCye,OAAO,EAAE,IAAI5G,MAAJ,CAAY,IAAGkB,eAAgB,OAAMC,iBAAkB,UAASuB,cAAe,IAAGxB,eAAgB,OAAMC,iBAAkB,SAA1H;AAFuB,CAAZ,CAAjB;;AAIA,MAAMgH,cAAc,GAAG,IAAAxB,uBAAA,EAAY;EAAExe,IAAI,EAAE,gBAAR;EAA0Bye,OAAO,EAAG,GAAElE,cAAe;AAArD,CAAZ,CAAvB;AACP;;;AACO,MAAM0F,MAAM,GAAG,IAAAzB,uBAAA,EAAY;EAAExe,IAAI,EAAE,QAAR;EAAkBye,OAAO,EAAE;AAA3B,CAAZ,CAAf;;AACA,MAAMyB,MAAM,GAAG,IAAA1B,uBAAA,EAAY;EAAExe,IAAI,EAAE,QAAR;EAAkBye,OAAO,EAAE;AAA3B,CAAZ,CAAf;AACP;;;AACO,MAAM0B,WAAW,GAAG,IAAA3B,uBAAA,EAAY;EAAExe,IAAI,EAAE,aAAR;EAAuBye,OAAO,EAAE;AAAhC,CAAZ,CAApB;;AACA,MAAM2B,WAAW,GAAG,IAAA5B,uBAAA,EAAY;EAAExe,IAAI,EAAE,aAAR;EAAuBye,OAAO,EAAE;AAAhC,CAAZ,CAApB;AACP;;;AACO,MAAM4B,aAAa,GAAG,IAAA7B,uBAAA,EAAY;EACrCxe,IAAI,EAAE,eAD+B;EAErCye,OAAO,EAAE;AAF4B,CAAZ,CAAtB;AAIP;;;AACO,MAAM6B,eAAe,GAAG,IAAA9B,uBAAA,EAAY;EACvCxe,IAAI,EAAE,iBADiC;EAEvCye,OAAO,EAAE;AAF8B,CAAZ,CAAxB;AAIP;;;AACO,MAAM8B,aAAa,GAAG,IAAA/B,uBAAA,EAAY;EAAExe,IAAI,EAAE,eAAR;EAAyBye,OAAO,EAAE;AAAlC,CAAZ,CAAtB;AACP;;;AACO,MAAM+B,YAAY,GAAG,IAAAhC,uBAAA,EAAY;EAAExe,IAAI,EAAE,cAAR;EAAwBye,OAAO,EAAE;AAAjC,CAAZ,CAArB;;;AACA,MAAMgC,gBAAgB,GAAIze,MAAD,IAAY;EACxC,MAAM0e,0BAA0B,GAAG1e,MAAM,CAACK,kBAAP,CAA0Bse,sBAA1B,CAAiD,QAAjD,CAAnC;EACA,MAAMC,YAAY,GAAG5e,MAAM,CAAC4e,YAA5B;EACA,MAAMC,eAAe,GAAG7e,MAAM,CAACK,kBAAP,CAA0Bye,oBAA1B,EAAxB;EACA,MAAMC,qBAAqB,GAAG/e,MAAM,CAACgf,gBAAP,KAA4B,UAA5B,GAAyC1C,sBAAzC,GAAkED,qBAAhG;EACA,MAAM4C,UAAU,GAAG,IAAAzC,uBAAA,EAAY;IAAExe,IAAI,EAAE,YAAR;IAAsBye,OAAO,EAAEsC;EAA/B,CAAZ,CAAnB;EACA,MAAMG,iBAAiB,GAAG,IAAA1C,uBAAA,EAAY;IAAExe,IAAI,EAAE,aAAR;IAAuBye,OAAO,EAAEzc,MAAM,CAACmf;EAAvC,CAAZ,CAA1B;EACA,MAAMC,iBAAiB,GAAG,IAAA5C,uBAAA,EAAY;IAAExe,IAAI,EAAE,aAAR;IAAuBye,OAAO,EAAEzc,MAAM,CAACqf;EAAvC,CAAZ,CAA1B;EACA;;EACA,IAAIC,YAAJ,EAAkBC,MAAlB;;EACA,IAAIvf,MAAM,CAACwf,oBAAP,KAAgCxf,MAAM,CAACqf,oBAA3C,EAAiE;IAC7DC,YAAY,GAAGF,iBAAf;IACAG,MAAM,GAAG,EAAT;EACH,CAHD,MAIK,IAAIvf,MAAM,CAACwf,oBAAP,KAAgCxf,MAAM,CAACmf,iBAA3C,EAA8D;IAC/DG,YAAY,GAAGJ,iBAAf;IACAK,MAAM,GAAG,EAAT;EACH,CAHI,MAIA;IACDD,YAAY,GAAG,IAAA9C,uBAAA,EAAY;MAAExe,IAAI,EAAE,cAAR;MAAwBye,OAAO,EAAEzc,MAAM,CAACwf;IAAxC,CAAZ,CAAf;IACAD,MAAM,GAAG,CAACD,YAAD,CAAT;EACH;;EACD,MAAMG,aAAa,GAAG,IAAAjD,uBAAA,EAAY;IAC9Bxe,IAAI,EAAE,eADwB;IAE9Bye,OAAO,EAAE,IAAI5G,MAAJ,CAAY,MAAK7V,MAAM,CAAC0f,gBAAiB,iBAAgB1f,MAAM,CAAC0f,gBAAiB,wBAAjF;EAFqB,CAAZ,CAAtB;EAIA,MAAMC,mBAAmB,GAAG,IAAAnD,uBAAA,EAAY;IACpCxe,IAAI,EAAE,qBAD8B;IAEpCye,OAAO,EAAE,IAAI5G,MAAJ,CAAW6I,0BAAX,EAAuC,GAAvC;EAF2B,CAAZ,CAA5B;EAIA;;EACA,MAAMkB,SAAS,GAAG,CACdX,UADc,EAEdrC,MAFc,EAGdE,OAHc,EAIdE,OAJc,EAKdC,KALc,EAMdC,OANc,EAOdG,QAPc,EAQdC,UARc,EASdH,SATc,EAUdM,oBAVc,EAWdC,iBAXc,EAYdH,aAZc,EAadC,UAbc,EAcdS,MAdc,EAedC,MAfc,EAgBdC,WAhBc,EAiBdC,WAjBc,EAkBduB,mBAlBc,EAmBdtB,aAnBc,EAoBdL,cApBc,EAqBd,GAAGuB,MArBW,EAsBdzB,WAtBc,EAuBdC,QAvBc,EAwBd0B,aAxBc,EAyBdlB,aAzBc,EA0BdC,YA1Bc,EA2Bdb,aA3Bc,EA4BdP,SA5Bc,EA6Bdb,UA7Bc,EA8BdQ,gBA9Bc,EA+Bdc,aA/Bc,EAgCdS,eAhCc,EAiCdY,iBAjCc,EAkCdE,iBAlCc,CAAlB;EAoCA,OAAO;IACHE,YADG;IAEHG,aAFG;IAGHE,mBAHG;IAIHT,iBAJG;IAKHE,iBALG;IAMHH,UANG;IAOHW,SAPG;IAQHhB,YARG;IASHC,eATG;IAUHa,gBAAgB,EAAE1f,MAAM,CAAC0f,gBAVtB;IAWHtL,UAAU,EAAEpU,MAAM,CAACoU,UAXhB;IAYHC,OAAO,EAAErU,MAAM,CAACqU;EAZb,CAAP;AAcH,CAjFM;;;;;;;;AC1EP,iD;;;;;;;;;;;;ACIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAbA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACO,MAAMwL,iBAAN,CAAwB;EAC3BllB,WAAW,CAACqF,MAAD,EAAShD,gBAAT,EAA2BJ,YAA3B,EAAyC;IAChD,KAAKoD,MAAL,GAAcA,MAAd;IACA,KAAKhD,gBAAL,GAAwBA,gBAAxB;IACA,KAAKJ,YAAL,GAAoBA,YAApB;IACA,KAAKkjB,cAAL,GAAsB,CAAtB;IACA,KAAKC,WAAL,GAAmB,IAAAtB,6BAAA,EAAiBze,MAAjB,CAAnB;IACA,KAAKggB,KAAL,GAAa,IAAIC,2BAAJ,CAAiB,KAAKF,WAAtB,CAAb;IACA,KAAKG,aAAL,GAAqB,IAAIC,4BAAJ,CAAkB,KAAKJ,WAAvB,EAAoC,KAAKnjB,YAAzC,CAArB;IACA,KAAKwjB,KAAL,GAAa,IAAIC,YAAJ,CAAU,KAAKrjB,gBAAf,CAAb;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIsjB,KAAK,CAACC,IAAD,EAAO/R,cAAP,EAAuB;IACxB,MAAMgS,WAAW,GAAG,KAAKC,eAAL,CAAqBF,IAArB,CAApB;;IACA,IAAIC,WAAW,CAACE,MAAZ,CAAmBjX,MAAnB,GAA4B,CAAhC,EAAmC;MAC/B,MAAMiX,MAAM,GAAGF,WAAW,CAACE,MAAZ,CAAmBljB,GAAnB,CAAwBmjB,CAAD,KAAQ;QAC1C/lB,IAAI,EAAEgmB,qBAAA,CAAiBC,WADmB;QAE1ChmB,OAAO,EAAE8lB,CAAC,CAAC9lB;MAF+B,CAAR,CAAvB,CAAf;MAIA,OAAO;QACH2F,GAAG,EAAE,IAAAsgB,sBAAA,GADF;QAEHJ,MAFG;QAGHhgB,mBAAmB,EAAE,KAHlB;QAIHC,2BAA2B,EAAE,KAJ1B;QAKH/C,YAAY,EAAE;MALX,CAAP;IAOH;;IACD,MAAM4d,IAAI,GAAG,KAAKuF,qBAAL,CAA2BP,WAAW,CAACQ,MAAvC,EAA+CxS,cAA/C,CAAb;IACA,IAAIyS,WAAW,GAAG,KAAKb,KAAL,CAAWc,GAAX,CAAe1F,IAAf,CAAlB;;IACA,IAAIyF,WAAW,KAAKvmB,SAApB,EAA+B;MAC3B,EAAE,KAAKolB,cAAP;IACH,CAFD,MAGK;MACD,MAAMqB,eAAe,GAAG,KAAKC,uBAAL,CAA6BZ,WAAW,CAACQ,MAAzC,CAAxB;MACA,MAAMK,aAAa,GAAG,KAAKnB,aAAL,CAAmBoB,eAAnB,CAAmCH,eAAnC,EAAoD3S,cAApD,CAAtB;;MACA,IAAI6S,aAAa,CAACX,MAAd,CAAqBjX,MAArB,GAA8B,CAAlC,EAAqC;QACjC,OAAOtR,MAAM,CAACoB,MAAP,CAAcpB,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkB8nB,aAAlB,CAAd,EAAgD;UAAE3gB,mBAAmB,EAAE,KAAvB;UAA8BC,2BAA2B,EAAE,KAA3D;UAAkE/C,YAAY,EAAE;QAAhF,CAAhD,CAAP;MACH,CAFD,MAGK;QACDqjB,WAAW,GAAG,KAAKb,KAAL,CAAWmB,GAAX,CAAe/F,IAAf,EAAqB6F,aAAa,CAAC7gB,GAAnC,CAAd;MACH;IACJ;;IACD,MAAM;MAAEA,GAAF;MAAOE,mBAAP;MAA4BC,2BAA5B;MAAyD6gB;IAAzD,IAAkFP,WAAxF;IACA,OAAO;MAAEzgB,GAAF;MAAOkgB,MAAM,EAAE,EAAf;MAAmBhgB,mBAAnB;MAAwCC,2BAAxC;MAAqE/C,YAAY,EAAE4jB;IAAnF,CAAP;EACH;;EACDC,uBAAuB,CAACjhB,GAAD,EAAM;IACzB,MAAMgb,IAAI,GAAG,KAAKkG,kBAAL,CAAwBlhB,GAAxB,CAAb;IACA,OAAO,KAAKmhB,iBAAL,CAAuBnG,IAAvB,CAAP;EACH;;EACDmG,iBAAiB,CAACnG,IAAD,EAAO;IACpB,MAAMyF,WAAW,GAAG,KAAKb,KAAL,CAAWc,GAAX,CAAe1F,IAAf,CAApB;;IACA,IAAIyF,WAAW,KAAKvmB,SAApB,EAA+B;MAC3B,MAAM,IAAIX,KAAJ,CAAU,4CAAV,CAAN;IACH,CAFD,MAGK;MACD,MAAM;QAAEyG,GAAF;QAAOE,mBAAP;QAA4BC,2BAA5B;QAAyD6gB;MAAzD,IAAkFP,WAAxF;MACA,OAAO;QAAEzgB,GAAF;QAAOkgB,MAAM,EAAE,EAAf;QAAmBhgB,mBAAnB;QAAwCC,2BAAxC;QAAqE/C,YAAY,EAAE4jB;MAAnF,CAAP;IACH;EACJ;;EACDT,qBAAqB,CAACC,MAAD,EAAS5kB,WAAT,EAAsB;IACvC,IAAIC,EAAJ;;IACA,IAAImf,IAAI,GAAG,EAAX;IACA,IAAIoG,GAAG,GAAG,CAAV;;IACA,OAAOA,GAAG,GAAGZ,MAAM,CAACvX,MAApB,EAA4B;MACxB,MAAMoY,KAAK,GAAGb,MAAM,CAACY,GAAD,CAApB;;MACA,IAAI,IAAAE,wBAAA,EAAaD,KAAb,EAAoBhE,0BAApB,CAAJ,EAAwC;QACpC,MAAMvP,WAAW,GAAG,IAAA+I,sDAAA,EAAsB,KAAKza,YAA3B,EAAyCilB,KAAK,CAACE,KAA/C,EAAsD3lB,WAAtD,CAApB;;QACA,IAAIkS,WAAW,KAAK5T,SAApB,EAA+B;UAC3B8gB,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAYH,KAAK,CAACE,KAAlB,CAAP;QACH,CAFD,MAGK;UACDvG,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAY1T,WAAW,CAACkN,IAAZ,CAAiB,IAAjB,CAAZ,CAAP;QACH;MACJ,CARD,MASK,IAAI,IAAAsG,wBAAA,EAAaD,KAAb,EAAoBxD,0BAApB,CAAJ,EAAwC;QACzC,MAAM4D,aAAa,GAAGJ,KAAK,CAACE,KAAN,CAAY9I,WAAZ,GAA0BiJ,KAA1B,CAAgC,CAAhC,EAAmC,CAAC,CAApC,CAAtB;QACA,MAAMC,sBAAsB,GAAG,CAAC9lB,EAAE,GAAG,KAAK0jB,WAAL,CAAiBlB,eAAjB,CAAiCoD,aAAjC,CAAN,MAA2D,IAA3D,IAAmE5lB,EAAE,KAAK,KAAK,CAA/E,GAAmFA,EAAnF,GAAwF4lB,aAAvH;QACAzG,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAYG,sBAAZ,EAAoC,GAApC,CAAP;MACH,CAJI,MAKA,IAAI,IAAAL,wBAAA,EAAaD,KAAb,EAAoB/D,wBAApB,CAAJ,EAAsC;QACvC,MAAM,CAAC5f,KAAD,EAAQC,GAAR,IAAe0jB,KAAK,CAACE,KAAN,CAAYzJ,KAAZ,CAAkB,GAAlB,CAArB;QACA,MAAM8J,YAAY,GAAG,IAAArK,wDAAA,EAAwB,KAAKnb,YAA7B,EAA2CsB,KAA3C,EAAkD9B,WAAlD,CAArB;QACA,MAAMimB,UAAU,GAAG,IAAAtK,wDAAA,EAAwB,KAAKnb,YAA7B,EAA2CuB,GAA3C,EAAgD/B,WAAhD,CAAnB;;QACA,IAAIgmB,YAAY,KAAK1nB,SAAjB,IAA8B2nB,UAAU,KAAK3nB,SAAjD,EAA4D;UACxD8gB,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAY,MAAZ,CAAP;QACH,CAFD,MAGK;UACDxG,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAYI,YAAY,CAAC5G,IAAb,CAAkB,IAAlB,CAAZ,EAAqC,GAArC,EAA0C6G,UAAU,CAAC7G,IAAX,CAAgB,IAAhB,CAA1C,CAAP;QACH;MACJ,CAVI,MAWA,IAAI,IAAAsG,wBAAA,EAAaD,KAAb,EAAoB9D,qBAApB,CAAJ,EAAmC;QACpC,MAAM,CAAC7f,KAAD,EAAQC,GAAR,IAAe0jB,KAAK,CAACE,KAAN,CAAYzJ,KAAZ,CAAkB,GAAlB,CAArB;QACA,MAAM8J,YAAY,GAAG,IAAAnK,qDAAA,EAAqB,KAAKrb,YAA1B,EAAwCsB,KAAxC,EAA+C9B,WAA/C,CAArB;QACA,MAAMimB,UAAU,GAAG,IAAApK,qDAAA,EAAqB,KAAKrb,YAA1B,EAAwCuB,GAAxC,EAA6C/B,WAA7C,CAAnB;;QACA,IAAIgmB,YAAY,KAAK1nB,SAAjB,IAA8B2nB,UAAU,KAAK3nB,SAAjD,EAA4D;UACxD8gB,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAY,MAAZ,CAAP;QACH,CAFD,MAGK;UACDxG,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAYI,YAAY,CAAC5G,IAAb,CAAkB,IAAlB,CAAZ,EAAqC,GAArC,EAA0C6G,UAAU,CAAC7G,IAAX,CAAgB,IAAhB,CAA1C,CAAP;QACH;MACJ,CAVI,MAWA;QACDA,IAAI,GAAGA,IAAI,CAACwG,MAAL,CAAYH,KAAK,CAACE,KAAlB,CAAP;MACH;;MACDH,GAAG;IACN;;IACD,OAAOpG,IAAP;EACH;;EACD8G,cAAc,CAAC9hB,GAAD,EAAM;IAChB,MAAMgb,IAAI,GAAG,KAAKkG,kBAAL,CAAwBlhB,GAAxB,CAAb;IACA,OAAO,KAAK4f,KAAL,CAAWmC,kBAAX,CAA8B/G,IAA9B,EAAoChb,GAApC,CAAP;EACH;;EACDkhB,kBAAkB,CAAClhB,GAAD,EAAM;IACpB,OAAO,MAAM,KAAKgiB,oBAAL,CAA0BhiB,GAA1B,CAAb;EACH;;EACDgiB,oBAAoB,CAAChiB,GAAD,EAAM;IACtB,QAAQA,GAAG,CAAC5F,IAAZ;MACI,KAAK4V,aAAA,CAAYpX,KAAjB;QAAwB;UACpB,OAAOoH,GAAG,CAACiiB,iBAAJ,IAAyB,EAAhC;QACH;;MACD,KAAKjS,aAAA,CAAY7W,MAAjB;QAAyB;UACrB,OAAO,IAAA+oB,wBAAA,EAAoB,IAAAC,sBAAA,EAAaniB,GAAG,CAACoB,KAAjB,EAAwB,KAAK5B,MAAL,CAAY0f,gBAApC,CAApB,EAA2Elf,GAAG,CAACiiB,iBAA/E,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAY5W,MAAjB;QAAyB;UACrB,OAAO,IAAA8oB,wBAAA,EAAoB,MAAMliB,GAAG,CAACoB,KAAV,GAAkB,GAAtC,EAA2CpB,GAAG,CAACiiB,iBAA/C,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYoS,gBAAjB;QAAmC;UAC/B,OAAO,IAAAF,wBAAA,EAAoBliB,GAAG,CAAC6D,cAAxB,EAAwC7D,GAAG,CAACiiB,iBAA5C,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYqS,aAAjB;QAAgC;UAC5B,MAAMC,IAAI,GAAGtiB,GAAG,CAACsiB,IAAJ,CAAStlB,GAAT,CAAc9D,GAAD,IAAS,KAAK8oB,oBAAL,CAA0B9oB,GAA1B,CAAtB,EAAsDqpB,IAAtD,CAA2D,KAAK/iB,MAAL,CAAYwf,oBAAvE,CAAb;UACA,MAAMwD,SAAS,GAAGxiB,GAAG,CAACyhB,aAAJ,GAAoB,GAApB,GAA0Ba,IAA1B,GAAiC,IAAAJ,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACyiB,kBAA7B,CAAnD;UACA,OAAO,IAAAP,wBAAA,EAAoBM,SAApB,EAA+BxiB,GAAG,CAACiiB,iBAAnC,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAY0S,cAAjB;QAAiC;UAC7B,OAAO,IAAAR,wBAAA,EAAoBliB,GAAG,CAAC2iB,SAAJ,CAAc3H,IAAd,CAAmB,IAAnB,CAApB,EAA8Chb,GAAG,CAACiiB,iBAAlD,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYG,YAAjB;MACA,KAAKH,aAAA,CAAY4S,SAAjB;MACA,KAAK5S,aAAA,CAAYC,UAAjB;QAA6B;UACzB,MAAMvS,KAAK,GAAGsC,GAAG,CAACtC,KAAJ,CAAUsd,IAAV,CAAehb,GAAG,CAAC6iB,kBAAJ,KAA2BC,4BAAA,CAAwB3I,QAAlE,CAAd;UACA,MAAMxc,GAAG,GAAGqC,GAAG,CAACrC,GAAJ,CAAQqd,IAAR,CAAahb,GAAG,CAAC6iB,kBAAJ,KAA2BC,4BAAA,CAAwBC,aAAhE,CAAZ;UACA,OAAO,IAAAb,wBAAA,EAAoBxkB,KAAK,GAAG,GAAR,GAAcC,GAAlC,EAAuCqC,GAAG,CAACiiB,iBAA3C,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYgT,cAAjB;QAAiC;UAC7B,OAAO,IAAAd,wBAAA,EAAoB,MAAM,KAAKF,oBAAL,CAA0BhiB,GAAG,CAACoB,KAA9B,CAA1B,EAAgEpB,GAAG,CAACiiB,iBAApE,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYiT,aAAjB;QAAgC;UAC5B,OAAO,IAAAf,wBAAA,EAAoB,MAAM,KAAKF,oBAAL,CAA0BhiB,GAAG,CAACoB,KAA9B,CAA1B,EAAgEpB,GAAG,CAACiiB,iBAApE,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYkT,UAAjB;QAA6B;UACzB,OAAO,KAAKlB,oBAAL,CAA0BhiB,GAAG,CAACoB,KAA9B,IAAuC,IAAA8gB,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACiiB,iBAA7B,CAA9C;QACH;;MACD,KAAKjS,aAAA,CAAY1W,KAAjB;QAAwB;UACpB,MAAMioB,KAAK,GAAG,KAAK/hB,MAAL,CAAYK,kBAAZ,CAA+BsjB,mBAA/B,CAAmDnjB,GAAG,CAACojB,KAAJ,GAAYpjB,GAAG,CAACojB,KAAJ,CAAUhpB,IAAtB,GAA6BrF,eAAA,CAAUuE,KAA1F,CAAd;UACA,OAAO,IAAA4oB,wBAAA,EAAoBX,KAApB,EAA2BvhB,GAAG,CAACiiB,iBAA/B,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYqT,oBAAjB;QAAuC;UACnC,OAAO,IAAAnB,wBAAA,EAAoBliB,GAAG,CAACsjB,QAAxB,EAAkCtjB,GAAG,CAACiiB,iBAAtC,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAY1X,KAAjB;QAAwB;UACpB,MAAMgqB,IAAI,GAAGtiB,GAAG,CAACsiB,IAAJ,CAAStlB,GAAT,CAAanC,GAAG,IAAIA,GAAG,CAACmC,GAAJ,CAAQoY,GAAG,IAAI,KAAK4M,oBAAL,CAA0B5M,GAA1B,CAAf,EAA+CmN,IAA/C,CAAoD,GAApD,CAApB,EAA8EA,IAA9E,CAAmF,GAAnF,CAAb;UACA,OAAO,IAAAL,wBAAA,EAAoB,MAAMI,IAAN,GAAa,IAAAJ,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACyiB,kBAA7B,CAAjC,EAAmFziB,GAAG,CAACiiB,iBAAvF,CAAP;QACH;;MACD,KAAKjS,aAAA,CAAYuT,WAAjB;QAA8B;UAC1B,MAAMC,UAAU,GAAG,KAAKxB,oBAAL,CAA0BhiB,GAAG,CAACwjB,UAA9B,CAAnB;UACA,MAAMhB,SAAS,GAAG,MAAMgB,UAAN,GAAmB,IAAAtB,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACyiB,kBAA7B,CAArC;UACA,OAAO,IAAAP,wBAAA,EAAoBM,SAApB,EAA+BxiB,GAAG,CAACiiB,iBAAnC,CAAP;QACH;;MACD;QAAS;UACL,OAAO,KAAKD,oBAAL,CAA0BhiB,GAAG,CAACjE,IAA9B,IAAsC,IAAAmmB,wBAAA,EAAoBuB,kCAAA,CAAiBzjB,GAAG,CAAC5F,IAArB,CAApB,EAAgD4F,GAAG,CAACiiB,iBAApD,CAAtC,GAA+G,KAAKD,oBAAL,CAA0BhiB,GAAG,CAAChE,KAA9B,CAAtH;QACH;IAvDL;EAyDH;;EACD4kB,uBAAuB,CAACJ,MAAD,EAAS;IAC5B,MAAMG,eAAe,GAAG,EAAxB;IACA,MAAM+C,KAAK,GAAGlD,MAAM,CAAC,CAAD,CAApB;;IACA,IAAI,CAAC,IAAAc,wBAAA,EAAaoC,KAAb,EAAoB,KAAKnE,WAAL,CAAiBd,UAArC,CAAL,EAAuD;MACnDkC,eAAe,CAACjiB,IAAhB,CAAqBglB,KAArB;IACH;;IACD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnD,MAAM,CAACvX,MAA3B,EAAmC,EAAE0a,CAArC,EAAwC;MACpC,MAAMC,OAAO,GAAGpD,MAAM,CAACmD,CAAD,CAAtB;;MACA,IAAI,IAAArC,wBAAA,EAAasC,OAAb,EAAsB,KAAKrE,WAAL,CAAiBd,UAAvC,CAAJ,EAAwD;QACpD;MACH;;MACD,MAAMoF,QAAQ,GAAGrD,MAAM,CAACmD,CAAC,GAAG,CAAL,CAAvB;;MACA,IAAI,IAAArC,wBAAA,EAAauC,QAAb,EAAuB,KAAKtE,WAAL,CAAiBd,UAAxC,CAAJ,EAAyD;QACrDmF,OAAO,CAAC3B,iBAAR,GAA4B4B,QAA5B;MACH;;MACDlD,eAAe,CAACjiB,IAAhB,CAAqBklB,OAArB;IACH;;IACD,OAAOjD,eAAP;EACH;;EACDV,eAAe,CAACF,IAAD,EAAO;IAClB,OAAO,KAAKP,KAAL,CAAWS,eAAX,CAA2BF,IAA3B,CAAP;EACH;;AAxM0B;;;;;;;;;;;;;;;;ACb/B;;AAJA;AACA;AACA;AACA;AAEO,MAAMxlB,YAAY,GAAG,CAACH,IAAD,EAAOC,OAAP,MAAoB;EAC5CD,IAD4C;EACtCC;AADsC,CAApB,CAArB;;;AAGA,IAAI+lB,gBAAJ;;;AACP,CAAC,UAAUA,gBAAV,EAA4B;EACzBA,gBAAgB,CAAC,aAAD,CAAhB,GAAkC,aAAlC;EACAA,gBAAgB,CAAC,aAAD,CAAhB,GAAkC,cAAlC;EACAA,gBAAgB,CAAC,mBAAD,CAAhB,GAAwC,mBAAxC;EACAA,gBAAgB,CAAC,6BAAD,CAAhB,GAAkD,6BAAlD;EACAA,gBAAgB,CAAC,uBAAD,CAAhB,GAA4C,uBAA5C;AACH,CAND,EAMGA,gBAAgB,gCAAKA,gBAAgB,GAAG,EAAxB,CANnB;;AAOO,IAAIpQ,WAAJ;;;AACP,CAAC,UAAUA,WAAV,EAAuB;EACpBA,WAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;EACAA,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;EACAA,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;EACAA,WAAW,CAAC,gBAAD,CAAX,GAAgC,gBAAhC;EACAA,WAAW,CAAC,eAAD,CAAX,GAA+B,eAA/B;EACAA,WAAW,CAAC,YAAD,CAAX,GAA4B,YAA5B;EACAA,WAAW,CAAC,gBAAD,CAAX,GAAgC,gBAAhC;EACAA,WAAW,CAAC,WAAD,CAAX,GAA2B,WAA3B;EACAA,WAAW,CAAC,cAAD,CAAX,GAA8B,cAA9B;EACAA,WAAW,CAAC,iBAAD,CAAX,GAAiC,iBAAjC;EACAA,WAAW,CAAC,cAAD,CAAX,GAA8B,cAA9B;EACAA,WAAW,CAAC,0BAAD,CAAX,GAA0C,0BAA1C;EACAA,WAAW,CAAC,uBAAD,CAAX,GAAuC,uBAAvC;EACAA,WAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;EACAA,WAAW,CAAC,UAAD,CAAX,GAA0B,UAA1B;EACAA,WAAW,CAAC,UAAD,CAAX,GAA0B,UAA1B;EACAA,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;EACAA,WAAW,CAAC,UAAD,CAAX,GAA0B,UAA1B;EACAA,WAAW,CAAC,eAAD,CAAX,GAA+B,eAA/B;EACAA,WAAW,CAAC,kBAAD,CAAX,GAAkC,kBAAlC;EACAA,WAAW,CAAC,aAAD,CAAX,GAA6B,aAA7B;EACAA,WAAW,CAAC,gBAAD,CAAX,GAAgC,gBAAhC;EACAA,WAAW,CAAC,YAAD,CAAX,GAA4B,YAA5B;EACAA,WAAW,CAAC,cAAD,CAAX,GAA8B,cAA9B;EACAA,WAAW,CAAC,WAAD,CAAX,GAA2B,WAA3B;EACAA,WAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;EACAA,WAAW,CAAC,sBAAD,CAAX,GAAsC,sBAAtC;EACAA,WAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;AACH,CA7BD,EA6BGA,WAAW,2BAAKA,WAAW,GAAG,EAAnB,CA7Bd;;AA8BO,IAAI8S,uBAAJ;;;AACP,CAAC,UAAUA,uBAAV,EAAmC;EAChCA,uBAAuB,CAACA,uBAAuB,CAAC,UAAD,CAAvB,GAAsC,CAAvC,CAAvB,GAAmE,UAAnE;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,gBAAD,CAAvB,GAA4C,CAA7C,CAAvB,GAAyE,gBAAzE;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,eAAD,CAAvB,GAA2C,CAA5C,CAAvB,GAAwE,eAAxE;AACH,CAJD,EAIGA,uBAAuB,uCAAKA,uBAAuB,GAAG,EAA/B,CAJ1B;;AAKO,MAAMgB,gBAAgB,GAAI7B,iBAAD,KAAwB;EACpD7nB,IAAI,EAAE4V,WAAW,CAACpX,KADkC;EAEpDqpB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAFvD,CAAxB,CAAzB;;;;AAIA,MAAMwC,cAAc,GAAG,CAAC3iB,KAAD,EAAQ6gB,iBAAR,MAA+B;EACzD7nB,IAAI,EAAE4V,WAAW,CAAC7W,MADuC;EAEzDiI,KAAK,EAAEA,KAFkD;EAGzD6gB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAHlD,CAA/B,CAAvB;;;;AAKA,MAAMyC,cAAc,GAAI3C,KAAD,IAAW;EACrC,IAAIxlB,EAAJ;;EACA,OAAQ;IACJzB,IAAI,EAAE4V,WAAW,CAAC5W,MADd;IAEJgI,KAAK,EAAEigB,KAAK,CAACE,KAAN,CAAYG,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAFH;IAGJO,iBAAiB,EAAE,CAACpmB,EAAE,GAAGwlB,KAAK,CAACY,iBAAZ,MAAmC,IAAnC,IAA2CpmB,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAAC0lB;EAHtF,CAAR;AAKH,CAPM;;;;AAQA,MAAM0C,qBAAqB,GAAG,CAACtB,SAAD,EAAYV,iBAAZ,MAAmC;EACpE7nB,IAAI,EAAE4V,WAAW,CAAC0S,cADkD;EAEpEC,SAFoE;EAGpEV,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAHvC,CAAnC,CAA9B;;;;AAKA,MAAM2C,iBAAiB,GAAG,CAACxmB,KAAD,EAAQC,GAAR,EAAaklB,kBAAb,EAAiCZ,iBAAjC,KAAuD;EACpFkC,sBAAsB,CAACzmB,KAAD,EAAQC,GAAR,EAAaklB,kBAAb,CAAtB;EACA,OAAO;IACHzoB,IAAI,EAAE4V,WAAW,CAACC,UADf;IAEHvS,KAFG;IAGHC,GAHG;IAIHklB,kBAJG;IAKHZ;EALG,CAAP;AAOH,CATM;;;;AAUA,MAAMmC,mBAAmB,GAAG,CAAC1mB,KAAD,EAAQC,GAAR,EAAaklB,kBAAb,EAAiCZ,iBAAjC,KAAuD;EACtFkC,sBAAsB,CAACzmB,KAAD,EAAQC,GAAR,EAAaklB,kBAAb,CAAtB;EACA,OAAO;IACHzoB,IAAI,EAAE4V,WAAW,CAACG,YADf;IAEHzS,KAFG;IAGHC,GAHG;IAIHklB,kBAJG;IAKHZ,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;EALxG,CAAP;AAOH,CATM;;;;AAUA,MAAM8C,gBAAgB,GAAG,CAAC3mB,KAAD,EAAQC,GAAR,EAAaklB,kBAAb,EAAiCZ,iBAAjC,KAAuD;EACnFkC,sBAAsB,CAACzmB,KAAD,EAAQC,GAAR,EAAaklB,kBAAb,CAAtB;EACA,OAAO;IACHzoB,IAAI,EAAE4V,WAAW,CAAC4S,SADf;IAEHllB,KAFG;IAGHC,GAHG;IAIHklB,kBAJG;IAKHZ,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;EALxG,CAAP;AAOH,CATM;;;;AAUA,MAAM+C,qBAAqB,GAAG,CAACvoB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EACtE7nB,IAAI,EAAE4V,WAAW,CAACuU,cADoD;EAEtExoB,IAFsE;EAGtEC,KAHsE;EAItEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJrC,CAArC,CAA9B;;;;AAMA,MAAMiD,gBAAgB,GAAG,CAACzoB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EACjE7nB,IAAI,EAAE4V,WAAW,CAACyU,SAD+C;EAEjE1oB,IAFiE;EAGjEC,KAHiE;EAIjEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ1C,CAArC,CAAzB;;;;AAMA,MAAMmD,kBAAkB,GAAG,CAAC3oB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EACnE7nB,IAAI,EAAE4V,WAAW,CAAC2U,YADiD;EAEnE5oB,IAFmE;EAGnEC,KAHmE;EAInEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJxC,CAArC,CAA3B;;;;AAMA,MAAMqD,qBAAqB,GAAG,CAAC7oB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EACtE7nB,IAAI,EAAE4V,WAAW,CAAC6U,eADoD;EAEtE9oB,IAFsE;EAGtEC,KAHsE;EAItEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJrC,CAArC,CAA9B;;;;AAMA,MAAMuD,kBAAkB,GAAG,CAAC/oB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EACnE7nB,IAAI,EAAE4V,WAAW,CAAC+U,YADiD;EAEnEhpB,IAFmE;EAGnEC,KAHmE;EAInEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJxC,CAArC,CAA3B;;;;AAMA,MAAMyD,4BAA4B,GAAG,CAACjpB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EAC7E7nB,IAAI,EAAE4V,WAAW,CAACiV,wBAD2D;EAE7ElpB,IAF6E;EAG7EC,KAH6E;EAI7EimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ9B,CAArC,CAArC;;;;AAMA,MAAM2D,yBAAyB,GAAG,CAACnpB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EAC1E7nB,IAAI,EAAE4V,WAAW,CAACmV,qBADwD;EAE1EppB,IAF0E;EAG1EC,KAH0E;EAI1EimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJjC,CAArC,CAAlC;;;;AAMA,MAAM6D,cAAc,GAAG,CAACrpB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EAC/D7nB,IAAI,EAAE4V,WAAW,CAACqV,OAD6C;EAE/DtpB,IAF+D;EAG/DC,KAH+D;EAI/DimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ5C,CAArC,CAAvB;;;;AAMA,MAAM+D,eAAe,GAAG,CAACvpB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EAChE7nB,IAAI,EAAE4V,WAAW,CAACuV,QAD8C;EAEhExpB,IAFgE;EAGhEC,KAHgE;EAIhEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ3C,CAArC,CAAxB;;;;AAMA,MAAMiE,eAAe,GAAG,CAACzpB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EAChE7nB,IAAI,EAAE4V,WAAW,CAACyV,QAD8C;EAEhE1pB,IAFgE;EAGhEC,KAHgE;EAIhEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ3C,CAArC,CAAxB;;;;AAMA,MAAMmE,aAAa,GAAG,CAAC3pB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EAC9D7nB,IAAI,EAAE4V,WAAW,CAAC2V,MAD4C;EAE9D5pB,IAF8D;EAG9DC,KAH8D;EAI9DimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ7C,CAArC,CAAtB;;;;AAMA,MAAMqE,eAAe,GAAG,CAAC7pB,IAAD,EAAOC,KAAP,EAAcimB,iBAAd,MAAqC;EAChE7nB,IAAI,EAAE4V,WAAW,CAAC6V,QAD8C;EAEhE9pB,IAFgE;EAGhEC,KAHgE;EAIhEimB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ3C,CAArC,CAAxB;;;;AAMA,MAAMuE,oBAAoB,GAAG,CAAC1kB,KAAD,EAAQ6gB,iBAAR,MAA+B;EAC/D7nB,IAAI,EAAE4V,WAAW,CAACgT,cAD6C;EAE/D5hB,KAF+D;EAG/D6gB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAH5C,CAA/B,CAA7B;;;;AAKA,MAAMwE,mBAAmB,GAAG,CAAC3kB,KAAD,EAAQ6gB,iBAAR,MAA+B;EAC9D7nB,IAAI,EAAE4V,WAAW,CAACiT,aAD4C;EAE9D7hB,KAF8D;EAG9D6gB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAH7C,CAA/B,CAA5B;;;;AAKA,MAAMyE,iBAAiB,GAAG,CAAC5kB,KAAD,EAAQ6gB,iBAAR,MAA+B;EAC5D7nB,IAAI,EAAE4V,WAAW,CAACkT,UAD0C;EAE5D9hB,KAF4D;EAG5D6gB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAH/C,CAA/B,CAA1B;;;;AAKA,MAAM0E,iBAAiB,GAAG,CAACxE,aAAD,EAAgBa,IAAhB,EAAsBL,iBAAtB,EAAyCQ,kBAAzC,MAAiE;EAC9FroB,IAAI,EAAE4V,WAAW,CAACqS,aAD4E;EAE9FZ,aAF8F;EAG9Fa,IAH8F;EAI9FL,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV,KAJb;EAK9FkB,kBAAkB,EAAEA,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAAClB;AALjB,CAAjE,CAA1B;;;;AAOA,MAAM2E,aAAa,GAAG,CAAC5D,IAAD,EAAOL,iBAAP,EAA0BQ,kBAA1B,MAAkD;EAC3EroB,IAAI,EAAE4V,WAAW,CAAC1X,KADyD;EAE3EgqB,IAF2E;EAG3EL,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV,KAHhC;EAI3EkB,kBAAkB,EAAEA,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAAClB;AAJpC,CAAlD,CAAtB;;;;AAMA,MAAM4E,uBAAuB,GAAG,CAACtiB,cAAD,EAAiBoe,iBAAjB,MAAwC;EAC3E7nB,IAAI,EAAE4V,WAAW,CAACoS,gBADyD;EAE3Eve,cAF2E;EAG3Eoe,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAHhC,CAAxC,CAAhC;;;;AAKA,MAAM6E,mBAAmB,GAAG,CAAC5C,UAAD,EAAavB,iBAAb,EAAgCQ,kBAAhC,MAAwD;EACvFroB,IAAI,EAAE4V,WAAW,CAACuT,WADqE;EAEvFC,UAFuF;EAGvFvB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV,KAHpB;EAIvFkB,kBAAkB,EAAEA,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAAClB;AAJxB,CAAxD,CAA5B;;;;AAMA,MAAM8E,iBAAiB,GAAG,CAACjD,KAAD,EAAQnB,iBAAR,MAA+B;EAC5D7nB,IAAI,EAAE4V,WAAW,CAAC1W,KAD0C;EAE5D8pB,KAF4D;EAG5DnB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAH/C,CAA/B,CAA1B;;;;AAKA,MAAM+E,yBAAyB,GAAG,CAAChD,QAAD,EAAWF,KAAX,EAAkBnB,iBAAlB,MAAyC;EAC9E7nB,IAAI,EAAE4V,WAAW,CAACqT,oBAD4D;EAE9ED,KAF8E;EAG9EE,QAH8E;EAI9ErB,iBAAiB,EAAEA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACV;AAJ7B,CAAzC,CAAlC;;;;AAMA,MAAMjB,oBAAoB,GAAG,OAAO;EACvClmB,IAAI,EAAE4V,WAAW,CAAC1W,KADqB;EAEvC8pB,KAAK,EAAEzpB,eAAA,CAAUY,YAAV;AAFgC,CAAP,CAA7B;;;;AAIP,SAAS4pB,sBAAT,CAAgCzmB,KAAhC,EAAuCC,GAAvC,EAA4CklB,kBAA5C,EAAgE;EAC5D,IAAKnlB,KAAK,CAAC9C,KAAN,KAAgBV,SAAhB,IAA6ByD,GAAG,CAAC/C,KAAJ,KAAcV,SAA5C,IAA2DwD,KAAK,CAAC9C,KAAN,KAAgBV,SAAhB,IAA6ByD,GAAG,CAAC/C,KAAJ,KAAcV,SAA1G,EAAsH;IAClH,MAAM,IAAIX,KAAJ,CAAU,6CAAV,CAAN;EACH;;EACD,IAAKmE,KAAK,CAAC9C,KAAN,KAAgBV,SAAhB,IAA6B2oB,kBAAkB,KAAKC,uBAAuB,CAAC3I,QAA7E,IACIzc,KAAK,CAAC9C,KAAN,KAAgBV,SAAhB,IAA6B2oB,kBAAkB,KAAKC,uBAAuB,CAAC3I,QADpF,EAC+F;IAC3F,MAAM,IAAI5gB,KAAJ,CAAU,sDAAV,CAAN;EACH;AACJ;;AACM,SAAS2oB,mBAAT,CAA6BX,KAA7B,EAAoCU,iBAApC,EAAuD;EAC1D,OAAO,CAACA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6DA,iBAA7D,GAAiF,EAAlF,IAAwFV,KAA/F;AACH,C;;;;;;;;;;;;AC9OD;;AAJA;AACA;AACA;AACA;AAEO,MAAMkC,gBAAgB,GAAG;EAC5B,CAACzT,gBAAA,CAAYqV,OAAb,GAAuB,GADK;EAE5B,CAACrV,gBAAA,CAAYuV,QAAb,GAAwB,GAFI;EAG5B,CAACvV,gBAAA,CAAYyV,QAAb,GAAwB,GAHI;EAI5B,CAACzV,gBAAA,CAAY2V,MAAb,GAAsB,GAJM;EAK5B,CAAC3V,gBAAA,CAAYuU,cAAb,GAA8B,GALF;EAM5B,CAACvU,gBAAA,CAAY6V,QAAb,GAAwB,GANI;EAO5B,CAAC7V,gBAAA,CAAYyU,SAAb,GAAyB,GAPG;EAQ5B,CAACzU,gBAAA,CAAY2U,YAAb,GAA4B,IARA;EAS5B,CAAC3U,gBAAA,CAAY6U,eAAb,GAA+B,GATH;EAU5B,CAAC7U,gBAAA,CAAYiV,wBAAb,GAAwC,IAVZ;EAW5B,CAACjV,gBAAA,CAAY+U,YAAb,GAA4B,GAXA;EAY5B,CAAC/U,gBAAA,CAAYmV,qBAAb,GAAqC;AAZT,CAAzB;;;;;;;;;;;;;ACDP;;AAJA;AACA;AACA;AACA;AAEA,MAAMoB,eAAe,GAAG,CAACvmB,GAAD,EAAMghB,oBAAN,EAA4B9gB,mBAA5B,EAAiDC,2BAAjD,MAAkF;EACtGH,GADsG;EAEtGghB,oBAFsG;EAGtG9gB,mBAHsG;EAItGC;AAJsG,CAAlF,CAAxB;;AAMO,MAAM0f,KAAN,CAAY;EACf1lB,WAAW,CAACqC,gBAAD,EAAmB;IAC1B,KAAKA,gBAAL,GAAwBA,gBAAxB;IACA,KAAKojB,KAAL,GAAa,IAAI4G,GAAJ,EAAb;EACH;;EACDzF,GAAG,CAAC/F,IAAD,EAAOhb,GAAP,EAAY;IACX,MAAMymB,uBAAuB,GAAG,IAAArnB,qBAAA,EAAoBY,GAApB,EAAyB,KAAKxD,gBAA9B,CAAhC;IACA,MAAMkqB,UAAU,GAAGH,eAAe,CAACvmB,GAAD,EAAMymB,uBAAN,EAA+BE,oBAAoB,CAAC3mB,GAAD,EAAM,KAAKxD,gBAAL,CAAsBoqB,kBAA5B,CAAnD,EAAoGD,oBAAoB,CAAC3mB,GAAD,EAAM,KAAKxD,gBAAL,CAAsBqqB,yCAA5B,CAAxH,CAAlC;IACA,KAAKjH,KAAL,CAAWmB,GAAX,CAAe/F,IAAf,EAAqB0L,UAArB;IACA,OAAOA,UAAP;EACH;;EACDhG,GAAG,CAAC1F,IAAD,EAAO;IACN,OAAO,KAAK4E,KAAL,CAAWc,GAAX,CAAe1F,IAAf,CAAP;EACH;;EACD+G,kBAAkB,CAAC/G,IAAD,EAAOhb,GAAP,EAAY;IAC1B,MAAM8mB,cAAc,GAAG,KAAKlH,KAAL,CAAWc,GAAX,CAAe1F,IAAf,CAAvB;;IACA,IAAI8L,cAAc,KAAK5sB,SAAvB,EAAkC;MAC9B,OAAO4sB,cAAc,CAAC9mB,GAAtB;IACH,CAFD,MAGK;MACD,KAAK+gB,GAAL,CAAS/F,IAAT,EAAehb,GAAf;MACA,OAAOA,GAAP;IACH;EACJ;;AAvBc;;;;AAyBZ,MAAM2mB,oBAAoB,GAAG,CAAC3mB,GAAD,EAAM+mB,iBAAN,KAA4B;EAC5D,QAAQ/mB,GAAG,CAAC5F,IAAZ;IACI,KAAK4V,aAAA,CAAYpX,KAAjB;IACA,KAAKoX,aAAA,CAAY7W,MAAjB;IACA,KAAK6W,aAAA,CAAY5W,MAAjB;IACA,KAAK4W,aAAA,CAAY1W,KAAjB;IACA,KAAK0W,aAAA,CAAYqT,oBAAjB;IACA,KAAKrT,aAAA,CAAY0S,cAAjB;IACA,KAAK1S,aAAA,CAAYC,UAAjB;IACA,KAAKD,aAAA,CAAYG,YAAjB;IACA,KAAKH,aAAA,CAAY4S,SAAjB;IACA,KAAK5S,aAAA,CAAYoS,gBAAjB;MACI,OAAO,KAAP;;IACJ,KAAKpS,aAAA,CAAYkT,UAAjB;IACA,KAAKlT,aAAA,CAAYiT,aAAjB;IACA,KAAKjT,aAAA,CAAYgT,cAAjB;MAAiC;QAC7B,OAAO2D,oBAAoB,CAAC3mB,GAAG,CAACoB,KAAL,EAAY2lB,iBAAZ,CAA3B;MACH;;IACD,KAAK/W,aAAA,CAAYuU,cAAjB;IACA,KAAKvU,aAAA,CAAYyU,SAAjB;IACA,KAAKzU,aAAA,CAAY2U,YAAjB;IACA,KAAK3U,aAAA,CAAY+U,YAAjB;IACA,KAAK/U,aAAA,CAAY6U,eAAjB;IACA,KAAK7U,aAAA,CAAYmV,qBAAjB;IACA,KAAKnV,aAAA,CAAYiV,wBAAjB;IACA,KAAKjV,aAAA,CAAYuV,QAAjB;IACA,KAAKvV,aAAA,CAAYqV,OAAjB;IACA,KAAKrV,aAAA,CAAYyV,QAAjB;IACA,KAAKzV,aAAA,CAAY2V,MAAjB;IACA,KAAK3V,aAAA,CAAY6V,QAAjB;MACI,OAAOc,oBAAoB,CAAC3mB,GAAG,CAACjE,IAAL,EAAWgrB,iBAAX,CAApB,IAAqDJ,oBAAoB,CAAC3mB,GAAG,CAAChE,KAAL,EAAY+qB,iBAAZ,CAAhF;;IACJ,KAAK/W,aAAA,CAAYuT,WAAjB;MACI,OAAOoD,oBAAoB,CAAC3mB,GAAG,CAACwjB,UAAL,EAAiBuD,iBAAjB,CAA3B;;IACJ,KAAK/W,aAAA,CAAYqS,aAAjB;MAAgC;QAC5B,IAAI0E,iBAAiB,CAAC/mB,GAAG,CAACyhB,aAAL,CAArB,EAA0C;UACtC,OAAO,IAAP;QACH;;QACD,OAAOzhB,GAAG,CAACsiB,IAAJ,CAAS0E,IAAT,CAAe9tB,GAAD,IAASytB,oBAAoB,CAACztB,GAAD,EAAM6tB,iBAAN,CAA3C,CAAP;MACH;;IACD,KAAK/W,aAAA,CAAY1X,KAAjB;MAAwB;QACpB,OAAO0H,GAAG,CAACsiB,IAAJ,CAAS0E,IAAT,CAAcnsB,GAAG,IAAIA,GAAG,CAACmsB,IAAJ,CAAS9tB,GAAG,IAAIytB,oBAAoB,CAACztB,GAAD,EAAM6tB,iBAAN,CAApC,CAArB,CAAP;MACH;EAxCL;AA0CH,CA3CM;;;;;;;;;;;;;;AChCP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMpH,aAAN,SAA4BsH,iCAA5B,CAAkD;EACrD9sB,WAAW,CAAColB,WAAD,EAAcnjB,YAAd,EAA4B;IACnC,MAAMmjB,WAAW,CAACH,SAAlB,EAA6B;MAAE8H,SAAS,EAAE,KAAb;MAAoBC,YAAY,EAAE;IAAlC,CAA7B;IACA,KAAKC,wBAAL,GAAgC,KAAKC,IAAL,CAAU,0BAAV,EAAsC,MAAM;MACxE,OAAO,KAAKC,EAAL,CAAQ,CACX;QAAEC,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAKC,iBAAlB;MAAb,CADW,EAEX;QAAEF,GAAG,EAAE,IAAAG,qBAAA,EAAU,IAAA5D,qBAAA,GAAV;MAAP,CAFW,CAAR,CAAP;IAIH,CAL+B,CAAhC;IAMA;AACR;AACA;;IACQ,KAAK6D,mBAAL,GAA2B,KAAKN,IAAL,CAAU,qBAAV,EAAiC,MAAM;MAC9D,IAAIxrB,EAAJ;;MACA,MAAM+rB,kBAAkB,GAAG,KAAKC,OAAL,CAAahK,0BAAb,CAA3B;MACA,MAAM4D,aAAa,GAAGmG,kBAAkB,CAACrG,KAAnB,CAAyB9I,WAAzB,GAAuCiJ,KAAvC,CAA6C,CAA7C,EAAgD,CAAC,CAAjD,CAAtB;MACA,MAAMC,sBAAsB,GAAG,CAAC9lB,EAAE,GAAG,KAAK0jB,WAAL,CAAiBlB,eAAjB,CAAiCoD,aAAjC,CAAN,MAA2D,IAA3D,IAAmE5lB,EAAE,KAAK,KAAK,CAA/E,GAAmFA,EAAnF,GAAwF4lB,aAAvH;MACA,MAAMa,IAAI,GAAG,EAAb;MACA,IAAIwF,QAAQ,GAAG,KAAKN,OAAL,CAAa,KAAKJ,wBAAlB,CAAf;MACA,KAAKW,IAAL,CAAU,MAAM;QACZ,IAAIlsB,EAAJ;;QACA,MAAMmsB,SAAS,GAAG,KAAKH,OAAL,CAAa,KAAKtI,WAAL,CAAiBT,YAA9B,CAAlB;;QACA,IAAIgJ,QAAQ,CAAC1tB,IAAT,KAAkB4V,gBAAA,CAAYpX,KAAlC,EAAyC;UACrCkvB,QAAQ,CAAC7F,iBAAT,GAA6B,CAACpmB,EAAE,GAAGmsB,SAAS,CAAC/F,iBAAhB,MAAuC,IAAvC,IAA+CpmB,EAAE,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,EAAE,CAAC0lB,KAAxG;QACH;;QACDe,IAAI,CAAC5jB,IAAL,CAAUopB,QAAV;QACAA,QAAQ,GAAG,KAAKG,QAAL,CAAc,KAAKb,wBAAnB,CAAX;MACH,CARD;MASA9E,IAAI,CAAC5jB,IAAL,CAAUopB,QAAV;;MACA,IAAIxF,IAAI,CAACrZ,MAAL,KAAgB,CAAhB,IAAqBqZ,IAAI,CAAC,CAAD,CAAJ,CAAQloB,IAAR,KAAiB4V,gBAAA,CAAYpX,KAAtD,EAA6D;QACzD0pB,IAAI,CAACrZ,MAAL,GAAc,CAAd;MACH;;MACD,MAAMif,WAAW,GAAG,KAAKL,OAAL,CAAanK,mBAAb,CAApB;MACA,OAAO,IAAAuI,sBAAA,EAAkBtE,sBAAlB,EAA0CW,IAA1C,EAAgDsF,kBAAkB,CAAC3F,iBAAnE,EAAsFiG,WAAW,CAACjG,iBAAlG,CAAP;IACH,CAtB0B,CAA3B;IAuBA,KAAKkG,yBAAL,GAAiC,KAAKd,IAAL,CAAU,2BAAV,EAAuC,MAAM;MAC1E,MAAM7pB,IAAI,GAAG,KAAKqqB,OAAL,CAAa/J,4BAAb,CAAb;MACA,OAAO,IAAAqI,4BAAA,EAAwB3oB,IAAI,CAAC+jB,KAA7B,EAAoC/jB,IAAI,CAACykB,iBAAzC,CAAP;IACH,CAHgC,CAAjC;IAIA;AACR;AACA;;IACQ,KAAKmG,yBAAL,GAAiC,KAAKf,IAAL,CAAU,2BAAV,EAAuC,MAAM;MAC1E,MAAM/E,IAAI,GAAG,EAAb;MACA,KAAKuF,OAAL,CAAa,KAAKtI,WAAL,CAAiBJ,mBAA9B;MACA,KAAK0I,OAAL,CAAapK,mBAAb;MACA,KAAK4K,QAAL,CAAc;QACVC,GAAG,EAAE,KAAK/I,WAAL,CAAiBT,YADZ;QAEVyJ,GAAG,EAAE,MAAM;UACPjG,IAAI,CAAC5jB,IAAL,CAAU,KAAK8oB,OAAL,CAAa,KAAKC,iBAAlB,CAAV;QACH;MAJS,CAAd;MAMA,KAAKI,OAAL,CAAanK,mBAAb;MACA,OAAO,KAAK8K,qBAAL,CAA2BlG,IAA3B,CAAP;IACH,CAZgC,CAAjC;IAaA;AACR;AACA;;IACQ,KAAKmG,qBAAL,GAA6B,KAAKpB,IAAL,CAAU,uBAAV,EAAmC,MAAM;MAClE,MAAM/oB,KAAK,GAAG,KAAKupB,OAAL,CAAavK,wBAAb,CAAd;MACA,MAAM,CAACoL,UAAD,EAAaC,QAAb,IAAyBrqB,KAAK,CAACijB,KAAN,CAAYzJ,KAAZ,CAAkB,GAAlB,CAA/B;MACA,MAAM8Q,YAAY,GAAG,KAAKC,MAAL,CAAY,MAAM,IAAAtR,wDAAA,EAAwB,KAAKnb,YAA7B,EAA2CssB,UAA3C,EAAuD,KAAK1a,cAA5D,CAAlB,CAArB;MACA,MAAM8a,aAAa,GAAG,KAAKD,MAAL,CAAY,MAAM,IAAAtR,wDAAA,EAAwB,KAAKnb,YAA7B,EAA2CusB,QAA3C,EAAqD,KAAK3a,cAA1D,CAAlB,CAAtB;;MACA,IAAI4a,YAAY,KAAK1uB,SAAjB,IAA8B4uB,aAAa,KAAK5uB,SAApD,EAA+D;QAC3D,OAAO,IAAAmsB,sBAAA,EAAkB,IAAI1sB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAlB,CAAP;MACH;;MACD,IAAI+b,YAAY,CAACjV,sBAAb,CAAoC,KAAK4L,WAAL,CAAiB3L,UAArD,KAAoEkV,aAAa,CAACnV,sBAAd,CAAqC,KAAK4L,WAAL,CAAiB3L,UAAtD,CAAxE,EAA2I;QACvI,OAAO,IAAA0S,8BAAA,EAA0BhoB,KAAK,CAACijB,KAAhC,EAAuC,IAAI5nB,eAAJ,CAAc5E,eAAA,CAAUg0B,IAAxB,CAAvC,EAAsEzqB,KAAK,CAAC2jB,iBAA5E,CAAP;MACH;;MACD,IAAI2G,YAAY,CAAChuB,KAAb,KAAuBV,SAAvB,IAAoC4uB,aAAa,CAACluB,KAAd,KAAwBV,SAAhE,EAA2E;QACvE,OAAO,KAAKK,YAAL,CAAkB6lB,qBAAA,CAAiB4I,WAAnC,EAAgD,4BAAhD,CAAP;MACH;;MACD,MAAM;QAAEC,QAAF;QAAYC,SAAZ;QAAuBC;MAAvB,IAAwCxJ,aAAa,CAACyJ,uBAAd,CAAsCR,YAAtC,EAAoDE,aAApD,CAA9C;MACA,MAAM;QAAEprB,KAAF;QAASC;MAAT,IAAiB,KAAK0rB,oBAAL,CAA0BJ,QAA1B,EAAoCC,SAApC,CAAvB;MACA,OAAO,IAAA9E,wBAAA,EAAoB1mB,KAApB,EAA2BC,GAA3B,EAAgCwrB,YAAhC,EAA8C7qB,KAAK,CAAC2jB,iBAApD,CAAP;IACH,CAjB4B,CAA7B;IAkBA;AACR;AACA;;IACQ,KAAKqH,kBAAL,GAA0B,KAAKjC,IAAL,CAAU,oBAAV,EAAgC,MAAM;MAC5D,MAAM/oB,KAAK,GAAG,KAAKupB,OAAL,CAAatK,qBAAb,CAAd;MACA,MAAM,CAACmL,UAAD,EAAaC,QAAb,IAAyBrqB,KAAK,CAACijB,KAAN,CAAYzJ,KAAZ,CAAkB,GAAlB,CAA/B;MACA,MAAM8Q,YAAY,GAAG,KAAKC,MAAL,CAAY,MAAM,IAAApR,qDAAA,EAAqB,KAAKrb,YAA1B,EAAwCssB,UAAxC,EAAoD,KAAK1a,cAAzD,CAAlB,CAArB;MACA,MAAM8a,aAAa,GAAG,KAAKD,MAAL,CAAY,MAAM,IAAApR,qDAAA,EAAqB,KAAKrb,YAA1B,EAAwCusB,QAAxC,EAAkD,KAAK3a,cAAvD,CAAlB,CAAtB;;MACA,IAAI4a,YAAY,KAAK1uB,SAAjB,IAA8B4uB,aAAa,KAAK5uB,SAApD,EAA+D;QAC3D,OAAO,IAAAmsB,sBAAA,EAAkB,IAAI1sB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAlB,CAAP;MACH;;MACD,IAAI+b,YAAY,CAACjV,sBAAb,CAAoC,KAAK4L,WAAL,CAAiB1L,OAArD,KAAiEiV,aAAa,CAACnV,sBAAd,CAAqC,KAAK4L,WAAL,CAAiB1L,OAAtD,CAArE,EAAqI;QACjI,OAAO,IAAAyS,8BAAA,EAA0BhoB,KAAK,CAACijB,KAAhC,EAAuC,IAAI5nB,eAAJ,CAAc5E,eAAA,CAAUg0B,IAAxB,CAAvC,EAAsEzqB,KAAK,CAAC2jB,iBAA5E,CAAP;MACH;;MACD,IAAI2G,YAAY,CAAChuB,KAAb,KAAuBV,SAAvB,IAAoC4uB,aAAa,CAACluB,KAAd,KAAwBV,SAAhE,EAA2E;QACvE,OAAO,KAAKK,YAAL,CAAkB6lB,qBAAA,CAAiB4I,WAAnC,EAAgD,4BAAhD,CAAP;MACH;;MACD,MAAM;QAAEC,QAAF;QAAYC,SAAZ;QAAuBC;MAAvB,IAAwCxJ,aAAa,CAACyJ,uBAAd,CAAsCR,YAAtC,EAAoDE,aAApD,CAA9C;MACA,MAAM;QAAEprB,KAAF;QAASC;MAAT,IAAiB,KAAK4rB,iBAAL,CAAuBN,QAAvB,EAAiCC,SAAjC,CAAvB;MACA,OAAO,IAAA7E,qBAAA,EAAiB3mB,KAAjB,EAAwBC,GAAxB,EAA6BwrB,YAA7B,EAA2C7qB,KAAK,CAAC2jB,iBAAjD,CAAP;IACH,CAjByB,CAA1B;IAkBA;AACR;AACA;;IACQ,KAAKuH,aAAL,GAAqB,KAAKnC,IAAL,CAAU,eAAV,EAA2B,MAAM;MAClD,MAAMzoB,IAAI,GAAG,KAAKipB,OAAL,CAAaxK,0BAAb,CAAb;MACA,MAAMnlB,OAAO,GAAG,KAAK2wB,MAAL,CAAY,MAAM;QAC9B,OAAO,IAAAhS,sDAAA,EAAsB,KAAKza,YAA3B,EAAyCwC,IAAI,CAAC2iB,KAA9C,EAAqD,KAAKvT,cAA1D,CAAP;MACH,CAFe,CAAhB;;MAGA,IAAI9V,OAAO,KAAKgC,SAAhB,EAA2B;QACvB,OAAO,IAAAosB,8BAAA,EAA0B1nB,IAAI,CAAC2iB,KAA/B,EAAsC,IAAI5nB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAtC,EAAoEjO,IAAI,CAACqjB,iBAAzE,CAAP;MACH,CAFD,MAGK,IAAI/pB,OAAO,CAACyb,sBAAR,CAA+B,KAAK4L,WAAL,CAAiB3L,UAAhD,EAA4D,KAAK2L,WAAL,CAAiB1L,OAA7E,CAAJ,EAA2F;QAC5F,OAAO,IAAAyS,8BAAA,EAA0B1nB,IAAI,CAAC2iB,KAA/B,EAAsC,IAAI5nB,eAAJ,CAAc5E,eAAA,CAAUg0B,IAAxB,CAAtC,EAAqEnqB,IAAI,CAACqjB,iBAA1E,CAAP;MACH,CAFI,MAGA;QACD,OAAO,IAAAgC,0BAAA,EAAsB/rB,OAAtB,EAA+B0G,IAAI,CAACqjB,iBAApC,CAAP;MACH;IACJ,CAdoB,CAArB;IAeA;AACR;AACA;;IACQ,KAAKwH,iBAAL,GAAyB,KAAKpC,IAAL,CAAU,mBAAV,EAAgC3pB,KAAD,IAAW;MAC/D,IAAI7B,EAAJ;;MACA,MAAM8B,GAAG,GAAG,KAAKkqB,OAAL,CAAaxK,0BAAb,CAAZ;MACA,MAAMuE,YAAY,GAAG,KAAKiH,MAAL,CAAY,MAAM;QACnC,OAAO,IAAAhS,sDAAA,EAAsB,KAAKza,YAA3B,EAAyCsB,KAAK,CAAC6jB,KAA/C,EAAsD,KAAKvT,cAA3D,CAAP;MACH,CAFoB,CAArB;MAGA,MAAM6T,UAAU,GAAG,KAAKgH,MAAL,CAAY,MAAM;QACjC,OAAO,IAAAhS,sDAAA,EAAsB,KAAKza,YAA3B,EAAyCuB,GAAG,CAAC4jB,KAA7C,EAAoD,KAAKvT,cAAzD,CAAP;MACH,CAFkB,CAAnB;;MAGA,IAAI4T,YAAY,KAAK1nB,SAAjB,IAA8B2nB,UAAU,KAAK3nB,SAAjD,EAA4D;QACxD,OAAO,KAAK2uB,MAAL,CAAY,MAAM;UACrB,OAAO,IAAAvC,8BAAA,EAA2B,GAAE5oB,KAAK,CAAC6jB,KAAM,IAAG5jB,GAAG,CAAC4jB,KAAM,EAAtD,EAAyD,IAAI5nB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAzD,EAAuFnP,KAAK,CAACukB,iBAA7F,CAAP;QACH,CAFM,CAAP;MAGH,CAJD,MAKK,IAAIL,YAAY,CAACjO,sBAAb,CAAoC,KAAK4L,WAAL,CAAiB3L,UAArD,EAAiE,KAAK2L,WAAL,CAAiB1L,OAAlF,KACFgO,UAAU,CAAClO,sBAAX,CAAkC,KAAK4L,WAAL,CAAiB3L,UAAnD,EAA+D,KAAK2L,WAAL,CAAiB1L,OAAhF,CADF,EAC4F;QAC7F,OAAO,KAAKgV,MAAL,CAAY,MAAM;UACrB,OAAO,IAAAvC,8BAAA,EAA2B,GAAE5oB,KAAK,CAAC6jB,KAAM,IAAG5jB,GAAG,CAAC4jB,KAAM,EAAtD,EAAyD,IAAI5nB,eAAJ,CAAc5E,eAAA,CAAUg0B,IAAxB,CAAzD,EAAwFrrB,KAAK,CAACukB,iBAA9F,CAAP;QACH,CAFM,CAAP;MAGH;;MACD,OAAO,KAAKyH,cAAL,CAAoB9H,YAApB,EAAkCC,UAAlC,EAA8C,CAAChmB,EAAE,GAAG6B,KAAK,CAACukB,iBAAZ,MAAmC,IAAnC,IAA2CpmB,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAAC0lB,KAArH,CAAP;IACH,CArBwB,CAAzB;IAsBA;AACR;AACA;AACA;AACA;;IACQ,KAAKoI,oBAAL,GAA4B,KAAKtC,IAAL,CAAU,sBAAV,EAAmC3pB,KAAD,IAAW;MACrE,OAAO,KAAK4pB,EAAL,CAAQ,CACX;QACIC,GAAG,EAAE,MAAM;UACP,OAAO,KAAKC,OAAL,CAAa,KAAKiC,iBAAlB,EAAqC;YAAEG,IAAI,EAAE,CAAClsB,KAAD;UAAR,CAArC,CAAP;QACH;MAHL,CADW,EAMX;QACI6pB,GAAG,EAAE,MAAM;UACP,IAAI1rB,EAAJ;;UACA,MAAMguB,eAAe,GAAG,KAAKrC,OAAL,CAAa,KAAKY,yBAAlB,CAAxB;UACA,MAAMxG,YAAY,GAAG,KAAKiH,MAAL,CAAY,MAAM;YACnC,OAAO,IAAAhS,sDAAA,EAAsB,KAAKza,YAA3B,EAAyCsB,KAAK,CAAC6jB,KAA/C,EAAsD,KAAKvT,cAA3D,CAAP;UACH,CAFoB,CAArB;;UAGA,IAAI4T,YAAY,KAAK1nB,SAArB,EAAgC;YAC5B,OAAO,IAAAmsB,sBAAA,EAAkB,IAAI1sB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAlB,CAAP;UACH;;UACD,IAAIgd,eAAe,CAACzvB,IAAhB,KAAyB4V,gBAAA,CAAY0S,cAAzC,EAAyD;YACrD,OAAO,KAAKgH,cAAL,CAAoB9H,YAApB,EAAkCiI,eAAe,CAAClH,SAAlD,EAA6D,CAAC9mB,EAAE,GAAG6B,KAAK,CAACukB,iBAAZ,MAAmC,IAAnC,IAA2CpmB,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAAC0lB,KAApI,CAAP;UACH,CAFD,MAGK;YACD,OAAO,KAAKhnB,YAAL,CAAkB6lB,qBAAA,CAAiB0J,qBAAnC,EAA0D,+BAA1D,CAAP;UACH;QACJ;MAhBL,CANW,CAAR,CAAP;IAyBH,CA1B2B,CAA5B;IA2BA;AACR;AACA;;IACQ,KAAKC,mBAAL,GAA2B,KAAK1C,IAAL,CAAU,qBAAV,EAAiC,MAAM;MAC9D,MAAM3pB,KAAK,GAAG,KAAKmqB,OAAL,CAAaxK,0BAAb,CAAd;MACA,KAAK2M,QAAL,CAAcxM,2BAAd;MACA,OAAO,KAAKgK,OAAL,CAAa,KAAKmC,oBAAlB,EAAwC;QAAEC,IAAI,EAAE,CAAClsB,KAAD;MAAR,CAAxC,CAAP;IACH,CAJ0B,CAA3B;IAKA;AACR;AACA;;IACQ,KAAKusB,gCAAL,GAAwC,KAAK5C,IAAL,CAAU,kCAAV,EAA+C3pB,KAAD,IAAW;MAC7F,MAAMC,GAAG,GAAG,KAAKkqB,OAAL,CAAaxK,0BAAb,CAAZ;MACA,MAAMwE,UAAU,GAAG,KAAKgH,MAAL,CAAY,MAAM;QACjC,OAAO,IAAAhS,sDAAA,EAAsB,KAAKza,YAA3B,EAAyCuB,GAAG,CAAC4jB,KAA7C,EAAoD,KAAKvT,cAAzD,CAAP;MACH,CAFkB,CAAnB;;MAGA,IAAI6T,UAAU,KAAK3nB,SAAnB,EAA8B;QAC1B,OAAO,KAAK2uB,MAAL,CAAY,MAAM;UACrB,OAAO,IAAAxC,sBAAA,EAAkB,IAAI1sB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAlB,CAAP;QACH,CAFM,CAAP;MAGH;;MACD,OAAO,KAAK6c,cAAL,CAAoBhsB,KAAK,CAACilB,SAA1B,EAAqCd,UAArC,EAAiDnkB,KAAK,CAACukB,iBAAvD,CAAP;IACH,CAXuC,CAAxC;IAYA;AACR;AACA;AACA;AACA;;IACQ,KAAKiI,mCAAL,GAA2C,KAAK7C,IAAL,CAAU,qCAAV,EAAkD3pB,KAAD,IAAW;MACnG,OAAO,KAAK4pB,EAAL,CAAQ,CACX;QACIC,GAAG,EAAE,MAAM;UACP,OAAO,KAAKC,OAAL,CAAa,KAAKyC,gCAAlB,EAAoD;YAAEL,IAAI,EAAE,CAAClsB,KAAD;UAAR,CAApD,CAAP;QACH;MAHL,CADW,EAMX;QACI6pB,GAAG,EAAE,MAAM;UACP,MAAMsC,eAAe,GAAG,KAAKrC,OAAL,CAAa,KAAKY,yBAAlB,CAAxB;;UACA,IAAIyB,eAAe,CAACzvB,IAAhB,KAAyB4V,gBAAA,CAAY0S,cAAzC,EAAyD;YACrD,OAAO,KAAKgH,cAAL,CAAoBhsB,KAAK,CAACilB,SAA1B,EAAqCkH,eAAe,CAAClH,SAArD,EAAgEjlB,KAAK,CAACukB,iBAAtE,CAAP;UACH,CAFD,MAGK;YACD,OAAO,KAAK1nB,YAAL,CAAkB6lB,qBAAA,CAAiB0J,qBAAnC,EAA0D,+BAA1D,CAAP;UACH;QACJ;MATL,CANW,CAAR,CAAP;IAkBH,CAnB0C,CAA3C;IAoBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,KAAKK,gBAAL,GAAwB,KAAK9C,IAAL,CAAU,kBAAV,EAA8B,MAAM;MACxD,MAAMwC,eAAe,GAAG,KAAKrC,OAAL,CAAa,KAAKY,yBAAlB,CAAxB;MACA,IAAIzqB,GAAJ;MACA,KAAKysB,MAAL,CAAY,MAAM;QACd,KAAKvC,OAAL,CAAarK,2BAAb;;QACA,IAAIqM,eAAe,CAACzvB,IAAhB,KAAyB4V,gBAAA,CAAYC,UAAzC,EAAqD;UACjDtS,GAAG,GAAG,KAAKpD,YAAL,CAAkB6lB,qBAAA,CAAiB0J,qBAAnC,EAA0D,+BAA1D,CAAN;QACH,CAFD,MAGK;UACDnsB,GAAG,GAAG,KAAK6pB,OAAL,CAAa,KAAK0C,mCAAlB,EAAuD;YAAEN,IAAI,EAAE,CAACC,eAAD;UAAR,CAAvD,CAAN;QACH;MACJ,CARD;;MASA,IAAIlsB,GAAG,KAAKzD,SAAZ,EAAuB;QACnB,OAAOyD,GAAP;MACH;;MACD,OAAOksB,eAAP;IACH,CAhBuB,CAAxB;IAiBA,KAAKQ,qBAAL,GAA6B,KAAKhD,IAAL,CAAU,uBAAV,EAAmC,MAAM;MAClE,MAAM/a,GAAG,GAAG,CAAC,EAAD,CAAZ;MACAA,GAAG,CAACA,GAAG,CAACrD,MAAJ,GAAa,CAAd,CAAH,CAAoBvK,IAApB,CAAyB,KAAK8oB,OAAL,CAAa,KAAKC,iBAAlB,CAAzB;MACA,KAAKM,IAAL,CAAU,MAAM;QACZ,KAAKT,EAAL,CAAQ,CACJ;UACIC,GAAG,EAAE,MAAM;YACP,KAAKM,OAAL,CAAa,KAAKtI,WAAL,CAAiBX,iBAA9B;YACAtS,GAAG,CAACA,GAAG,CAACrD,MAAJ,GAAa,CAAd,CAAH,CAAoBvK,IAApB,CAAyB,KAAKupB,QAAL,CAAc,KAAKR,iBAAnB,CAAzB;UACH;QAJL,CADI,EAOJ;UACIF,GAAG,EAAE,MAAM;YACP,KAAKM,OAAL,CAAa,KAAKtI,WAAL,CAAiBb,iBAA9B;YACApS,GAAG,CAAC5N,IAAJ,CAAS,EAAT;YACA4N,GAAG,CAACA,GAAG,CAACrD,MAAJ,GAAa,CAAd,CAAH,CAAoBvK,IAApB,CAAyB,KAAK4rB,QAAL,CAAc,KAAK7C,iBAAnB,CAAzB;UACH;QALL,CAPI,CAAR;MAeH,CAhBD;MAiBA,OAAO,IAAAvB,kBAAA,EAAc5Z,GAAd,CAAP;IACH,CArB4B,CAA7B;IAsBA;AACR;AACA;;IACQ,KAAKie,qBAAL,GAA6B,KAAKlD,IAAL,CAAU,uBAAV,EAAmC,MAAM;MAClE,MAAMmD,WAAW,GAAG,KAAK3C,OAAL,CAAapK,mBAAb,CAApB;MACA,MAAM+F,UAAU,GAAG,KAAKgE,OAAL,CAAa,KAAKC,iBAAlB,CAAnB;MACA,MAAMS,WAAW,GAAG,KAAKL,OAAL,CAAanK,mBAAb,CAApB;MACA,OAAO,IAAA0I,wBAAA,EAAoB5C,UAApB,EAAgCgH,WAAW,CAACvI,iBAA5C,EAA+DiG,WAAW,CAACjG,iBAA3E,CAAP;IACH,CAL4B,CAA7B;IAMA,KAAKwI,eAAL,GAAuB,KAAKpD,IAAL,CAAU,iBAAV,EAA6B,MAAM;MACtD,OAAO,KAAKC,EAAL,CAAQ,CACX;QACIC,GAAG,EAAE,MAAM;UACP,MAAMmD,MAAM,GAAG,KAAK7C,OAAL,CAAalK,wBAAb,CAAf;UACA,MAAMrR,GAAG,GAAG,KAAKkb,OAAL,CAAa,KAAK6C,qBAAlB,CAAZ;UACA,MAAMM,MAAM,GAAG,KAAK9C,OAAL,CAAajK,wBAAb,CAAf;UACA,OAAO,IAAAsI,kBAAA,EAAc5Z,GAAG,CAACgW,IAAlB,EAAwBoI,MAAM,CAACzI,iBAA/B,EAAkD0I,MAAM,CAAC1I,iBAAzD,CAAP;QACH;MANL,CADW,EASX;QACIsF,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAK+C,qBAAlB;MADf,CATW,CAAR,CAAP;IAaH,CAdsB,CAAvB;;IAeA,KAAKK,qBAAL,GAA8BC,KAAD,IAAW;MACpC,MAAMC,UAAU,GAAGD,KAAK,CAAC3R,OAAN,CAAc,KAAKqG,WAAL,CAAiBL,gBAA/B,EAAiD,GAAjD,CAAnB;MACA,OAAOrO,MAAM,CAACia,UAAD,CAAb;IACH,CAHD;IAIA;AACR;AACA;;;IACQ,KAAKC,wBAAL,GAAgC,KAAK1D,IAAL,CAAU,0BAAV,EAAsC,MAAM;MACxE,IAAIxrB,EAAJ;;MACA,OAAO,KAAKyrB,EAAL,CAAQ,CAACzrB,EAAE,GAAG,KAAKmvB,cAAX,MAA+B,IAA/B,IAAuCnvB,EAAE,KAAK,KAAK,CAAnD,GAAuDA,EAAvD,GAA6D,KAAKmvB,cAAL,GAAsB,CAC9F;QACIzD,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAKiD,eAAlB;MADf,CAD8F,EAI9F;QACIlD,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAKuC,mBAAlB;MADf,CAJ8F,EAO9F;QACIxC,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAKiB,qBAAlB;MADf,CAP8F,EAU9F;QACIlB,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAK8B,kBAAlB;MADf,CAV8F,EAa9F;QACI/B,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAK2C,gBAAlB;MADf,CAb8F,EAgB9F;QACI5C,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAKgC,aAAlB;MADf,CAhB8F,EAmB9F;QACIjC,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAKG,mBAAlB;MADf,CAnB8F,EAsB9F;QACIJ,GAAG,EAAE,MAAM,KAAKC,OAAL,CAAa,KAAKW,yBAAlB;MADf,CAtB8F,EAyB9F;QACIZ,GAAG,EAAE,MAAM;UACP,MAAM0D,MAAM,GAAG,KAAKpD,OAAL,CAAa,KAAKtI,WAAL,CAAiBN,aAA9B,CAAf;UACA,OAAO,IAAA8E,mBAAA,EAAe,KAAK6G,qBAAL,CAA2BK,MAAM,CAAC1J,KAAlC,CAAf,EAAyD0J,MAAM,CAAChJ,iBAAhE,CAAP;QACH;MAJL,CAzB8F,EA+B9F;QACIsF,GAAG,EAAE,MAAM;UACP,MAAM2D,GAAG,GAAG,KAAKrD,OAAL,CAAa9J,0BAAb,CAAZ;UACA,OAAO,IAAAiG,mBAAA,EAAekH,GAAf,CAAP;QACH;MAJL,CA/B8F,EAqC9F;QACI3D,GAAG,EAAE,MAAM;UACP,MAAMlG,KAAK,GAAG,KAAKwG,OAAL,CAAa7J,yBAAb,CAAd;UACA,MAAMmN,SAAS,GAAG9J,KAAK,CAACE,KAAN,CAAY9I,WAAZ,EAAlB;UACA,MAAM2S,SAAS,GAAG,KAAK7L,WAAL,CAAiBnB,YAAjB,CAA8B+M,SAA9B,CAAlB;;UACA,IAAIC,SAAJ,EAAe;YACX,OAAO,IAAA/E,sBAAA,EAAkB,IAAI1sB,eAAJ,CAAcyxB,SAAd,CAAlB,EAA4C/J,KAAK,CAACY,iBAAlD,CAAP;UACH,CAFD,MAGK;YACD,OAAO,KAAK1nB,YAAL,CAAkB6lB,qBAAA,CAAiB4I,WAAnC,EAAgD,uBAAhD,CAAP;UACH;QACJ;MAXL,CArC8F,CAA3F,CAAP;IAmDH,CArD+B,CAAhC;IAsDA,KAAKqC,4BAAL,GAAoC,KAAKhE,IAAL,CAAU,8BAAV,EAA0C,MAAM;MAChF,MAAM0D,wBAAwB,GAAG,KAAKvD,OAAL,CAAa,KAAKuD,wBAAlB,CAAjC;MACA,MAAMO,UAAU,GAAG,KAAKlB,MAAL,CAAY,MAAM;QACjC,OAAO,KAAKvC,OAAL,CAAalL,sBAAb,CAAP;MACH,CAFkB,CAAnB;;MAGA,IAAI2O,UAAJ,EAAgB;QACZ,OAAO,IAAAtF,sBAAA,EAAkB+E,wBAAlB,EAA4CO,UAAU,CAACrJ,iBAAvD,CAAP;MACH;;MACD,OAAO8I,wBAAP;IACH,CATmC,CAApC;IAUA;AACR;AACA;;IACQ,KAAKQ,gBAAL,GAAwB,KAAKlE,IAAL,CAAU,kBAAV,EAA8B,MAAM;MACxD,OAAO,KAAKC,EAAL,CAAQ,CACX;QACIC,GAAG,EAAE,MAAM;UACP,MAAMrU,EAAE,GAAG,KAAK2U,OAAL,CAAa9L,uBAAb,CAAX;UACA,MAAM3a,KAAK,GAAG,KAAKomB,OAAL,CAAa,KAAK+D,gBAAlB,CAAd;;UACA,IAAI,IAAAjK,wBAAA,EAAapO,EAAb,EAAiBkJ,mBAAjB,CAAJ,EAA8B;YAC1B,OAAO,IAAA2J,wBAAA,EAAoB3kB,KAApB,EAA2B8R,EAAE,CAAC+O,iBAA9B,CAAP;UACH,CAFD,MAGK,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiBoJ,oBAAjB,CAAJ,EAA+B;YAChC,OAAO,IAAAwJ,yBAAA,EAAqB1kB,KAArB,EAA4B8R,EAAE,CAAC+O,iBAA/B,CAAP;UACH,CAFI,MAGA;YACD,KAAKuJ,kBAAL,GAA0B,IAAAjxB,iBAAA,EAAa6lB,qBAAA,CAAiB4I,WAA9B,EAA2C,uBAA3C,CAA1B;YACA,OAAO,KAAKwC,kBAAZ;UACH;QACJ;MAdL,CADW,EAiBX;QACIjE,GAAG,EAAE,MAAM,KAAKU,QAAL,CAAc,KAAKoD,4BAAnB;MADf,CAjBW,CAAR,CAAP;IAqBH,CAtBuB,CAAxB;IAuBA;AACR;AACA;;IACQ,KAAKI,eAAL,GAAuB,KAAKpE,IAAL,CAAU,iBAAV,EAA6B,MAAM;MACtD,IAAIqE,GAAG,GAAG,KAAKlE,OAAL,CAAa,KAAK+D,gBAAlB,CAAV;MACA,KAAKxD,IAAL,CAAU,MAAM;QACZ,MAAM7U,EAAE,GAAG,KAAK2U,OAAL,CAAanL,oBAAb,CAAX;QACA,MAAMiP,GAAG,GAAG,KAAK1D,QAAL,CAAc,KAAKsD,gBAAnB,CAAZ;;QACA,IAAI,IAAAjK,wBAAA,EAAapO,EAAb,EAAiBwJ,oBAAjB,CAAJ,EAA+B;UAC3BgP,GAAG,GAAG,IAAA9F,oBAAA,EAAgB8F,GAAhB,EAAqBC,GAArB,EAA0BzY,EAAE,CAAC+O,iBAA7B,CAAN;QACH,CAFD,MAGK;UACD,KAAK4G,MAAL,CAAY,MAAM;YACd,MAAMtvB,KAAK,CAAC,wBAAD,CAAX;UACH,CAFD;QAGH;MACJ,CAXD;MAYA,OAAOmyB,GAAP;IACH,CAfsB,CAAvB;IAgBA;AACR;AACA;;IACQ,KAAKE,wBAAL,GAAgC,KAAKvE,IAAL,CAAU,0BAAV,EAAsC,MAAM;MACxE,IAAIqE,GAAG,GAAG,KAAKlE,OAAL,CAAa,KAAKiE,eAAlB,CAAV;MACA,KAAK1D,IAAL,CAAU,MAAM;QACZ,MAAM7U,EAAE,GAAG,KAAK2U,OAAL,CAAatL,6BAAb,CAAX;QACA,MAAMoP,GAAG,GAAG,KAAK1D,QAAL,CAAc,KAAKwD,eAAnB,CAAZ;;QACA,IAAI,IAAAnK,wBAAA,EAAapO,EAAb,EAAiBsJ,oBAAjB,CAAJ,EAA+B;UAC3BkP,GAAG,GAAG,IAAAlG,oBAAA,EAAgBkG,GAAhB,EAAqBC,GAArB,EAA0BzY,EAAE,CAAC+O,iBAA7B,CAAN;QACH,CAFD,MAGK,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiBuJ,kBAAjB,CAAJ,EAA6B;UAC9BiP,GAAG,GAAG,IAAAhG,kBAAA,EAAcgG,GAAd,EAAmBC,GAAnB,EAAwBzY,EAAE,CAAC+O,iBAA3B,CAAN;QACH,CAFI,MAGA;UACD,KAAK4G,MAAL,CAAY,MAAM;YACd,MAAMtvB,KAAK,CAAC,wBAAD,CAAX;UACH,CAFD;QAGH;MACJ,CAdD;MAeA,OAAOmyB,GAAP;IACH,CAlB+B,CAAhC;IAmBA;AACR;AACA;;IACQ,KAAKG,kBAAL,GAA0B,KAAKxE,IAAL,CAAU,oBAAV,EAAgC,MAAM;MAC5D,IAAIqE,GAAG,GAAG,KAAKlE,OAAL,CAAa,KAAKoE,wBAAlB,CAAV;MACA,KAAK7D,IAAL,CAAU,MAAM;QACZ,MAAM7U,EAAE,GAAG,KAAK2U,OAAL,CAAa9L,uBAAb,CAAX;QACA,MAAM4P,GAAG,GAAG,KAAK1D,QAAL,CAAc,KAAK2D,wBAAnB,CAAZ;;QACA,IAAI,IAAAtK,wBAAA,EAAapO,EAAb,EAAiBkJ,mBAAjB,CAAJ,EAA8B;UAC1BsP,GAAG,GAAG,IAAAtG,mBAAA,EAAesG,GAAf,EAAoBC,GAApB,EAAyBzY,EAAE,CAAC+O,iBAA5B,CAAN;QACH,CAFD,MAGK,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiBoJ,oBAAjB,CAAJ,EAA+B;UAChCoP,GAAG,GAAG,IAAApG,oBAAA,EAAgBoG,GAAhB,EAAqBC,GAArB,EAA0BzY,EAAE,CAAC+O,iBAA7B,CAAN;QACH,CAFI,MAGA;UACD,KAAK4G,MAAL,CAAY,MAAM;YACd,MAAMtvB,KAAK,CAAC,wBAAD,CAAX;UACH,CAFD;QAGH;MACJ,CAdD;MAeA,OAAOmyB,GAAP;IACH,CAlByB,CAA1B;IAmBA;AACR;AACA;;IACQ,KAAKI,qBAAL,GAA6B,KAAKzE,IAAL,CAAU,uBAAV,EAAmC,MAAM;MAClE,IAAIqE,GAAG,GAAG,KAAKlE,OAAL,CAAa,KAAKqE,kBAAlB,CAAV;MACA,KAAK9D,IAAL,CAAU,MAAM;QACZ,MAAM7U,EAAE,GAAG,KAAK2U,OAAL,CAAa1K,0BAAb,CAAX;QACA,MAAMwO,GAAG,GAAG,KAAK1D,QAAL,CAAc,KAAK4D,kBAAnB,CAAZ;QACAH,GAAG,GAAG,IAAApH,0BAAA,EAAsBoH,GAAtB,EAA2BC,GAA3B,EAAgCzY,EAAE,CAAC+O,iBAAnC,CAAN;MACH,CAJD;MAKA,OAAOyJ,GAAP;IACH,CAR4B,CAA7B;IASA;AACR;AACA;;IACQ,KAAKjE,iBAAL,GAAyB,KAAKJ,IAAL,CAAU,mBAAV,EAA+B,MAAM;MAC1D,IAAIqE,GAAG,GAAG,KAAKlE,OAAL,CAAa,KAAKsE,qBAAlB,CAAV;MACA,KAAK/D,IAAL,CAAU,MAAM;QACZ,MAAM7U,EAAE,GAAG,KAAK2U,OAAL,CAAajL,sBAAb,CAAX;QACA,MAAM+O,GAAG,GAAG,KAAK1D,QAAL,CAAc,KAAK6D,qBAAnB,CAAZ;;QACA,IAAI,IAAAxK,wBAAA,EAAapO,EAAb,EAAiB2J,qBAAjB,CAAJ,EAAgC;UAC5B6O,GAAG,GAAG,IAAAlH,qBAAA,EAAiBkH,GAAjB,EAAsBC,GAAtB,EAA2BzY,EAAE,CAAC+O,iBAA9B,CAAN;QACH,CAFD,MAGK,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiB4J,uBAAjB,CAAJ,EAAkC;UACnC4O,GAAG,GAAG,IAAAhH,uBAAA,EAAmBgH,GAAnB,EAAwBC,GAAxB,EAA6BzY,EAAE,CAAC+O,iBAAhC,CAAN;QACH,CAFI,MAGA,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiB6J,0BAAjB,CAAJ,EAAqC;UACtC2O,GAAG,GAAG,IAAA9G,0BAAA,EAAsB8G,GAAtB,EAA2BC,GAA3B,EAAgCzY,EAAE,CAAC+O,iBAAnC,CAAN;QACH,CAFI,MAGA,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiB8J,uBAAjB,CAAJ,EAAkC;UACnC0O,GAAG,GAAG,IAAA5G,uBAAA,EAAmB4G,GAAnB,EAAwBC,GAAxB,EAA6BzY,EAAE,CAAC+O,iBAAhC,CAAN;QACH,CAFI,MAGA,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiB+J,iCAAjB,CAAJ,EAA4C;UAC7CyO,GAAG,GAAG,IAAA1G,iCAAA,EAA6B0G,GAA7B,EAAkCC,GAAlC,EAAuCzY,EAAE,CAAC+O,iBAA1C,CAAN;QACH,CAFI,MAGA,IAAI,IAAAX,wBAAA,EAAapO,EAAb,EAAiBgK,8BAAjB,CAAJ,EAAyC;UAC1CwO,GAAG,GAAG,IAAAxG,8BAAA,EAA0BwG,GAA1B,EAA+BC,GAA/B,EAAoCzY,EAAE,CAAC+O,iBAAvC,CAAN;QACH,CAFI,MAGA;UACD,KAAK4G,MAAL,CAAY,MAAM;YACd,MAAMtvB,KAAK,CAAC,wBAAD,CAAX;UACH,CAFD;QAGH;MACJ,CA1BD;MA2BA,OAAOmyB,GAAP;IACH,CA9BwB,CAAzB;IA+BA;AACR;AACA;;IACQ,KAAK3sB,OAAL,GAAe,KAAKsoB,IAAL,CAAU,SAAV,EAAqB,MAAM;MACtC,KAAKQ,OAAL,CAAahL,qBAAb;MACA,OAAO,KAAK2K,OAAL,CAAa,KAAKC,iBAAlB,CAAP;IACH,CAHc,CAAf;IAIA,KAAKlI,WAAL,GAAmBA,WAAnB;IACA,KAAKnjB,YAAL,GAAoBA,YAApB;IACA,KAAK4R,cAAL,GAAsB,IAAA9S,uBAAA,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAtB;IACA,KAAK6wB,mBAAL;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIjL,eAAe,CAACN,MAAD,EAASxS,cAAT,EAAyB;IACpC,KAAK6c,KAAL,GAAarK,MAAb;IACA,IAAIxgB,GAAG,GAAG,KAAKgsB,kBAAL,CAAwBhe,cAAxB,CAAV;IACA,IAAIkS,MAAM,GAAG,EAAb;;IACA,IAAI,KAAKsL,kBAAT,EAA6B;MACzBtL,MAAM,CAACxhB,IAAP,CAAY,KAAK8sB,kBAAjB;IACH;;IACDtL,MAAM,GAAGA,MAAM,CAACsB,MAAP,CAAc,KAAKtB,MAAL,CAAYljB,GAAZ,CAAiBmjB,CAAD,KAAQ;MAC3C/lB,IAAI,EAAEgmB,qBAAA,CAAiB4I,WADoB;MAE3C3uB,OAAO,EAAE8lB,CAAC,CAAC9lB;IAFgC,CAAR,CAAhB,CAAd,CAAT;;IAIA,IAAI6lB,MAAM,CAACjX,MAAP,GAAgB,CAApB,EAAuB;MACnBjJ,GAAG,GAAG,IAAAsgB,yBAAA,GAAN;IACH;;IACD,OAAO;MACHtgB,GADG;MAEHkgB;IAFG,CAAP;EAIH;;EACD+L,KAAK,GAAG;IACJ,MAAMA,KAAN;IACA,KAAKT,kBAAL,GAA0BtxB,SAA1B;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI8xB,kBAAkB,CAAC9zB,OAAD,EAAU;IACxB,KAAK8V,cAAL,GAAsB9V,OAAtB;IACA,OAAO,KAAK6G,OAAL,EAAP;EACH;;EACD2qB,cAAc,CAACd,YAAD,EAAeE,aAAf,EAA8B7G,iBAA9B,EAAiD;IAC3D,IAAI2G,YAAY,CAAChuB,KAAb,KAAuBV,SAAvB,IAAoC4uB,aAAa,CAACluB,KAAd,KAAwBV,SAAhE,EAA2E;MACvE,OAAO,KAAKK,YAAL,CAAkB6lB,qBAAA,CAAiB4I,WAAnC,EAAgD,4BAAhD,CAAP;IACH;;IACD,MAAM;MAAEC,QAAF;MAAYC,SAAZ;MAAuBC;IAAvB,IAAwCxJ,aAAa,CAACyJ,uBAAd,CAAsCR,YAAtC,EAAoDE,aAApD,CAA9C;IACA,MAAM;MAAEprB,KAAF;MAASC;IAAT,IAAiB,KAAKuuB,kBAAL,CAAwBjD,QAAxB,EAAkCC,SAAlC,CAAvB;IACA,OAAO,IAAAhF,sBAAA,EAAkBxmB,KAAlB,EAAyBC,GAAzB,EAA8BwrB,YAA9B,EAA4ClH,iBAA5C,CAAP;EACH;;EAC6B,OAAvBmH,uBAAuB,CAACH,QAAD,EAAWC,SAAX,EAAsB;IAChD,MAAMC,YAAY,GAAGxJ,aAAa,CAACwM,uBAAd,CAAsClD,QAAQ,CAACruB,KAA/C,EAAsDsuB,SAAS,CAACtuB,KAAhE,CAArB;IACA,MAAMwxB,cAAc,GAAInD,QAAQ,CAACruB,KAAT,KAAmBV,SAAnB,IAAgCgvB,SAAS,CAACtuB,KAAV,KAAoBV,SAArD,GACjBgvB,SAAS,CAACtO,SAAV,CAAoBqO,QAAQ,CAACruB,KAA7B,CADiB,GAEjBsuB,SAFN;IAGA,OAAO;MAAED,QAAF;MAAYC,SAAS,EAAEkD,cAAvB;MAAuCjD;IAAvC,CAAP;EACH;;EACD+C,kBAAkB,CAACG,IAAD,EAAOC,IAAP,EAAa;IAC3B,MAAMC,IAAI,GAAG,CAACF,IAAD,EAAOC,IAAP,CAAb;IACA,MAAM,CAAC1a,QAAD,EAAWC,MAAX,IAAqB0a,IAAI,CAACvvB,GAAL,CAASmjB,CAAC,IAAIA,CAAC,CAACpG,eAAF,EAAd,EAAmCyS,IAAnC,CAAwChV,4BAAA,CAAc8D,wBAAd,CAAuC,KAAKtN,cAA5C,CAAxC,CAA3B;IACA,MAAM,CAACuD,QAAD,EAAWG,MAAX,IAAqB6a,IAAI,CAACvvB,GAAL,CAASmjB,CAAC,IAAIA,CAAC,CAAC9F,YAAF,EAAd,EAAgCmS,IAAhC,CAAqC9U,sBAAA,CAAW4D,wBAAX,CAAoC,KAAKtN,cAAzC,CAArC,CAA3B;IACA,MAAM,CAACye,UAAD,EAAaC,QAAb,IAAyBH,IAAI,CAACvvB,GAAL,CAASmjB,CAAC,IAAIA,CAAC,CAACvlB,KAAhB,EAAuB4xB,IAAvB,CAA4B7M,aAAa,CAACgN,eAAd,CAA8BjT,IAA9B,CAAmC,IAAnC,CAA5B,CAA/B;IACA,OAAO;MACHhc,KAAK,EAAEwZ,wBAAA,CAAYoC,aAAZ,CAA0B1H,QAA1B,EAAoCL,QAApC,EAA8Ckb,UAA9C,CADJ;MAEH9uB,GAAG,EAAEuZ,wBAAA,CAAYoC,aAAZ,CAA0BzH,MAA1B,EAAkCH,MAAlC,EAA0Cgb,QAA1C;IAFF,CAAP;EAIH;;EACDrD,oBAAoB,CAACgD,IAAD,EAAOC,IAAP,EAAa;IAC7B,MAAMC,IAAI,GAAG,CAACF,IAAD,EAAOC,IAAP,CAAb;IACA,MAAM,CAAC1a,QAAD,EAAWC,MAAX,IAAqB0a,IAAI,CAACC,IAAL,CAAUhV,4BAAA,CAAc8D,wBAAd,CAAuC,KAAKtN,cAA5C,CAAV,CAA3B;IACA,MAAM,CAACye,UAAD,EAAaC,QAAb,IAAyBH,IAAI,CAACvvB,GAAL,CAASmjB,CAAC,IAAIA,CAAC,CAACvlB,KAAhB,EAAuB4xB,IAAvB,CAA4B7M,aAAa,CAACgN,eAAd,CAA8BjT,IAA9B,CAAmC,IAAnC,CAA5B,CAA/B;IACA,OAAO;MACHhc,KAAK,EAAE,IAAI8Z,4BAAJ,CAAkB5F,QAAQ,CAACxX,IAA3B,EAAiCwX,QAAQ,CAAC5W,GAA1C,EAA+CyxB,UAA/C,CADJ;MAEH9uB,GAAG,EAAE,IAAI6Z,4BAAJ,CAAkB3F,MAAM,CAACzX,IAAzB,EAA+ByX,MAAM,CAAC7W,GAAtC,EAA2C0xB,QAA3C;IAFF,CAAP;EAIH;;EACDnD,iBAAiB,CAAC8C,IAAD,EAAOC,IAAP,EAAa;IAC1B,MAAMC,IAAI,GAAG,CAACF,IAAD,EAAOC,IAAP,CAAb;IACA,MAAM,CAAC/a,QAAD,EAAWG,MAAX,IAAqB6a,IAAI,CAACC,IAAL,CAAU9U,sBAAA,CAAW4D,wBAAX,CAAoC,KAAKtN,cAAzC,CAAV,CAA3B;IACA,MAAM,CAACye,UAAD,EAAaC,QAAb,IAAyBH,IAAI,CAACvvB,GAAL,CAASmjB,CAAC,IAAIA,CAAC,CAACvlB,KAAhB,EAAuB4xB,IAAvB,CAA4B7M,aAAa,CAACgN,eAAd,CAA8BjT,IAA9B,CAAmC,IAAnC,CAA5B,CAA/B;IACA,OAAO;MACHhc,KAAK,EAAE,IAAIga,sBAAJ,CAAenG,QAAQ,CAACnX,IAAxB,EAA8BmX,QAAQ,CAAC1W,GAAvC,EAA4C4xB,UAA5C,CADJ;MAEH9uB,GAAG,EAAE,IAAI+Z,sBAAJ,CAAehG,MAAM,CAACtX,IAAtB,EAA4BsX,MAAM,CAAC7W,GAAnC,EAAwC6xB,QAAxC;IAFF,CAAP;EAIH;;EACqB,OAAfC,eAAe,CAACC,MAAD,EAASC,MAAT,EAAiB;IACnCD,MAAM,GAAGA,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0BE,QAAnC;IACAD,MAAM,GAAGA,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0BC,QAAnC;IACA,OAAOF,MAAM,GAAGC,MAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIrE,qBAAqB,CAAClG,IAAD,EAAO;IACxB,MAAMyK,OAAO,GAAGzK,IAAI,CAAC,CAAD,CAApB;;IACA,IAAIyK,OAAO,CAAC3yB,IAAR,KAAiB4V,gBAAA,CAAY0S,cAAjC,EAAiD;MAC7C,OAAO,KAAKnoB,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,6CAAtD,CAAP;IACH;;IACD,MAAMC,OAAO,GAAG3K,IAAI,CAAC,CAAD,CAApB;IACA,IAAI4K,QAAJ;;IACA,IAAID,OAAO,CAAC7yB,IAAR,KAAiB4V,gBAAA,CAAY7W,MAA7B,IAAuC0X,MAAM,CAACsc,SAAP,CAAiBF,OAAO,CAAC7rB,KAAzB,CAA3C,EAA4E;MACxE8rB,QAAQ,GAAGD,OAAO,CAAC7rB,KAAnB;IACH,CAFD,MAGK,IAAI6rB,OAAO,CAAC7yB,IAAR,KAAiB4V,gBAAA,CAAYiT,aAA7B,IAA8CgK,OAAO,CAAC7rB,KAAR,CAAchH,IAAd,KAAuB4V,gBAAA,CAAY7W,MAAjF,IAA2F0X,MAAM,CAACsc,SAAP,CAAiBF,OAAO,CAAC7rB,KAAR,CAAcA,KAA/B,CAA/F,EAAsI;MACvI8rB,QAAQ,GAAGD,OAAO,CAAC7rB,KAAR,CAAcA,KAAzB;IACH,CAFI,MAGA,IAAI6rB,OAAO,CAAC7yB,IAAR,KAAiB4V,gBAAA,CAAYgT,cAA7B,IAA+CiK,OAAO,CAAC7rB,KAAR,CAAchH,IAAd,KAAuB4V,gBAAA,CAAY7W,MAAlF,IAA4F0X,MAAM,CAACsc,SAAP,CAAiBF,OAAO,CAAC7rB,KAAR,CAAcA,KAA/B,CAAhG,EAAuI;MACxI8rB,QAAQ,GAAG,CAACD,OAAO,CAAC7rB,KAAR,CAAcA,KAA1B;IACH,CAFI,MAGA;MACD,OAAO,KAAK7G,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,kDAAtD,CAAP;IACH;;IACD,MAAMI,UAAU,GAAG9K,IAAI,CAAC,CAAD,CAAvB;IACA,IAAI+K,QAAJ;;IACA,IAAID,UAAU,CAAChzB,IAAX,KAAoB4V,gBAAA,CAAY7W,MAAhC,IAA0C0X,MAAM,CAACsc,SAAP,CAAiBC,UAAU,CAAChsB,KAA5B,CAA9C,EAAkF;MAC9EisB,QAAQ,GAAGD,UAAU,CAAChsB,KAAtB;IACH,CAFD,MAGK,IAAIgsB,UAAU,CAAChzB,IAAX,KAAoB4V,gBAAA,CAAYiT,aAAhC,IAAiDmK,UAAU,CAAChsB,KAAX,CAAiBhH,IAAjB,KAA0B4V,gBAAA,CAAY7W,MAAvF,IAAiG0X,MAAM,CAACsc,SAAP,CAAiBC,UAAU,CAAChsB,KAAX,CAAiBA,KAAlC,CAArG,EAA+I;MAChJisB,QAAQ,GAAGD,UAAU,CAAChsB,KAAX,CAAiBA,KAA5B;IACH,CAFI,MAGA,IAAIgsB,UAAU,CAAChzB,IAAX,KAAoB4V,gBAAA,CAAYgT,cAAhC,IAAkDoK,UAAU,CAAChsB,KAAX,CAAiBhH,IAAjB,KAA0B4V,gBAAA,CAAY7W,MAAxF,IAAkG0X,MAAM,CAACsc,SAAP,CAAiBC,UAAU,CAAChsB,KAAX,CAAiBA,KAAlC,CAAtG,EAAgJ;MACjJisB,QAAQ,GAAG,CAACD,UAAU,CAAChsB,KAAX,CAAiBA,KAA7B;IACH,CAFI,MAGA;MACD,OAAO,KAAK7G,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,iDAAtD,CAAP;IACH;;IACD,MAAMM,SAAS,GAAGhL,IAAI,CAAC,CAAD,CAAtB;IACA,IAAIxZ,MAAJ;;IACA,IAAIwkB,SAAS,KAAKpzB,SAAlB,EAA6B;MACzB4O,MAAM,GAAG,CAAT;IACH,CAFD,MAGK,IAAIwkB,SAAS,CAAClzB,IAAV,KAAmB4V,gBAAA,CAAY7W,MAAnC,EAA2C;MAC5C2P,MAAM,GAAGwkB,SAAS,CAAClsB,KAAnB;;MACA,IAAI0H,MAAM,GAAG,CAAb,EAAgB;QACZ,OAAO,KAAKvO,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,+CAAtD,CAAP;MACH,CAFD,MAGK,IAAI,CAACnc,MAAM,CAACsc,SAAP,CAAiBrkB,MAAjB,CAAL,EAA+B;QAChC,OAAO,KAAKvO,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,0CAAtD,CAAP;MACH;IACJ,CARI,MASA;MACD,OAAO,KAAKzyB,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,kDAAtD,CAAP;IACH;;IACD,MAAMO,QAAQ,GAAGjL,IAAI,CAAC,CAAD,CAArB;IACA,IAAIzZ,KAAJ;;IACA,IAAI0kB,QAAQ,KAAKrzB,SAAjB,EAA4B;MACxB2O,KAAK,GAAG,CAAR;IACH,CAFD,MAGK,IAAI0kB,QAAQ,CAACnzB,IAAT,KAAkB4V,gBAAA,CAAY7W,MAAlC,EAA0C;MAC3C0P,KAAK,GAAG0kB,QAAQ,CAACnsB,KAAjB;;MACA,IAAIyH,KAAK,GAAG,CAAZ,EAAe;QACX,OAAO,KAAKtO,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,8CAAtD,CAAP;MACH,CAFD,MAGK,IAAI,CAACnc,MAAM,CAACsc,SAAP,CAAiBtkB,KAAjB,CAAL,EAA8B;QAC/B,OAAO,KAAKtO,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,yCAAtD,CAAP;MACH;IACJ,CARI,MASA;MACD,OAAO,KAAKzyB,YAAL,CAAkB6lB,qBAAA,CAAiB4M,iBAAnC,EAAsD,iDAAtD,CAAP;IACH;;IACD,MAAMpc,aAAa,GAAG,IAAIsG,wBAAJ,CAAgB6V,OAAO,CAACpK,SAAR,CAAkB3nB,GAAlB,GAAwBqyB,QAAxC,EAAkDN,OAAO,CAACpK,SAAR,CAAkB9nB,GAAlB,GAAwBqyB,QAA1E,EAAoFH,OAAO,CAACpK,SAAR,CAAkBvoB,IAAtG,CAAtB;IACA,IAAIgd,WAAW,GAAGxG,aAAa,CAAC5V,GAAhC;IACA,IAAIqc,WAAW,GAAGzG,aAAa,CAAC/V,GAAhC;;IACA,IAAIkyB,OAAO,CAACpK,SAAR,CAAkBvoB,IAAlB,KAA2Bif,8BAAA,CAAkBM,uBAA7C,IACGoT,OAAO,CAACpK,SAAR,CAAkBvoB,IAAlB,KAA2Bif,8BAAA,CAAkBQ,2BADpD,EACiF;MAC7ExC,WAAW,GAAGA,WAAW,GAAG,KAAKrJ,cAAL,CAAoBnT,GAAhD;IACH;;IACD,IAAIkyB,OAAO,CAACpK,SAAR,CAAkBvoB,IAAlB,KAA2Bif,8BAAA,CAAkBM,uBAA7C,IACGoT,OAAO,CAACpK,SAAR,CAAkBvoB,IAAlB,KAA2Bif,8BAAA,CAAkBS,2BADpD,EACiF;MAC7E;MACA1C,WAAW,GAAGA,WAAW,GAAG,KAAKpJ,cAAL,CAAoBhT,GAAhD;IACH;;IACD,IAAIoc,WAAW,GAAG,CAAd,IAAmBC,WAAW,GAAG,CAArC,EAAwC;MACpC,OAAO,IAAAgP,sBAAA,EAAkB,IAAI1sB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,EAA6BrS,0BAAA,CAAagzB,UAA1C,CAAlB,CAAP;IACH;;IACD,IAAI3kB,KAAK,KAAK,CAAV,IAAeC,MAAM,KAAK,CAA9B,EAAiC;MAC7B,OAAO,IAAAmb,0BAAA,EAAsBrT,aAAtB,CAAP;IACH,CAFD,MAGK;MACD,MAAM6c,iBAAiB,GAAG,IAAIvW,wBAAJ,CAAgBtG,aAAa,CAAC5V,GAAd,GAAoB6N,KAApB,GAA4B,CAA5C,EAA+C+H,aAAa,CAAC/V,GAAd,GAAoBiO,MAApB,GAA6B,CAA5E,EAA+E8H,aAAa,CAACxW,IAA7F,CAA1B;MACA,OAAO,IAAA8pB,sBAAA,EAAkBtT,aAAlB,EAAiC6c,iBAAjC,EAAoD3K,4BAAA,CAAwB3I,QAA5E,CAAP;IACH;EACJ;;EACD5f,YAAY,CAACH,IAAD,EAAOC,OAAP,EAAgB;IACxB,KAAKmxB,kBAAL,GAA0B,IAAAjxB,iBAAA,EAAaH,IAAb,EAAmBC,OAAnB,CAA1B;IACA,OAAO,IAAAimB,yBAAA,GAAP;EACH;;EAC6B,OAAvB6L,uBAAuB,CAACzuB,KAAD,EAAQC,GAAR,EAAa;IACvC,IAAID,KAAK,KAAKxD,SAAd,EAAyB;MACrB,OAAO4oB,4BAAA,CAAwB3I,QAA/B;IACH,CAFD,MAGK,IAAIxc,GAAG,KAAKzD,SAAZ,EAAuB;MACxB,OAAO4oB,4BAAA,CAAwB4K,cAA/B;IACH,CAFI,MAGA;MACD,OAAO5K,4BAAA,CAAwBC,aAA/B;IACH;EACJ;;AAhsBoD;;;;AAksBlD,MAAMtD,YAAN,CAAmB;EACtBtlB,WAAW,CAAColB,WAAD,EAAc;IACrB,KAAKA,WAAL,GAAmBA,WAAnB;IACA,KAAKC,KAAL,GAAa,IAAItD,iBAAJ,CAAUqD,WAAW,CAACH,SAAtB,EAAiC;MAAEuO,mBAAmB,EAAE;IAAvB,CAAjC,CAAb;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI1N,eAAe,CAACF,IAAD,EAAO;IAClB,MAAM6N,YAAY,GAAG,KAAKpO,KAAL,CAAWqO,QAAX,CAAoB9N,IAApB,CAArB;IACA,IAAIS,MAAM,GAAGoN,YAAY,CAACpN,MAA1B;IACAA,MAAM,GAAG,KAAKsN,uBAAL,CAA6BtN,MAA7B,CAAT;IACAA,MAAM,GAAG,KAAKuN,2BAAL,CAAiCvN,MAAjC,CAAT;IACAA,MAAM,GAAG,KAAKwN,kCAAL,CAAwCxN,MAAxC,CAAT;IACAoN,YAAY,CAACpN,MAAb,GAAsBA,MAAtB;IACA,OAAOoN,YAAP;EACH;;EACDG,2BAA2B,CAACvN,MAAD,EAAS;IAChC,OAAOf,YAAY,CAACwO,uBAAb,CAAqCzN,MAArC,EAA6C,CAACqD,QAAD,EAAWD,OAAX,EAAoBlU,IAApB,KAA6B;MAC7E,OAAO,CAAC,IAAA4R,wBAAA,EAAauC,QAAb,EAAuBxG,0BAAvB,KAAyC,IAAAiE,wBAAA,EAAauC,QAAb,EAAuBrG,2BAAvB,CAA1C,KACA,IAAA8D,wBAAA,EAAasC,OAAb,EAAsB,KAAKrE,WAAL,CAAiBd,UAAvC,CADA,KAEC,IAAA6C,wBAAA,EAAa5R,IAAb,EAAmB2N,0BAAnB,KAAqC,IAAAiE,wBAAA,EAAa5R,IAAb,EAAmB8N,2BAAnB,CAFtC,CAAP;IAGH,CAJM,CAAP;EAKH;;EACDwQ,kCAAkC,CAACxN,MAAD,EAAS;IACvC,OAAOf,YAAY,CAACwO,uBAAb,CAAqCzN,MAArC,EAA6C,CAACqD,QAAD,EAAWD,OAAX,EAAoBlU,IAApB,KAA6B;MAC7E,OAAO,CAAC,IAAA4R,wBAAA,EAAauC,QAAb,EAAuB,KAAKtE,WAAL,CAAiBT,YAAxC,CAAD,IACA,IAAAwC,wBAAA,EAAasC,OAAb,EAAsB,KAAKrE,WAAL,CAAiBd,UAAvC,CADA,IAEA,IAAA6C,wBAAA,EAAa5R,IAAb,EAAmB,KAAK6P,WAAL,CAAiBT,YAApC,CAFP;IAGH,CAJM,CAAP;EAKH;;EAC6B,OAAvBmP,uBAAuB,CAACzN,MAAD,EAAS0N,eAAT,EAA0B;IACpD,IAAI1N,MAAM,CAACvX,MAAP,GAAgB,CAApB,EAAuB;MACnB,OAAOuX,MAAP;IACH;;IACD,IAAImD,CAAC,GAAG,CAAR;IACA,MAAMwK,cAAc,GAAG,CAAC3N,MAAM,CAACmD,CAAC,EAAF,CAAP,CAAvB;;IACA,OAAOA,CAAC,GAAGnD,MAAM,CAACvX,MAAP,GAAgB,CAA3B,EAA8B;MAC1B,IAAI,CAACilB,eAAe,CAAC1N,MAAM,CAACmD,CAAC,GAAG,CAAL,CAAP,EAAgBnD,MAAM,CAACmD,CAAD,CAAtB,EAA2BnD,MAAM,CAACmD,CAAC,GAAG,CAAL,CAAjC,CAApB,EAA+D;QAC3DwK,cAAc,CAACzvB,IAAf,CAAoB8hB,MAAM,CAACmD,CAAD,CAA1B;MACH;;MACD,EAAEA,CAAF;IACH;;IACDwK,cAAc,CAACzvB,IAAf,CAAoB8hB,MAAM,CAACmD,CAAD,CAA1B;IACA,OAAOwK,cAAP;EACH;;EACDL,uBAAuB,CAACtN,MAAD,EAAS;IAC5B,IAAIA,MAAM,CAACvX,MAAP,GAAgB,CAAhB,IAAqB,IAAAqY,wBAAA,EAAad,MAAM,CAACA,MAAM,CAACvX,MAAP,GAAgB,CAAjB,CAAnB,EAAwC,KAAKsW,WAAL,CAAiBd,UAAzD,CAAzB,EAA+F;MAC3F+B,MAAM,CAAC4N,GAAP;IACH;;IACD,OAAO5N,MAAP;EACH;;AArDqB;;;;;;;;;;;;;;ACjuB1B;AACA;AACA;AACA;;AACA;AACA;AACA;AACO,MAAMhmB,YAAN,CAAmB;;;AAE1BA,YAAY,CAAC6zB,aAAb,GAA6B,iBAA7B;AACA7zB,YAAY,CAAC8zB,cAAb,GAA8B,4BAA9B;AACA9zB,YAAY,CAAC+zB,QAAb,GAAwB,0BAAxB;AACA/zB,YAAY,CAACg0B,UAAb,GAA0B,0BAA1B;AACAh0B,YAAY,CAACi0B,eAAb,GAA+B,sCAA/B;AACAj0B,YAAY,CAACk0B,qBAAb,GAAqC,4BAArC;AACAl0B,YAAY,CAACm0B,UAAb,GAA0B,kBAA1B;AACAn0B,YAAY,CAACo0B,UAAb,GAA0B,kBAA1B;AACAp0B,YAAY,CAACq0B,YAAb,GAA4B,sBAA5B;AACAr0B,YAAY,CAACs0B,eAAb,GAA+B,kCAA/B;AACAt0B,YAAY,CAACu0B,iBAAb,GAAiC,sBAAjC;AACAv0B,YAAY,CAACw0B,cAAb,GAA8B,wBAA9B;AACAx0B,YAAY,CAACqP,cAAb,GAA8B,yBAA9B;AACArP,YAAY,CAACy0B,cAAb,GAA8B,oCAA9B;AACAz0B,YAAY,CAAC00B,cAAb,GAA8B,2BAA9B;AACA10B,YAAY,CAAC20B,eAAb,GAA+B,+BAA/B;AACA30B,YAAY,CAAC40B,OAAb,GAAuB,sBAAvB;AACA50B,YAAY,CAAC60B,UAAb,GAA0B,yBAA1B;AACA70B,YAAY,CAACgzB,UAAb,GAA0B,0CAA1B;AACAhzB,YAAY,CAAC80B,SAAb,GAAyB,yBAAzB;AACA90B,YAAY,CAAC+0B,GAAb,GAAmB,oCAAnB;AACA/0B,YAAY,CAACg1B,WAAb,GAA2B,oCAA3B;AACAh1B,YAAY,CAACi1B,QAAb,GAAwB,2BAAxB;AACAj1B,YAAY,CAACk1B,SAAb,GAAyB,4CAAzB;AACAl1B,YAAY,CAACm1B,QAAb,GAAwB,4CAAxB;AACAn1B,YAAY,CAACo1B,MAAb,GAAsB,iDAAtB;AACAp1B,YAAY,CAACq1B,cAAb,GAA8B,+CAA9B;AACAr1B,YAAY,CAACs1B,eAAb,GAA+B,0BAA/B;AACAt1B,YAAY,CAACu1B,UAAb,GAA0B,0BAA1B;AACAv1B,YAAY,CAACw1B,MAAb,GAAsB,yBAAtB;AACAx1B,YAAY,CAACy1B,WAAb,GAA2B,6BAA3B;AACAz1B,YAAY,CAAC01B,aAAb,GAA6B,kBAA7B;AACA11B,YAAY,CAAC21B,cAAb,GAA8B,0BAA9B;AACA31B,YAAY,CAAC41B,cAAb,GAA8B,0BAA9B;AACA51B,YAAY,CAAC61B,aAAb,GAA6B,yBAA7B;AACA71B,YAAY,CAAC81B,cAAb,GAA8B,4BAA9B;AACA91B,YAAY,CAAC+1B,eAAb,GAA+B,oBAA/B;AACA/1B,YAAY,CAACg2B,QAAb,GAAwB,2BAAxB;AACAh2B,YAAY,CAACi2B,SAAb,GAAyB,+CAAzB;AACAj2B,YAAY,CAACk2B,WAAb,GAA2B,iDAA3B;AACAl2B,YAAY,CAACm2B,WAAb,GAA2B,sBAA3B;AACAn2B,YAAY,CAACo2B,UAAb,GAA0B,kBAA1B;AACAp2B,YAAY,CAACq2B,OAAb,GAAuB,mBAAvB;AACAr2B,YAAY,CAACs2B,aAAb,GAA6B,2BAA7B;AACAt2B,YAAY,CAACC,UAAb,GAA0B,gBAA1B;AACAD,YAAY,CAACu2B,QAAb,GAAwB,uBAAxB;AACAv2B,YAAY,CAACw2B,UAAb,GAA0B,0CAA1B;AACAx2B,YAAY,CAACy2B,WAAb,GAA2B,eAA3B;AACAz2B,YAAY,CAAC02B,YAAb,GAA4B,iCAA5B;AACA12B,YAAY,CAAC22B,WAAb,GAA2B,oCAA3B;AACA32B,YAAY,CAAC42B,YAAb,GAA4B,uBAA5B;AACA52B,YAAY,CAAC62B,YAAb,GAA4B,0BAA5B;AACA72B,YAAY,CAAC82B,SAAb,GAAyB,oBAAzB;AACA92B,YAAY,CAAC+2B,QAAb,GAAwB,iDAAxB;AACA/2B,YAAY,CAACg3B,YAAb,GAA4B,+CAA5B;AACAh3B,YAAY,CAACi3B,iBAAb,GAAiC,6CAAjC;AACAj3B,YAAY,CAACk3B,mBAAb,GAAmC,+BAAnC;AACAl3B,YAAY,CAACm3B,OAAb,GAAuB,uBAAvB;AACAn3B,YAAY,CAACo3B,WAAb,GAA2B,iCAA3B;AACAp3B,YAAY,CAACq3B,aAAb,GAA6B,mCAA7B;AACAr3B,YAAY,CAACs3B,YAAb,GAA4B,wBAA5B;AACAt3B,YAAY,CAACu3B,UAAb,GAA0B,wBAA1B;AACAv3B,YAAY,CAACw3B,qBAAb,GAAqC,0BAArC;AACAx3B,YAAY,CAACy3B,YAAb,GAA4B,2BAA5B;AACAz3B,YAAY,CAAC03B,YAAb,GAA4B,8BAA5B;;AACA13B,YAAY,CAAC23B,YAAb,GAA6Bj5B,GAAD,IAAU,iBAAgBA,GAAI,kBAA1D;;AACAsB,YAAY,CAAC43B,mBAAb,GAAoCl5B,GAAD,IAAU,oBAAmBA,GAAI,kBAApE;;AACAsB,YAAY,CAAC63B,UAAb,GAA2Bn5B,GAAD,IAAU,kBAAiBA,GAAI,GAAzD,C;;;;;;;;;;;;;ACxEA;;AACA;;AACA;;AACA;;AACA;;AARA;AACA;AACA;AACA;AAMO,MAAMo5B,QAAN,CAAe;EAClBn4B,WAAW,CAACqF,MAAD,EAAS+f,WAAT,EAAsBvG,cAAtB,EAAsCvc,gBAAtC,EAAwD;IAC/D,KAAK+C,MAAL,GAAcA,MAAd;IACA,KAAK+f,WAAL,GAAmBA,WAAnB;IACA,KAAKvG,cAAL,GAAsBA,cAAtB;IACA,KAAKvc,gBAAL,GAAwBA,gBAAxB;EACH;;EACDye,OAAO,CAAClb,GAAD,EAAM9H,OAAN,EAAe;IAClB,OAAO,MAAM,KAAKq6B,UAAL,CAAgBvyB,GAAhB,EAAqB9H,OAArB,CAAb;EACH;;EACDq6B,UAAU,CAACvyB,GAAD,EAAM9H,OAAN,EAAe;IACrB,IAAI2D,EAAJ,EAAQ22B,EAAR;;IACA,QAAQxyB,GAAG,CAAC5F,IAAZ;MACI,KAAK4V,gBAAA,CAAYpX,KAAjB;QAAwB;UACpB,OAAO,IAAAspB,wBAAA,EAAoB,EAApB,EAAwBliB,GAAG,CAACiiB,iBAA5B,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAY7W,MAAjB;QAAyB;UACrB,OAAO,IAAA+oB,wBAAA,EAAoBC,YAAY,CAACniB,GAAG,CAACoB,KAAL,EAAY,KAAK5B,MAAL,CAAY0f,gBAAxB,CAAhC,EAA2Elf,GAAG,CAACiiB,iBAA/E,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAY5W,MAAjB;QAAyB;UACrB,OAAO,IAAA8oB,wBAAA,EAAoB,MAAMliB,GAAG,CAACoB,KAAV,GAAkB,GAAtC,EAA2CpB,GAAG,CAACiiB,iBAA/C,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAYqS,aAAjB;QAAgC;UAC5B,MAAMC,IAAI,GAAGtiB,GAAG,CAACsiB,IAAJ,CAAStlB,GAAT,CAAc9D,GAAD,IAASA,GAAG,KAAKgB,SAAR,GAAoB,KAAKq4B,UAAL,CAAgBr5B,GAAhB,EAAqBhB,OAArB,CAApB,GAAoD,EAA1E,EAA8EqqB,IAA9E,CAAmF,KAAK/iB,MAAL,CAAYwf,oBAA/F,CAAb;UACA,MAAMyC,aAAa,GAAG,KAAKjiB,MAAL,CAAYK,kBAAZ,CAA+B4yB,oBAA/B,CAAoDzyB,GAAG,CAACyhB,aAAxD,IAClB,KAAKjiB,MAAL,CAAYK,kBAAZ,CAA+Bse,sBAA/B,CAAsDne,GAAG,CAACyhB,aAA1D,CADkB,GAElBzhB,GAAG,CAACyhB,aAFR;UAGA,MAAMe,SAAS,GAAGf,aAAa,GAAG,GAAhB,GAAsBa,IAAtB,GAA6B,IAAAJ,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACyiB,kBAA7B,CAA/C;UACA,OAAO,IAAAP,wBAAA,EAAoBM,SAApB,EAA+BxiB,GAAG,CAACiiB,iBAAnC,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAYoS,gBAAjB;QAAmC;UAC/B,MAAMsQ,2BAA2B,GAAG,CAAC72B,EAAE,GAAG,KAAKY,gBAAL,CAAsBk2B,sBAAtB,CAA6C3yB,GAAG,CAAC6D,cAAjD,EAAiE3L,OAAO,CAAC0C,KAAzE,CAAN,MAA2F,IAA3F,IAAmGiB,EAAE,KAAK,KAAK,CAA/G,GAAmH,KAAK,CAAxH,GAA4HA,EAAE,CAAC+2B,WAAnK;UACA,OAAO,IAAA1Q,wBAAA,EAAoBwQ,2BAA2B,IAAI1yB,GAAG,CAAC6D,cAAvD,EAAuE7D,GAAG,CAACiiB,iBAA3E,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAY0S,cAAjB;QAAiC;UAC7B,IAAInB,KAAJ;;UACA,IAAIvhB,GAAG,CAAC2iB,SAAJ,CAAc/nB,KAAd,KAAwBV,SAA5B,EAAuC;YACnCqnB,KAAK,GAAG,KAAKsR,gBAAL,CAAsB7yB,GAAG,CAAC2iB,SAAJ,CAAc/nB,KAApC,IAA6C,GAArD;UACH,CAFD,MAGK;YACD2mB,KAAK,GAAG,EAAR;UACH;;UACDA,KAAK,IAAI,CAACiR,EAAE,GAAGxyB,GAAG,CAAC2iB,SAAJ,CAAczH,OAAd,CAAsBhjB,OAAtB,CAAN,MAA0C,IAA1C,IAAkDs6B,EAAE,KAAK,KAAK,CAA9D,GAAkEA,EAAlE,GAAuE,KAAKhzB,MAAL,CAAYK,kBAAZ,CAA+BsjB,mBAA/B,CAAmDpuB,eAAA,CAAU8X,GAA7D,CAAhF;UACA,OAAO,IAAAqV,wBAAA,EAAoBX,KAApB,EAA2BvhB,GAAG,CAACiiB,iBAA/B,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAYG,YAAjB;MACA,KAAKH,gBAAA,CAAY4S,SAAjB;MACA,KAAK5S,gBAAA,CAAYC,UAAjB;QAA6B;UACzB,OAAO,IAAAiS,wBAAA,EAAoB,KAAK4Q,WAAL,CAAiB9yB,GAAjB,EAAsB9H,OAAtB,CAApB,EAAoD8H,GAAG,CAACiiB,iBAAxD,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAYiT,aAAjB;QAAgC;UAC5B,MAAM8P,YAAY,GAAG,KAAKR,UAAL,CAAgBvyB,GAAG,CAACoB,KAApB,EAA2BlJ,OAA3B,CAArB;UACA,OAAO,IAAAgqB,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACiiB,iBAA7B,IAAkD8Q,YAAzD;QACH;;MACD,KAAK/iB,gBAAA,CAAYgT,cAAjB;QAAiC;UAC7B,MAAM+P,YAAY,GAAG,KAAKR,UAAL,CAAgBvyB,GAAG,CAACoB,KAApB,EAA2BlJ,OAA3B,CAArB;UACA,OAAO,IAAAgqB,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACiiB,iBAA7B,IAAkD8Q,YAAzD;QACH;;MACD,KAAK/iB,gBAAA,CAAYkT,UAAjB;QAA6B;UACzB,OAAO,KAAKqP,UAAL,CAAgBvyB,GAAG,CAACoB,KAApB,EAA2BlJ,OAA3B,IAAsC,IAAAgqB,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACiiB,iBAA7B,CAA7C;QACH;;MACD,KAAKjS,gBAAA,CAAY1W,KAAjB;QAAwB;UACpB,MAAMioB,KAAK,GAAG,KAAK/hB,MAAL,CAAYK,kBAAZ,CAA+BsjB,mBAA/B,CAAmDnjB,GAAG,CAACojB,KAAJ,GAAYpjB,GAAG,CAACojB,KAAJ,CAAUhpB,IAAtB,GAA6BrF,eAAA,CAAUuE,KAA1F,CAAd;UACA,OAAO,IAAA4oB,wBAAA,EAAoBX,KAApB,EAA2BvhB,GAAG,CAACiiB,iBAA/B,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAYqT,oBAAjB;QAAuC;UACnC,OAAO,IAAAnB,wBAAA,EAAoBliB,GAAG,CAACsjB,QAAxB,EAAkCtjB,GAAG,CAACiiB,iBAAtC,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAYuT,WAAjB;QAA8B;UAC1B,MAAMC,UAAU,GAAG,KAAK+O,UAAL,CAAgBvyB,GAAG,CAACwjB,UAApB,EAAgCtrB,OAAhC,CAAnB;UACA,MAAMsqB,SAAS,GAAG,MAAMgB,UAAN,GAAmB,IAAAtB,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACyiB,kBAA7B,CAArC;UACA,OAAO,IAAAP,wBAAA,EAAoBM,SAApB,EAA+BxiB,GAAG,CAACiiB,iBAAnC,CAAP;QACH;;MACD,KAAKjS,gBAAA,CAAY1X,KAAjB;QAAwB;UACpB,MAAMgU,GAAG,GAAG,MAAMtM,GAAG,CAACsiB,IAAJ,CAAStlB,GAAT,CAAanC,GAAG,IAAIA,GAAG,CAACmC,GAAJ,CAAQoY,GAAG,IAAI,KAAKmd,UAAL,CAAgBnd,GAAhB,EAAqBld,OAArB,CAAf,EAA8CqqB,IAA9C,CAAmD,KAAK/iB,MAAL,CAAYqf,oBAA/D,CAApB,EAA0G0D,IAA1G,CAA+G,KAAK/iB,MAAL,CAAYmf,iBAA3H,CAAN,GAAsJ,IAAAuD,wBAAA,EAAoB,GAApB,EAAyBliB,GAAG,CAACyiB,kBAA7B,CAAlK;UACA,OAAO,IAAAP,wBAAA,EAAoB5V,GAApB,EAAyBtM,GAAG,CAACiiB,iBAA7B,CAAP;QACH;;MACD;QAAS;UACL,MAAMlmB,IAAI,GAAG,KAAKw2B,UAAL,CAAgBvyB,GAAG,CAACjE,IAApB,EAA0B7D,OAA1B,CAAb;UACA,MAAM8D,KAAK,GAAG,KAAKu2B,UAAL,CAAgBvyB,GAAG,CAAChE,KAApB,EAA2B9D,OAA3B,CAAd;UACA,OAAO6D,IAAI,GAAG,IAAAmmB,wBAAA,EAAoBuB,kCAAA,CAAiBzjB,GAAG,CAAC5F,IAArB,CAApB,EAAgD4F,GAAG,CAACiiB,iBAApD,CAAP,GAAgFjmB,KAAvF;QACH;IArEL;EAuEH;;EACD62B,gBAAgB,CAAC/uB,OAAD,EAAU;IACtB,MAAMoG,SAAS,GAAG,IAAAoO,mDAAA,EAAmBxU,OAAnB,EAA4B,KAAKkV,cAAjC,CAAlB;;IACA,IAAI9O,SAAS,KAAKhQ,SAAlB,EAA6B;MACzB,MAAM,IAAI1D,yBAAJ,CAAuBsN,OAAvB,CAAN;IACH;;IACD,OAAOoG,SAAP;EACH;;EACD4oB,WAAW,CAAC9yB,GAAD,EAAMpE,WAAN,EAAmB;IAC1B,IAAIo3B,WAAW,GAAG,EAAlB;IACA,IAAItG,QAAQ,GAAG,EAAf;;IACA,IAAI1sB,GAAG,CAACtC,KAAJ,CAAU9C,KAAV,KAAoBV,SAApB,IAAkC8F,GAAG,CAAC6iB,kBAAJ,KAA2BC,4BAAA,CAAwB3I,QAAzF,EAAoG;MAChG6Y,WAAW,GAAG,KAAKH,gBAAL,CAAsB7yB,GAAG,CAACtC,KAAJ,CAAU9C,KAAhC,IAAyC,GAAvD;IACH;;IACD,IAAIoF,GAAG,CAACrC,GAAJ,CAAQ/C,KAAR,KAAkBV,SAAlB,IAA+B8F,GAAG,CAAC6iB,kBAAJ,KAA2BC,4BAAA,CAAwBC,aAAtF,EAAqG;MACjG2J,QAAQ,GAAG,KAAKmG,gBAAL,CAAsB7yB,GAAG,CAACrC,GAAJ,CAAQ/C,KAA9B,IAAuC,GAAlD;IACH;;IACD,MAAMq4B,aAAa,GAAGjzB,GAAG,CAACtC,KAAJ,CAAUwd,OAAV,CAAkBtf,WAAlB,CAAtB;IACA,MAAMs3B,WAAW,GAAGlzB,GAAG,CAACrC,GAAJ,CAAQud,OAAR,CAAgBtf,WAAhB,CAApB;;IACA,IAAIq3B,aAAa,KAAK/4B,SAAlB,IAA+Bg5B,WAAW,KAAKh5B,SAAnD,EAA8D;MAC1D,OAAO,KAAKsF,MAAL,CAAYK,kBAAZ,CAA+BsjB,mBAA/B,CAAmDpuB,eAAA,CAAU8X,GAA7D,CAAP;IACH;;IACD,OAAQ,GAAEmmB,WAAY,GAAEC,aAAc,IAAGvG,QAAS,GAAEwG,WAAY,EAAhE;EACH;;AA1GiB;;;;AA4Gf,SAAS/Q,YAAT,CAAsB8I,MAAtB,EAA8B/L,gBAA9B,EAAgD;EACnD,MAAMiU,aAAa,GAAGlI,MAAM,CAACxY,QAAP,EAAtB;EACA,OAAO0gB,aAAa,CAACja,OAAd,CAAsB,GAAtB,EAA2BgG,gBAA3B,CAAP;AACH,C;;;;;;;;;;;;ACpHD;;AAJA;AACA;AACA;AACA;AAEA,MAAMkU,qBAAqB,GAAG,CAACpzB,GAAD,EAAMxD,gBAAN,EAAwB62B,eAAxB,EAAyCC,YAAzC,KAA0D;EACpF,QAAQtzB,GAAG,CAAC5F,IAAZ;IACI,KAAK4V,aAAA,CAAYpX,KAAjB;IACA,KAAKoX,aAAA,CAAY7W,MAAjB;IACA,KAAK6W,aAAA,CAAY5W,MAAjB;IACA,KAAK4W,aAAA,CAAY1W,KAAjB;MACI;;IACJ,KAAK0W,aAAA,CAAYoS,gBAAjB;MAAmC;QAC/B,IAAIkR,YAAJ,EAAkB;UACdD,eAAe,CAAC30B,IAAhB,CAAqB,IAAIpB,2BAAJ,CAA8B0C,GAAG,CAAC6D,cAAlC,CAArB;QACH;;QACD;MACH;;IACD,KAAKmM,aAAA,CAAY0S,cAAjB;MAAiC;QAC7B,IAAI4Q,YAAJ,EAAkB;UACdD,eAAe,CAAC30B,IAAhB,CAAqB,IAAI60B,mBAAJ,CAAsBvzB,GAAG,CAAC2iB,SAA1B,CAArB;QACH;;QACD;MACH;;IACD,KAAK3S,aAAA,CAAYC,UAAjB;MAA6B;QACzB,IAAIqjB,YAAY,IAAItzB,GAAG,CAACtC,KAAJ,CAAU9C,KAAV,KAAoBoF,GAAG,CAACrC,GAAJ,CAAQ/C,KAAhD,EAAuD;UACnDy4B,eAAe,CAAC30B,IAAhB,CAAqB,IAAI80B,qBAAJ,CAAwBxzB,GAAG,CAACtC,KAA5B,EAAmCsC,GAAG,CAACrC,GAAvC,CAArB;QACH;;QACD;MACH;;IACD,KAAKqS,aAAA,CAAYG,YAAjB;MAA+B;QAC3B,IAAImjB,YAAY,IAAItzB,GAAG,CAACtC,KAAJ,CAAU9C,KAAV,KAAoBoF,GAAG,CAACrC,GAAJ,CAAQ/C,KAAhD,EAAuD;UACnDy4B,eAAe,CAAC30B,IAAhB,CAAqB,IAAI+0B,uBAAJ,CAA0BzzB,GAAG,CAACtC,KAA9B,EAAqCsC,GAAG,CAACrC,GAAzC,CAArB;QACH;;QACD;MACH;;IACD,KAAKqS,aAAA,CAAY4S,SAAjB;MAA4B;QACxB,IAAI0Q,YAAY,IAAItzB,GAAG,CAACtC,KAAJ,CAAU9C,KAAV,KAAoBoF,GAAG,CAACrC,GAAJ,CAAQ/C,KAAhD,EAAuD;UACnDy4B,eAAe,CAAC30B,IAAhB,CAAqB,IAAIg1B,oBAAJ,CAAuB1zB,GAAG,CAACtC,KAA3B,EAAkCsC,GAAG,CAACrC,GAAtC,CAArB;QACH;;QACD;MACH;;IACD,KAAKqS,aAAA,CAAYkT,UAAjB;IACA,KAAKlT,aAAA,CAAYiT,aAAjB;IACA,KAAKjT,aAAA,CAAYgT,cAAjB;MAAiC;QAC7BoQ,qBAAqB,CAACpzB,GAAG,CAACoB,KAAL,EAAY5E,gBAAZ,EAA8B62B,eAA9B,EAA+C,IAA/C,CAArB;QACA;MACH;;IACD,KAAKrjB,aAAA,CAAYuU,cAAjB;IACA,KAAKvU,aAAA,CAAYyU,SAAjB;IACA,KAAKzU,aAAA,CAAY2U,YAAjB;IACA,KAAK3U,aAAA,CAAY+U,YAAjB;IACA,KAAK/U,aAAA,CAAY6U,eAAjB;IACA,KAAK7U,aAAA,CAAYmV,qBAAjB;IACA,KAAKnV,aAAA,CAAYiV,wBAAjB;IACA,KAAKjV,aAAA,CAAYuV,QAAjB;IACA,KAAKvV,aAAA,CAAYqV,OAAjB;IACA,KAAKrV,aAAA,CAAYyV,QAAjB;IACA,KAAKzV,aAAA,CAAY2V,MAAjB;IACA,KAAK3V,aAAA,CAAY6V,QAAjB;MACIuN,qBAAqB,CAACpzB,GAAG,CAACjE,IAAL,EAAWS,gBAAX,EAA6B62B,eAA7B,EAA8C,IAA9C,CAArB;MACAD,qBAAqB,CAACpzB,GAAG,CAAChE,KAAL,EAAYQ,gBAAZ,EAA8B62B,eAA9B,EAA+C,IAA/C,CAArB;MACA;;IACJ,KAAKrjB,aAAA,CAAYuT,WAAjB;MACI6P,qBAAqB,CAACpzB,GAAG,CAACwjB,UAAL,EAAiBhnB,gBAAjB,EAAmC62B,eAAnC,EAAoDC,YAApD,CAArB;MACA;;IACJ,KAAKtjB,aAAA,CAAYqS,aAAjB;MAAgC;QAC5B,MAAMsR,oBAAoB,GAAG,CAACn3B,gBAAgB,CAACo3B,oCAAjB,CAAsD5zB,GAAG,CAACyhB,aAA1D,CAA9B;QACAzhB,GAAG,CAACsiB,IAAJ,CAAS3f,OAAT,CAAkBkxB,MAAD,IAAYT,qBAAqB,CAACS,MAAD,EAASr3B,gBAAT,EAA2B62B,eAA3B,EAA4CM,oBAA5C,CAAlD;QACA;MACH;EAhEL;AAkEH,CAnED;;AAoEO,MAAMv0B,mBAAmB,GAAG,CAACY,GAAD,EAAMxD,gBAAN,KAA2B;EAC1D,MAAMsK,MAAM,GAAG,IAAIoE,KAAJ,EAAf;EACAkoB,qBAAqB,CAACpzB,GAAD,EAAMxD,gBAAN,EAAwBsK,MAAxB,EAAgC,IAAhC,CAArB;EACA,OAAOA,MAAP;AACH,CAJM;;;;;;;;;;;;;;ACrEP;;AAJA;AACA;AACA;AACA;AAEO,MAAMysB,iBAAN,CAAwB;EAC3Bp5B,WAAW,CAACkD,UAAD,EAAa;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;EACH;;EACDy2B,UAAU,CAACl4B,WAAD,EAAc;IACpB,OAAO,KAAKyB,UAAL,CAAgBsT,mBAAhB,CAAoC/U,WAApC,CAAP;EACH;;AAN0B;;;;AAQxB,MAAM43B,mBAAN,CAA0B;EAC7Br5B,WAAW,CAACuD,KAAD,EAAQC,GAAR,EAAa;IACpB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,GAAL,GAAWA,GAAX;EACH;;EACDm2B,UAAU,CAACl4B,WAAD,EAAc;IACpB,OAAO,IAAIkC,oCAAJ,CAAsB,KAAKJ,KAAL,CAAWiT,mBAAX,CAA+B/U,WAA/B,CAAtB,EAAmE,KAAK+B,GAAL,CAASgT,mBAAT,CAA6B/U,WAA7B,CAAnE,CAAP;EACH;;AAP4B;;;;AAS1B,MAAM63B,qBAAN,CAA4B;EAC/Bt5B,WAAW,CAACuD,KAAD,EAAQC,GAAR,EAAa;IACpB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,GAAL,GAAWA,GAAX;EACH;;EACDm2B,UAAU,CAACl4B,WAAD,EAAc;IACpB,MAAM8B,KAAK,GAAG,KAAKA,KAAL,CAAW0W,qBAAX,CAAiCxY,WAAjC,CAAd;IACA,MAAM+B,GAAG,GAAG,KAAKA,GAAL,CAASyW,qBAAT,CAA+BxY,WAA/B,CAAZ;IACA,OAAO,IAAIwU,sCAAJ,CAAwB1S,KAAK,CAAC9C,KAA9B,EAAqC8C,KAAK,CAAC1C,GAA3C,EAAgD2C,GAAG,CAAC3C,GAApD,CAAP;EACH;;AAT8B;;;;AAW5B,MAAM04B,kBAAN,CAAyB;EAC5Bv5B,WAAW,CAACuD,KAAD,EAAQC,GAAR,EAAa;IACpB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,GAAL,GAAWA,GAAX;EACH;;EACDm2B,UAAU,CAACl4B,WAAD,EAAc;IACpB,MAAM8B,KAAK,GAAG,KAAKA,KAAL,CAAWgX,kBAAX,CAA8B9Y,WAA9B,CAAd;IACA,MAAM+B,GAAG,GAAG,KAAKA,GAAL,CAAS+W,kBAAT,CAA4B9Y,WAA5B,CAAZ;IACA,OAAO,IAAI0U,mCAAJ,CAAqB5S,KAAK,CAAC9C,KAA3B,EAAkC8C,KAAK,CAAC7C,GAAxC,EAA6C8C,GAAG,CAAC9C,GAAjD,CAAP;EACH;;AAT2B;;;;AAWzB,MAAMyC,yBAAN,CAAgC;EACnCnD,WAAW,CAACqD,IAAD,EAAO;IACd,KAAKA,IAAL,GAAYA,IAAZ;EACH;;EACDs2B,UAAU,CAACC,YAAD,EAAe;IACrB,OAAO,IAAP;EACH;;AANkC;;;;;;;;;;;;;;AC5CvC;AACA;AACA;AACA;;AACA;AACA;AACA;AACO,MAAMnlB,QAAN,CAAe;EAClBzU,WAAW,CAACS,KAAD,EAAQ2K,QAAR,EAAkB0O,MAAlB,EAA0B;IACjC,KAAKrZ,KAAL,GAAaA,KAAb;IACA,KAAK2K,QAAL,GAAgBA,QAAhB;IACA,KAAK0O,MAAL,GAAcA,MAAd;;IACA,IAAI1O,QAAQ,GAAG,CAAf,EAAkB;MACd,MAAMhM,KAAK,CAAC,kCAAD,CAAX;IACH;;IACD,IAAI0a,MAAM,GAAG1O,QAAb,EAAuB;MACnB,MAAMhM,KAAK,CAAC,gCAAD,CAAX;IACH;EACJ;;EACe,IAAZiM,YAAY,GAAG;IACf,OAAO,KAAKyO,MAAL,GAAc,KAAK1O,QAAnB,GAA8B,CAArC;EACH;;EACQ,IAAL7H,KAAK,GAAG;IACR,OAAO,KAAK6H,QAAZ;EACH;;EACM,IAAH5H,GAAG,GAAG;IACN,OAAO,KAAKsW,MAAZ;EACH;;EACsB,OAAhB+f,gBAAgB,CAACp5B,KAAD,EAAQ2K,QAAR,EAAkBC,YAAlB,EAAgC;IACnD,OAAO,IAAIoJ,QAAJ,CAAahU,KAAb,EAAoB2K,QAApB,EAA8BA,QAAQ,GAAGC,YAAX,GAA0B,CAAxD,CAAP;EACH;;EACwB,OAAlBqJ,kBAAkB,CAACjU,KAAD,EAAQ2K,QAAR,EAAkB0O,MAAlB,EAA0B;IAC/C,OAAO,IAAIrF,QAAJ,CAAahU,KAAb,EAAoB2K,QAApB,EAA8B0O,MAA9B,CAAP;EACH;;EACI,CAAJggB,IAAI,GAAG;IACJ,KAAK,IAAIj5B,GAAG,GAAG,KAAKuK,QAApB,EAA8BvK,GAAG,IAAI,KAAKiZ,MAA1C,EAAkD,EAAEjZ,GAApD,EAAyD;MACrD,MAAMA,GAAN;IACH;EACJ;;EACDk5B,SAAS,CAACC,SAAD,EAAY;IACjB,IAAI,KAAKv5B,KAAL,KAAeu5B,SAAS,CAACv5B,KAA7B,EAAoC;MAChC,MAAMrB,KAAK,CAAC,8CAAD,CAAX;IACH;;IACD,MAAMmE,KAAK,GAAG8T,IAAI,CAACC,GAAL,CAAS,KAAKlM,QAAd,EAAwB4uB,SAAS,CAAC5uB,QAAlC,CAAd;IACA,MAAM5H,GAAG,GAAG6T,IAAI,CAACG,GAAL,CAAS,KAAKsC,MAAd,EAAsBkgB,SAAS,CAAClgB,MAAhC,CAAZ;;IACA,IAAIvW,KAAK,GAAGC,GAAZ,EAAiB;MACb,OAAO,IAAP;IACH;;IACD,OAAO,IAAIiR,QAAJ,CAAa,KAAKhU,KAAlB,EAAyB8C,KAAzB,EAAgCC,GAAhC,CAAP;EACH;;EACDy2B,QAAQ,GAAG;IACP,OAAO,IAAIxlB,QAAJ,CAAa,KAAKhU,KAAlB,EAAyB,KAAK2K,QAA9B,EAAwC,KAAKA,QAA7C,CAAP;EACH;;AA7CiB;AA+CtB;AACA;AACA;;;;;AACO,MAAM6J,WAAN,CAAkB;EACrBjV,WAAW,CAACS,KAAD,EAAQ8L,WAAR,EAAqBwN,SAArB,EAAgC;IACvC,KAAKtZ,KAAL,GAAaA,KAAb;IACA,KAAK8L,WAAL,GAAmBA,WAAnB;IACA,KAAKwN,SAAL,GAAiBA,SAAjB;;IACA,IAAIxN,WAAW,GAAG,CAAlB,EAAqB;MACjB,MAAMnN,KAAK,CAAC,qCAAD,CAAX;IACH;;IACD,IAAI2a,SAAS,GAAGxN,WAAhB,EAA6B;MACzB,MAAMnN,KAAK,CAAC,mCAAD,CAAX;IACH;EACJ;;EACkB,IAAfoN,eAAe,GAAG;IAClB,OAAO,KAAKuN,SAAL,GAAiB,KAAKxN,WAAtB,GAAoC,CAA3C;EACH;;EACQ,IAALhJ,KAAK,GAAG;IACR,OAAO,KAAKgJ,WAAZ;EACH;;EACM,IAAH/I,GAAG,GAAG;IACN,OAAO,KAAKuW,SAAZ;EACH;;EACyB,OAAnBmgB,mBAAmB,CAACz5B,KAAD,EAAQ8L,WAAR,EAAqBC,eAArB,EAAsC;IAC5D,OAAO,IAAIyI,WAAJ,CAAgBxU,KAAhB,EAAuB8L,WAAvB,EAAoCA,WAAW,GAAGC,eAAd,GAAgC,CAApE,CAAP;EACH;;EAC2B,OAArB0I,qBAAqB,CAACzU,KAAD,EAAQ8L,WAAR,EAAqBwN,SAArB,EAAgC;IACxD,OAAO,IAAI9E,WAAJ,CAAgBxU,KAAhB,EAAuB8L,WAAvB,EAAoCwN,SAApC,CAAP;EACH;;EACO,CAAPogB,OAAO,GAAG;IACP,KAAK,IAAIt5B,GAAG,GAAG,KAAK0L,WAApB,EAAiC1L,GAAG,IAAI,KAAKkZ,SAA7C,EAAwD,EAAElZ,GAA1D,EAA+D;MAC3D,MAAMA,GAAN;IACH;EACJ;;EACDk5B,SAAS,CAACC,SAAD,EAAY;IACjB,IAAI,KAAKv5B,KAAL,KAAeu5B,SAAS,CAACv5B,KAA7B,EAAoC;MAChC,MAAMrB,KAAK,CAAC,8CAAD,CAAX;IACH;;IACD,MAAMmE,KAAK,GAAG8T,IAAI,CAACC,GAAL,CAAS,KAAK/K,WAAd,EAA2BytB,SAAS,CAACztB,WAArC,CAAd;IACA,MAAM/I,GAAG,GAAG6T,IAAI,CAACG,GAAL,CAAS,KAAKuC,SAAd,EAAyBigB,SAAS,CAACjgB,SAAnC,CAAZ;;IACA,IAAIxW,KAAK,GAAGC,GAAZ,EAAiB;MACb,OAAO,IAAP;IACH;;IACD,OAAO,IAAIyR,WAAJ,CAAgB,KAAKxU,KAArB,EAA4B8C,KAA5B,EAAmCC,GAAnC,CAAP;EACH;;EACD42B,WAAW,GAAG;IACV,OAAO,IAAInlB,WAAJ,CAAgB,KAAKxU,KAArB,EAA4B,KAAK8L,WAAjC,EAA8C,KAAKA,WAAnD,CAAP;EACH;;AA7CoB;;;;;;;;;;;;;;ACrDzB;;AACA;;AACA;;AANA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMrH,sBAAsB,GAAG,CAACF,IAAD,EAAOvD,WAAP,KAAuB;EACzD,OAAOuD,IAAI,CAACnC,GAAL,CAAS4F,GAAG,IAAIA,GAAG,CAACkxB,UAAJ,CAAel4B,WAAf,CAAhB,CAAP;AACH,CAFM;;;;AAGA,MAAM44B,4BAA4B,GAAIr1B,IAAD,IAAU;EAClD,OAAOA,IAAI,CAACiM,MAAL,CAAYxI,GAAG,IAAI;IACtB,IAAIA,GAAG,YAAYtF,iCAAnB,EAA8C;MAC1C,OAAO,IAAP;IACH;;IACD,IAAIsF,GAAG,YAAY9E,oCAAnB,EAAsC;MAClC,OAAO,EAAE,IAAA3C,8BAAA,EAAyByH,GAAG,CAAClF,KAA7B,KAAuC,IAAAvC,8BAAA,EAAyByH,GAAG,CAACjF,GAA7B,CAAzC,CAAP;IACH,CAFD,MAGK;MACD,OAAO,CAAC,IAAAxC,8BAAA,EAAyByH,GAAzB,CAAR;IACH;EACJ,CAVM,CAAP;AAWH,CAZM;;;;;;;;;;;;;;ACZP;;AACA;;AALA;AACA;AACA;AACA;AAGO,MAAMjG,cAAN,CAAqB;EACxBxC,WAAW,GAAG;IACV,KAAKuC,OAAL,GAAe,IAAI8pB,GAAJ,EAAf;EACH;;EACW,OAAL5pB,KAAK,GAAG;IACX,OAAO,IAAID,cAAJ,EAAP;EACH;;EACD83B,MAAM,CAACrjB,KAAD,EAAQ;IACV,KAAK,MAAMsjB,MAAX,IAAqBtjB,KAAK,CAAC1U,OAAN,CAAcuJ,MAAd,EAArB,EAA6C;MACzC,KAAKD,GAAL,CAAS0uB,MAAM,CAACx8B,OAAhB,EAAyBw8B,MAAzB;IACH;;IACD,OAAO,IAAP;EACH;;EACD9nB,SAAS,CAAC+nB,QAAD,EAAWz8B,OAAX,EAAoBwU,QAApB,EAA8B;IACnC,KAAKkoB,mBAAL,CAAyBD,QAAzB,EAAmCz8B,OAAnC,EAA4CwU,QAA5C;EACH;;EACDmoB,aAAa,CAACC,QAAD,EAAW;IACpB,IAAIxoB,GAAG,GAAG,EAAV;IACA,KAAK5P,OAAL,CAAaiG,OAAb,CAAsBwd,CAAD,IAAO;MACxB,MAAMuU,MAAM,GAAGI,QAAQ,CAACC,YAAT,CAAsB5U,CAAtB,CAAf;;MACA,IAAIjV,KAAK,CAAC8pB,OAAN,CAAcN,MAAd,CAAJ,EAA2B;QACvBpoB,GAAG,GAAGA,GAAG,CAACkV,MAAJ,CAAWkT,MAAX,CAAN;MACH,CAFD,MAGK;QACDpoB,GAAG,CAAC5N,IAAJ,CAASg2B,MAAT;MACH;IACJ,CARD;IASA,OAAOpoB,GAAP;EACH;;EACD2oB,UAAU,GAAG;IACT,OAAO/pB,KAAK,CAACC,IAAN,CAAW,KAAKzO,OAAL,CAAauJ,MAAb,EAAX,CAAP;EACH;;EACDivB,OAAO,GAAG;IACN,OAAO,KAAKx4B,OAAL,CAAauD,IAAb,KAAsB,CAA7B;EACH;;EACD+F,GAAG,CAAC9N,OAAD,EAAUw8B,MAAV,EAAkB;IACjB,MAAMtzB,KAAK,GAAGszB,MAAM,CAACtzB,KAArB;;IACA,IAAIA,KAAK,YAAYxH,kCAArB,EAAuC;MACnC,KAAK,MAAMkU,WAAX,IAA0B1M,KAAK,CAAC+zB,0BAAN,CAAiCj9B,OAAjC,CAA1B,EAAqE;QACjE,KAAKwE,OAAL,CAAaiT,MAAb,CAAqB,GAAE7B,WAAW,CAAClT,KAAM,IAAGkT,WAAW,CAAC9S,GAAI,IAAG8S,WAAW,CAACjT,GAAI,EAA/E;MACH;IACJ;;IACD,KAAK6B,OAAL,CAAaqkB,GAAb,CAAiB,IAAAvlB,gBAAA,EAAYtD,OAAZ,CAAjB,EAAwCw8B,MAAxC;EACH;;EACDE,mBAAmB,CAACxzB,KAAD,EAAQlJ,OAAR,EAAiBwU,QAAjB,EAA2B;IAC1C,KAAK1G,GAAL,CAAS9N,OAAT,EAAkB;MACdA,OADc;MAEdkJ,KAFc;MAGdsL;IAHc,CAAlB;EAKH;;AAlDuB;;;;;;;;;;;;;;ACF5B;;AACA;;AACA;;AACA;;AAPA;AACA;AACA;AACA;AAKO,MAAM9S,gBAAN,CAAuB;EAC1BO,WAAW,CAACi7B,KAAD,EAAQ92B,KAAR,EAAe2U,eAAf,EAAgCoiB,eAAhC,EAAiD;IACxD,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAK92B,KAAL,GAAaA,KAAb;IACA,KAAK2U,eAAL,GAAuBA,eAAvB;IACA,KAAKoiB,eAAL,GAAuBA,eAAvB;;IACA,IAAID,KAAK,KAAKl7B,SAAd,EAAyB;MACrB,KAAK+F,IAAL,GAAY,IAAIq1B,oBAAJ,CAAch3B,KAAK,CAACyV,cAAN,CAAqBd,eAArB,CAAd,EAAqD3U,KAAK,CAAC0V,eAAN,CAAsBf,eAAtB,CAArD,CAAZ;IACH,CAFD,MAGK;MACD,KAAKhT,IAAL,GAAY,IAAIq1B,oBAAJ,CAAcF,KAAK,CAAC,CAAD,CAAL,CAASnsB,MAAvB,EAA+BmsB,KAAK,CAACnsB,MAArC,CAAZ;IACH;EACJ;;EACO,IAAJssB,IAAI,GAAG;IACP,KAAKC,kBAAL;IACA,OAAO,KAAKJ,KAAZ;EACH;;EACe,OAATK,SAAS,CAACF,IAAD,EAAOj3B,KAAP,EAAc2U,eAAd,EAA+B;IAC3C,OAAO,IAAIrZ,gBAAJ,CAAqB27B,IAArB,EAA2Bj3B,KAA3B,EAAkC2U,eAAlC,EAAmD,IAAnD,CAAP;EACH;;EACiB,OAAXyiB,WAAW,CAACH,IAAD,EAAO;IACrB,OAAO,IAAI37B,gBAAJ,CAAqB27B,IAArB,EAA2Br7B,SAA3B,EAAsCA,SAAtC,EAAiD,IAAjD,CAAP;EACH;;EACgB,OAAVy7B,UAAU,CAACJ,IAAD,EAAO;IACpB,OAAO,IAAI37B,gBAAJ,CAAqB27B,IAArB,EAA2Br7B,SAA3B,EAAsCA,SAAtC,EAAiDA,SAAjD,CAAP;EACH;;EACe,OAAT07B,SAAS,CAACt3B,KAAD,EAAQ2U,eAAR,EAAyB;IACrC,OAAO,IAAIrZ,gBAAJ,CAAqBM,SAArB,EAAgCoE,KAAhC,EAAuC2U,eAAvC,EAAwD/Y,SAAxD,CAAP;EACH;;EACgB,OAAV27B,UAAU,CAACC,MAAD,EAAS;IACtB,OAAO,IAAIl8B,gBAAJ,CAAqB,CAAC,CAACk8B,MAAD,CAAD,CAArB,EAAiC57B,SAAjC,EAA4CA,SAA5C,EAAuDA,SAAvD,CAAP;EACH;;EACD67B,OAAO,GAAG;IACN,OAAO,KAAKz3B,KAAL,KAAepE,SAAtB;EACH;;EACD2O,KAAK,GAAG;IACJ,OAAO,KAAK5I,IAAL,CAAU4I,KAAjB,CADI,CACoB;EAC3B;;EACDC,MAAM,GAAG;IACL,OAAO,KAAK7I,IAAL,CAAU6I,MAAjB,CADK,CACoB;EAC5B;;EACDktB,uBAAuB,GAAG;IACtB,KAAKR,kBAAL;IACA,MAAMlpB,GAAG,GAAG,EAAZ;;IACA,KAAK,IAAIqX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKyR,KAAL,CAAWnsB,MAA/B,EAAuC0a,CAAC,EAAxC,EAA4C;MACxC,KAAK,IAAIsS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,KAAL,CAAW,CAAX,EAAcnsB,MAAlC,EAA0CgtB,CAAC,EAA3C,EAA+C;QAC3C;QACA3pB,GAAG,CAAC5N,IAAJ,CAAS,KAAK02B,KAAL,CAAWzR,CAAX,EAAcsS,CAAd,CAAT;MACH;IACJ;;IACD,OAAO3pB,GAAP;EACH;;EAC0B,CAA1B6oB,0BAA0B,CAACe,UAAD,EAAa;IACpC,KAAK,IAAIr7B,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAK06B,IAAL,CAAUtsB,MAAlC,EAA0C,EAAEpO,GAA5C,EAAiD;MAC7C,MAAMs7B,OAAO,GAAG,KAAKZ,IAAL,CAAU16B,GAAV,CAAhB;;MACA,KAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGm7B,OAAO,CAACltB,MAAhC,EAAwC,EAAEjO,GAA1C,EAA+C;QAC3C,MAAM,IAAAE,uBAAA,EAAkBg7B,UAAU,CAACt7B,KAA7B,EAAoCs7B,UAAU,CAACl7B,GAAX,GAAiBA,GAArD,EAA0Dk7B,UAAU,CAACr7B,GAAX,GAAiBA,GAA3E,CAAN;MACH;IACJ;EACJ;;EACwB,CAAxBu7B,wBAAwB,CAACF,UAAD,EAAa;IAClC,KAAKV,kBAAL;;IACA,KAAK,IAAI36B,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKoF,IAAL,CAAU6I,MAAlC,EAA0C,EAAEjO,GAA5C,EAAiD;MAC7C,KAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKiF,IAAL,CAAU4I,KAAlC,EAAyC,EAAE7N,GAA3C,EAAgD;QAC5C,MAAM,CAAC,KAAKo6B,KAAL,CAAWv6B,GAAX,EAAgBG,GAAhB,CAAD,EAAuB,IAAAE,uBAAA,EAAkBg7B,UAAU,CAACt7B,KAA7B,EAAoCs7B,UAAU,CAACl7B,GAAX,GAAiBA,GAArD,EAA0Dk7B,UAAU,CAACr7B,GAAX,GAAiBA,GAA3E,CAAvB,CAAN;MACH;IACJ;EACJ;;EAC8B,CAA9Bw7B,8BAA8B,GAAG;IAC9B,OAAO,KAAKL,uBAAL,EAAP;EACH;;EACDM,gBAAgB,GAAG;IACf,OAAO,KAAKr2B,IAAL,CAAU4I,KAAV,GAAkB,KAAK5I,IAAL,CAAU6I,MAAnC;EACH;;EACDytB,cAAc,GAAG;IACb,IAAI,KAAKlB,eAAL,KAAyBn7B,SAA7B,EAAwC;MACpC,KAAKm7B,eAAL,GAAuB,IAAvB;;MACA,KAAK,MAAMx6B,GAAX,IAAkB,KAAK06B,IAAvB,EAA6B;QACzB,KAAK,MAAM13B,CAAX,IAAgBhD,GAAhB,EAAqB;UACjB,IAAI,OAAOgD,CAAP,KAAa,QAAjB,EAA2B;YACvB,KAAKw3B,eAAL,GAAuB,KAAvB;YACA,OAAO,KAAP;UACH;QACJ;MACJ;IACJ;;IACD,OAAO,KAAKA,eAAZ;EACH;;EACDmB,UAAU,GAAG;IACT,OAAO,KAAKpB,KAAZ;EACH;;EACDqB,OAAO,GAAG;IACN,IAAI56B,EAAJ;;IACA,KAAK25B,kBAAL;IACA,OAAO,CAAC35B,EAAE,GAAG,KAAKu5B,KAAX,MAAsB,IAAtB,IAA8Bv5B,EAAE,KAAK,KAAK,CAA1C,GAA8CA,EAA9C,GAAmD,EAA1D;EACH;;EACDiX,gBAAgB,CAAC1B,KAAD,EAAQ;IACpB,OAAO,KAAKvI,KAAL,OAAiBuI,KAAK,CAACvI,KAAN,EAAjB,IAAkC,KAAKC,MAAL,OAAkBsI,KAAK,CAACtI,MAAN,EAA3D;EACH;;EACD0sB,kBAAkB,GAAG;IACjB,IAAI,KAAKJ,KAAL,KAAel7B,SAAnB,EAA8B;MAC1B;IACH;;IACD,KAAKm7B,eAAL,GAAuB,IAAvB;IACA,KAAKD,KAAL,GAAa,KAAK92B,KAAL,CAAW0U,iBAAX,CAA6B,KAAKC,eAAlC,EAAmD7P,aAAa,IAAI;MAC7E,MAAMhC,KAAK,GAAG,KAAK6R,eAAL,CAAqBvJ,YAArB,CAAkCtG,aAAlC,CAAd;;MACA,IAAIhC,KAAK,YAAYxH,gBAArB,EAAuC;QACnC,KAAKy7B,eAAL,GAAuB,KAAvB;QACA,OAAO,IAAI17B,eAAJ,CAAc5E,eAAA,CAAU4D,KAAxB,EAA+B6B,0BAAA,CAAaqP,cAA5C,CAAP;MACH,CAHD,MAIK,IAAI,IAAAhQ,kCAAA,EAAiBuH,KAAjB,CAAJ,EAA6B;QAC9B,OAAOA,KAAP;MACH,CAFI,MAGA;QACD,KAAKi0B,eAAL,GAAuB,KAAvB;QACA,OAAOj0B,KAAP;MACH;IACJ,CAbY,CAAb;EAcH;;AAtHyB;;;;;;;;;;;;;;ACJ9B;;AACA;;AACA;;AACA;;AAPA;AACA;AACA;AACA;AAKO,MAAMk0B,SAAN,CAAgB;EACnBn7B,WAAW,CAAC0O,KAAD,EAAQC,MAAR,EAA+B;IAAA,IAAf4tB,KAAe,uEAAP,KAAO;IACtC,KAAK7tB,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAK4tB,KAAL,GAAaA,KAAb;;IACA,IAAI7tB,KAAK,IAAI,CAAT,IAAcC,MAAM,IAAI,CAA5B,EAA+B;MAC3B,MAAMvP,KAAK,CAAC,sBAAD,CAAX;IACH;EACJ;;EACe,OAATo9B,SAAS,CAACrzB,KAAD,EAAQ;IACpB,OAAO,IAAIgyB,SAAJ,CAAchyB,KAAK,CAAC2F,MAAN,GAAe,CAAf,GAAmB3F,KAAK,CAAC,CAAD,CAAL,CAAS2F,MAA5B,GAAqC,CAAnD,EAAsD3F,KAAK,CAAC2F,MAA5D,CAAP;EACH;;EACW,OAALma,KAAK,GAAG;IACX,OAAO,IAAIkS,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,IAApB,CAAP;EACH;;EACY,OAANQ,MAAM,GAAG;IACZ,OAAO,IAAIR,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAApB,CAAP;EACH;;EACDsB,QAAQ,GAAG;IACP,OAAQ,KAAK/tB,KAAL,IAAc,CAAd,IAAmB,KAAKC,MAAL,IAAe,CAAnC,IAAyC,KAAK4tB,KAArD;EACH;;AApBkB;;;;AAsBvB,SAASG,oBAAT,CAA8BC,aAA9B,EAA6CC,cAA7C,EAA6D;EACzD,OAAO,IAAIzB,SAAJ,CAAc9jB,IAAI,CAACC,GAAL,CAASqlB,aAAa,CAACjuB,KAAvB,EAA8BkuB,cAAc,CAACluB,KAA7C,CAAd,EAAmE2I,IAAI,CAACC,GAAL,CAASqlB,aAAa,CAAChuB,MAAvB,EAA+BiuB,cAAc,CAACjuB,MAA9C,CAAnE,CAAP;AACH;;AACD,SAASkuB,mBAAT,CAA6BC,SAA7B,EAAwC;EACpC,OAAO,IAAI3B,SAAJ,CAAc2B,SAAS,CAACpuB,KAAxB,EAA+BouB,SAAS,CAACnuB,MAAzC,CAAP;AACH;;AACM,MAAMouB,kBAAN,CAAyB;EAC5B/8B,WAAW,CAACqF,MAAD,EAAShD,gBAAT,EAA2B;IAClC,KAAKgD,MAAL,GAAcA,MAAd;IACA,KAAKhD,gBAAL,GAAwBA,gBAAxB;EACH;;EACD26B,cAAc,CAACn3B,GAAD,EAAMgO,cAAN,EAAsB;IAChC,OAAO,KAAKopB,oBAAL,CAA0Bp3B,GAA1B,EAA+B;MAAEgO,cAAF;MAAkBqpB,UAAU,EAAE,KAAK73B,MAAL,CAAY83B;IAA1C,CAA/B,CAAP;EACH;;EACDF,oBAAoB,CAACp3B,GAAD,EAAMu3B,KAAN,EAAa;IAC7B,QAAQv3B,GAAG,CAAC5F,IAAZ;MACI,KAAK4V,mBAAA,CAAYqS,aAAjB;QAAgC;UAC5B,OAAO,KAAKmV,yBAAL,CAA+Bx3B,GAA/B,EAAoCu3B,KAApC,CAAP;QACH;;MACD,KAAKvnB,mBAAA,CAAYG,YAAjB;MACA,KAAKH,mBAAA,CAAY4S,SAAjB;MACA,KAAK5S,mBAAA,CAAYC,UAAjB;QAA6B;UACzB,MAAM3R,KAAK,GAAGR,oCAAA,CAAkB0S,cAAlB,CAAiCxQ,GAAjC,EAAsCu3B,KAAK,CAACvpB,cAA5C,CAAd;;UACA,IAAI1P,KAAK,KAAKpE,SAAd,EAAyB;YACrB,OAAOo7B,SAAS,CAAClS,KAAV,EAAP;UACH,CAFD,MAGK;YACD,OAAO,IAAIkS,SAAJ,CAAch3B,KAAK,CAACuK,KAAN,EAAd,EAA6BvK,KAAK,CAACwK,MAAN,EAA7B,EAA6C,IAA7C,CAAP;UACH;QACJ;;MACD,KAAKkH,mBAAA,CAAY1X,KAAjB;QAAwB;UACpB,MAAMm/B,OAAO,GAAG,EAAhB;UACA,MAAMC,MAAM,GAAG,EAAf;;UACA,KAAK,MAAM78B,GAAX,IAAkBmF,GAAG,CAACsiB,IAAtB,EAA4B;YACxB,MAAMqV,KAAK,GAAG98B,GAAG,CAACmC,GAAJ,CAAQgD,GAAG,IAAI,KAAKo3B,oBAAL,CAA0Bp3B,GAA1B,EAA+Bu3B,KAA/B,CAAf,CAAd;YACA,MAAMK,CAAC,GAAGpmB,IAAI,CAACG,GAAL,CAAS,GAAGgmB,KAAK,CAAC36B,GAAN,CAAUiD,IAAI,IAAIA,IAAI,CAAC6I,MAAvB,CAAZ,CAAV;YACA,MAAM+uB,CAAC,GAAGF,KAAK,CAAChf,MAAN,CAAa,CAACmf,KAAD,EAAQ73B,IAAR,KAAiB63B,KAAK,GAAG73B,IAAI,CAAC4I,KAA3C,EAAkD,CAAlD,CAAV;YACA4uB,OAAO,CAAC/4B,IAAR,CAAak5B,CAAb;YACAF,MAAM,CAACh5B,IAAP,CAAYm5B,CAAZ;UACH;;UACD,MAAM/uB,MAAM,GAAG2uB,OAAO,CAAC9e,MAAR,CAAe,CAACmf,KAAD,EAAQF,CAAR,KAAcE,KAAK,GAAGF,CAArC,EAAwC,CAAxC,CAAf;UACA,MAAM/uB,KAAK,GAAG2I,IAAI,CAACG,GAAL,CAAS,GAAG+lB,MAAZ,CAAd;UACA,OAAO,IAAIpC,SAAJ,CAAczsB,KAAd,EAAqBC,MAArB,CAAP;QACH;;MACD,KAAKkH,mBAAA,CAAY5W,MAAjB;MACA,KAAK4W,mBAAA,CAAY7W,MAAjB;QACI,OAAOm8B,SAAS,CAACQ,MAAV,EAAP;;MACJ,KAAK9lB,mBAAA,CAAY0S,cAAjB;QACI,OAAO,IAAI4S,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,IAApB,CAAP;;MACJ,KAAKtlB,mBAAA,CAAY2V,MAAjB;MACA,KAAK3V,mBAAA,CAAYuU,cAAjB;MACA,KAAKvU,mBAAA,CAAYyU,SAAjB;MACA,KAAKzU,mBAAA,CAAY6U,eAAjB;MACA,KAAK7U,mBAAA,CAAYiV,wBAAjB;MACA,KAAKjV,mBAAA,CAAY+U,YAAjB;MACA,KAAK/U,mBAAA,CAAYmV,qBAAjB;MACA,KAAKnV,mBAAA,CAAYuV,QAAjB;MACA,KAAKvV,mBAAA,CAAY2U,YAAjB;MACA,KAAK3U,mBAAA,CAAYqV,OAAjB;MACA,KAAKrV,mBAAA,CAAY6V,QAAjB;MACA,KAAK7V,mBAAA,CAAYyV,QAAjB;QAA2B;UACvB,MAAM1pB,IAAI,GAAG,KAAKq7B,oBAAL,CAA0Bp3B,GAAG,CAACjE,IAA9B,EAAoCw7B,KAApC,CAAb;UACA,MAAMv7B,KAAK,GAAG,KAAKo7B,oBAAL,CAA0Bp3B,GAAG,CAAChE,KAA9B,EAAqCu7B,KAArC,CAAd;;UACA,IAAI,CAACA,KAAK,CAACF,UAAP,KAAsBt7B,IAAI,CAAC+M,MAAL,GAAc,CAAd,IAAmB/M,IAAI,CAAC8M,KAAL,GAAa,CAAhC,IAAqC7M,KAAK,CAAC8M,MAAN,GAAe,CAApD,IAAyD9M,KAAK,CAAC6M,KAAN,GAAc,CAA7F,CAAJ,EAAqG;YACjG,OAAOysB,SAAS,CAAClS,KAAV,EAAP;UACH;;UACD,OAAOyT,oBAAoB,CAAC96B,IAAD,EAAOC,KAAP,CAA3B;QACH;;MACD,KAAKgU,mBAAA,CAAYgT,cAAjB;MACA,KAAKhT,mBAAA,CAAYiT,aAAjB;MACA,KAAKjT,mBAAA,CAAYkT,UAAjB;QAA6B;UACzB,MAAM9N,GAAG,GAAG,KAAKgiB,oBAAL,CAA0Bp3B,GAAG,CAACoB,KAA9B,EAAqCm2B,KAArC,CAAZ;;UACA,IAAI,CAACA,KAAK,CAACF,UAAP,KAAsBjiB,GAAG,CAACtM,MAAJ,GAAa,CAAb,IAAkBsM,GAAG,CAACvM,KAAJ,GAAY,CAApD,CAAJ,EAA4D;YACxD,OAAOysB,SAAS,CAAClS,KAAV,EAAP;UACH;;UACD,OAAO4T,mBAAmB,CAAC5hB,GAAD,CAA1B;QACH;;MACD,KAAKpF,mBAAA,CAAYuT,WAAjB;QAA8B;UAC1B,OAAO,KAAK6T,oBAAL,CAA0Bp3B,GAAG,CAACwjB,UAA9B,EAA0C+T,KAA1C,CAAP;QACH;;MACD,KAAKvnB,mBAAA,CAAYpX,KAAjB;QACI,OAAO08B,SAAS,CAAClS,KAAV,EAAP;;MACJ;QACI,OAAOkS,SAAS,CAAClS,KAAV,EAAP;IApER;EAsEH;;EACDoU,yBAAyB,CAACx3B,GAAD,EAAMu3B,KAAN,EAAa;IAClC,MAAMQ,QAAQ,GAAG,KAAKv7B,gBAAL,CAAsBw7B,WAAtB,CAAkCh4B,GAAG,CAACyhB,aAAtC,CAAjB;IACA,MAAMwW,uBAAuB,GAAG,KAAKz7B,gBAAL,CAAsB07B,oBAAtB,CAA2Cl4B,GAAG,CAACyhB,aAA/C,CAAhC;;IACA,IAAIwW,uBAAuB,KAAK/9B,SAAhC,EAA2C;MACvC,OAAO+9B,uBAAuB,CAACj4B,GAAD,EAAMu3B,KAAN,CAA9B;IACH;;IACD,MAAMY,SAAS,GAAGn4B,GAAG,CAACsiB,IAAJ,CAAStlB,GAAT,CAAc9D,GAAD,IAAS;MAAE,IAAI2C,EAAJ;;MAAQ,OAAO,KAAKu7B,oBAAL,CAA0Bl+B,GAA1B,EAA+B,IAAIk/B,kCAAJ,CAAqBb,KAAK,CAACvpB,cAA3B,EAA2CupB,KAAK,CAACF,UAAN,KAAqB,CAACx7B,EAAE,GAAGk8B,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACM,aAAnE,MAAsF,IAAtF,IAA8Fx8B,EAAE,KAAK,KAAK,CAA1G,GAA8GA,EAA9G,GAAmH,KAAxI,CAA3C,CAA/B,CAAP;IAAoO,CAApQ,CAAlB;;IACA,IAAIk8B,QAAQ,KAAK79B,SAAb,IAA0B69B,QAAQ,CAACO,YAAnC,IAAmD,CAACf,KAAK,CAACF,UAA1D,IAAwEU,QAAQ,CAACQ,sBAAjF,IAA2GR,QAAQ,CAACS,UAAT,KAAwBt+B,SAAvI,EAAkJ;MAC9I,OAAO,IAAIo7B,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAP;IACH;;IACD,MAAMmD,mBAAmB,GAAG,CAAC,GAAGV,QAAQ,CAACS,UAAb,CAA5B;;IACA,IAAIT,QAAQ,CAACW,cAAT,KAA4Bx+B,SAA5B,IAAyCu+B,mBAAmB,CAACxvB,MAApB,GAA6BkvB,SAAS,CAAClvB,MAApF,EAA4F;MACxF,OAAOqsB,SAAS,CAAClS,KAAV,EAAP;IACH;;IACD,IAAI2U,QAAQ,CAACW,cAAT,KAA4Bx+B,SAA5B,IAAyCu+B,mBAAmB,CAACxvB,MAApB,GAA6BkvB,SAAS,CAAClvB,MAAhF,IACA,CAACkvB,SAAS,CAAClvB,MAAV,GAAmBwvB,mBAAmB,CAACxvB,MAAxC,IAAkD8uB,QAAQ,CAACW,cAA3D,KAA8E,CADlF,EACqF;MACjF,OAAOpD,SAAS,CAAClS,KAAV,EAAP;IACH;;IACD,OAAOqV,mBAAmB,CAACxvB,MAApB,GAA6BkvB,SAAS,CAAClvB,MAA9C,EAAsD;MAClDwvB,mBAAmB,CAAC/5B,IAApB,CAAyB,GAAG+5B,mBAAmB,CAAC/W,KAApB,CAA0B+W,mBAAmB,CAACxvB,MAApB,GAA6B8uB,QAAQ,CAACW,cAAhE,CAA5B;IACH;;IACD,IAAIC,QAAQ,GAAG,CAAf;IACA,IAAIC,SAAS,GAAG,CAAhB;;IACA,KAAK,IAAIjV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwU,SAAS,CAAClvB,MAA9B,EAAsC0a,CAAC,EAAvC,EAA2C;MACvC,IAAI8U,mBAAmB,CAAC9U,CAAD,CAAnB,CAAuBkV,YAAvB,KAAwCC,6BAAA,CAAcC,KAAtD,IAA+DN,mBAAmB,CAAC9U,CAAD,CAAnB,CAAuBkV,YAAvB,KAAwCC,6BAAA,CAAcE,GAAzH,EAA8H;QAC1HJ,SAAS,GAAGpnB,IAAI,CAACC,GAAL,CAASmnB,SAAT,EAAoBT,SAAS,CAACxU,CAAD,CAAT,CAAa7a,MAAjC,CAAZ;QACA6vB,QAAQ,GAAGnnB,IAAI,CAACC,GAAL,CAASknB,QAAT,EAAmBR,SAAS,CAACxU,CAAD,CAAT,CAAa9a,KAAhC,CAAX;MACH;IACJ;;IACD,OAAO,IAAIysB,SAAJ,CAAcqD,QAAd,EAAwBC,SAAxB,CAAP;EACH;;AA9G2B;;;;;;;;;;;;;;ACpChC;AACA;AACA;AACA;AACO,MAAMR,gBAAN,CAAuB;EAC1Bj+B,WAAW,CAAC6T,cAAD,EAAiBqpB,UAAjB,EAA6B4B,aAA7B,EAA4C;IACnD,KAAKjrB,cAAL,GAAsBA,cAAtB;IACA,KAAKqpB,UAAL,GAAkBA,UAAlB;IACA,KAAK4B,aAAL,GAAqBA,aAArB;EACH;;AALyB;;;;;;;;;;;;;;ACA9B;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAVA;AACA;AACA;AACA;AAQO,IAAIH,aAAJ;;;AACP,CAAC,UAAUA,aAAV,EAAyB;EACtB;AACJ;AACA;EACIA,aAAa,CAAC,QAAD,CAAb,GAA0B,QAA1B;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,QAAD,CAAb,GAA0B,QAA1B;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,SAAD,CAAb,GAA2B,SAA3B;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,QAAD,CAAb,GAA0B,QAA1B;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,SAAD,CAAb,GAA2B,SAA3B;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,OAAD,CAAb,GAAyB,OAAzB;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,SAAD,CAAb,GAA2B,SAA3B;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,SAAD,CAAb,GAA2B,SAA3B;EACA;AACJ;AACA;;EACIA,aAAa,CAAC,KAAD,CAAb,GAAuB,KAAvB;AACH,CArCD,EAqCGA,aAAa,6BAAKA,aAAa,GAAG,EAArB,CArChB;AAsCA;AACA;AACA;AACA;AACA;;;AACO,MAAMnjC,cAAN,CAAqB;EACxBwE,WAAW,CAAC++B,WAAD,EAAc;IAAA;;IACrB,KAAKC,2BAAL,GAAoCjgC,GAAD,IAAS,KAAKkgC,gBAAL,CAAsBD,2BAAtB,CAAkDjgC,GAAlD,CAA5C;;IACA,KAAKmgC,WAAL,GAAmB,CAAC/W,IAAD,EAAOiV,KAAP,EAAcQ,QAAd,EAAwBuB,EAAxB,KAA+B;MAC9C,IAAIz9B,EAAJ,EAAQ22B,EAAR,EAAY+G,EAAZ,EAAgBC,EAAhB,EAAoB/oB,EAApB;;MACA,IAAIgoB,mBAAmB,GAAGV,QAAQ,CAACS,UAAT,IAAuB,EAAjD;MACA,IAAIiB,SAAJ;;MACA,IAAI1B,QAAQ,CAACO,YAAb,EAA2B;QACvBmB,SAAS,GAAG,KAAKC,kBAAL,CAAwBpX,IAAxB,EAA8BiV,KAA9B,CAAZ;MACH,CAFD,MAGK;QACDkC,SAAS,GAAGnX,IAAI,CAACtlB,GAAL,CAAUgD,GAAD,IAAS,CAAC,KAAK25B,WAAL,CAAiB35B,GAAjB,EAAsBu3B,KAAtB,CAAD,EAA+B,KAA/B,CAAlB,CAAZ;MACH;;MACD,IAAIQ,QAAQ,CAACW,cAAT,KAA4Bx+B,SAA5B,IAAyCu+B,mBAAmB,CAACxvB,MAApB,GAA6BwwB,SAAS,CAACxwB,MAApF,EAA4F;QACxF,OAAO,IAAItP,eAAJ,CAAc5E,eAAA,CAAUonB,EAAxB,EAA4B3hB,0BAAA,CAAa8zB,cAAzC,CAAP;MACH;;MACD,IAAIyJ,QAAQ,CAACW,cAAT,KAA4Bx+B,SAA5B,IAAyCu+B,mBAAmB,CAACxvB,MAApB,GAA6BwwB,SAAS,CAACxwB,MAAhF,IACA,CAACwwB,SAAS,CAACxwB,MAAV,GAAmBwvB,mBAAmB,CAACxvB,MAAxC,IAAkD8uB,QAAQ,CAACW,cAA3D,KAA8E,CADlF,EACqF;QACjF,OAAO,IAAI/+B,eAAJ,CAAc5E,eAAA,CAAUonB,EAAxB,EAA4B3hB,0BAAA,CAAa8zB,cAAzC,CAAP;MACH;;MACDmK,mBAAmB,GAAG,CAAC,GAAGA,mBAAJ,CAAtB;;MACA,OAAOA,mBAAmB,CAACxvB,MAApB,GAA6BwwB,SAAS,CAACxwB,MAA9C,EAAsD;QAClDwvB,mBAAmB,CAAC/5B,IAApB,CAAyB,GAAG+5B,mBAAmB,CAAC/W,KAApB,CAA0B+W,mBAAmB,CAACxvB,MAApB,GAA6B8uB,QAAQ,CAACW,cAAhE,CAA5B;MACH;;MACD,IAAIC,QAAQ,GAAG,CAAf;MACA,IAAIC,SAAS,GAAG,CAAhB;;MACA,IAAI,CAACb,QAAQ,CAACQ,sBAAV,IAAoChB,KAAK,CAACF,UAA9C,EAA0D;QACtD,KAAK,IAAI1T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8V,SAAS,CAACxwB,MAA9B,EAAsC0a,CAAC,EAAvC,EAA2C;UACvC,MAAM,CAACvO,GAAD,IAAQqkB,SAAS,CAAC9V,CAAD,CAAvB;;UACA,IAAIvO,GAAG,YAAYxb,kCAAf,IAAmC6+B,mBAAmB,CAAC9U,CAAD,CAAnB,CAAuBkV,YAAvB,KAAwCC,aAAa,CAACC,KAAzF,IAAkGN,mBAAmB,CAAC9U,CAAD,CAAnB,CAAuBkV,YAAvB,KAAwCC,aAAa,CAACE,GAA5J,EAAiK;YAC7JJ,SAAS,GAAGpnB,IAAI,CAACC,GAAL,CAASmnB,SAAT,EAAoBxjB,GAAG,CAACtM,MAAJ,EAApB,CAAZ;YACA6vB,QAAQ,GAAGnnB,IAAI,CAACC,GAAL,CAASknB,QAAT,EAAmBvjB,GAAG,CAACvM,KAAJ,EAAnB,CAAX;UACH;QACJ;MACJ;;MACD,KAAK,IAAI8a,CAAC,GAAG8V,SAAS,CAACxwB,MAAvB,EAA+B0a,CAAC,GAAG8U,mBAAmB,CAACxvB,MAAvD,EAA+D0a,CAAC,EAAhE,EAAoE;QAChE,IAAI,CAAC,CAAC9nB,EAAE,GAAG48B,mBAAmB,CAAC9U,CAAD,CAAzB,MAAkC,IAAlC,IAA0C9nB,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,EAAE,CAAC+9B,YAAvE,MAAyF1/B,SAA7F,EAAwG;UACpG,IAAI,EAAE,CAACs4B,EAAE,GAAGiG,mBAAmB,CAAC9U,CAAD,CAAzB,MAAkC,IAAlC,IAA0C6O,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,EAAE,CAACqH,WAAxE,CAAJ,EAA0F;YACtF;YACA,OAAO,IAAIlgC,eAAJ,CAAc5E,eAAA,CAAUonB,EAAxB,EAA4B3hB,0BAAA,CAAa8zB,cAAzC,CAAP;UACH;QACJ;MACJ;;MACD,MAAMwL,MAAM,GAAG,EAAf;;MACA,KAAK,IAAIj/B,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG+9B,SAAxB,EAAmC/9B,GAAG,EAAtC,EAA0C;QACtC,MAAMk/B,MAAM,GAAG,EAAf;;QACA,KAAK,IAAI/+B,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG29B,QAAxB,EAAkC39B,GAAG,EAArC,EAAyC;UACrC,IAAIg/B,gBAAgB,GAAG9/B,SAAvB;UACA,MAAM+/B,gBAAgB,GAAG,EAAzB;;UACA,KAAK,IAAItW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8U,mBAAmB,CAACxvB,MAAxC,EAAgD0a,CAAC,EAAjD,EAAqD;YACjD;YACA,IAAI,CAACvO,GAAD,EAAM8kB,SAAN,IAAmB,CAACX,EAAE,GAAGE,SAAS,CAAC9V,CAAD,CAAf,MAAwB,IAAxB,IAAgC4V,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAqD,CAACr/B,SAAD,EAAYA,SAAZ,CAA5E;;YACA,IAAIkb,GAAG,YAAYxb,kCAAf,IAAmC6+B,mBAAmB,CAAC9U,CAAD,CAAnB,CAAuBkV,YAAvB,KAAwCC,aAAa,CAACC,KAAzF,IAAkGN,mBAAmB,CAAC9U,CAAD,CAAnB,CAAuBkV,YAAvB,KAAwCC,aAAa,CAACE,GAA5J,EAAiK;cAC7J,IAAI,CAACjB,QAAQ,CAACQ,sBAAV,IAAoChB,KAAK,CAACF,UAA9C,EAA0D;gBACtDjiB,GAAG,GAAG,CAACokB,EAAE,GAAGpkB,GAAG,CAACmgB,IAAJ,CAASngB,GAAG,CAACtM,MAAJ,OAAiB,CAAjB,GAAqBjO,GAArB,GAA2B,CAApC,CAAN,MAAkD,IAAlD,IAA0D2+B,EAAE,KAAK,KAAK,CAAtE,GAA0E,KAAK,CAA/E,GAAmFA,EAAE,CAACpkB,GAAG,CAACvM,KAAJ,OAAgB,CAAhB,GAAoB7N,GAApB,GAA0B,CAA3B,CAA3F;cACH;YACJ;;YACD,MAAM9B,GAAG,GAAGkc,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiCA,GAAjC,GAAuC,CAAC3E,EAAE,GAAGgoB,mBAAmB,CAAC9U,CAAD,CAAzB,MAAkC,IAAlC,IAA0ClT,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,EAAE,CAACmpB,YAAzH;;YACA,IAAI1gC,GAAG,KAAKgB,SAAZ,EAAuB;cACnB+/B,gBAAgB,CAACv7B,IAAjB,CAAsBxE,SAAtB,EADmB,CACe;YACrC,CAFD,MAGK;cACD;cACA,MAAMigC,UAAU,GAAG/kB,GAAG,KAAKlb,SAAR,GAAoB,KAAKkgC,YAAL,CAAkBlhC,GAAlB,EAAuBu/B,mBAAmB,CAAC9U,CAAD,CAA1C,EAA+C4T,KAA/C,CAApB,GAA4Er+B,GAA/F;;cACA,IAAIihC,UAAU,KAAKjgC,SAAnB,EAA8B;gBAC1B,IAAIigC,UAAU,YAAYxgC,eAAtB,IAAmC8+B,mBAAmB,CAAC9U,CAAD,CAAnB,CAAuBkV,YAAvB,KAAwCC,aAAa,CAACuB,MAA7F,EAAqG;kBACjG;kBACAL,gBAAgB,GAAGA,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2DA,gBAA3D,GAA8EG,UAAjG;gBACH;;gBACDF,gBAAgB,CAACv7B,IAAjB,CAAsBy7B,UAAtB;cACH,CAND,MAOK,IAAI,CAACD,SAAL,EAAgB;gBACjB;gBACAF,gBAAgB,GAAGA,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2DA,gBAA3D,GAA+E,IAAIrgC,eAAJ,CAAc5E,eAAA,CAAU4D,KAAxB,EAA+B6B,0BAAA,CAAa80B,SAA5C,CAAlG;cACH;YACJ;UACJ;;UACD,MAAMhjB,GAAG,GAAG0tB,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2DA,gBAA3D,GAA8E,KAAKM,mBAAL,CAAyBhB,EAAE,CAAC,GAAGW,gBAAJ,CAA3B,EAAkDlC,QAAQ,CAACwC,gBAA3D,CAA1F;;UACA,IAAI3B,SAAS,KAAK,CAAd,IAAmBD,QAAQ,KAAK,CAApC,EAAuC;YACnC,OAAOrsB,GAAP;UACH;;UACD,IAAIA,GAAG,YAAY1S,kCAAnB,EAAqC;YACjC,MAAM,gDAAN;UACH;;UACDmgC,MAAM,CAACr7B,IAAP,CAAY4N,GAAZ;QACH;;QACDwtB,MAAM,CAACp7B,IAAP,CAAYq7B,MAAZ;MACH;;MACD,OAAOngC,kCAAA,CAAiB+7B,UAAjB,CAA4BmE,MAA5B,CAAP;IACH,CAtFD;;IAuFA,KAAKU,gCAAL,GAAwC,UAAClY,IAAD,EAAOiV,KAAP,EAAcQ,QAAd,EAAwB0C,aAAxB,EAAuCC,iBAAvC,EAAqJ;MAAA,IAA3FC,oBAA2F,uEAApE,MAAM,IAAIhhC,eAAJ,CAAc5E,eAAA,CAAUonB,EAAxB,EAA4B3hB,0BAAA,CAAas1B,eAAzC,CAA8D;;MACzL,IAAIxN,IAAI,CAACrZ,MAAL,KAAgB,CAApB,EAAuB;QACnB,OAAO,KAAI,CAACqxB,mBAAL,CAAyBG,aAAa,EAAtC,EAA0C1C,QAAQ,CAACwC,gBAAnD,CAAP;MACH,CAFD,MAGK,IAAIjY,IAAI,CAACrZ,MAAL,GAAc,CAAlB,EAAqB;QACtB,OAAO,IAAItP,eAAJ,CAAc5E,eAAA,CAAUonB,EAAxB,EAA4B3hB,0BAAA,CAAa8zB,cAAzC,CAAP;MACH;;MACD,IAAIp1B,GAAG,GAAGopB,IAAI,CAAC,CAAD,CAAd;;MACA,OAAOppB,GAAG,CAACkB,IAAJ,KAAa4V,mBAAA,CAAYuT,WAAhC,EAA6C;QACzCrqB,GAAG,GAAGA,GAAG,CAACsqB,UAAV;MACH;;MACD,IAAIgG,aAAJ;;MACA,IAAItwB,GAAG,CAACkB,IAAJ,KAAa4V,mBAAA,CAAY0S,cAA7B,EAA6C;QACzC8G,aAAa,GAAGtwB,GAAG,CAACypB,SAAJ,CAAchS,mBAAd,CAAkC4mB,KAAK,CAACvpB,cAAxC,CAAhB;MACH,CAFD,MAGK,IAAI9U,GAAG,CAACkB,IAAJ,KAAa4V,mBAAA,CAAYC,UAAzB,IAAuC/W,GAAG,CAACkB,IAAJ,KAAa4V,mBAAA,CAAYG,YAAhE,IAAgFjX,GAAG,CAACkB,IAAJ,KAAa4V,mBAAA,CAAY4S,SAA7G,EAAwH;QACzH,IAAI;UACA4G,aAAa,GAAG1rB,oCAAA,CAAkBuC,OAAlB,CAA0BnH,GAA1B,EAA+Bq+B,KAAK,CAACvpB,cAArC,EAAqDtQ,KAArE;QACH,CAFD,CAGA,OAAOyiB,CAAP,EAAU;UACN,OAAO,IAAIxmB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,EAA6BrS,0BAAA,CAAas1B,eAA1C,CAAP;QACH;MACJ;;MACD,IAAItG,aAAa,KAAKtvB,SAAtB,EAAiC;QAC7B,OAAO,KAAI,CAACogC,mBAAL,CAAyBI,iBAAiB,CAAClR,aAAD,CAA1C,EAA2DuO,QAAQ,CAACwC,gBAApE,CAAP;MACH;;MACD,OAAO,KAAI,CAAClB,WAAL,CAAiB/W,IAAjB,EAAuBiV,KAAvB,EAA8BQ,QAA9B,EAAwC4C,oBAAxC,CAAP;IACH,CA3BD;;IA4BA,KAAKzB,WAAL,GAAmBA,WAAnB;IACA,KAAKjmB,eAAL,GAAuBimB,WAAW,CAACjmB,eAAnC;IACA,KAAK2nB,YAAL,GAAoB1B,WAAW,CAAC0B,YAAhC;IACA,KAAKp7B,MAAL,GAAc05B,WAAW,CAAC15B,MAA1B;IACA,KAAKq7B,aAAL,GAAqB3B,WAAW,CAAC2B,aAAjC;IACA,KAAKC,kBAAL,GAA0B5B,WAAW,CAAC4B,kBAAtC;IACA,KAAKC,cAAL,GAAsB7B,WAAW,CAAC6B,cAAlC;IACA,KAAK3B,gBAAL,GAAwBF,WAAW,CAACE,gBAApC;EACH;;EACDO,WAAW,CAAC35B,GAAD,EAAMu3B,KAAN,EAAa;IACpB,OAAO,KAAK2B,WAAL,CAAiBS,WAAjB,CAA6B35B,GAA7B,EAAkCu3B,KAAlC,CAAP;EACH;;EACDyD,eAAe,CAACh7B,GAAD,EAAMu3B,KAAN,EAAa;IACxB,OAAO,KAAKuD,kBAAL,CAAwB1D,oBAAxB,CAA6Cp3B,GAA7C,EAAkDu3B,KAAlD,CAAP;EACH;;EACDmC,kBAAkB,CAACuB,IAAD,EAAO1D,KAAP,EAAc;IAC5B,MAAMjrB,GAAG,GAAG,EAAZ;;IACA,KAAK,MAAMunB,MAAX,IAAqBoH,IAArB,EAA2B;MACvB,MAAM75B,KAAK,GAAG,KAAKu4B,WAAL,CAAiB9F,MAAjB,EAAyB0D,KAAzB,CAAd;;MACA,IAAIn2B,KAAK,YAAYxH,kCAArB,EAAuC;QACnC,KAAK,MAAMshC,WAAX,IAA0B95B,KAAK,CAAC40B,uBAAN,EAA1B,EAA2D;UACvD1pB,GAAG,CAAC5N,IAAJ,CAAS,CAACw8B,WAAD,EAAc,IAAd,CAAT;QACH;MACJ,CAJD,MAKK;QACD5uB,GAAG,CAAC5N,IAAJ,CAAS,CAAC0C,KAAD,EAAQ,KAAR,CAAT;MACH;IACJ;;IACD,OAAOkL,GAAP;EACH;;EACD8tB,YAAY,CAAClhC,GAAD,EAAMiiC,WAAN,EAAmB5D,KAAnB,EAA0B;IAClC,IAAIjrB,GAAJ;;IACA,IAAIpT,GAAG,YAAYU,kCAAnB,EAAqC;MACjC,QAAQuhC,WAAW,CAACtC,YAApB;QACI,KAAKC,aAAa,CAACC,KAAnB;QACA,KAAKD,aAAa,CAACE,GAAnB;UACI1sB,GAAG,GAAGpT,GAAN;UACA;;QACJ;UAAS;YACL,MAAMkiC,MAAM,GAAG,IAAAC,qCAAA,EAAoBniC,GAApB,EAAyBq+B,KAAzB,CAAf;;YACA,IAAI6D,MAAM,KAAKlhC,SAAf,EAA0B;cACtB,OAAOA,SAAP;YACH;;YACDhB,GAAG,GAAGkiC,MAAN;UACH;MAXL;IAaH;;IACD,IAAI,EAAEliC,GAAG,YAAYU,kCAAjB,CAAJ,EAAwC;MACpC,QAAQuhC,WAAW,CAACtC,YAApB;QACI,KAAKC,aAAa,CAACwC,OAAnB;QACA,KAAKxC,aAAa,CAAC3/B,MAAnB;UACI;UACA,MAAMoiC,OAAO,GAAG,KAAKpC,2BAAL,CAAiCjgC,GAAjC,CAAhB;;UACA,IAAI,CAAC,IAAAW,kCAAA,EAAiB0hC,OAAjB,CAAL,EAAgC;YAC5BjvB,GAAG,GAAGivB,OAAN;YACA;UACH,CANL,CAOI;;;UACA,MAAMn6B,KAAK,GAAG,IAAAuI,6BAAA,EAAY4xB,OAAZ,CAAd;;UACA,IAAIJ,WAAW,CAACK,QAAZ,KAAyBthC,SAAzB,IAAsCkH,KAAK,GAAG+5B,WAAW,CAACK,QAA9D,EAAwE;YACpE,OAAO,IAAI7hC,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAao0B,UAA1C,CAAP;UACH;;UACD,IAAIuM,WAAW,CAACO,QAAZ,KAAyBxhC,SAAzB,IAAsCkH,KAAK,GAAG+5B,WAAW,CAACO,QAA9D,EAAwE;YACpE,OAAO,IAAI/hC,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAam0B,UAA1C,CAAP;UACH;;UACD,IAAIwM,WAAW,CAACQ,QAAZ,KAAyBzhC,SAAzB,IAAsCkH,KAAK,IAAI+5B,WAAW,CAACQ,QAA/D,EAAyE;YACrE,OAAO,IAAIhiC,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAao0B,UAA1C,CAAP;UACH;;UACD,IAAIuM,WAAW,CAACS,WAAZ,KAA4B1hC,SAA5B,IAAyCkH,KAAK,IAAI+5B,WAAW,CAACS,WAAlE,EAA+E;YAC3E,OAAO,IAAIjiC,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAam0B,UAA1C,CAAP;UACH;;UACD,IAAIwM,WAAW,CAACtC,YAAZ,KAA6BC,aAAa,CAACwC,OAA3C,IAAsD,CAACzqB,MAAM,CAACsc,SAAP,CAAiB/rB,KAAjB,CAA3D,EAAoF;YAChF,OAAO,IAAIzH,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAa20B,eAA1C,CAAP;UACH;;UACD7iB,GAAG,GAAGivB,OAAN;UACA;;QACJ,KAAKzC,aAAa,CAAC1/B,MAAnB;UACIkT,GAAG,GAAG,IAAAuvB,sCAAA,EAAqB3iC,GAArB,CAAN;UACA;;QACJ,KAAK4/B,aAAa,CAACz/B,OAAnB;UACIiT,GAAG,GAAG,IAAAwvB,uCAAA,EAAsB5iC,GAAtB,CAAN;UACA;;QACJ,KAAK4/B,aAAa,CAACuB,MAAnB;QACA,KAAKvB,aAAa,CAACiD,OAAnB;QACA,KAAKjD,aAAa,CAACE,GAAnB;UACI1sB,GAAG,GAAGpT,GAAN;UACA;;QACJ,KAAK4/B,aAAa,CAACC,KAAnB;UACI,IAAI7/B,GAAG,YAAYS,eAAnB,EAA8B;YAC1B,OAAOT,GAAP;UACH;;UACDoT,GAAG,GAAG,IAAA0vB,+BAAA,EAAc9iC,GAAd,CAAN;UACA;;QACJ,KAAK4/B,aAAa,CAACmD,OAAnB;UACI,OAAO,KAAK7C,gBAAL,CAAsB8C,qBAAtB,CAA4C,IAAAvyB,6BAAA,EAAYzQ,GAAZ,CAA5C,CAAP;MA9CR;IAgDH;;IACD,IAAIiiC,WAAW,CAACgB,WAAZ,IAA2B7vB,GAAG,KAAKpS,SAAvC,EAAkD;MAC9C,OAAOoS,GAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAA3C,6BAAA,EAAY2C,GAAZ,CAAP;IACH;EACJ;;EACDyrB,QAAQ,CAACv6B,IAAD,EAAO;IACX,MAAM4+B,MAAM,GAAG,KAAKjiC,WAAL,CAAiBkiC,oBAAjB,CAAsC7+B,IAAtC,CAAf;;IACA,IAAI4+B,MAAM,KAAKliC,SAAf,EAA0B;MACtB,OAAOkiC,MAAP;IACH;;IACD,MAAM,IAAI7iC,KAAJ,CAAW,4BAA2BiE,IAAK,GAA3C,CAAN;EACH;;EACD88B,mBAAmB,CAACllB,GAAD,EAAMhb,IAAN,EAAYkiC,MAAZ,EAAoB;IACnC,IAAIliC,IAAI,KAAKF,SAAT,IAAsB,IAAAL,kCAAA,EAAiBub,GAAjB,CAA1B,EAAiD;MAC7C,OAAO,KAAKgkB,gBAAL,CAAsBmD,qBAAtB,CAA4C,IAAA5yB,6BAAA,EAAYyL,GAAZ,CAA5C,EAA8D;QAAEhb,IAAF;QAAQkiC;MAAR,CAA9D,CAAP;IACH,CAFD,MAGK;MACD,OAAOlnB,GAAP;IACH;EACJ;;AA5OuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnD5B;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AATA;AACA;AACA;AACA;AAOA,MAAMonB,qBAAqB,GAAG,GAA9B;AACA,MAAMC,oBAAoB,GAAG,4HAA7B;;AACO,MAAMC,gBAAN,CAAuB;EAC1BviC,WAAW,CAACqF,MAAD,EAASu7B,cAAT,EAAyB4B,oBAAzB,EAA+C;IACtD,KAAKn9B,MAAL,GAAcA,MAAd;IACA,KAAKu7B,cAAL,GAAsBA,cAAtB;IACA,KAAK4B,oBAAL,GAA4BA,oBAA5B;;IACA,KAAKC,EAAL,GAAU,CAAC7gC,IAAD,EAAOC,KAAP,KAAiB;MACvB,OAAO,KAAK6gC,OAAL,CAAa9gC,IAAb,EAAmBC,KAAnB,IAA4B,CAAnC;IACH,CAFD;;IAGA,KAAK8gC,GAAL,GAAW,CAAC/gC,IAAD,EAAOC,KAAP,KAAiB;MACxB,OAAO,KAAK6gC,OAAL,CAAa9gC,IAAb,EAAmBC,KAAnB,KAA6B,CAApC;IACH,CAFD;;IAGA,KAAK+gC,EAAL,GAAU,CAAChhC,IAAD,EAAOC,KAAP,KAAiB;MACvB,OAAO,KAAK6gC,OAAL,CAAa9gC,IAAb,EAAmBC,KAAnB,IAA4B,CAAnC;IACH,CAFD;;IAGA,KAAKghC,GAAL,GAAW,CAACjhC,IAAD,EAAOC,KAAP,KAAiB;MACxB,OAAO,KAAK6gC,OAAL,CAAa9gC,IAAb,EAAmBC,KAAnB,KAA6B,CAApC;IACH,CAFD;;IAGA,KAAKihC,EAAL,GAAU,CAAClhC,IAAD,EAAOC,KAAP,KAAiB;MACvB,OAAO,KAAK6gC,OAAL,CAAa9gC,IAAb,EAAmBC,KAAnB,MAA8B,CAArC;IACH,CAFD;;IAGA,KAAKkhC,GAAL,GAAW,CAACnhC,IAAD,EAAOC,KAAP,KAAiB;MACxB,OAAO,KAAK6gC,OAAL,CAAa9gC,IAAb,EAAmBC,KAAnB,MAA8B,CAArC;IACH,CAFD;;IAGA,KAAKmhC,GAAL,GAAW,CAACphC,IAAD,EAAOC,KAAP,KAAiB;MACxB,OAAOwV,IAAI,CAAC2rB,GAAL,CAAS,IAAAxzB,6BAAA,EAAY5N,IAAZ,CAAT,EAA4B,IAAA4N,6BAAA,EAAY3N,KAAZ,CAA5B,CAAP;IACH,CAFD;;IAGA,KAAKohC,iBAAL,GAAyB,CAACrhC,IAAD,EAAOC,KAAP,KAAiB;MACtC,MAAMsQ,GAAG,GAAGvQ,IAAI,GAAGC,KAAnB;;MACA,IAAIwV,IAAI,CAAC6rB,GAAL,CAAS/wB,GAAT,IAAgB,KAAKgxB,SAAL,GAAiB9rB,IAAI,CAAC6rB,GAAL,CAASthC,IAAT,CAArC,EAAqD;QACjD,OAAO,CAAP;MACH,CAFD,MAGK;QACD,OAAOuQ,GAAP;MACH;IACJ,CARD;;IASA,KAAKixB,cAAL,GAAsB,CAACxhC,IAAD,EAAOC,KAAP,KAAiB;MACnC,MAAMwhC,YAAY,GAAGC,+BAA+B,CAAC1hC,IAAD,EAAOC,KAAP,CAApD;MACA,OAAO,KAAKugC,qBAAL,CAA2B,KAAKa,iBAAL,CAAuB,IAAAzzB,6BAAA,EAAY5N,IAAZ,CAAvB,EAA0C,IAAA4N,6BAAA,EAAY3N,KAAZ,CAA1C,CAA3B,EAA0FwhC,YAA1F,CAAP;IACH,CAHD;;IAIA,KAAKE,UAAL,GAAmBxkC,GAAD,IAAS;MACvB,OAAO,IAAAykC,6BAAA,EAAYzkC,GAAZ,EAAiB,CAAC,IAAAyQ,6BAAA,EAAYzQ,GAAZ,CAAlB,CAAP;IACH,CAFD;;IAGA,KAAK0kC,SAAL,GAAkB1kC,GAAD,IAASA,GAA1B;;IACA,KAAK2kC,YAAL,GAAqB3kC,GAAD,IAAS;MACzB,OAAO,IAAI4kC,+BAAJ,CAAkB,IAAAn0B,6BAAA,EAAYzQ,GAAZ,IAAmB,GAArC,CAAP;IACH,CAFD;;IAGA,KAAKsoB,MAAL,GAAc,CAACzlB,IAAD,EAAOC,KAAP,KAAiB;MAC3B,OAAOD,IAAI,CAACylB,MAAL,CAAYxlB,KAAZ,CAAP;IACH,CAFD;;IAGA,KAAK+hC,YAAL,GAAoB,CAAChiC,IAAD,EAAOC,KAAP,KAAiB;MACjC,IAAID,IAAI,YAAYpC,eAApB,EAA+B;QAC3B,OAAOoC,IAAP;MACH,CAFD,MAGK,IAAIC,KAAK,YAAYrC,eAArB,EAAgC;QACjC,OAAOqC,KAAP;MACH,CAFI,MAGA,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;QAC/B,IAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;UAC3B,OAAO,KAAKohC,iBAAL,CAAuBrhC,IAAvB,EAA6BC,KAA7B,CAAP;QACH,CAFD,MAGK;UACD,OAAOD,IAAP;QACH;MACJ,CAPI,MAQA,IAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;QAChC,OAAOA,KAAP;MACH,CAFI,MAGA;QACD,OAAO,CAAP;MACH;IACJ,CArBD;IAsBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACQ,KAAKgiC,QAAL,GAAgB,CAACC,OAAD,EAAUC,QAAV,KAAuB;MACnC,MAAMV,YAAY,GAAGC,+BAA+B,CAACQ,OAAD,EAAUC,QAAV,CAApD;MACA,MAAMniC,IAAI,GAAG,IAAA4N,6BAAA,EAAYs0B,OAAZ,CAAb;MACA,MAAMjiC,KAAK,GAAG,IAAA2N,6BAAA,EAAYu0B,QAAZ,CAAd;MACA,IAAI5xB,GAAG,GAAGvQ,IAAI,GAAGC,KAAjB;;MACA,IAAIwV,IAAI,CAAC6rB,GAAL,CAAS/wB,GAAT,IAAgB,KAAKgxB,SAAL,GAAiB9rB,IAAI,CAAC6rB,GAAL,CAASthC,IAAT,CAArC,EAAqD;QACjDuQ,GAAG,GAAG,CAAN;MACH;;MACD,OAAO,KAAKiwB,qBAAL,CAA2BjwB,GAA3B,EAAgCkxB,YAAhC,CAAP;IACH,CATD;;IAUA,KAAKW,MAAL,GAAc,CAACF,OAAD,EAAUC,QAAV,KAAuB;MACjC,MAAMniC,IAAI,GAAG,IAAA4N,6BAAA,EAAYs0B,OAAZ,CAAb;MACA,MAAMjiC,KAAK,GAAG,IAAA2N,6BAAA,EAAYu0B,QAAZ,CAAd;;MACA,IAAIliC,KAAK,KAAK,CAAd,EAAiB;QACb,OAAO,IAAIrC,eAAJ,CAAc5E,eAAA,CAAUqpC,WAAxB,CAAP;MACH,CAFD,MAGK;QACD,MAAMZ,YAAY,GAAGa,qCAAqC,CAACJ,OAAD,EAAUC,QAAV,CAA1D;QACA,OAAO,KAAK3B,qBAAL,CAA2BxgC,IAAI,GAAGC,KAAlC,EAAyCwhC,YAAzC,CAAP;MACH;IACJ,CAVD;;IAWA,KAAKc,QAAL,GAAgB,CAACviC,IAAD,EAAOC,KAAP,KAAiB;MAC7B,MAAMwhC,YAAY,GAAGa,qCAAqC,CAACtiC,IAAD,EAAOC,KAAP,CAA1D;MACA,OAAO,KAAKugC,qBAAL,CAA2B,IAAA5yB,6BAAA,EAAY5N,IAAZ,IAAoB,IAAA4N,6BAAA,EAAY3N,KAAZ,CAA/C,EAAmEwhC,YAAnE,CAAP;IACH,CAHD;;IAIA,KAAKe,kBAAL,GAA2Bjc,IAAD,IAAU;MAChC,MAAMhW,GAAG,GAAG,EAAZ;;MACA,KAAK,MAAMpT,GAAX,IAAkBopB,IAAlB,EAAwB;QACpB,IAAIppB,GAAG,YAAYS,eAAnB,EAA8B;UAC1B,OAAOT,GAAP;QACH,CAFD,MAGK,IAAI,IAAAW,kCAAA,EAAiBX,GAAjB,KAAyB,OAAOA,GAAP,KAAe,QAA5C,EAAsD;UACvD,MAAMqiC,OAAO,GAAG,KAAKW,qBAAL,CAA2BhjC,GAA3B,CAAhB;;UACA,IAAI,EAAEqiC,OAAO,YAAY5hC,eAArB,CAAJ,EAAqC;YACjC2S,GAAG,CAAC5N,IAAJ,CAAS68B,OAAT;UACH;QACJ;MACJ;;MACD,OAAOjvB,GAAP;IACH,CAdD;;IAeA,KAAKkyB,wBAAL,GAAiClc,IAAD,IAAU,KAAKmc,aAAL,CAAmBnc,IAAnB,EAAyB,KAAKoc,kBAA9B,CAA1C;;IACA,KAAKC,kCAAL,GAA2Crc,IAAD,IAAU,KAAKmc,aAAL,CAAmBnc,IAAnB,EAAyB,KAAKsc,6BAA9B,CAApD;;IACA,KAAKF,kBAAL,GAA2Bpc,IAAD,IAAU;MAChC,MAAMhW,GAAG,GAAG,EAAZ;;MACA,KAAK,MAAMpT,GAAX,IAAkBopB,IAAlB,EAAwB;QACpB,IAAIppB,GAAG,YAAYS,eAAnB,EAA8B;UAC1B,OAAOT,GAAP;QACH,CAFD,MAGK,IAAI,IAAAW,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;UAC5BoT,GAAG,CAAC5N,IAAJ,CAAS,IAAAiL,6BAAA,EAAYzQ,GAAZ,CAAT;QACH;MACJ;;MACD,OAAOoT,GAAP;IACH,CAXD;;IAYA,KAAKuyB,0BAAL,GAAmCvc,IAAD,IAAU;MACxC,MAAMhW,GAAG,GAAG,EAAZ;;MACA,KAAK,MAAMpT,GAAX,IAAkBopB,IAAlB,EAAwB;QACpB,IAAIppB,GAAG,YAAYS,eAAnB,EAA8B;UAC1B,OAAOT,GAAP;QACH,CAFD,MAGK,IAAI,IAAAW,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;UAC5BoT,GAAG,CAAC5N,IAAJ,CAAS,IAAAiL,6BAAA,EAAYzQ,GAAZ,CAAT;QACH,CAFI,MAGA,IAAIA,GAAG,KAAKQ,4BAAZ,EAAwB;UACzB,OAAO,IAAIC,eAAJ,CAAc5E,eAAA,CAAU4D,KAAxB,EAA+B6B,0BAAA,CAAa00B,cAA5C,CAAP;QACH;MACJ;;MACD,OAAO5iB,GAAP;IACH,CAdD;;IAeA,KAAKsyB,6BAAL,GAAsCtc,IAAD,IAAU;MAC3C,MAAMhW,GAAG,GAAG,EAAZ;;MACA,KAAK,MAAMpT,GAAX,IAAkBopB,IAAlB,EAAwB;QACpB,IAAIppB,GAAG,YAAYS,eAAnB,EAA8B;UAC1B,OAAOT,GAAP;QACH;;QACD,IAAIA,GAAG,KAAKQ,4BAAZ,EAAwB;UACpB;QACH;;QACD,MAAM6hC,OAAO,GAAG,KAAKpC,2BAAL,CAAiCjgC,GAAjC,CAAhB;;QACA,IAAI,IAAAW,kCAAA,EAAiB0hC,OAAjB,CAAJ,EAA+B;UAC3BjvB,GAAG,CAAC5N,IAAJ,CAAS,IAAAiL,6BAAA,EAAY4xB,OAAZ,CAAT;QACH;MACJ;;MACD,OAAOjvB,GAAP;IACH,CAfD;;IAgBA,KAAKwyB,QAAL,GAAgB,IAAAC,gCAAA,EAAmBv/B,MAAnB,CAAhB;IACA,KAAK89B,SAAL,GAAiB99B,MAAM,CAACw/B,aAAP,GAAuBx/B,MAAM,CAACy/B,gBAA9B,GAAiD,CAAlE;EACH;;EACDC,iBAAiB,CAACjjB,OAAD,EAAU;IACvB,MAAMkjB,MAAM,GAAG,KAAKC,UAAL,CAAgBnjB,OAAhB,CAAf;IACA,OAAQxiB,SAAD,IAAgB,OAAOA,SAAP,KAAqB,QAArB,IAAiC0lC,MAAM,CAAClmB,IAAP,CAAY,KAAKomB,eAAL,CAAqB5lC,SAArB,CAAZ,CAAxD;EACH;;EACD6lC,kBAAkB,CAACrjB,OAAD,EAAU;IACxB,MAAMkjB,MAAM,GAAG,KAAKC,UAAL,CAAgBnjB,OAAhB,CAAf;IACA,OAAQxiB,SAAD,IAAe;MAClB,OAAQ,EAAE,OAAOA,SAAP,KAAqB,QAAvB,KAAoC,CAAC0lC,MAAM,CAAClmB,IAAP,CAAY,KAAKomB,eAAL,CAAqB5lC,SAArB,CAAZ,CAA7C;IACH,CAFD;EAGH;;EACD8lC,YAAY,CAACtjB,OAAD,EAAU8D,IAAV,EAAgB;IACxB,IAAIlkB,EAAJ;;IACA,MAAMsjC,MAAM,GAAG,KAAKC,UAAL,CAAgBnjB,OAAhB,EAAyB,KAAzB,CAAf;IACA,MAAMnV,MAAM,GAAGq4B,MAAM,CAACpoB,IAAP,CAAYgJ,IAAZ,CAAf;IACA,OAAO,CAAClkB,EAAE,GAAGiL,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAAC04B,KAA7D,MAAwE,IAAxE,IAAgF3jC,EAAE,KAAK,KAAK,CAA5F,GAAgGA,EAAhG,GAAqG,CAAC,CAA7G;EACH;;EACD4jC,aAAa,CAACxjB,OAAD,EAAU;IACnB,IAAI,CAAC,KAAKzc,MAAL,CAAYkgC,qBAAb,IAAsC,CAAC,KAAKlgC,MAAL,CAAYmgC,YAAvD,EAAqE;MACjE,OAAO,CAAC,KAAKngC,MAAL,CAAYogC,cAApB;IACH;;IACD,KAAK,IAAIjc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1H,OAAO,CAAChT,MAA5B,EAAoC0a,CAAC,EAArC,EAAyC;MACrC,MAAMkc,CAAC,GAAG5jB,OAAO,CAAC6jB,MAAR,CAAenc,CAAf,CAAV;;MACA,IAAIoc,UAAU,CAACF,CAAD,CAAV,IAAkB,KAAKrgC,MAAL,CAAYkgC,qBAAZ,IAAqCM,WAAW,CAACH,CAAD,CAAtE,EAA4E;QACxE,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH;;EACDI,QAAQ,CAAChC,OAAD,EAAUC,QAAV,EAAoB;IACxB,MAAMniC,IAAI,GAAG,IAAA4N,6BAAA,EAAYs0B,OAAZ,CAAb;IACA,MAAMjiC,KAAK,GAAG,IAAA2N,6BAAA,EAAYu0B,QAAZ,CAAd;IACA,MAAMgC,GAAG,GAAI,IAAI,KAAK5C,SAAtB;;IACA,IAAKthC,KAAK,IAAI,CAAV,IAAiBD,IAAI,GAAGmkC,GAAP,IAAclkC,KAA/B,IAA0CD,IAAI,IAAIC,KAAK,GAAGkkC,GAA9D,EAAoE;MAChE,OAAO,CAAP;IACH,CAFD,MAGK,IAAKlkC,KAAK,IAAI,CAAV,IAAiBD,IAAI,GAAGmkC,GAAP,IAAclkC,KAA/B,IAA0CD,IAAI,IAAIC,KAAK,GAAGkkC,GAA9D,EAAoE;MACrE,OAAO,CAAP;IACH,CAFI,MAGA,IAAInkC,IAAI,GAAGC,KAAX,EAAkB;MACnB,OAAO,CAAP;IACH,CAFI,MAGA;MACD,OAAO,CAAC,CAAR;IACH;EACJ;;EACDm9B,2BAA2B,CAACjgC,GAAD,EAAM;IAC7B,IAAI2C,EAAJ;;IACA,IAAI3C,GAAG,YAAYS,eAAnB,EAA8B;MAC1B,OAAOT,GAAP;IACH;;IACD,OAAO,CAAC2C,EAAE,GAAG,KAAKskC,mBAAL,CAAyBjnC,GAAzB,CAAN,MAAyC,IAAzC,IAAiD2C,EAAE,KAAK,KAAK,CAA7D,GAAiEA,EAAjE,GAAsE,IAAIlC,eAAJ,CAAc5E,eAAA,CAAU4D,KAAxB,EAA+B6B,0BAAA,CAAay0B,cAA5C,CAA7E;EACH;;EACDkR,mBAAmB,CAACjnC,GAAD,EAAM;IACrB,IAAI2C,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAKukC,gCAAL,CAAsClnC,GAAtC,CAAN,MAAsD,IAAtD,IAA8D2C,EAAE,KAAK,KAAK,CAA1E,GAA8EA,EAA9E,GAAoF,OAAO3C,GAAP,KAAe,QAAf,GAA0B,KAAK6hC,cAAL,CAAoBsF,sBAApB,CAA2CnnC,GAA3C,CAA1B,GAA4EgB,SAAvK;EACH;;EACDkmC,gCAAgC,CAAClnC,GAAD,EAAM;IAClC,IAAIA,GAAG,KAAKQ,4BAAZ,EAAwB;MACpB,OAAO,CAAP;IACH,CAFD,MAGK,IAAI,OAAOR,GAAP,KAAe,QAAnB,EAA6B;MAC9B,IAAIA,GAAG,KAAK,EAAZ,EAAgB;QACZ,OAAO,CAAP;MACH;;MACD,MAAMonC,kBAAkB,GAAG,KAAKC,gCAAL,CAAsCrnC,GAAtC,CAA3B;;MACA,IAAIonC,kBAAkB,KAAKpmC,SAA3B,EAAsC;QAClC,OAAOomC,kBAAP;MACH;;MACD,MAAME,mBAAmB,GAAG,KAAKC,iCAAL,CAAuCvnC,GAAvC,CAA5B;;MACA,IAAIsnC,mBAAmB,KAAKtmC,SAA5B,EAAuC;QACnC,OAAOsmC,mBAAP;MACH;;MACD,OAAO,KAAK7D,oBAAL,CAA0B+D,0BAA1B,CAAqDxnC,GAAG,CAACynC,IAAJ,EAArD,CAAP;IACH,CAbI,MAcA,IAAI,IAAA9mC,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;MAC5B,OAAOA,GAAP;IACH,CAFI,MAGA,IAAI,OAAOA,GAAP,KAAe,SAAnB,EAA8B;MAC/B,OAAO2X,MAAM,CAAC3X,GAAD,CAAb;IACH,CAFI,MAGA;MACD,OAAOgB,SAAP;IACH;EACJ;;EACDqmC,gCAAgC,CAAC1V,KAAD,EAAQ;IACpC,MAAM+V,YAAY,GAAG/V,KAAK,CAAC8V,IAAN,EAArB;;IACA,IAAIC,YAAY,CAACC,QAAb,CAAsB,GAAtB,CAAJ,EAAgC;MAC5B,MAAMC,aAAa,GAAGF,YAAY,CAAClf,KAAb,CAAmB,CAAnB,EAAsBkf,YAAY,CAAC33B,MAAb,GAAsB,CAA5C,EAA+C03B,IAA/C,EAAtB;MACA,MAAMI,mBAAmB,GAAG,KAAKpE,oBAAL,CAA0B+D,0BAA1B,CAAqDI,aAArD,CAA5B;;MACA,IAAIC,mBAAmB,KAAK7mC,SAA5B,EAAuC;QACnC,OAAO,IAAI4jC,+BAAJ,CAAkBiD,mBAAmB,GAAG,GAAxC,CAAP;MACH;IACJ;;IACD,OAAO7mC,SAAP;EACH;;EACDumC,iCAAiC,CAAC5V,KAAD,EAAQ;IACrC,MAAMmW,eAAe,GAAG,KAAKC,eAAL,CAAqBpW,KAAK,CAAC8V,IAAN,EAArB,CAAxB;;IACA,IAAIK,eAAe,KAAK9mC,SAAxB,EAAmC;MAC/B,MAAM,CAACgnC,cAAD,EAAiBC,aAAjB,IAAkCH,eAAxC;MACA,MAAMI,mBAAmB,GAAG,KAAKzE,oBAAL,CAA0B+D,0BAA1B,CAAqDS,aAArD,CAA5B;;MACA,IAAIC,mBAAmB,KAAKlnC,SAA5B,EAAuC;QACnC,OAAO,IAAImnC,gCAAJ,CAAmBD,mBAAnB,EAAwCF,cAAxC,CAAP;MACH;IACJ;;IACD,OAAOhnC,SAAP;EACH;;EACD+mC,eAAe,CAAC5f,KAAD,EAAQ;IACnB,KAAK,MAAMigB,QAAX,IAAuB,KAAK9hC,MAAL,CAAY0hC,cAAnC,EAAmD;MAC/C,IAAI7f,KAAK,CAACvpB,UAAN,CAAiBwpC,QAAjB,CAAJ,EAAgC;QAC5B,OAAO,CAACA,QAAD,EAAWjgB,KAAK,CAACK,KAAN,CAAY4f,QAAQ,CAACr4B,MAArB,EAA6B03B,IAA7B,EAAX,CAAP;MACH;;MACD,IAAItf,KAAK,CAACwf,QAAN,CAAeS,QAAf,CAAJ,EAA8B;QAC1B,OAAO,CAACA,QAAD,EAAWjgB,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeL,KAAK,CAACpY,MAAN,GAAeq4B,QAAQ,CAACr4B,MAAvC,EAA+C03B,IAA/C,EAAX,CAAP;MACH;IACJ;;IACD,OAAOzmC,SAAP;EACH;;EACDqnC,wBAAwB,CAACjf,IAAD,EAAO;IAC3B,MAAMkf,IAAI,GAAG,EAAb;;IACA,KAAK,MAAMtoC,GAAX,IAAkBopB,IAAlB,EAAwB;MACpB,IAAIppB,GAAG,YAAYU,kCAAnB,EAAqC;QACjC4nC,IAAI,CAAC9iC,IAAL,CAAUxF,GAAV;MACH,CAFD,MAGK,IAAIA,GAAG,KAAKQ,4BAAZ,EAAwB;QACzB,MAAM6hC,OAAO,GAAG,KAAKW,qBAAL,CAA2BhjC,GAA3B,CAAhB;;QACA,IAAIqiC,OAAO,YAAY5hC,eAAvB,EAAkC;UAC9B,OAAO4hC,OAAP;QACH,CAFD,MAGK;UACDiG,IAAI,CAAC9iC,IAAL,CAAU68B,OAAV;QACH;MACJ;IACJ;;IACD,MAAMkG,YAAY,GAAG,EAArB;;IACA,KAAK,MAAMrsB,GAAX,IAAkBosB,IAAlB,EAAwB;MACpB,IAAIpsB,GAAG,YAAYxb,kCAAnB,EAAqC;QACjC,MAAM8nC,GAAG,GAAG,KAAKnD,kBAAL,CAAwBnpB,GAAG,CAAC4gB,uBAAJ,EAAxB,CAAZ;;QACA,IAAI0L,GAAG,YAAY/nC,eAAnB,EAA8B;UAC1B,OAAO+nC,GAAP;QACH,CAFD,MAGK;UACDD,YAAY,CAAC/iC,IAAb,CAAkB,GAAGgjC,GAArB;QACH;MACJ,CARD,MASK;QACDD,YAAY,CAAC/iC,IAAb,CAAkB0W,GAAlB;MACH;IACJ;;IACD,OAAOqsB,YAAP;EACH;;EACDvF,qBAAqB,CAAChjC,GAAD,EAAM;IACvB,IAAIA,GAAG,YAAYS,eAAnB,EAA8B;MAC1B,OAAOT,GAAP;IACH,CAFD,MAGK,IAAIA,GAAG,KAAKQ,4BAAZ,EAAwB;MACzB,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;IACH,CAFI,MAGA,IAAI,IAAAG,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;MAC5B,OAAO,CAAC,IAAAyQ,6BAAA,EAAYzQ,GAAZ,CAAD,EAAmB,CAAnB,CAAP;IACH,CAFI,MAGA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MAC9B,OAAO,KAAKyoC,qBAAL,CAA2BzoC,GAA3B,CAAP;IACH,CAFI,MAGA;MACD,OAAO,IAAIS,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAaw3B,qBAA1C,CAAP;IACH;EACJ;;EACDuK,qBAAqB,CAACn7B,KAAD,EAAQwgC,UAAR,EAAoB;IACrC,MAAM;MAAExnC,IAAF;MAAQkiC;IAAR,IAAmBsF,UAAzB;;IACA,QAAQxnC,IAAR;MACI,KAAKpB,4BAAA,CAAW6oC,UAAhB;QACI,OAAOzgC,KAAP;;MACJ,KAAKpI,4BAAA,CAAW8oC,eAAhB;QAAiC;UAC7B,OAAO,IAAIT,gCAAJ,CAAmBjgC,KAAnB,EAA0Bk7B,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD,KAAK98B,MAAL,CAAY0hC,cAAZ,CAA2B,CAA3B,CAA1E,CAAP;QACH;;MACD,KAAKloC,4BAAA,CAAW+oC,WAAhB;QACI,OAAO,IAAIC,4BAAJ,CAAe5gC,KAAf,EAAsBk7B,MAAtB,CAAP;;MACJ,KAAKtjC,4BAAA,CAAWipC,eAAhB;QACI,OAAO,IAAIC,gCAAJ,CAAmB9gC,KAAnB,EAA0Bk7B,MAA1B,CAAP;;MACJ,KAAKtjC,4BAAA,CAAWmpC,WAAhB;QACI,OAAO,IAAIC,4BAAJ,CAAehhC,KAAf,EAAsBk7B,MAAtB,CAAP;;MACJ,KAAKtjC,4BAAA,CAAWqpC,cAAhB;QACI,OAAO,IAAIvE,+BAAJ,CAAkB18B,KAAlB,EAAyBk7B,MAAzB,CAAP;IAbR;EAeH;;EACD8C,UAAU,CAACnjB,OAAD,EAAiC;IAAA,IAAvB2jB,cAAuB,uEAAN,IAAM;IACvC3jB,OAAO,GAAG,KAAKojB,eAAL,CAAqBpjB,OAArB,CAAV;IACA,IAAIqmB,SAAJ;IACA,IAAI3C,YAAY,GAAG,KAAKngC,MAAL,CAAYmgC,YAA/B;IACA,IAAID,qBAAqB,GAAG,KAAKlgC,MAAL,CAAYkgC,qBAAxC;;IACA,IAAIA,qBAAJ,EAA2B;MACvB,IAAI;QACArqB,MAAM,CAAC4G,OAAD,CAAN;MACH,CAFD,CAGA,OAAOkE,CAAP,EAAU;QACNuf,qBAAqB,GAAG,KAAxB;QACAC,YAAY,GAAG,KAAf;MACH;IACJ;;IACD,IAAID,qBAAJ,EAA2B;MACvB4C,SAAS,GAAGC,kBAAkB,CAACtmB,OAAD,EAAU,KAAKzc,MAAL,CAAYgjC,aAAtB,CAA9B;IACH,CAFD,MAGK,IAAI7C,YAAJ,EAAkB;MACnB2C,SAAS,GAAGG,kBAAkB,CAACxmB,OAAD,EAAU,KAAKzc,MAAL,CAAYgjC,aAAtB,CAA9B;IACH,CAFI,MAGA;MACDF,SAAS,GAAGI,mBAAmB,CAACzmB,OAAD,EAAU,KAAKzc,MAAL,CAAYgjC,aAAtB,CAA/B;IACH;;IACD,IAAI,KAAKhjC,MAAL,CAAYogC,cAAZ,IAA8BA,cAAlC,EAAkD;MAC9C,OAAOvqB,MAAM,CAAC,OAAOitB,SAAP,GAAmB,IAApB,CAAb;IACH,CAFD,MAGK;MACD,OAAOjtB,MAAM,CAACitB,SAAD,CAAb;IACH;EACJ;;EACDjD,eAAe,CAACnU,GAAD,EAAM;IACjB,IAAI,CAAC,KAAK1rB,MAAL,CAAYgjC,aAAjB,EAAgC;MAC5BtX,GAAG,GAAGA,GAAG,CAACyX,WAAJ,EAAN;IACH;;IACD,IAAI,CAAC,KAAKnjC,MAAL,CAAYojC,eAAjB,EAAkC;MAC9B1X,GAAG,GAAGmU,eAAe,CAACnU,GAAD,EAAM,KAAN,CAAf,CAA4BhS,OAA5B,CAAoC,kBAApC,EAAwD,EAAxD,CAAN;IACH;;IACD,OAAOgS,GAAP;EACH;;EACD2R,OAAO,CAAC9gC,IAAD,EAAOC,KAAP,EAAc;IACjB,IAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4B,OAAOC,KAAP,KAAiB,QAAjD,EAA2D;MACvD,MAAM6mC,OAAO,GAAG,OAAO9mC,IAAP,KAAgB,QAAhB,GAA2B,KAAKg/B,cAAL,CAAoBsF,sBAApB,CAA2CtkC,IAA3C,CAA3B,GAA8EA,IAA9F;MACA,MAAM+mC,QAAQ,GAAG,OAAO9mC,KAAP,KAAiB,QAAjB,GAA4B,KAAK++B,cAAL,CAAoBsF,sBAApB,CAA2CrkC,KAA3C,CAA5B,GAAgFA,KAAjG;;MACA,IAAI,IAAAnC,kCAAA,EAAiBgpC,OAAjB,KAA6B,IAAAhpC,kCAAA,EAAiBipC,QAAjB,CAAjC,EAA6D;QACzD,OAAO,KAAK7C,QAAL,CAAc4C,OAAd,EAAuBC,QAAvB,CAAP;MACH;IACJ;;IACD,IAAI/mC,IAAI,KAAKrC,4BAAb,EAAyB;MACrBqC,IAAI,GAAGgnC,kBAAkB,CAAC/mC,KAAD,CAAzB;IACH,CAFD,MAGK,IAAIA,KAAK,KAAKtC,4BAAd,EAA0B;MAC3BsC,KAAK,GAAG+mC,kBAAkB,CAAChnC,IAAD,CAA1B;IACH;;IACD,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOC,KAAP,KAAiB,QAAjD,EAA2D;MACvD,OAAO,KAAKgnC,SAAL,CAAejnC,IAAf,EAAqBC,KAArB,CAAP;IACH,CAFD,MAGK,IAAI,OAAOD,IAAP,KAAgB,SAAhB,IAA6B,OAAOC,KAAP,KAAiB,SAAlD,EAA6D;MAC9D,OAAOinC,SAAS,CAACC,qBAAqB,CAACnnC,IAAD,CAAtB,EAA8BmnC,qBAAqB,CAAClnC,KAAD,CAAnD,CAAhB;IACH,CAFI,MAGA,IAAI,IAAAnC,kCAAA,EAAiBkC,IAAjB,KAA0B,IAAAlC,kCAAA,EAAiBmC,KAAjB,CAA9B,EAAuD;MACxD,OAAO,KAAKikC,QAAL,CAAclkC,IAAd,EAAoBC,KAApB,CAAP;IACH,CAFI,MAGA,IAAID,IAAI,KAAKrC,4BAAT,IAAuBsC,KAAK,KAAKtC,4BAArC,EAAiD;MAClD,OAAO,CAAP;IACH,CAFI,MAGA;MACD,OAAOupC,SAAS,CAAC,IAAAhqC,sBAAA,EAAiB,IAAAO,sBAAA,EAAiBuC,IAAjB,CAAjB,CAAD,EAA2C,IAAA9C,sBAAA,EAAiB,IAAAO,sBAAA,EAAiBwC,KAAjB,CAAjB,CAA3C,CAAhB;IACH;EACJ;;EACDgnC,SAAS,CAACjnC,IAAD,EAAOC,KAAP,EAAc;IACnB,OAAO,KAAK8iC,QAAL,CAAcjC,OAAd,CAAsB9gC,IAAtB,EAA4BC,KAA5B,CAAP;EACH;;EACDyiC,aAAa,CAACnc,IAAD,EAAO6gB,OAAP,EAAgB;IACzB,MAAM3B,IAAI,GAAG,EAAb;;IACA,KAAK,MAAMtoC,GAAX,IAAkBopB,IAAlB,EAAwB;MACpB,IAAIppB,GAAG,YAAYU,kCAAnB,EAAqC;QACjC4nC,IAAI,CAAC9iC,IAAL,CAAUxF,GAAV;MACH,CAFD,MAGK;QACD,MAAMqiC,OAAO,GAAG,IAAA5xB,6BAAA,EAAY,KAAKwvB,2BAAL,CAAiCjgC,GAAjC,CAAZ,CAAhB;;QACA,IAAIqiC,OAAO,YAAY5hC,eAAvB,EAAkC;UAC9B,OAAO4hC,OAAP;QACH,CAFD,MAGK;UACDiG,IAAI,CAAC9iC,IAAL,CAAU68B,OAAV;QACH;MACJ;IACJ;;IACD,MAAMkG,YAAY,GAAG,EAArB;;IACA,KAAK,MAAMrsB,GAAX,IAAkBosB,IAAlB,EAAwB;MACpB,IAAIpsB,GAAG,YAAYxb,kCAAnB,EAAqC;QACjC,MAAM8nC,GAAG,GAAGyB,OAAO,CAAC/tB,GAAG,CAAC4gB,uBAAJ,EAAD,CAAnB;;QACA,IAAI0L,GAAG,YAAY/nC,eAAnB,EAA8B;UAC1B,OAAO+nC,GAAP;QACH,CAFD,MAGK;UACDD,YAAY,CAAC/iC,IAAb,CAAkB,GAAGgjC,GAArB;QACH;MACJ,CARD,MASK;QACDD,YAAY,CAAC/iC,IAAb,CAAkB0W,GAAlB;MACH;IACJ;;IACD,OAAOqsB,YAAP;EACH;;EACDE,qBAAqB,CAACzoC,GAAD,EAAM;IACvB,MAAMkqC,KAAK,GAAG3G,oBAAoB,CAAC1lB,IAArB,CAA0B7d,GAA1B,CAAd;;IACA,IAAIkqC,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAIzpC,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAaw3B,qBAA1C,CAAP;IACH;;IACD,IAAIqR,IAAJ;;IACA,IAAID,KAAK,CAAC,CAAD,CAAL,KAAalpC,SAAjB,EAA4B;MACxBmpC,IAAI,GAAID,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,GAAmB,CAAC,CAAD,EAAI,CAAC,CAAL,CAAnB,GAA6B,CAAC,CAAD,EAAI,CAAJ,CAArC;IACH,CAFD,MAGK;MACDC,IAAI,GAAG,KAAKC,iBAAL,CAAuBF,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAvC,EAA4CA,KAAK,CAAC,CAAD,CAAjD,CAAP;IACH;;IACD,IAAIC,IAAI,YAAY1pC,eAApB,EAA+B;MAC3B,OAAO0pC,IAAP;IACH;;IACD,IAAID,KAAK,CAAC,CAAD,CAAL,KAAalpC,SAAjB,EAA4B;MACxB,OAAOmpC,IAAP;IACH;;IACD,IAAIE,IAAJ;;IACA,IAAIH,KAAK,CAAC,EAAD,CAAL,KAAclpC,SAAlB,EAA6B;MACzBqpC,IAAI,GAAIH,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,GAAmB,CAAC,CAAD,EAAI,CAAC,CAAL,CAAnB,GAA6B,CAAC,CAAD,EAAI,CAAJ,CAArC;IACH,CAFD,MAGK;MACDG,IAAI,GAAG,KAAKD,iBAAL,CAAuBF,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,EAAD,CAAvC,EAA6CA,KAAK,CAAC,EAAD,CAAlD,CAAP;IACH;;IACD,IAAIG,IAAI,YAAY5pC,eAApB,EAA+B;MAC3B,OAAO4pC,IAAP;IACH;;IACD,IAAKH,KAAK,CAAC,CAAD,CAAL,KAAa,EAAd,IAAsBA,KAAK,CAAC,EAAD,CAAL,KAAc,EAAxC,EAA6C;MACzC,OAAO,IAAIzpC,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAaw3B,qBAA1C,CAAP;IACH;;IACD,IAAIoR,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;MAClB,OAAO,CAACC,IAAI,CAAC,CAAD,CAAJ,GAAUE,IAAI,CAAC,CAAD,CAAf,EAAoBF,IAAI,CAAC,CAAD,CAAJ,GAAUE,IAAI,CAAC,CAAD,CAAlC,CAAP;IACH,CAFD,MAGK;MACD,OAAO,CAACF,IAAI,CAAC,CAAD,CAAJ,GAAUE,IAAI,CAAC,CAAD,CAAf,EAAoBF,IAAI,CAAC,CAAD,CAAJ,GAAUE,IAAI,CAAC,CAAD,CAAlC,CAAP;IACH;EACJ;;EACDD,iBAAiB,CAACpqC,GAAD,EAAMgnC,GAAN,EAAW;IACxB,MAAM9qB,GAAG,GAAG,IAAAzL,6BAAA,EAAY,KAAKy2B,gCAAL,CAAsClnC,GAAtC,CAAZ,CAAZ;;IACA,IAAIkc,GAAG,KAAKlb,SAAZ,EAAuB;MACnB,OAAO,IAAIP,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAaw3B,qBAA1C,CAAP;IACH;;IACD,IAAIkO,GAAG,KAAK,EAAZ,EAAgB;MACZ,OAAO,CAAC9qB,GAAD,EAAM,CAAN,CAAP;IACH,CAFD,MAGK;MACD,OAAO,CAAC,CAAD,EAAIA,GAAJ,CAAP;IACH;EACJ;;AA3fyB;;;;AA6fvB,SAASouB,qBAAT,OAAyCC,IAAzC,EAA+C;EAAA,IAAhB,CAACC,EAAD,EAAKC,EAAL,CAAgB;;EAClD,IAAI,CAAC3gC,QAAQ,CAAC0gC,EAAD,CAAT,IAAiB,CAAC1gC,QAAQ,CAAC2gC,EAAD,CAA9B,EAAoC;IAChC,OAAO,IAAIhqC,eAAJ,CAAc5E,eAAA,CAAU0mC,GAAxB,EAA6BjhC,0BAAA,CAAa+0B,GAA1C,CAAP;EACH;;EACDkU,IAAI,GAAGA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0CjH,qBAAjD;;EACA,IAAImH,EAAE,KAAK,CAAX,EAAc;IACV,OAAQ,GAAED,EAAG,EAAb;EACH;;EACD,MAAME,KAAK,GAAI,GAAED,EAAE,KAAK,CAAC,CAAR,IAAaA,EAAE,KAAK,CAApB,GAAwB,EAAxB,GAA6BnyB,IAAI,CAAC6rB,GAAL,CAASsG,EAAT,CAAa,GAAEF,IAAK,EAAlE;;EACA,IAAIC,EAAE,KAAK,CAAX,EAAc;IACV,OAAQ,GAAEC,EAAE,GAAG,CAAL,GAAS,GAAT,GAAe,EAAG,GAAEC,KAAM,EAApC;EACH;;EACD,OAAQ,GAAEF,EAAG,GAAEC,EAAE,GAAG,CAAL,GAAS,GAAT,GAAe,GAAI,GAAEC,KAAM,EAA1C;AACH;;AACM,SAAS5H,aAAT,CAAuB9iC,GAAvB,EAA4B;EAC/B,IAAIA,GAAG,YAAYU,kCAAnB,EAAqC;IACjC,OAAOV,GAAP;EACH,CAFD,MAGK;IACD,OAAOU,kCAAA,CAAiBi8B,UAAjB,CAA4B38B,GAA5B,CAAP;EACH;AACJ;;AACM,SAAS2qC,2BAAT,CAAqC3qC,GAArC,EAA0C;EAC7C,IAAKA,GAAG,YAAYU,kCAAf,IAAmCV,GAAG,CAACq9B,cAAJ,EAApC,IAA6Dr9B,GAAG,YAAYS,eAAhF,EAA2F;IACvF,OAAOT,GAAP;EACH,CAFD,MAGK,IAAI,IAAAW,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;IAC5B,OAAOU,kCAAA,CAAiBi8B,UAAjB,CAA4B38B,GAA5B,CAAP;EACH,CAFI,MAGA;IACD,OAAO,IAAP;EACH;AACJ;;AACM,SAASgqC,qBAAT,CAA+BhqC,GAA/B,EAAoC;EACvC,OAAO2X,MAAM,CAAC3X,GAAD,CAAb;AACH;;AACM,SAAS6pC,kBAAT,CAA4B7pC,GAA5B,EAAiC;EACpC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzB,OAAO,EAAP;EACH,CAFD,MAGK,IAAI,IAAAW,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;IAC5B,OAAO,CAAP;EACH,CAFI,MAGA,IAAI,OAAOA,GAAP,KAAe,SAAnB,EAA8B;IAC/B,OAAO,KAAP;EACH,CAFI,MAGA;IACD,OAAOQ,4BAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;;;AACO,SAASoiC,qBAAT,CAA+B5iC,GAA/B,EAAoC;EACvC,IAAIA,GAAG,YAAYS,eAAf,IAA4B,OAAOT,GAAP,KAAe,SAA/C,EAA0D;IACtD,OAAOA,GAAP;EACH,CAFD,MAGK,IAAIA,GAAG,KAAKQ,4BAAZ,EAAwB;IACzB,OAAO,KAAP;EACH,CAFI,MAGA,IAAI,IAAAG,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;IAC5B,OAAO,IAAAyQ,6BAAA,EAAYzQ,GAAZ,MAAqB,CAA5B;EACH,CAFI,MAGA;IACD,MAAM4qC,UAAU,GAAG5qC,GAAG,CAACuf,WAAJ,EAAnB;;IACA,IAAIqrB,UAAU,KAAK,MAAnB,EAA2B;MACvB,OAAO,IAAP;IACH,CAFD,MAGK,IAAIA,UAAU,KAAK,OAAnB,EAA4B;MAC7B,OAAO,KAAP;IACH,CAFI,MAGA,IAAIA,UAAU,KAAK,EAAnB,EAAuB;MACxB,OAAO,KAAP;IACH,CAFI,MAGA;MACD,OAAO5pC,SAAP;IACH;EACJ;AACJ;;AACM,SAAS2hC,oBAAT,CAA8B3iC,GAA9B,EAAmC;EACtC,IAAIA,GAAG,YAAYS,eAAf,IAA4B,OAAOT,GAAP,KAAe,QAA/C,EAAyD;IACrD,OAAOA,GAAP;EACH,CAFD,MAGK,IAAIA,GAAG,KAAKQ,4BAAZ,EAAwB;IACzB,OAAO,EAAP;EACH,CAFI,MAGA,IAAI,IAAAG,kCAAA,EAAiBX,GAAjB,CAAJ,EAA2B;IAC5B,OAAO,IAAAyQ,6BAAA,EAAYzQ,GAAZ,EAAiBuZ,QAAjB,EAAP;EACH,CAFI,MAGA;IACD,OAAOvZ,GAAG,GAAG,MAAH,GAAY,OAAtB;EACH;AACJ;;AACM,SAAS6qC,WAAT,CAAqB7qC,GAArB,EAA0B;EAC7B,OAAOA,GAAG,KAAKQ,4BAAR,GAAqB,CAArB,GAAyBR,GAAhC;AACH;;AACM,SAAS+pC,SAAT,CAAmBhF,OAAnB,EAA4BC,QAA5B,EAAsC;EACzC,MAAMniC,IAAI,GAAG,IAAA4N,6BAAA,EAAYs0B,OAAZ,CAAb;EACA,MAAMjiC,KAAK,GAAG,IAAA2N,6BAAA,EAAYu0B,QAAZ,CAAd;;EACA,IAAIniC,IAAI,GAAGC,KAAX,EAAkB;IACd,OAAO,CAAP;EACH,CAFD,MAGK,IAAID,IAAI,GAAGC,KAAX,EAAkB;IACnB,OAAO,CAAC,CAAR;EACH,CAFI,MAGA;IACD,OAAO,CAAP;EACH;AACJ;;AACM,SAASgoC,gBAAT,CAA0B9qC,GAA1B,EAA+B;EAClC,OAAQ+qC,KAAK,CAAC/qC,GAAD,CAAL,IAAcA,GAAG,KAAK4zB,QAAtB,IAAkC5zB,GAAG,KAAK,CAAC4zB,QAAnD;AACH;;AACM,SAASoX,eAAT,CAAyBhrC,GAAzB,EAA8B;EACjC,IAAIA,GAAG,KAAK,CAAZ,EAAe;IACX,OAAO,CAAP;EACH,CAFD,MAGK;IACD,OAAOA,GAAP;EACH;AACJ;;AACD,SAAS6mC,UAAT,CAAoBF,CAApB,EAAuB;EACnB,OAAO,CAAC,GAAD,EAAM,GAAN,EAAWsE,QAAX,CAAoBtE,CAApB,CAAP;AACH;;AACD,MAAMuE,iBAAiB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,IAAlE,EAAwE,GAAxE,EAA6E,GAA7E,EAAkF,GAAlF,CAA1B;;AACA,SAASpE,WAAT,CAAqBH,CAArB,EAAwB;EACpB,OAAOuE,iBAAiB,CAACD,QAAlB,CAA2BtE,CAA3B,CAAP;AACH;;AACD,SAAS4C,kBAAT,CAA4BxmB,OAA5B,EAAqCumB,aAArC,EAAoD;EAChD,IAAItX,GAAG,GAAG,EAAV;;EACA,KAAK,IAAIvH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1H,OAAO,CAAChT,MAA5B,EAAoC0a,CAAC,EAArC,EAAyC;IACrC,MAAMkc,CAAC,GAAG5jB,OAAO,CAAC6jB,MAAR,CAAenc,CAAf,CAAV;;IACA,IAAIkc,CAAC,KAAK,GAAV,EAAe;MACX,IAAIlc,CAAC,IAAI1H,OAAO,CAAChT,MAAR,GAAiB,CAA1B,EAA6B;QACzBiiB,GAAG,IAAI,GAAP;QACA;MACH;;MACD,MAAMmZ,CAAC,GAAGpoB,OAAO,CAAC6jB,MAAR,CAAenc,CAAC,GAAG,CAAnB,CAAV;;MACA,IAAIoc,UAAU,CAACsE,CAAD,CAAV,IAAiBrE,WAAW,CAACqE,CAAD,CAAhC,EAAqC;QACjCnZ,GAAG,IAAI,OAAOmZ,CAAd;QACA1gB,CAAC;MACJ,CAHD,MAIK;QACDuH,GAAG,IAAImZ,CAAP;QACA1gB,CAAC;MACJ;IACJ,CAdD,MAeK,IAAIoc,UAAU,CAACF,CAAD,CAAd,EAAmB;MACpB3U,GAAG,IAAI,MAAM2U,CAAb;IACH,CAFI,MAGA,IAAIG,WAAW,CAACH,CAAD,CAAf,EAAoB;MACrB3U,GAAG,IAAI,OAAO2U,CAAd;IACH,CAFI,MAGA,IAAI2C,aAAJ,EAAmB;MACpBtX,GAAG,IAAI2U,CAAP;IACH,CAFI,MAGA;MACD3U,GAAG,IAAI2U,CAAC,CAAC8C,WAAF,EAAP;IACH;EACJ;;EACD,OAAOzX,GAAP;AACH;;AACD,SAASwX,mBAAT,CAA6BzmB,OAA7B,EAAsCumB,aAAtC,EAAqD;EACjD,IAAItX,GAAG,GAAG,EAAV;;EACA,KAAK,IAAIvH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1H,OAAO,CAAChT,MAA5B,EAAoC0a,CAAC,EAArC,EAAyC;IACrC,MAAMkc,CAAC,GAAG5jB,OAAO,CAAC6jB,MAAR,CAAenc,CAAf,CAAV;;IACA,IAAIoc,UAAU,CAACF,CAAD,CAAV,IAAiBG,WAAW,CAACH,CAAD,CAAhC,EAAqC;MACjC3U,GAAG,IAAI,OAAO2U,CAAd;IACH,CAFD,MAGK,IAAI2C,aAAJ,EAAmB;MACpBtX,GAAG,IAAI2U,CAAP;IACH,CAFI,MAGA;MACD3U,GAAG,IAAI2U,CAAC,CAAC8C,WAAF,EAAP;IACH;EACJ;;EACD,OAAOzX,GAAP;AACH;;AACD,SAASqX,kBAAT,CAA4BtmB,OAA5B,EAAqCumB,aAArC,EAAoD;EAChD,IAAItX,GAAG,GAAG,EAAV;;EACA,KAAK,IAAIvH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1H,OAAO,CAAChT,MAA5B,EAAoC0a,CAAC,EAArC,EAAyC;IACrC,MAAMkc,CAAC,GAAG5jB,OAAO,CAAC6jB,MAAR,CAAenc,CAAf,CAAV;;IACA,IAAIoc,UAAU,CAACF,CAAD,CAAV,IAAiBG,WAAW,CAACH,CAAD,CAAhC,EAAqC;MACjC3U,GAAG,IAAI2U,CAAP;IACH,CAFD,MAGK,IAAI2C,aAAJ,EAAmB;MACpBtX,GAAG,IAAI2U,CAAP;IACH,CAFI,MAGA;MACD3U,GAAG,IAAI2U,CAAC,CAAC8C,WAAF,EAAP;IACH;EACJ;;EACD,OAAOzX,GAAP;AACH;;AACD,SAASuS,+BAAT,CAAyCQ,OAAzC,EAAkDC,QAAlD,EAA4D;EACxD,MAAM;IAAE9jC,IAAI,EAAEkqC,QAAR;IAAkBhI,MAAM,EAAEiI;EAA1B,IAAyC,IAAAC,+CAAA,EAA8BvG,OAA9B,CAA/C;EACA,MAAM;IAAE7jC,IAAI,EAAEqqC,SAAR;IAAmBnI,MAAM,EAAEoI;EAA3B,IAA2C,IAAAF,+CAAA,EAA8BtG,QAA9B,CAAjD;;EACA,IAAIoG,QAAQ,KAAKtrC,4BAAA,CAAW6oC,UAA5B,EAAwC;IACpC,OAAO;MAAEznC,IAAI,EAAEqqC,SAAR;MAAmBnI,MAAM,EAAEoI;IAA3B,CAAP;EACH;;EACD,IAAID,SAAS,KAAKzrC,4BAAA,CAAW6oC,UAA7B,EAAyC;IACrC,OAAO;MAAEznC,IAAI,EAAEkqC,QAAR;MAAkBhI,MAAM,EAAEiI;IAA1B,CAAP;EACH;;EACD,IAAI,CAACD,QAAQ,KAAKtrC,4BAAA,CAAWipC,eAAxB,IAA2CqC,QAAQ,KAAKtrC,4BAAA,CAAW+oC,WAApE,MACI0C,SAAS,KAAKzrC,4BAAA,CAAWipC,eAAzB,IAA4CwC,SAAS,KAAKzrC,4BAAA,CAAW+oC,WADzE,CAAJ,EAC2F;IACvF,OAAO;MAAE3nC,IAAI,EAAEpB,4BAAA,CAAW6oC;IAAnB,CAAP;EACH;;EACD,IAAIyC,QAAQ,KAAKtrC,4BAAA,CAAWmpC,WAA5B,EAAyC;IACrC,IAAIsC,SAAS,KAAKzrC,4BAAA,CAAW+oC,WAA7B,EAA0C;MACtC,OAAO;QAAE3nC,IAAI,EAAEpB,4BAAA,CAAWipC,eAAnB;QAAoC3F,MAAM,EAAEoI,WAAW,GAAG,GAAd,GAAoBH;MAAhE,CAAP;IACH;;IACD,IAAIE,SAAS,KAAKzrC,4BAAA,CAAWipC,eAA7B,EAA8C;MAC1C,OAAO;QAAE7nC,IAAI,EAAEpB,4BAAA,CAAWipC,eAAnB;QAAoC3F,MAAM,EAAEoI;MAA5C,CAAP;IACH;EACJ;;EACD,IAAID,SAAS,KAAKzrC,4BAAA,CAAWmpC,WAA7B,EAA0C;IACtC,IAAImC,QAAQ,KAAKtrC,4BAAA,CAAW+oC,WAA5B,EAAyC;MACrC,OAAO;QAAE3nC,IAAI,EAAEpB,4BAAA,CAAWipC,eAAnB;QAAoC3F,MAAM,EAAEiI,UAAU,GAAG,GAAb,GAAmBG;MAA/D,CAAP;IACH;;IACD,IAAIJ,QAAQ,KAAKtrC,4BAAA,CAAWipC,eAA5B,EAA6C;MACzC,OAAO;QAAE7nC,IAAI,EAAEpB,4BAAA,CAAWipC,eAAnB;QAAoC3F,MAAM,EAAEiI;MAA5C,CAAP;IACH;EACJ;;EACD,OAAO;IAAEnqC,IAAI,EAAEkqC,QAAR;IAAkBhI,MAAM,EAAEiI;EAA1B,CAAP;AACH;;AACD,SAASlG,qCAAT,CAA+CJ,OAA/C,EAAwDC,QAAxD,EAAkE;EAC9D,IAAI;IAAE9jC,IAAI,EAAEkqC,QAAR;IAAkBhI,MAAM,EAAEiI;EAA1B,IAAyC,IAAAC,+CAAA,EAA8BvG,OAA9B,CAA7C;EACA,IAAI;IAAE7jC,IAAI,EAAEqqC,SAAR;IAAmBnI,MAAM,EAAEoI;EAA3B,IAA2C,IAAAF,+CAAA,EAA8BtG,QAA9B,CAA/C;;EACA,IAAIoG,QAAQ,KAAKtrC,4BAAA,CAAWqpC,cAA5B,EAA4C;IACxCiC,QAAQ,GAAGtrC,4BAAA,CAAW6oC,UAAtB;IACA0C,UAAU,GAAGrqC,SAAb;EACH;;EACD,IAAIuqC,SAAS,KAAKzrC,4BAAA,CAAWqpC,cAA7B,EAA6C;IACzCoC,SAAS,GAAGzrC,4BAAA,CAAW6oC,UAAvB;IACA6C,WAAW,GAAGxqC,SAAd;EACH;;EACD,IAAIoqC,QAAQ,KAAKtrC,4BAAA,CAAW6oC,UAA5B,EAAwC;IACpC,OAAO;MAAEznC,IAAI,EAAEqqC,SAAR;MAAmBnI,MAAM,EAAEoI;IAA3B,CAAP;EACH;;EACD,IAAID,SAAS,KAAKzrC,4BAAA,CAAW6oC,UAA7B,EAAyC;IACrC,OAAO;MAAEznC,IAAI,EAAEkqC,QAAR;MAAkBhI,MAAM,EAAEiI;IAA1B,CAAP;EACH;;EACD,OAAO;IAAEnqC,IAAI,EAAEpB,4BAAA,CAAW6oC;EAAnB,CAAP;AACH;;AACM,SAAS8C,oBAAT,CAA8BzZ,GAA9B,EAAmC;EACtC,OAAOmU,eAAe,CAACnU,GAAG,CAACyX,WAAJ,EAAD,EAAoB,KAApB,CAAf,CAA0CzpB,OAA1C,CAAkD,kBAAlD,EAAsE,EAAtE,CAAP;AACH;;AACM,SAASmiB,mBAAT,CAA6BniC,GAA7B,EAAkCq+B,KAAlC,EAAyC;EAC5C,IAAI17B,EAAJ;;EACA,IAAI3C,GAAG,CAAC68B,OAAJ,EAAJ,EAAmB;IACf,OAAO,CAACl6B,EAAE,GAAG3C,GAAG,CAACq8B,IAAJ,CAAS,CAAT,CAAN,MAAuB,IAAvB,IAA+B15B,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAAC,CAAD,CAAjE;EACH;;EACD,MAAMyC,KAAK,GAAGpF,GAAG,CAACoF,KAAlB;;EACA,IAAIi5B,KAAK,CAACvpB,cAAN,CAAqBpT,KAArB,KAA+B0D,KAAK,CAAC1D,KAAzC,EAAgD;IAC5C,IAAI0D,KAAK,CAACuK,KAAN,OAAkB,CAAtB,EAAyB;MACrB,MAAM+7B,MAAM,GAAGrN,KAAK,CAACvpB,cAAN,CAAqBnT,GAArB,GAA2ByD,KAAK,CAACZ,KAAN,CAAY7C,GAAtD;;MACA,IAAI+pC,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAGtmC,KAAK,CAACwK,MAAN,EAA5B,EAA4C;QACxC,OAAO5P,GAAG,CAACq8B,IAAJ,CAASqP,MAAT,EAAiB,CAAjB,CAAP;MACH;IACJ,CALD,MAMK,IAAItmC,KAAK,CAACwK,MAAN,OAAmB,CAAvB,EAA0B;MAC3B,MAAM87B,MAAM,GAAGrN,KAAK,CAACvpB,cAAN,CAAqBhT,GAArB,GAA2BsD,KAAK,CAACZ,KAAN,CAAY1C,GAAtD;;MACA,IAAI4pC,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAGtmC,KAAK,CAACuK,KAAN,EAA5B,EAA2C;QACvC,OAAO3P,GAAG,CAACq8B,IAAJ,CAAS,CAAT,EAAYqP,MAAZ,CAAP;MACH;IACJ;EACJ;;EACD,OAAO1qC,SAAP;AACH;;AACM,SAASmlC,eAAT,CAAyBnU,GAAzB,EAA8B2Z,IAA9B,EAAoC;EACvC,OAAO,OAAO3Z,GAAG,CAAC4Z,SAAX,KAAyB,UAAzB,GACD5Z,GAAG,CAAC4Z,SAAJ,CAAcD,IAAI,CAACpsB,WAAL,EAAd,CADC,GACmCssB,cAAA,CAAMF,IAAN,EAAY3Z,GAAZ,CAD1C;AAEH,C;;;;;;AC1xBD,iD;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACO,SAAS6T,kBAAT,CAA4Bv/B,MAA5B,EAAoC;EACvC,MAAMwlC,WAAW,GAAGxlC,MAAM,CAACgjC,aAAP,GAAwBhjC,MAAM,CAACojC,eAAP,GAAyB,SAAzB,GAAqC,MAA7D,GAAwEpjC,MAAM,CAACojC,eAAP,GAAyB,QAAzB,GAAoC,MAAhI;EACA,MAAMqC,SAAS,GAAGzlC,MAAM,CAACylC,SAAzB;EACA,MAAMC,iBAAiB,GAAG1lC,MAAM,CAAC0lC,iBAAjC;EACA,OAAO,IAAIC,IAAI,CAACC,QAAT,CAAkB5lC,MAAM,CAAC6lC,UAAzB,EAAqC;IAAEL,WAAF;IAAeC,SAAf;IAA0BC;EAA1B,CAArC,CAAP;AACH,C;;;;;;;;;;;;;;;;;;ACTD;AACA;AACA;AACA;AACO,MAAMxrC,UAAU,GAAG4rC,MAAM,CAAC,aAAD,CAAzB;;;AACA,SAAS37B,WAAT,CAAqB47B,GAArB,EAA0B;EAC7B,IAAIA,GAAG,YAAYC,UAAnB,EAA+B;IAC3B,OAAOD,GAAG,CAACnwB,GAAX;EACH,CAFD,MAGK;IACD,OAAOmwB,GAAP;EACH;AACJ;;AACM,MAAMC,UAAN,CAAiB;EACpBrrC,WAAW,CAACib,GAAD,EAAMknB,MAAN,EAAc;IACrB,KAAKlnB,GAAL,GAAWA,GAAX;IACA,KAAKknB,MAAL,GAAcA,MAAd;EACH;;EACDmJ,UAAU,CAACrwB,GAAD,EAAM;IACZ,OAAO,IAAI,KAAKjb,WAAT,CAAqBib,GAArB,CAAP;EACH;;AAPmB;;;;AASjB,SAASuoB,WAAT,CAAqBvoB,GAArB,EAA0BswB,MAA1B,EAAkC;EACrC,IAAI,OAAOtwB,GAAP,KAAe,QAAnB,EAA6B;IACzB,OAAOswB,MAAP;EACH,CAFD,MAGK;IACD,MAAMp5B,GAAG,GAAG8I,GAAG,CAACqwB,UAAJ,CAAeC,MAAf,CAAZ;IACAp5B,GAAG,CAACgwB,MAAJ,GAAalnB,GAAG,CAACknB,MAAjB;IACA,OAAOhwB,GAAP;EACH;AACJ;;AACM,MAAM01B,UAAN,SAAyBwD,UAAzB,CAAoC;EACvCG,eAAe,GAAG;IACd,OAAO3sC,UAAU,CAAC+oC,WAAlB;EACH;;AAHsC;;;;AAKpC,MAAMV,cAAN,SAA6BmE,UAA7B,CAAwC;EAC3CG,eAAe,GAAG;IACd,OAAO3sC,UAAU,CAAC8oC,eAAlB;EACH;;AAH0C;;;;AAKxC,MAAMM,UAAN,SAAyBoD,UAAzB,CAAoC;EACvCG,eAAe,GAAG;IACd,OAAO3sC,UAAU,CAACmpC,WAAlB;EACH;;AAHsC;;;;AAKpC,MAAMD,cAAN,SAA6BsD,UAA7B,CAAwC;EAC3CG,eAAe,GAAG;IACd,OAAO3sC,UAAU,CAACipC,eAAlB;EACH;;AAH0C;;;;AAKxC,MAAMnE,aAAN,SAA4B0H,UAA5B,CAAuC;EAC1CG,eAAe,GAAG;IACd,OAAO3sC,UAAU,CAACqpC,cAAlB;EACH;;AAHyC;;;;AAKvC,SAASxoC,gBAAT,CAA0Bub,GAA1B,EAA+B;EAClC,OAAQ,OAAOA,GAAP,KAAe,QAAhB,IAA8BA,GAAG,YAAYowB,UAApD;AACH;;AACM,IAAIxsC,UAAJ;;;AACP,CAAC,UAAUA,UAAV,EAAsB;EACnBA,UAAU,CAAC,YAAD,CAAV,GAA2B,YAA3B;EACAA,UAAU,CAAC,aAAD,CAAV,GAA4B,aAA5B;EACAA,UAAU,CAAC,aAAD,CAAV,GAA4B,aAA5B;EACAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,iBAAhC;EACAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,iBAAhC;EACAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,gBAA/B;AACH,CAPD,EAOGA,UAAU,0BAAKA,UAAU,GAAG,EAAlB,CAPb;;AAQO,SAASe,uBAAT,CAAiCwrC,GAAjC,EAAsC;EACzC,IAAIA,GAAG,YAAYC,UAAnB,EAA+B;IAC3B,OAAOD,GAAG,CAACI,eAAJ,EAAP;EACH,CAFD,MAGK;IACD,OAAO3sC,UAAU,CAAC6oC,UAAlB;EACH;AACJ;;AACM,SAAS5nC,yBAAT,CAAmCsrC,GAAnC,EAAwC;EAC3C,IAAIA,GAAG,YAAYC,UAAnB,EAA+B;IAC3B,OAAOD,GAAG,CAACjJ,MAAX;EACH,CAFD,MAGK;IACD,OAAOpiC,SAAP;EACH;AACJ;;AACM,SAASsqC,6BAAT,CAAuCe,GAAvC,EAA4C;EAC/C,IAAIA,GAAG,YAAYC,UAAnB,EAA+B;IAC3B,OAAO;MAAEprC,IAAI,EAAEmrC,GAAG,CAACI,eAAJ,EAAR;MAA+BrJ,MAAM,EAAEiJ,GAAG,CAACjJ;IAA3C,CAAP;EACH,CAFD,MAGK;IACD,OAAO;MAAEliC,IAAI,EAAEpB,UAAU,CAAC6oC;IAAnB,CAAP;EACH;AACJ,C;;;;;;;;;;;;ACxFD;;;;AACA;;;;AACA;;;;;;;;;;;;;;ACFA;;AAJA;AACA;AACA;AACA;;AAEA;AACO,MAAM+D,eAAN,SAA8BC,sBAA9B,CAAyC;EAC5C;EACAC,uCAAuC,GAAG,CACtC;EACH;EACD;;;EACAC,0CAA0C,GAAG,CACzC;EACH;EACD;;;EACAroC,KAAK,CAACsoC,KAAD,EAAQ,CACT;EACH;EACD;;;EACAroC,GAAG,CAACqoC,KAAD,EAAQ,CACP;EACH;;AAhB2C;;;;;;;;;;;;;;ACFhD;;AAJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,MAAMH,UAAN,CAAiB;EACpB1rC,WAAW,GAAG;IACV,KAAKmC,KAAL,GAAa,IAAIkqB,GAAJ,CAAQ,CACjB,CAAC9hB,kBAAA,CAASuhC,kCAAV,EAA8C,CAA9C,CADiB,EAEjB,CAACvhC,kBAAA,CAASwhC,qCAAV,EAAiD,CAAjD,CAFiB,CAAR,CAAb;IAIA,KAAKC,UAAL,GAAkB,IAAI3f,GAAJ,EAAlB;EACH;;EACDsf,uCAAuC,GAAG;IACtC,IAAIjqC,EAAJ;;IACA,MAAM84B,QAAQ,GAAG,CAAC,CAAC94B,EAAE,GAAG,KAAKS,KAAL,CAAWokB,GAAX,CAAehc,kBAAA,CAASuhC,kCAAxB,CAAN,MAAuE,IAAvE,IAA+EpqC,EAAE,KAAK,KAAK,CAA3F,GAA+FA,EAA/F,GAAoG,CAArG,IAA0G,CAA3H;IACA,KAAKS,KAAL,CAAWykB,GAAX,CAAerc,kBAAA,CAASuhC,kCAAxB,EAA4DtR,QAA5D;EACH;;EACDoR,0CAA0C,GAAG;IACzC,IAAIlqC,EAAJ;;IACA,MAAM84B,QAAQ,GAAG,CAAC,CAAC94B,EAAE,GAAG,KAAKS,KAAL,CAAWokB,GAAX,CAAehc,kBAAA,CAASwhC,qCAAxB,CAAN,MAA0E,IAA1E,IAAkFrqC,EAAE,KAAK,KAAK,CAA9F,GAAkGA,EAAlG,GAAuG,CAAxG,IAA6G,CAA9H;IACA,KAAKS,KAAL,CAAWykB,GAAX,CAAerc,kBAAA,CAASwhC,qCAAxB,EAA+DvR,QAA/D;EACH;EACD;AACJ;AACA;;;EACI1I,KAAK,GAAG;IACJ,KAAK3vB,KAAL,CAAW8pC,KAAX;IACA,KAAKD,UAAL,CAAgBC,KAAhB;IACA,KAAK9pC,KAAL,CAAWykB,GAAX,CAAerc,kBAAA,CAASuhC,kCAAxB,EAA4D,CAA5D;IACA,KAAK3pC,KAAL,CAAWykB,GAAX,CAAerc,kBAAA,CAASwhC,qCAAxB,EAA+D,CAA/D;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIxoC,KAAK,CAACF,IAAD,EAAO;IACR,IAAI,KAAK2oC,UAAL,CAAgBzlB,GAAhB,CAAoBljB,IAApB,CAAJ,EAA+B;MAC3B,MAAMjE,KAAK,CAAE,cAAaiE,IAAK,kBAApB,CAAX;IACH,CAFD,MAGK;MACD,KAAK2oC,UAAL,CAAgBplB,GAAhB,CAAoBvjB,IAApB,EAA0B6oC,IAAI,CAACC,GAAL,EAA1B;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACI3oC,GAAG,CAACH,IAAD,EAAO;IACN,IAAI3B,EAAJ;;IACA,MAAMyqC,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;IACA,MAAMC,SAAS,GAAG,KAAKJ,UAAL,CAAgBzlB,GAAhB,CAAoBljB,IAApB,CAAlB;;IACA,IAAI+oC,SAAJ,EAAe;MACX,IAAItgC,MAAM,GAAG,CAACpK,EAAE,GAAG,KAAKS,KAAL,CAAWokB,GAAX,CAAeljB,IAAf,CAAN,MAAgC,IAAhC,IAAwC3B,EAAE,KAAK,KAAK,CAApD,GAAwDA,EAAxD,GAA6D,CAA1E;MACAoK,MAAM,IAAKqgC,GAAG,GAAGC,SAAjB;MACA,KAAKjqC,KAAL,CAAWykB,GAAX,CAAevjB,IAAf,EAAqByI,MAArB;MACA,KAAKkgC,UAAL,CAAgBx2B,MAAhB,CAAuBnS,IAAvB;IACH,CALD,MAMK;MACD,MAAMjE,KAAK,CAAE,cAAaiE,IAAK,cAApB,CAAX;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIiH,OAAO,CAACjH,IAAD,EAAOgpC,IAAP,EAAa;IAChB,KAAK9oC,KAAL,CAAWF,IAAX;IACA,MAAMsJ,MAAM,GAAG0/B,IAAI,EAAnB;IACA,KAAK7oC,GAAL,CAASH,IAAT;IACA,OAAOsJ,MAAP;EACH;EACD;AACJ;AACA;;;EACI2/B,QAAQ,GAAG;IACP,OAAO,IAAIjgB,GAAJ,CAAQ,KAAKlqB,KAAb,CAAP;EACH;;AA9EmB;;;;;;;;;;;;;;ACRxB;AACA;AACA;AACA;AACO,IAAIoI,QAAJ;;;AACP,CAAC,UAAUA,QAAV,EAAoB;EACjB;EACAA,QAAQ,CAAC,oBAAD,CAAR,GAAiC,oBAAjC;EACAA,QAAQ,CAAC,QAAD,CAAR,GAAqB,QAArB;EACAA,QAAQ,CAAC,aAAD,CAAR,GAA0B,aAA1B;EACAA,QAAQ,CAAC,sBAAD,CAAR,GAAmC,sBAAnC;EACAA,QAAQ,CAAC,sBAAD,CAAR,GAAmC,sBAAnC;EACAA,QAAQ,CAAC,UAAD,CAAR,GAAuB,UAAvB;EACAA,QAAQ,CAAC,oBAAD,CAAR,GAAiC,oBAAjC;EACAA,QAAQ,CAAC,YAAD,CAAR,GAAyB,YAAzB;EACAA,QAAQ,CAAC,SAAD,CAAR,GAAsB,SAAtB;EACA;;EACAA,QAAQ,CAAC,gBAAD,CAAR,GAA6B,gBAA7B;EACAA,QAAQ,CAAC,0BAAD,CAAR,GAAuC,0BAAvC;EACAA,QAAQ,CAAC,2BAAD,CAAR,GAAwC,2BAAxC;EACAA,QAAQ,CAAC,yBAAD,CAAR,GAAsC,yBAAtC;EACAA,QAAQ,CAAC,kBAAD,CAAR,GAA+B,kBAA/B;EACAA,QAAQ,CAAC,iBAAD,CAAR,GAA8B,iBAA9B;EACA;;EACAA,QAAQ,CAAC,oCAAD,CAAR,GAAiD,oCAAjD;EACAA,QAAQ,CAAC,uCAAD,CAAR,GAAoD,uCAApD;AACH,CArBD,EAqBGA,QAAQ,wBAAKA,QAAQ,GAAG,EAAhB,CArBX,E;;;;;;;;;;;;ACDA;;AACA;;AACA;;AANA;AACA;AACA;AACA;AAIO,MAAMjF,cAAN,CAAqB;EACxBtF,WAAW,CAACusC,MAAD,EAAS;IAChB,KAAKA,MAAL,GAAcA,MAAd;IACA,KAAKC,OAAL,GAAe,IAAIngB,GAAJ,EAAf;EACH;EACD;;;EACA3nB,OAAO,CAAC3G,OAAD,EAAU;IACb,MAAMkE,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC0C,KAAzB,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,MAAM,IAAI1D,0BAAJ,CAAuB0B,OAAO,CAAC0C,KAA/B,CAAN;IACH;;IACD,OAAOwB,YAAY,CAACyC,OAAb,CAAqB3G,OAArB,CAAP;EACH;;EACD+F,SAAS,CAAC/F,OAAD,EAAU;IACf,MAAMkE,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC0C,KAAzB,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,MAAM,IAAI1D,0BAAJ,CAAuB0B,OAAO,CAAC0C,KAA/B,CAAN;IACH;;IACD,MAAM3C,MAAM,GAAGmE,YAAY,CAACyC,OAAb,CAAqB3G,OAArB,CAAf;;IACA,IAAI,CAACD,MAAL,EAAa;MACT,MAAMsB,KAAK,CAAC,8CAAD,CAAX;IACH;;IACD,OAAOtB,MAAP;EACH;;EACD2uC,WAAW,CAAC9iC,OAAD,EAAU;IACjB,MAAM+iC,QAAQ,GAAG,KAAKF,OAAL,CAAajmB,GAAb,CAAiB5c,OAAjB,CAAjB;;IACA,IAAI+iC,QAAQ,KAAK3sC,SAAjB,EAA4B;MACxB,MAAM,IAAI1D,0BAAJ,CAAuBsN,OAAvB,CAAN;IACH;;IACD,OAAO+iC,QAAP;EACH;;EACDC,QAAQ,CAAChjC,OAAD,EAAU+iC,QAAV,EAAoB;IACxB,IAAI,KAAKF,OAAL,CAAaloC,GAAb,CAAiBqF,OAAjB,CAAJ,EAA+B;MAC3B,MAAMvK,KAAK,CAAC,qBAAD,CAAX;IACH;;IACD,KAAKotC,OAAL,CAAa5lB,GAAb,CAAiBjd,OAAjB,EAA0B+iC,QAA1B;EACH;;EACDE,YAAY,CAACjjC,OAAD,EAAUlJ,KAAV,EAAiBosC,eAAjB,EAAkC;IAC1C,MAAM;MAAEl+B,MAAF;MAAUD,KAAV;MAAiBo+B;IAAjB,IAA0BD,eAAhC;IACA,MAAME,mBAAmB,GAAG,KAAKR,MAAL,CAAYS,IAAZ,CAAiBF,IAAjB,CAA5B;IACA,KAAKH,QAAL,CAAchjC,OAAd,EAAuB,IAAIojC,mBAAJ,CAAwBr+B,KAAxB,EAA+BC,MAA/B,CAAvB;EACH;;EACDY,YAAY,CAACxR,OAAD,EAAU;IAClB,MAAMD,MAAM,GAAG,KAAK4G,OAAL,CAAa3G,OAAb,CAAf;;IACA,IAAID,MAAM,KAAKiC,SAAf,EAA0B;MACtB,OAAOR,4BAAP;IACH,CAFD,MAGK,IAAIzB,MAAM,YAAYE,kBAAtB,EAAmC;MACpC,OAAOF,MAAM,CAAC0U,iBAAP,CAAyBzU,OAAzB,CAAP;IACH,CAFI,MAGA;MACD,OAAOD,MAAM,CAACyR,YAAP,EAAP;IACH;EACJ;;EACDC,WAAW,CAACzR,OAAD,EAAU;IACjB,MAAMD,MAAM,GAAG,KAAK4G,OAAL,CAAa3G,OAAb,CAAf;;IACA,IAAID,MAAM,YAAYS,sBAAtB,EAAuC;MACnC,OAAOT,MAAM,CAACuJ,SAAP,GAAmBC,QAA1B;IACH,CAFD,MAGK,IAAIxJ,MAAM,YAAYE,kBAAtB,EAAmC;MACpC,OAAOF,MAAM,CAACmvC,oBAAP,CAA4BlvC,OAA5B,CAAP;IACH,CAFI,MAGA;MACD,OAAO,IAAP;IACH;EACJ;EACD;;;EACAgJ,OAAO,CAAChJ,OAAD,EAAUkI,SAAV,EAAqB;IACxB,MAAMhE,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC0C,KAAzB,CAArB;;IACA,IAAI,CAACwB,YAAL,EAAmB;MACf,MAAM7C,KAAK,CAAC,uBAAD,CAAX;IACH;;IACD6C,YAAY,CAAC8E,OAAb,CAAqBhJ,OAArB,EAA8BkI,SAA9B;EACH;;EACD4O,QAAQ,CAACD,MAAD,EAASD,WAAT,EAAsB;IAC1B,MAAM1S,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiB3R,MAAM,CAACnU,KAAxB,CAArB;;IACA,IAAI,CAACwB,YAAL,EAAmB;MACf,MAAM7C,KAAK,CAAC,wBAAD,CAAX;IACH;;IACD,IAAIwV,MAAM,CAACnU,KAAP,KAAiBkU,WAAW,CAAClU,KAAjC,EAAwC;MACpC,MAAMrB,KAAK,CAAC,mCAAD,CAAX;IACH;;IACD,IAAI6C,YAAY,CAACqC,GAAb,CAAiBqQ,WAAjB,CAAJ,EAAmC;MAC/B,MAAM,IAAIvV,KAAJ,CAAU,iDAAV,CAAN;IACH;;IACD,MAAMtB,MAAM,GAAGmE,YAAY,CAACyC,OAAb,CAAqBkQ,MAArB,CAAf;;IACA,IAAI9W,MAAM,KAAKiC,SAAf,EAA0B;MACtB,MAAM,IAAIX,KAAJ,CAAU,8CAAV,CAAN;IACH;;IACD,KAAK2H,OAAL,CAAa4N,WAAb,EAA0B7W,MAA1B;IACA,KAAKgK,UAAL,CAAgB8M,MAAhB;EACH;;EACD9M,UAAU,CAAC/J,OAAD,EAAU;IAChB,MAAMkE,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC0C,KAAzB,CAArB;;IACA,IAAI,CAACwB,YAAL,EAAmB;MACf,MAAM7C,KAAK,CAAC,uBAAD,CAAX;IACH;;IACD6C,YAAY,CAAC6F,UAAb,CAAwB/J,OAAxB;EACH;EACD;;;EACAuG,GAAG,CAACvG,OAAD,EAAU;IACT,MAAMkE,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC0C,KAAzB,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,OAAO,KAAP;IACH;;IACD,OAAOkC,YAAY,CAACqC,GAAb,CAAiBvG,OAAjB,CAAP;EACH;EACD;;;EACAmS,SAAS,CAACvG,OAAD,EAAU;IACf,MAAM1H,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiB5c,OAAjB,CAArB;;IACA,IAAI1H,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,MAAM,IAAI1D,0BAAJ,CAAuBsN,OAAvB,CAAN;IACH;;IACD,OAAO1H,YAAY,CAACiO,SAAb,EAAP;EACH;EACD;;;EACAE,QAAQ,CAACzG,OAAD,EAAU;IACd,MAAM1H,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiB5c,OAAjB,CAArB;;IACA,IAAI,CAAC1H,YAAL,EAAmB;MACf,MAAM,IAAI5F,0BAAJ,CAAuBsN,OAAvB,CAAN;IACH;;IACD,OAAO1H,YAAY,CAACmO,QAAb,EAAP;EACH;;EACD3D,OAAO,CAAChM,KAAD,EAAQC,GAAR,EAAa2K,YAAb,EAA2B;IAC9B,MAAMpJ,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiB9lB,KAAjB,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,MAAM,IAAI1D,0BAAJ,CAAuBoE,KAAvB,CAAN;IACH;;IACDwB,YAAY,CAACwK,OAAb,CAAqB/L,GAArB,EAA0B2K,YAA1B;EACH;;EACDjB,UAAU,CAACC,WAAD,EAAc;IACpB,MAAMpI,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiBlc,WAAW,CAAC5J,KAA7B,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,MAAM,IAAI1D,0BAAJ,CAAuBgO,WAAW,CAAC5J,KAAnC,CAAN;IACH;;IACDwB,YAAY,CAACmI,UAAb,CAAwBC,WAAxB;EACH;;EACDmB,WAAW,CAAC7B,OAAD,EAAU;IACjB,KAAK6iC,OAAL,CAAah3B,MAAb,CAAoB7L,OAApB;EACH;;EACDsD,UAAU,CAACxM,KAAD,EAAQ8S,MAAR,EAAgB/G,eAAhB,EAAiC;IACvC,MAAMvK,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiB9lB,KAAjB,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,MAAM,IAAI1D,0BAAJ,CAAuBoE,KAAvB,CAAN;IACH;;IACDwB,YAAY,CAACgL,UAAb,CAAwBsG,MAAxB,EAAgC/G,eAAhC;EACH;;EACDL,aAAa,CAACC,cAAD,EAAiB;IAC1B,MAAMnK,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiBna,cAAc,CAAC3L,KAAhC,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,MAAM,IAAI1D,0BAAJ,CAAuB+P,cAAc,CAAC3L,KAAtC,CAAN;IACH;;IACDwB,YAAY,CAACkK,aAAb,CAA2BC,cAA3B;EACH;;EACoB,CAApBY,oBAAoB,CAACoC,QAAD,EAAW;IAC5B,OAAO,KAAKo9B,OAAL,CAAajmB,GAAb,CAAiBnX,QAAQ,CAAC3O,KAA1B,EAAiCuM,oBAAjC,CAAsDoC,QAAtD,CAAP,CAD4B,CAC4C;EAC3E;;EACuB,CAAvB9B,uBAAuB,CAAC+B,WAAD,EAAc;IAClC,OAAO,KAAKm9B,OAAL,CAAajmB,GAAb,CAAiBlX,WAAW,CAAC5O,KAA7B,EAAoC6M,uBAApC,CAA4D+B,WAA5D,CAAP,CADkC,CAC+C;EACpF;;EACmB,CAAnB5E,mBAAmB,CAAC2E,QAAD,EAAW;IAC3B,OAAO,KAAKo9B,OAAL,CAAajmB,GAAb,CAAiBnX,QAAQ,CAAC3O,KAA1B,EAAiCgK,mBAAjC,CAAqD2E,QAArD,CAAP;EACH;;EACsB,CAAtB/C,sBAAsB,CAACgD,WAAD,EAAc;IACjC,OAAO,KAAKm9B,OAAL,CAAajmB,GAAb,CAAiBlX,WAAW,CAAC5O,KAA7B,EAAoC4L,sBAApC,CAA2DgD,WAA3D,CAAP;EACH;;EACO,CAAP69B,OAAO,GAAG;IACP,KAAK,MAAM,CAACzsC,KAAD,EAAQ+rC,OAAR,CAAX,IAA+B,KAAKA,OAAL,CAAaU,OAAb,EAA/B,EAAuD;MACnD,OAAOV,OAAO,CAACW,UAAR,CAAmB1sC,KAAnB,CAAP;IACH;EACJ;;EACY,CAAZmL,YAAY,CAACnL,KAAD,EAAQ;IACjB,MAAMwB,YAAY,GAAG,KAAKuqC,OAAL,CAAajmB,GAAb,CAAiB9lB,KAAjB,CAArB;;IACA,IAAIwB,YAAY,KAAKlC,SAArB,EAAgC;MAC5B,OAAOkC,YAAY,CAACkrC,UAAb,CAAwB1sC,KAAxB,CAAP;IACH,CAFD,MAGK;MACD,MAAM,IAAIpE,0BAAJ,CAAuBoE,KAAvB,CAAN;IACH;EACJ;;AAnLuB;;;;;;;;;;;;;;ACH5B;;AAJA;AACA;AACA;AACA;AAEO,MAAMkF,YAAN,CAAmB;EACtB3F,WAAW,GAAG;IACV,KAAKkC,YAAL,GAAoB,IAAImqB,GAAJ,EAApB;EACH;;EACDjjB,QAAQ,CAACjF,KAAD,EAAQ;IACZ,MAAMgF,KAAK,GAAG,KAAKikC,gBAAL,CAAsBjpC,KAAK,CAACZ,KAA5B,CAAd;;IACA,IAAI4F,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAAChC,QAAN,GAAiByR,MAAjB,CAAwBzU,KAAxB,CAAlD,EAAkF;MAC9E,OAAOgF,KAAP;IACH;;IACD;EACH;;EACDikC,gBAAgB,CAACrvC,OAAD,EAAU;IACtB,OAAO,KAAKmE,YAAL,CAAkBqkB,GAAlB,CAAsB,IAAAllB,gBAAA,EAAWtD,OAAX,CAAtB,CAAP;EACH;;EACDsS,QAAQ,CAAClM,KAAD,EAAQrG,MAAR,EAAgB;IACpB,KAAKoE,YAAL,CAAkB0kB,GAAlB,CAAsB,IAAAvlB,gBAAA,EAAW8C,KAAK,CAACZ,KAAjB,CAAtB,EAA+CzF,MAA/C;EACH;;EACDoJ,WAAW,CAAC/C,KAAD,EAAQ;IACf,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC3B,KAAKjC,YAAL,CAAkBsT,MAAlB,CAAyBrR,KAAzB;IACH,CAFD,MAGK;MACD,KAAKjC,YAAL,CAAkBsT,MAAlB,CAAyB,IAAAnU,gBAAA,EAAW8C,KAAK,CAACZ,KAAjB,CAAzB;IACH;EACJ;;EACD8pC,KAAK,GAAG;IACJ,OAAO,KAAKnrC,YAAL,CAAkB4D,IAAzB;EACH;;EACY,CAAZ0O,YAAY,CAACpF,QAAD,EAAW;IACpB,KAAK,MAAM,CAACk+B,MAAD,EAASC,GAAT,CAAX,IAA4B,KAAKrrC,YAAL,CAAkBgrC,OAAlB,EAA5B,EAAyD;MACrD,IAAIK,GAAG,CAACC,qBAAJ,CAA0Bp+B,QAAQ,CAAC3O,KAAnC,EAA0C2O,QAAQ,CAAChE,QAAnD,EAA6DgE,QAAQ,CAAC0K,MAAtE,CAAJ,EAAmF;QAC/E,MAAM,CAACwzB,MAAD,EAASC,GAAT,CAAN;MACH;IACJ;EACJ;;EACY,CAAZv4B,YAAY,CAACnU,GAAD,EAAM;IACf,KAAK,MAAM,CAACysC,MAAD,EAASC,GAAT,CAAX,IAA4B,KAAKrrC,YAAL,CAAkBgrC,OAAlB,EAA5B,EAAyD;MACrD,IAAIK,GAAG,CAACE,uBAAJ,CAA4B5sC,GAAG,CAACJ,KAAhC,EAAuCI,GAAG,CAAC0L,WAA3C,EAAwD1L,GAAG,CAACkZ,SAA5D,CAAJ,EAA4E;QACxE,MAAM,CAACuzB,MAAD,EAASC,GAAT,CAAN;MACH;IACJ;EACJ;;EACDG,mBAAmB,CAACjtC,KAAD,EAAQC,GAAR,EAAa;IAC5B,KAAK,MAAM6sC,GAAX,IAAkB,KAAKrrC,YAAL,CAAkB4J,MAAlB,EAAlB,EAA8C;MAC1C,IAAIyhC,GAAG,CAACC,qBAAJ,CAA0B/sC,KAA1B,EAAiCC,GAAjC,CAAJ,EAA2C;QACvC,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH;;EACDitC,uBAAuB,CAAC55B,IAAD,EAAO;IAC1B,IAAIpH,MAAM,GAAG,IAAb;;IACA,KAAK,MAAMjM,GAAX,IAAkBqT,IAAI,CAAC+lB,IAAL,EAAlB,EAA+B;MAC3B,IAAI,CAAC,KAAK4T,mBAAL,CAAyB35B,IAAI,CAACtT,KAA9B,EAAqCC,GAArC,CAAL,EAAgD;QAC5CiM,MAAM,GAAG,KAAT;MACH;IACJ;;IACD,OAAOA,MAAP;EACH;;EACDihC,sBAAsB,CAACntC,KAAD,EAAQ8S,MAAR,EAAgB;IAClC,KAAK,MAAMg6B,GAAX,IAAkB,KAAKrrC,YAAL,CAAkB4J,MAAlB,EAAlB,EAA8C;MAC1C,IAAIyhC,GAAG,CAACE,uBAAJ,CAA4BhtC,KAA5B,EAAmC8S,MAAnC,CAAJ,EAAgD;QAC5C,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH;;EACDs6B,0BAA0B,CAAC95B,IAAD,EAAO;IAC7B,IAAIpH,MAAM,GAAG,IAAb;;IACA,KAAK,MAAM9L,GAAX,IAAkBkT,IAAI,CAAComB,OAAL,EAAlB,EAAkC;MAC9B,IAAI,CAAC,KAAKyT,sBAAL,CAA4B75B,IAAI,CAACtT,KAAjC,EAAwCI,GAAxC,CAAL,EAAmD;QAC/C8L,MAAM,GAAG,KAAT;MACH;IACJ;;IACD,OAAOA,MAAP;EACH;;EACDa,qBAAqB,CAACrJ,KAAD,EAAQ;IACzB,KAAK,MAAMopC,GAAX,IAAkB,KAAKrrC,YAAL,CAAkB4J,MAAlB,EAAlB,EAA8C;MAC1C,IAAIyhC,GAAG,CAACpmC,QAAJ,GAAe6P,WAAf,CAA2B7S,KAA3B,CAAJ,EAAuC;QACnC,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH;;EACD2pC,uBAAuB,CAAC/vC,OAAD,EAAU;IAC7B,KAAK,MAAMwvC,GAAX,IAAkB,KAAKrrC,YAAL,CAAkB4J,MAAlB,EAAlB,EAA8C;MAC1C,IAAIyhC,GAAG,CAACpmC,QAAJ,GAAegD,cAAf,CAA8BpM,OAA9B,CAAJ,EAA4C;QACxC,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH;;EACDwW,+BAA+B,CAAC9T,KAAD,EAAQC,GAAR,EAAa2K,YAAb,EAA2B;IACtD,KAAK0iC,0BAAL,CAAgCttC,KAAhC,EAAuC,CAACua,GAAD,EAAMld,MAAN,KAAiB;MACpD,MAAMqG,KAAK,GAAGrG,MAAM,CAACqJ,QAAP,EAAd;MACA,OAAOzG,GAAG,IAAIyD,KAAK,CAACZ,KAAN,CAAY7C,GAAnB,GAAyB,CAACyD,KAAK,CAAC2T,OAAN,CAAc,CAAd,EAAiBzM,YAAjB,CAAD,EAAiCvN,MAAjC,CAAzB,GAAoEiC,SAA3E;IACH,CAHD;EAIH;;EACDgV,qCAAqC,CAACtU,KAAD,EAAQ8S,MAAR,EAAgB/G,eAAhB,EAAiC;IAClE,KAAKuhC,0BAAL,CAAgCttC,KAAhC,EAAuC,CAACua,GAAD,EAAMld,MAAN,KAAiB;MACpD,MAAMqG,KAAK,GAAGrG,MAAM,CAACqJ,QAAP,EAAd;MACA,OAAOoM,MAAM,IAAIpP,KAAK,CAACZ,KAAN,CAAY1C,GAAtB,GAA4B,CAACsD,KAAK,CAAC2T,OAAN,CAActL,eAAd,EAA+B,CAA/B,CAAD,EAAoC1O,MAApC,CAA5B,GAA0EiC,SAAjF;IACH,CAHD;EAIH;;EACDguC,0BAA0B,CAACttC,KAAD,EAAQ0+B,EAAR,EAAY;IAClC,MAAM6O,OAAO,GAAGj9B,KAAK,EAArB;;IACA,KAAK,MAAM,CAACiK,GAAD,EAAMld,MAAN,CAAX,IAA4B,KAAKoE,YAAL,CAAkBgrC,OAAlB,EAA5B,EAAyD;MACrD,IAAIpvC,MAAM,CAAC2C,KAAP,KAAiBA,KAArB,EAA4B;QACxB;MACH;;MACD,MAAMkM,MAAM,GAAGwyB,EAAE,CAACnkB,GAAD,EAAMld,MAAN,CAAjB;;MACA,IAAI6O,MAAM,KAAK5M,SAAf,EAA0B;QACtB,KAAKmH,WAAL,CAAiB8T,GAAjB;QACAgzB,OAAO,CAACzpC,IAAR,CAAaoI,MAAb;MACH;IACJ;;IACDqhC,OAAO,CAACxlC,OAAR,CAAgB,QAAoB;MAAA,IAAnB,CAACrE,KAAD,EAAQgF,KAAR,CAAmB;MAChC,KAAKkH,QAAL,CAAclM,KAAd,EAAqBgF,KAArB;IACH,CAFD;EAGH;;AAvHqB;;;;;;;;;;;;;;ACD1B;;AACA;;AACA;;AANA;AACA;AACA;AACA;AAIO,MAAM0F,gCAAgC,GAAG,CAACxM,gBAAD,EAAmBvE,MAAnB,EAA2BqG,KAA3B,EAAkC/B,4BAAlC,EAAgE0W,eAAhE,KAAoF;EAChI,IAAIhb,MAAM,YAAY6E,wBAAtB,EAAmC;IAC/B,MAAM0P,YAAY,GAAGvU,MAAM,CAACqG,KAAP,CAAamO,gBAAb,CAA8BnO,KAA9B,CAArB;;IACA,IAAIkO,YAAY,KAAKtS,SAArB,EAAgC;MAC5B,OAAOgR,KAAK,CAACC,IAAN,CAAWqB,YAAY,CAAC7N,SAAb,CAAuBsU,eAAvB,CAAX,CAAP;IACH,CAFD,MAGK;MACD,OAAO,EAAP;IACH;EACJ;;EACD,IAAIlU,OAAJ;EACA,IAAI7G,OAAJ;;EACA,IAAID,MAAM,YAAY+G,gCAAtB,EAAqC;IACjCD,OAAO,GAAG9G,MAAM,CAACiH,UAAP,CAAkB3C,4BAAlB,CAAV;IACArE,OAAO,GAAGD,MAAM,CAACgH,UAAP,CAAkB1C,4BAAlB,CAAV;EACH,CAHD,MAIK;IACD,OAAO,EAAP;EACH;;EACD,OAAO,IAAA6C,2BAAA,EAAoBL,OAApB,EAA6BvC,gBAA7B,EACF4O,MADE,CACMi5B,CAAD,IAAOA,CAAC,YAAY9Q,yBADzB,EAEFv2B,GAFE,CAEGqnC,CAAD,IAAOA,CAAC,CAAChnC,UAAF,CAAasT,mBAAb,CAAiCzY,OAAjC,CAFT,EAGFkT,MAHE,CAGMi5B,CAAD,IAAO/lC,KAAK,CAACgG,cAAN,CAAqB+/B,CAArB,CAHZ,CAAP;AAIH,CAvBM;;;;;;;;;;;;;;ACHP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAVA;AACA;AACA;AACA;AAQO,MAAMrlC,aAAN,CAAoB;EACvB7E,WAAW,CAAC4E,OAAD,EAAU+O,WAAV,EAAuBxN,OAAvB,EAAgC;IACvC,KAAKvB,OAAL,GAAeA,OAAf;IACA,KAAK+O,WAAL,GAAmBA,WAAnB;IACA,KAAKxN,OAAL,GAAeA,OAAf;EACH;;EACQ,IAALuI,KAAK,GAAG;IACR,OAAO,CAAP;EACH;;EACS,IAANC,MAAM,GAAG;IACT,OAAO,CAAP;EACH;;EACa,OAAPzI,OAAO,CAACtB,OAAD,EAAU7G,OAAV,EAAmB+H,IAAnB,EAAyBK,OAAzB,EAAkC;IAC5C,IAAIL,IAAI,CAAC22B,QAAL,EAAJ,EAAqB;MACjB,OAAO,IAAIr+B,iBAAJ,CAAsBwG,OAAtB,EAA+B7G,OAA/B,EAAwCoI,OAAxC,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAInI,WAAJ,CAAgB4G,OAAhB,EAAyB7G,OAAzB,EAAkC+H,IAAlC,EAAwCK,OAAxC,CAAP;IACH;EACJ;EACD;AACJ;AACA;;;EACIpB,UAAU,CAACkpC,eAAD,EAAkB;IACxB,KAAKv9B,gBAAL,CAAsBu9B,eAAtB;IACA,OAAO,KAAKrpC,OAAZ;EACH;;EACD8L,gBAAgB,CAACu9B,eAAD,EAAkB;IAC9B,IAAI,KAAK9nC,OAAL,IAAgB8nC,eAAe,CAAC9nC,OAAhB,EAApB,EAA+C;MAC3C,MAAM,CAAC+nC,MAAD,EAASC,UAAT,EAAqBC,UAArB,IAAmCH,eAAe,CAACI,oBAAhB,CAAqC,KAAKzpC,OAA1C,EAAmD,KAAK+O,WAAxD,EAAqE,KAAKxN,OAA1E,CAAzC;MACA,KAAKvB,OAAL,GAAespC,MAAf;MACA,KAAKv6B,WAAL,GAAmBw6B,UAAnB;MACA,KAAKhoC,OAAL,GAAeioC,UAAf;IACH;EACJ;EACD;AACJ;AACA;;;EACItpC,UAAU,CAACmpC,eAAD,EAAkB;IACxB,KAAKv9B,gBAAL,CAAsBu9B,eAAtB;IACA,OAAO,KAAKt6B,WAAZ;EACH;;AAzCsB;;;;AA2CpB,MAAM3V,WAAN,SAA0B6G,aAA1B,CAAwC;EAC3C7E,WAAW,CAAC4E,OAAD,EAAU+O,WAAV,EAAuB7N,IAAvB,EAA0C;IAAA,IAAbK,OAAa,uEAAH,CAAG;IACjD,MAAMvB,OAAN,EAAe+O,WAAf,EAA4BxN,OAA5B;;IACA,IAAIL,IAAI,CAACy2B,KAAT,EAAgB;MACZ,KAAKpzB,KAAL,GAAa,IAAImlC,wBAAJ,CAAiB,IAAI9uC,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,EAA6BrS,0BAAA,CAAak0B,qBAA1C,CAAjB,EAAmF4G,oBAAA,CAAUlS,KAAV,EAAnF,CAAb;IACH,CAFD,MAGK;MACD,KAAK9f,KAAL,GAAa,IAAIolC,4BAAJ,CAAqBzoC,IAArB,CAAb;IACH;EACJ;;EACQ,IAAL4I,KAAK,GAAG;IACR,OAAO,KAAKvF,KAAL,CAAWuF,KAAX,EAAP;EACH;;EACS,IAANC,MAAM,GAAG;IACT,OAAO,KAAKxF,KAAL,CAAWwF,MAAX,EAAP;EACH;;EACQ,IAALlO,KAAK,GAAG;IACR,OAAO,KAAKkT,WAAL,CAAiBlT,KAAxB;EACH;;EACa,IAAVs7B,UAAU,GAAG;IACb,OAAO,KAAKpoB,WAAZ;EACH;;EACD66B,YAAY,CAACvnC,KAAD,EAAQ;IAChB,IAAIA,KAAK,YAAYzH,eAArB,EAAgC;MAC5B,KAAKivC,aAAL,CAAmBxnC,KAAnB;MACA,OAAOA,KAAP;IACH;;IACD,MAAMkC,KAAK,GAAGulC,sBAAA,CAAWC,oBAAX,CAAgC1nC,KAAhC,CAAd;;IACAkC,KAAK,CAACylC,MAAN,CAAa,KAAKzlC,KAAL,CAAWrD,IAAxB;IACA,KAAKqD,KAAL,GAAaA,KAAb;IACA,OAAOlC,KAAP;EACH;;EACDsI,YAAY,GAAG;IACX,IAAI,KAAKpG,KAAL,YAAsBolC,4BAA1B,EAA4C;MACxC,MAAMnvC,KAAK,CAAC,yBAAD,CAAX;IACH;;IACD,OAAO,KAAK+J,KAAL,CAAW0lC,gBAAX,EAAP;EACH;;EACDC,YAAY,GAAG;IACX,IAAI,KAAK3lC,KAAL,YAAsBolC,4BAA1B,EAA4C;MACxC,OAAOxuC,SAAP;IACH;;IACD,OAAO,KAAKoJ,KAAL,CAAW0lC,gBAAX,EAAP;EACH;;EACDr8B,iBAAiB,CAACzU,OAAD,EAAU;IACvB,MAAM8C,GAAG,GAAG9C,OAAO,CAAC8C,GAAR,GAAc,KAAK8S,WAAL,CAAiB9S,GAA3C;IACA,MAAMH,GAAG,GAAG3C,OAAO,CAAC2C,GAAR,GAAc,KAAKiT,WAAL,CAAiBjT,GAA3C;;IACA,IAAI;MACA,OAAO,KAAKyI,KAAL,CAAWod,GAAX,CAAe1lB,GAAf,EAAoBH,GAApB,CAAP;IACH,CAFD,CAGA,OAAOslB,CAAP,EAAU;MACN,OAAO,IAAIxmB,eAAJ,CAAc5E,eAAA,CAAU8X,GAAxB,CAAP;IACH;EACJ;;EACDu6B,oBAAoB,CAAClvC,OAAD,EAAU;IAC1B,MAAMkd,GAAG,GAAG,KAAKzI,iBAAL,CAAuBzU,OAAvB,CAAZ;;IACA,IAAIkd,GAAG,YAAYzb,eAAf,IAA4Byb,GAAG,KAAK1b,4BAAxC,EAAoD;MAChD,OAAOQ,SAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAAyP,6BAAA,EAAYyL,GAAZ,CAAP;IACH;EACJ;;EACD8zB,iBAAiB,CAAChxC,OAAD,EAAUkJ,KAAV,EAAiB;IAC9B,MAAMpG,GAAG,GAAG9C,OAAO,CAAC8C,GAAR,GAAc,KAAK8S,WAAL,CAAiB9S,GAA3C;IACA,MAAMH,GAAG,GAAG3C,OAAO,CAAC2C,GAAR,GAAc,KAAKiT,WAAL,CAAiBjT,GAA3C;;IACA,IAAI,KAAKyI,KAAL,YAAsBulC,sBAA1B,EAAsC;MAClC,KAAKvlC,KAAL,CAAWyd,GAAX,CAAe/lB,GAAf,EAAoBH,GAApB,EAAyBuG,KAAzB;IACH;EACJ;;EACDkO,UAAU,GAAG;IACT,KAAKhM,KAAL,GAAa,IAAImlC,wBAAJ,CAAiB,IAAI9uC,eAAJ,CAAc5E,eAAA,CAAUo0C,KAAxB,EAA+B3uC,0BAAA,CAAak0B,qBAA5C,CAAjB,EAAqF4G,oBAAA,CAAUlS,KAAV,EAArF,CAAb;IACA,OAAO,KAAK1Z,YAAL,EAAP;EACH;;EACDpI,QAAQ,GAAG;IACP,OAAOxD,oCAAA,CAAkB8K,QAAlB,CAA2B,KAAKkF,WAAhC,EAA6C,KAAKjF,KAAlD,EAAyD,KAAKC,MAA9D,CAAP;EACH;;EACDhB,eAAe,GAAG;IACd,OAAOhK,oCAAA,CAAkBmQ,eAAlB,CAAkC,KAAKH,WAAvC,EAAoD,KAAKjF,KAAzD,EAAgE,KAAKC,MAArE,CAAP;EACH;;EACDsgC,UAAU,CAAClxC,OAAD,EAAU;IAChB,KAAK4V,WAAL,GAAmB5V,OAAnB;EACH;;EACDmxC,UAAU,CAACC,UAAD,EAAa;IACnB,KAAKvqC,OAAL,GAAeuqC,UAAf;EACH;;EACD3B,qBAAqB,CAAC/sC,KAAD,EAAQ2W,QAAR,EAAqC;IAAA,IAAnBG,MAAmB,uEAAVH,QAAU;IACtD,OAAQ,KAAKzD,WAAL,CAAiBlT,KAAjB,KAA2BA,KAA5B,IACF,KAAKkT,WAAL,CAAiBjT,GAAjB,IAAwB6W,MADtB,IAEFH,QAAQ,GAAG,KAAKzD,WAAL,CAAiBjT,GAAjB,GAAuB,KAAKiO,MAF5C;EAGH;;EACD8+B,uBAAuB,CAAChtC,KAAD,EAAQI,GAAR,EAA8B;IAAA,IAAjBkZ,SAAiB,uEAALlZ,GAAK;IACjD,OAAQ,KAAK8S,WAAL,CAAiBlT,KAAjB,KAA2BA,KAA5B,IACF,KAAKkT,WAAL,CAAiB9S,GAAjB,IAAwBkZ,SADtB,IAEFlZ,GAAG,GAAG,KAAK8S,WAAL,CAAiB9S,GAAjB,GAAuB,KAAK6N,KAFvC;EAGH;;EACD0gC,UAAU,GAAG;IACT,OAAQ,EAAE,KAAKjmC,KAAL,YAAsBolC,4BAAxB,CAAR;EACH;;EACDc,gBAAgB,GAAG;IACf,OAAOp6B,iBAAA,CAAYilB,mBAAZ,CAAgC,KAAKvmB,WAAL,CAAiBlT,KAAjD,EAAwD,KAAKkT,WAAL,CAAiB9S,GAAzE,EAA8E,KAAK6N,KAAnF,CAAP;EACH;;EACD4gC,aAAa,GAAG;IACZ,OAAO76B,cAAA,CAASolB,gBAAT,CAA0B,KAAKlmB,WAAL,CAAiBlT,KAA3C,EAAkD,KAAKkT,WAAL,CAAiBjT,GAAnE,EAAwE,KAAKiO,MAA7E,CAAP;EACH;EACD;AACJ;AACA;;;EACI+B,gBAAgB,CAAC6+B,gBAAD,EAAmB,CAClC;;EACDtxC,YAAY,CAACF,OAAD,EAAU;IAClB,OAAO,IAAA4D,4BAAA,EAAuB,KAAKgS,WAA5B,EAAyC5V,OAAzC,CAAP;EACH;;EACD0wC,aAAa,CAACxlB,KAAD,EAAQ;IACjB,KAAK9f,KAAL,GAAa,IAAImlC,wBAAJ,CAAiBrlB,KAAjB,EAAwB,KAAK9f,KAAL,CAAWrD,IAAnC,CAAb;EACH;;AAnH0C;AAqH/C;AACA;AACA;;;;;AACO,MAAM1H,iBAAN,SAAgCyG,aAAhC,CAA8C;EACjD7E,WAAW;EACX;EACA4E,OAFW;EAGX;EACA7G,OAJW,EAIFoI,OAJE,EAIO;IACd,MAAMvB,OAAN,EAAe7G,OAAf,EAAwBoI,OAAxB;EACH;;EACD2oC,YAAY,GAAG;IACX,OAAO,KAAKU,eAAZ;EACH;EACD;AACJ;AACA;;;EACIhB,YAAY,CAAClvC,SAAD,EAAY;IACpB,KAAKkwC,eAAL,GAAuBlwC,SAAvB;IACA,OAAO,KAAKkwC,eAAZ;EACH;EACD;AACJ;AACA;;;EACIjgC,YAAY,GAAG;IACX,IAAI,KAAKigC,eAAL,KAAyBzvC,SAA7B,EAAwC;MACpC,OAAO,KAAKyvC,eAAZ;IACH,CAFD,MAGK;MACD,MAAMpwC,KAAK,CAAC,4CAAD,CAAX;IACH;EACJ;;EACDgwC,UAAU,GAAG;IACT,OAAQ,KAAKI,eAAL,KAAyBzvC,SAAjC;EACH;;AA/BgD;;;;;;;;;;;;;;AC1KrD;;AACA;;AACA;;AANA;AACA;AACA;AACA;AAIO,MAAMwuC,gBAAN,CAAuB;EAC1BvuC,WAAW,CAAC8F,IAAD,EAAO;IACd,KAAKA,IAAL,GAAYA,IAAZ;EACH;;EACD4I,KAAK,GAAG;IACJ,OAAO,KAAK5I,IAAL,CAAU4I,KAAjB;EACH;;EACDC,MAAM,GAAG;IACL,OAAO,KAAK7I,IAAL,CAAU6I,MAAjB;EACH,CATyB,CAU1B;;;EACA4X,GAAG,CAAC1lB,GAAD,EAAMH,GAAN,EAAW;IACV,MAAMtB,KAAK,CAAC,yBAAD,CAAX;EACH;;EACDyvC,gBAAgB,GAAG;IACf,MAAMzvC,KAAK,CAAC,yBAAD,CAAX;EACH;;AAhByB;;;;AAkBvB,MAAMsvC,UAAN,CAAiB;EACpB1uC,WAAW,CAACmJ,KAAD,EAAQ;IACf,KAAKrD,IAAL,GAAY,IAAIq1B,oBAAJ,CAAchyB,KAAK,CAAC2F,MAAN,GAAe,CAAf,GAAmB3F,KAAK,CAAC,CAAD,CAAL,CAAS2F,MAA5B,GAAqC,CAAnD,EAAsD3F,KAAK,CAAC2F,MAA5D,CAAZ;IACA,KAAK3F,KAAL,GAAaA,KAAb;EACH;;EAC0B,OAApBwlC,oBAAoB,CAAC1nC,KAAD,EAAQ;IAC/B,IAAIA,KAAK,YAAYxH,kCAArB,EAAuC;MACnC,OAAO,IAAIivC,UAAJ,CAAeznC,KAAK,CAACm0B,IAArB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAIsT,UAAJ,CAAe,CAAC,CAACznC,KAAD,CAAD,CAAf,CAAP;IACH;EACJ;;EACD4nC,gBAAgB,GAAG;IACf,OAAOpvC,kCAAA,CAAiB+7B,UAAjB,CAA4B,KAAKryB,KAAjC,CAAP;EACH;;EACDsD,OAAO,CAACgjC,QAAD,EAAWpkC,YAAX,EAAyB;IAC5B,KAAKlC,KAAL,CAAWumC,MAAX,CAAkBD,QAAlB,EAA4B,CAA5B,EAA+B,GAAG,KAAKE,UAAL,CAAgBtkC,YAAhB,EAA8B,KAAKqD,KAAL,EAA9B,CAAlC;IACA,KAAK5I,IAAL,CAAU6I,MAAV,IAAoBtD,YAApB;EACH;;EACD4B,UAAU,CAAC2iC,WAAD,EAAcpjC,eAAd,EAA+B;IACrC,KAAK,IAAIgd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7a,MAAL,EAApB,EAAmC6a,CAAC,EAApC,EAAwC;MACpC,KAAKrgB,KAAL,CAAWqgB,CAAX,EAAckmB,MAAd,CAAqBE,WAArB,EAAkC,CAAlC,EAAqC,GAAG,IAAI7+B,KAAJ,CAAUvE,eAAV,EAA2BsgC,IAA3B,CAAgCvtC,4BAAhC,CAAxC;IACH;;IACD,KAAKuG,IAAL,CAAU4I,KAAV,IAAmBlC,eAAnB;EACH;;EACDpC,UAAU,CAACgN,QAAD,EAAWG,MAAX,EAAmB;IACzB,IAAI,KAAKs4B,UAAL,CAAgB,CAAhB,EAAmBz4B,QAAnB,KAAgC,KAAKy4B,UAAL,CAAgB,CAAhB,EAAmBt4B,MAAnB,CAApC,EAAgE;MAC5D,MAAMnY,KAAK,CAAC,0BAAD,CAAX;IACH;;IACD,MAAMiM,YAAY,GAAGkM,MAAM,GAAGH,QAAT,GAAoB,CAAzC;IACA,KAAKjO,KAAL,CAAWumC,MAAX,CAAkBt4B,QAAlB,EAA4B/L,YAA5B;IACA,KAAKvF,IAAL,CAAU6I,MAAV,IAAoBtD,YAApB;EACH;;EACDc,aAAa,CAAC2jC,cAAD,EAAiBC,eAAjB,EAAkC;IAC3C,IAAI,KAAKF,UAAL,CAAgBC,cAAhB,EAAgC,CAAhC,KAAsC,KAAKD,UAAL,CAAgBE,eAAhB,EAAiC,CAAjC,CAA1C,EAA+E;MAC3E,MAAM3wC,KAAK,CAAC,0BAAD,CAAX;IACH;;IACD,MAAMoN,eAAe,GAAGujC,eAAe,GAAGD,cAAlB,GAAmC,CAA3D;;IACA,KAAK,MAAMpvC,GAAX,IAAkB,KAAKyI,KAAvB,EAA8B;MAC1BzI,GAAG,CAACgvC,MAAJ,CAAWI,cAAX,EAA2BtjC,eAA3B;IACH;;IACD,KAAK1G,IAAL,CAAU4I,KAAV,IAAmBlC,eAAnB;EACH;;EACDmjC,UAAU,CAACtC,KAAD,EAAQvnC,IAAR,EAAc;IACpB,MAAM6G,MAAM,GAAG,EAAf;;IACA,KAAK,IAAI6c,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6jB,KAApB,EAA2B,EAAE7jB,CAA7B,EAAgC;MAC5B7c,MAAM,CAACpI,IAAP,CAAY,IAAIwM,KAAJ,CAAUjL,IAAV,EAAgBgnC,IAAhB,CAAqBvtC,4BAArB,CAAZ;IACH;;IACD,OAAOoN,MAAP;EACH;;EACD4Z,GAAG,CAAC1lB,GAAD,EAAMH,GAAN,EAAW;IACV,IAAI,KAAKmvC,UAAL,CAAgBhvC,GAAhB,EAAqBH,GAArB,CAAJ,EAA+B;MAC3B,MAAMtB,KAAK,CAAC,0BAAD,CAAX;IACH;;IACD,OAAO,KAAK+J,KAAL,CAAWzI,GAAX,EAAgBG,GAAhB,CAAP;EACH;;EACD+lB,GAAG,CAAC/lB,GAAD,EAAMH,GAAN,EAAWuG,KAAX,EAAkB;IACjB,IAAI,KAAK4oC,UAAL,CAAgBhvC,GAAhB,EAAqBH,GAArB,CAAJ,EAA+B;MAC3B,MAAMtB,KAAK,CAAC,0BAAD,CAAX;IACH;;IACD,KAAK+J,KAAL,CAAWzI,GAAX,EAAgBG,GAAhB,IAAuBoG,KAAvB;EACH;;EACDyH,KAAK,GAAG;IACJ,OAAO,KAAK5I,IAAL,CAAU4I,KAAjB;EACH;;EACDC,MAAM,GAAG;IACL,OAAO,KAAK7I,IAAL,CAAU6I,MAAjB;EACH;;EACDqhC,GAAG,GAAG;IACF,OAAO,KAAK7mC,KAAZ;EACH;;EACDylC,MAAM,CAACqB,OAAD,EAAU;IACZ,IAAI,KAAKthC,MAAL,KAAgBshC,OAAO,CAACthC,MAAxB,IAAkC9F,QAAQ,CAAConC,OAAO,CAACthC,MAAT,CAA9C,EAAgE;MAC5D,KAAKlC,OAAL,CAAa,KAAKkC,MAAL,EAAb,EAA4BshC,OAAO,CAACthC,MAAR,GAAiB,KAAKA,MAAL,EAA7C;IACH;;IACD,IAAI,KAAKA,MAAL,KAAgBshC,OAAO,CAACthC,MAA5B,EAAoC;MAChC,MAAM,2BAAN;IACH;;IACD,IAAI,KAAKD,KAAL,KAAeuhC,OAAO,CAACvhC,KAAvB,IAAgC7F,QAAQ,CAAConC,OAAO,CAACvhC,KAAT,CAA5C,EAA6D;MACzD,KAAKzB,UAAL,CAAgB,KAAKyB,KAAL,EAAhB,EAA8BuhC,OAAO,CAACvhC,KAAR,GAAgB,KAAKA,KAAL,EAA9C;IACH;;IACD,IAAI,KAAKA,KAAL,KAAeuhC,OAAO,CAACvhC,KAA3B,EAAkC;MAC9B,MAAM,2BAAN;IACH;EACJ;;EACDmhC,UAAU,CAAChvC,GAAD,EAAMH,GAAN,EAAW;IACjB,OAAOG,GAAG,GAAG,CAAN,IAAWH,GAAG,GAAG,CAAjB,IAAsBA,GAAG,GAAG,KAAKoF,IAAL,CAAU6I,MAAV,GAAmB,CAA/C,IAAoD9N,GAAG,GAAG,KAAKiF,IAAL,CAAU4I,KAAV,GAAkB,CAAnF;EACH;;AAxFmB;;;;AA0FjB,MAAM4/B,YAAN,CAAmB;EACtBtuC,WAAW,CAACipB,KAAD,EAAQnjB,IAAR,EAAc;IACrB,KAAKmjB,KAAL,GAAaA,KAAb;IACA,KAAKnjB,IAAL,GAAYA,IAAZ;EACH,CAJqB,CAKtB;;;EACAygB,GAAG,CAAC1lB,GAAD,EAAMH,GAAN,EAAW;IACV,OAAO,KAAKuoB,KAAZ;EACH;;EACDva,KAAK,GAAG;IACJ,OAAO,KAAK5I,IAAL,CAAU4I,KAAjB;EACH;;EACDC,MAAM,GAAG;IACL,OAAO,KAAK7I,IAAL,CAAU6I,MAAjB;EACH;;EACDkgC,gBAAgB,GAAG;IACf,OAAO,KAAK5lB,KAAZ;EACH;;AAjBqB;;;;;;;;;;;;;;ACnH1B;AACA;AACA;AACA;;AACA;AACA;AACA;AACO,MAAMtmB,WAAN,CAAkB;EACrB3C,WAAW,CAACmE,KAAD,EAAQ;IACf,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAK+rC,aAAL,GAAqB,IAAI7jB,GAAJ,EAArB;IACA,KAAK8jB,sBAAL,GAA8B,IAAI9jB,GAAJ,EAA9B;IACA,KAAK+jB,oBAAL,GAA4B,IAAIjoC,GAAJ,EAA5B;IACA,KAAKa,UAAL,GAAkB,KAAlB;EACH;;EACQ,IAALzF,KAAK,GAAG;IACR,OAAO,KAAKY,KAAL,CAAWZ,KAAlB;EACH;;EACM,IAAHC,GAAG,GAAG;IACN,OAAO,KAAKW,KAAL,CAAWX,GAAlB;EACH;;EACQ,IAAL/C,KAAK,GAAG;IACR,OAAO,KAAK0D,KAAL,CAAWZ,KAAX,CAAiB9C,KAAxB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI4vC,gBAAgB,CAACx0B,YAAD,EAAe;IAC3B,OAAO,KAAKq0B,aAAL,CAAmB3pB,GAAnB,CAAuB1K,YAAvB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIy0B,gBAAgB,CAACz0B,YAAD,EAAe5U,KAAf,EAAsB;IAClC,KAAKipC,aAAL,CAAmBtpB,GAAnB,CAAuB/K,YAAvB,EAAqC5U,KAArC;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIspC,yBAAyB,CAACC,QAAD,EAAWC,eAAX,EAA4B;IACjD,IAAI/uC,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAKgvC,0BAAL,CAAgCF,QAAhC,EAA0CjqB,GAA1C,CAA8CkqB,eAA9C,CAAN,MAA0E,IAA1E,IAAkF/uC,EAAE,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,EAAE,CAAC,CAAD,CAApH;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIgvC,0BAA0B,CAACF,QAAD,EAAW;IACjC,IAAI9uC,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAKyuC,sBAAL,CAA4B5pB,GAA5B,CAAgCiqB,QAAhC,CAAN,MAAqD,IAArD,IAA6D9uC,EAAE,KAAK,KAAK,CAAzE,GAA6EA,EAA7E,GAAkF,IAAI2qB,GAAJ,EAAzF;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIskB,0BAA0B,CAACH,QAAD,EAAW1kC,MAAX,EAAmB;IACzC,KAAKqkC,sBAAL,CAA4BvpB,GAA5B,CAAgC4pB,QAAhC,EAA0C1kC,MAA1C;EACH;;EACD8kC,sBAAsB,CAACC,cAAD,EAAiB;IACnC,IAAIA,cAAc,KAAK,IAAvB,EAA6B;MACzB,KAAKT,oBAAL,CAA0BvkC,GAA1B,CAA8BglC,cAA9B;IACH;EACJ;EACD;AACJ;AACA;;;EACIC,UAAU,GAAG;IACT,KAAKZ,aAAL,CAAmBjE,KAAnB;IACA,KAAKkE,sBAAL,CAA4BlE,KAA5B;IACA,KAAKmE,oBAAL,CAA0B5nC,OAA1B,CAAkCrE,KAAK,IAAIA,KAAK,CAACgsC,sBAAN,CAA6BlE,KAA7B,EAA3C;IACA,KAAKmE,oBAAL,CAA0BnE,KAA1B;EACH;EACD;AACJ;AACA;;;EACI8E,QAAQ,GAAG;IACP,OAAO,KAAKxtC,KAAZ;EACH;EACD;AACJ;AACA;;;EACIytC,MAAM,GAAG;IACL,OAAO,KAAKxtC,GAAZ;EACH;;AAvFoB;;;;;;;;;;;;;;ACPzB;AACA;AACA;AACA;AACA,IAAIytC,eAAJ;;AACA,CAAC,UAAUA,eAAV,EAA2B;EACxBA,eAAe,CAACA,eAAe,CAAC,UAAD,CAAf,GAA8B,CAA/B,CAAf,GAAmD,UAAnD;EACAA,eAAe,CAACA,eAAe,CAAC,WAAD,CAAf,GAA+B,CAAhC,CAAf,GAAoD,WAApD;EACAA,eAAe,CAACA,eAAe,CAAC,QAAD,CAAf,GAA4B,CAA7B,CAAf,GAAiD,QAAjD;AACH,CAJD,EAIGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAJlB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,MAAM9rC,KAAN,CAAY;EACfnF,WAAW,CAACkxC,eAAD,EAAkB;IACzB,KAAKA,eAAL,GAAuBA,eAAvB;IACA;;IACA,KAAK/hC,KAAL,GAAa,IAAIhH,GAAJ,EAAb;IACA,KAAKwI,YAAL,GAAoB,IAAIxI,GAAJ,EAApB;IACA,KAAK0K,6BAAL,GAAqC,IAAI1K,GAAJ,EAArC;IACA,KAAKC,2BAAL,GAAmC,IAAID,GAAJ,EAAnC;IACA,KAAK8B,cAAL,GAAsB,IAAI9B,GAAJ,EAAtB;IACA;;IACA,KAAKgpC,KAAL,GAAa,IAAI9kB,GAAJ,EAAb;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIzjB,OAAO,CAACsI,IAAD,EAAO;IACV,KAAK/B,KAAL,CAAWtD,GAAX,CAAeqF,IAAf;;IACA,IAAI,CAAC,KAAKigC,KAAL,CAAW7sC,GAAX,CAAe4M,IAAf,CAAL,EAA2B;MACvB,KAAKigC,KAAL,CAAWvqB,GAAX,CAAe1V,IAAf,EAAqB,IAAI/I,GAAJ,EAArB;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIY,OAAO,CAAC6G,QAAD,EAAWC,MAAX,EAAmB;IACtB,IAAI,CAAC,KAAKV,KAAL,CAAW7K,GAAX,CAAesL,QAAf,CAAL,EAA+B;MAC3B,MAAM,IAAIxQ,KAAJ,CAAW,gBAAewQ,QAAS,EAAnC,CAAN;IACH;;IACD,IAAI,CAAC,KAAKT,KAAL,CAAW7K,GAAX,CAAeuL,MAAf,CAAL,EAA6B;MACzB,MAAM,IAAIzQ,KAAJ,CAAW,gBAAeyQ,MAAO,EAAjC,CAAN;IACH,CANqB,CAOtB;;;IACA,KAAKshC,KAAL,CAAW5qB,GAAX,CAAe3W,QAAf,EAAyB/D,GAAzB,CAA6BgE,MAA7B;EACH;;EACD3G,UAAU,CAAC0G,QAAD,EAAWC,MAAX,EAAmB;IACzB,IAAI,KAAKF,UAAL,CAAgBC,QAAhB,EAA0BC,MAA1B,CAAJ,EAAuC;MACnC;MACA,KAAKshC,KAAL,CAAW5qB,GAAX,CAAe3W,QAAf,EAAyB4F,MAAzB,CAAgC3F,MAAhC;IACH,CAHD,MAIK;MACD,MAAM,IAAIzQ,KAAJ,CAAU,qBAAV,CAAN;IACH;EACJ;;EACDiW,cAAc,CAACzF,QAAD,EAAWC,MAAX,EAAmB;IAC7B,IAAInO,EAAJ;;IACA,CAACA,EAAE,GAAG,KAAKyvC,KAAL,CAAW5qB,GAAX,CAAe3W,QAAf,CAAN,MAAoC,IAApC,IAA4ClO,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAAC8T,MAAH,CAAU3F,MAAV,CAArE;EACH;;EACDuhC,mBAAmB,CAACvhC,MAAD,EAAS;IACxB,KAAKshC,KAAL,CAAW3oC,OAAX,CAAoB6oC,SAAD,IAAe;MAC9BA,SAAS,CAAC77B,MAAV,CAAiB3F,MAAjB;IACH,CAFD;EAGH;EACD;AACJ;AACA;AACA;AACA;;;EACIxL,aAAa,CAAC6M,IAAD,EAAO;IAChB;IACA,OAAO,KAAKigC,KAAL,CAAW5qB,GAAX,CAAerV,IAAf,CAAP;EACH;;EACDtJ,kBAAkB,CAACsJ,IAAD,EAAO;IACrB,OAAO,KAAK7M,aAAL,CAAmB6M,IAAnB,EAAyBpL,IAAhC;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIgL,OAAO,CAACI,IAAD,EAAO;IACV,OAAO,KAAK/B,KAAL,CAAW7K,GAAX,CAAe4M,IAAf,CAAP;EACH;EACD;AACJ;AACA;;;EACIogC,UAAU,GAAG;IACT,OAAO,KAAKniC,KAAL,CAAWrJ,IAAlB;EACH;EACD;AACJ;AACA;;;EACIyrC,UAAU,GAAG;IACT,IAAI5kC,MAAM,GAAG,CAAb;IACA,KAAKwkC,KAAL,CAAW3oC,OAAX,CAAoBgpC,YAAD,IAAmB7kC,MAAM,IAAI6kC,YAAY,CAAC1rC,IAA7D;IACA,OAAO6G,MAAP;EACH;;EACD2I,UAAU,CAACpE,IAAD,EAAO;IACb,KAAK,MAAMxG,YAAX,IAA2B,KAAKrG,aAAL,CAAmB6M,IAAnB,EAAyBpF,MAAzB,EAA3B,EAA8D;MAC1D,KAAKxF,gCAAL,CAAsCoE,YAAtC;IACH;;IACD,KAAKymC,KAAL,CAAW37B,MAAX,CAAkBtE,IAAlB;IACA,KAAK/B,KAAL,CAAWqG,MAAX,CAAkBtE,IAAlB;IACA,KAAKP,YAAL,CAAkB6E,MAAlB,CAAyBtE,IAAzB;IACA,KAAK9I,2BAAL,CAAiCoN,MAAjC,CAAwCtE,IAAxC;IACA,KAAK2B,6BAAL,CAAmC2C,MAAnC,CAA0CtE,IAA1C;IACA,KAAKjH,cAAL,CAAoBuL,MAApB,CAA2BtE,IAA3B;IACA,OAAO,KAAKugC,kBAAL,CAAwBvgC,IAAxB,CAAP;EACH;;EACDX,iBAAiB,CAACW,IAAD,EAAO;IACpB,KAAKP,YAAL,CAAkB9E,GAAlB,CAAsBqF,IAAtB;EACH;;EACD5K,gCAAgC,CAAC4K,IAAD,EAAO;IACnC,IAAI,KAAK/B,KAAL,CAAW7K,GAAX,CAAe4M,IAAf,CAAJ,EAA0B;MACtB,KAAK9I,2BAAL,CAAiCyD,GAAjC,CAAqCqF,IAArC;IACH;EACJ;;EACDV,+BAA+B,CAACU,IAAD,EAAO;IAClC,KAAK2B,6BAAL,CAAmChH,GAAnC,CAAuCqF,IAAvC;EACH;;EACDjJ,gCAAgC,GAAG;IAC/B,KAAKG,2BAAL,CAAiC6jC,KAAjC;EACH;;EACDnjC,uBAAuB,CAACoI,IAAD,EAAO;IAC1B,KAAKjH,cAAL,CAAoB4B,GAApB,CAAwBqF,IAAxB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIvB,UAAU,CAACC,QAAD,EAAWC,MAAX,EAAmB;IACzB,IAAInO,EAAJ,EAAQ22B,EAAR;;IACA,OAAO,CAACA,EAAE,GAAG,CAAC32B,EAAE,GAAG,KAAKyvC,KAAL,CAAW5qB,GAAX,CAAe3W,QAAf,CAAN,MAAoC,IAApC,IAA4ClO,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAAC4C,GAAH,CAAOuL,MAAP,CAA3E,MAA+F,IAA/F,IAAuGwoB,EAAE,KAAK,KAAK,CAAnH,GAAuHA,EAAvH,GAA4H,KAAnI;EACH;EACD;AACJ;AACA;;;EACI/nB,cAAc,GAAG;IACb,OAAO,KAAKohC,+BAAL,CAAqC3gC,KAAK,CAACC,IAAN,CAAW,KAAK7B,KAAhB,CAArC,EAA6D,MAAM,IAAnE,EAAyE,MAAM,CACrF,CADM,CAAP;EAEH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIuiC,+BAA+B,CAACC,aAAD,EAAgBC,iBAAhB,EAAmCC,OAAnC,EAA4C;IACvE,MAAMC,YAAY,GAAG,IAAIzlB,GAAJ,EAArB;IACA,MAAM0lB,GAAG,GAAG,IAAI1lB,GAAJ,EAAZ;IACA,MAAM2lB,MAAM,GAAG,IAAI3lB,GAAJ,EAAf;IACA,MAAM4lB,KAAK,GAAG,IAAI9pC,GAAJ,EAAd,CAJuE,CAKvE;IACA;;IACA,MAAM+pC,UAAU,GAAG,IAAI7lB,GAAJ,EAAnB;IACA,MAAM8lB,KAAK,GAAG,EAAd;IACA,IAAIC,IAAI,GAAG,CAAX;IACA,MAAMC,gBAAgB,GAAG,IAAIlqC,GAAJ,EAAzB;IACAwpC,aAAa,CAACW,OAAd;IACAX,aAAa,CAACnpC,OAAd,CAAuB9E,CAAD,IAAO;MACzB,IAAIwuC,UAAU,CAAC3rB,GAAX,CAAe7iB,CAAf,MAAsB3D,SAA1B,EAAqC;QACjC;MACH;;MACD,MAAMwyC,QAAQ,GAAG,CAAC7uC,CAAD,CAAjB;MACA,MAAM8uC,QAAQ,GAAG,EAAjB;MACAN,UAAU,CAACtrB,GAAX,CAAeljB,CAAf,EAAkButC,eAAe,CAACwB,QAAlC;;MACA,OAAOF,QAAQ,CAACzjC,MAAT,GAAkB,CAAzB,EAA4B;QACxB,MAAM4jC,CAAC,GAAGH,QAAQ,CAACA,QAAQ,CAACzjC,MAAT,GAAkB,CAAnB,CAAlB,CADwB,CAExB;;QACA,QAAQojC,UAAU,CAAC3rB,GAAX,CAAemsB,CAAf,CAAR;UACI,KAAKzB,eAAe,CAACwB,QAArB;YAA+B;cAC3BX,YAAY,CAAClrB,GAAb,CAAiB8rB,CAAjB,EAAoBN,IAApB;cACAL,GAAG,CAACnrB,GAAJ,CAAQ8rB,CAAR,EAAWN,IAAX;cACAI,QAAQ,CAACjuC,IAAT,CAAcmuC,CAAd;cACAN,IAAI;cACJ,KAAK/tC,aAAL,CAAmBquC,CAAnB,EAAsBlqC,OAAtB,CAA+BmqC,CAAD,IAAO;gBACjC,IAAIb,YAAY,CAACvrB,GAAb,CAAiBosB,CAAjB,MAAwB5yC,SAA5B,EAAuC;kBACnCwyC,QAAQ,CAAChuC,IAAT,CAAcouC,CAAd;kBACAX,MAAM,CAACprB,GAAP,CAAW+rB,CAAX,EAAcD,CAAd;kBACAR,UAAU,CAACtrB,GAAX,CAAe+rB,CAAf,EAAkB1B,eAAe,CAACwB,QAAlC;gBACH;cACJ,CAND;cAOAP,UAAU,CAACtrB,GAAX,CAAe8rB,CAAf,EAAkBzB,eAAe,CAAC2B,SAAlC;cACA;YACH;;UACD,KAAK3B,eAAe,CAAC2B,SAArB;YAAgC;cAAE;cAC9B,IAAIC,IAAJ,CAD4B,CAE5B;;cACAA,IAAI,GAAGf,YAAY,CAACvrB,GAAb,CAAiBmsB,CAAjB,CAAP;cACA,KAAKruC,aAAL,CAAmBquC,CAAnB,EAAsBlqC,OAAtB,CAA+BmqC,CAAD,IAAO;gBACjC,IAAI,CAACV,KAAK,CAAC3tC,GAAN,CAAUquC,CAAV,CAAL,EAAmB;kBACf,IAAIX,MAAM,CAACzrB,GAAP,CAAWosB,CAAX,MAAkBD,CAAtB,EAAyB;oBACrB;oBACAG,IAAI,GAAGx7B,IAAI,CAACG,GAAL,CAASq7B,IAAT,EAAed,GAAG,CAACxrB,GAAJ,CAAQosB,CAAR,CAAf,CAAP;kBACH,CAHD,MAIK;oBACD;oBACAE,IAAI,GAAGx7B,IAAI,CAACG,GAAL,CAASq7B,IAAT,EAAef,YAAY,CAACvrB,GAAb,CAAiBosB,CAAjB,CAAf,CAAP;kBACH;gBACJ;cACJ,CAXD;cAYAZ,GAAG,CAACnrB,GAAJ,CAAQ8rB,CAAR,EAAWG,IAAX;;cACA,IAAIA,IAAI,KAAKf,YAAY,CAACvrB,GAAb,CAAiBmsB,CAAjB,CAAb,EAAkC;gBAC9B,MAAMI,UAAU,GAAG,EAAnB;;gBACA,GAAG;kBACCA,UAAU,CAACvuC,IAAX,CAAgBiuC,QAAQ,CAACA,QAAQ,CAAC1jC,MAAT,GAAkB,CAAnB,CAAxB;kBACA0jC,QAAQ,CAACve,GAAT;gBACH,CAHD,QAGS6e,UAAU,CAACA,UAAU,CAAChkC,MAAX,GAAoB,CAArB,CAAV,KAAsC4jC,CAH/C;;gBAIAI,UAAU,CAACtqC,OAAX,CAAoBmqC,CAAD,IAAO;kBACtBV,KAAK,CAACpmC,GAAN,CAAU8mC,CAAV;gBACH,CAFD;gBAGAR,KAAK,CAAC5tC,IAAN,CAAW,GAAGuuC,UAAd;;gBACA,IAAIA,UAAU,CAAChkC,MAAX,GAAoB,CAAxB,EAA2B;kBACvBgkC,UAAU,CAACtqC,OAAX,CAAoBmqC,CAAD,IAAO;oBACtBN,gBAAgB,CAACxmC,GAAjB,CAAqB8mC,CAArB;kBACH,CAFD;gBAGH;cACJ;;cACDJ,QAAQ,CAACte,GAAT;cACAie,UAAU,CAACtrB,GAAX,CAAe8rB,CAAf,EAAkBzB,eAAe,CAAC8B,MAAlC;cACA;YACH;;UACD,KAAK9B,eAAe,CAAC8B,MAArB;YAA6B;cAAE;cAC3BR,QAAQ,CAACte,GAAT;cACA;YACH;QAxDL;MA0DH;IACJ,CArED;IAsEA,MAAM+e,sBAAsB,GAAG,IAAI7qC,GAAJ,CAAQwpC,aAAR,CAA/B;IACA,MAAMsB,MAAM,GAAG,EAAf;IACA,MAAMC,MAAM,GAAG,EAAf;IACAf,KAAK,CAACG,OAAN;IACAH,KAAK,CAAC3pC,OAAN,CAAemqC,CAAD,IAAO;MACjB;MACA,IAAIN,gBAAgB,CAAC/tC,GAAjB,CAAqBquC,CAArB,KAA2B,KAAKtuC,aAAL,CAAmBsuC,CAAnB,EAAsBruC,GAAtB,CAA0BquC,CAA1B,CAA/B,EAA6D;QACzDO,MAAM,CAAC3uC,IAAP,CAAYouC,CAAZ;QACAd,OAAO,CAACc,CAAD,CAAP;QACA,KAAKtuC,aAAL,CAAmBsuC,CAAnB,EAAsBnqC,OAAtB,CAA+B2qC,CAAD,IAAOH,sBAAsB,CAACnnC,GAAvB,CAA2BsnC,CAA3B,CAArC;MACH,CAJD,MAKK;QACDF,MAAM,CAAC1uC,IAAP,CAAYouC,CAAZ;;QACA,IAAIK,sBAAsB,CAAC1uC,GAAvB,CAA2BquC,CAA3B,KAAiCf,iBAAiB,CAACe,CAAD,CAAtD,EAA2D;UACvD,KAAKtuC,aAAL,CAAmBsuC,CAAnB,EAAsBnqC,OAAtB,CAA+B2qC,CAAD,IAAOH,sBAAsB,CAACnnC,GAAvB,CAA2BsnC,CAA3B,CAArC;QACH;MACJ;IACJ,CAbD;IAcA,OAAO;MAAEF,MAAF;MAAUC;IAAV,CAAP;EACH;;EACDE,eAAe,CAACt1C,MAAD,EAAS;IACpB,MAAM6O,MAAM,GAAG,EAAf;IACA,KAAKwkC,KAAL,CAAW3oC,OAAX,CAAmB,CAACnE,aAAD,EAAgBgvC,UAAhB,KAA+B;MAC9C,IAAIhvC,aAAa,CAACC,GAAd,CAAkBxG,MAAlB,CAAJ,EAA+B;QAC3B6O,MAAM,CAACpI,IAAP,CAAY8uC,UAAZ;MACH;IACJ,CAJD;IAKA,OAAO1mC,MAAP;EACH;;EACD8kC,kBAAkB,CAACvgC,IAAD,EAAO;IACrB,MAAMjO,YAAY,GAAG,KAAKiuC,eAAL,CAAqBhgC,IAArB,CAArB;;IACA,KAAK,MAAMhO,UAAX,IAAyBD,YAAzB,EAAuC;MACnC,KAAKoS,cAAL,CAAoBnS,UAApB,EAAgCgO,IAAhC;IACH;;IACD,OAAOjO,YAAP;EACH;;AAzQc;;;;;;;;;;;;;;ACdnB;;AACA;;AALA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACO,MAAMuC,YAAN,CAAmB;EACtBxF,WAAW,GAAG;IACV;IACA,KAAKgC,YAAL,GAAoB,IAAIqqB,GAAJ,EAApB;EACH;;EACDinB,cAAc,CAAC7yC,KAAD,EAAQ;IAClB,IAAIiB,EAAJ,EAAQ22B,EAAR;;IACA,OAAO,CAACA,EAAE,GAAG,CAAC32B,EAAE,GAAG,KAAKM,YAAL,CAAkBukB,GAAlB,CAAsB9lB,KAAtB,CAAN,MAAwC,IAAxC,IAAgDiB,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACoE,IAAlF,MAA4F,IAA5F,IAAoGuyB,EAAE,KAAK,KAAK,CAAhH,GAAoHA,EAApH,GAAyH,CAAhI;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI1vB,QAAQ,CAAC7K,MAAD,EAAS;IACb,IAAIy1C,QAAQ,GAAG,KAAKvxC,YAAL,CAAkBukB,GAAlB,CAAsBzoB,MAAM,CAACizC,QAAP,GAAkBtwC,KAAxC,CAAf;;IACA,IAAI8yC,QAAQ,KAAKxzC,SAAjB,EAA4B;MACxBwzC,QAAQ,GAAG,IAAIlnB,GAAJ,EAAX;MACA,KAAKrqB,YAAL,CAAkB4kB,GAAlB,CAAsB9oB,MAAM,CAACizC,QAAP,GAAkBtwC,KAAxC,EAA+C8yC,QAA/C;IACH;;IACD,MAAMv4B,GAAG,GAAGw4B,gBAAgB,CAAC11C,MAAM,CAACizC,QAAP,EAAD,EAAoBjzC,MAAM,CAACkzC,MAAP,EAApB,CAA5B;IACAuC,QAAQ,CAAC3sB,GAAT,CAAa5L,GAAb,EAAkBld,MAAlB;EACH;;EACDsX,WAAW,CAACtX,MAAD,EAAS;IAChB,MAAM2C,KAAK,GAAG3C,MAAM,CAACizC,QAAP,GAAkBtwC,KAAhC;IACA,MAAM8yC,QAAQ,GAAG,KAAKvxC,YAAL,CAAkBukB,GAAlB,CAAsB9lB,KAAtB,CAAjB;;IACA,IAAI8yC,QAAQ,KAAKxzC,SAAjB,EAA4B;MACxB;IACH;;IACD,MAAMib,GAAG,GAAGw4B,gBAAgB,CAAC11C,MAAM,CAACizC,QAAP,EAAD,EAAoBjzC,MAAM,CAACkzC,MAAP,EAApB,CAA5B;IACAuC,QAAQ,CAAC/9B,MAAT,CAAgBwF,GAAhB;;IACA,IAAIu4B,QAAQ,CAACztC,IAAT,KAAkB,CAAtB,EAAyB;MACrB,KAAK9D,YAAL,CAAkBwT,MAAlB,CAAyB/U,KAAzB;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACI0G,QAAQ,CAAC5D,KAAD,EAAQC,GAAR,EAAa;IACjB,MAAM+vC,QAAQ,GAAG,KAAKvxC,YAAL,CAAkBukB,GAAlB,CAAsBhjB,KAAK,CAAC9C,KAA5B,CAAjB;IACA,MAAMua,GAAG,GAAGw4B,gBAAgB,CAACjwC,KAAD,EAAQC,GAAR,CAA5B;IACA,OAAO+vC,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAChtB,GAAT,CAAavL,GAAb,CAA3D;EACH;;EACDpX,UAAU,CAACL,KAAD,EAAQC,GAAR,EAAa;IACnB,MAAMiwC,UAAU,GAAG,KAAKtsC,QAAL,CAAc5D,KAAd,EAAqBC,GAArB,CAAnB;;IACA,IAAI,CAACiwC,UAAL,EAAiB;MACb,MAAMr0C,KAAK,CAAC,sBAAD,CAAX;IACH;;IACD,OAAOq0C,UAAP;EACH;;EACDzoC,cAAc,CAAC+I,IAAD,EAAOC,UAAP,EAAmB;IAC7B,MAAMC,gBAAgB,GAAGlD,KAAK,EAA9B;IACA,MAAMi9B,OAAO,GAAGj9B,KAAK,EAArB;IACA,MAAMjE,uBAAuB,GAAGiE,KAAK,EAArC;IACA,MAAMtQ,KAAK,GAAGsT,IAAI,CAACtT,KAAnB;;IACA,KAAK,MAAM,CAACua,GAAD,EAAMld,MAAN,CAAX,IAA4B,KAAK41C,gBAAL,CAAsB3/B,IAAI,CAACtT,KAA3B,CAA5B,EAA+D;MAC3D,MAAM0D,KAAK,GAAGrG,MAAM,CAACqG,KAArB;;MACA,IAAI4P,IAAI,CAACxQ,KAAL,IAAcyQ,UAAU,CAAClW,MAAM,CAACqG,KAAP,CAAaX,GAAd,CAA5B,EAAgD;QAC5CW,KAAK,CAACgU,UAAN,CAAiBpE,IAAjB;;QACA,IAAI5P,KAAK,CAACiU,eAAN,EAAJ,EAA6B;UACzB,KAAKu7B,WAAL,CAAiBlzC,KAAjB,EAAwBua,GAAxB;UACA/G,gBAAgB,CAAC1P,IAAjB,CAAsBzG,MAAtB;QACH,CAHD,MAIK;UACDkwC,OAAO,CAACzpC,IAAR,CAAa,CAACyW,GAAD,EAAMld,MAAN,CAAb;QACH;;QACDgP,uBAAuB,CAACvI,IAAxB,CAA6BzG,MAA7B;MACH;IACJ;;IACD,MAAMoW,eAAe,GAAG,EAAxB;IACA85B,OAAO,CAAC3b,IAAR,CAAa,CAACzwB,IAAD,EAAOC,KAAP,KAAiB+xC,SAAS,CAAChyC,IAAI,CAAC,CAAD,CAAL,EAAUC,KAAK,CAAC,CAAD,CAAf,EAAoBmS,UAApB,CAAvC;;IACA,KAAK,MAAM,CAAC6/B,MAAD,EAAS/1C,MAAT,CAAX,IAA+BkwC,OAA/B,EAAwC;MACpC,MAAM8F,MAAM,GAAGC,YAAY,CAACj2C,MAAM,CAACqG,KAAR,CAA3B;;MACA,IAAI2vC,MAAM,KAAKD,MAAf,EAAuB;QACnB;MACH;;MACD,MAAM1/B,cAAc,GAAG,KAAK6/B,QAAL,CAAcvzC,KAAd,EAAqBqzC,MAArB,CAAvB;MACA,KAAKH,WAAL,CAAiBlzC,KAAjB,EAAwBozC,MAAxB;;MACA,IAAI1/B,cAAc,KAAKpU,SAAnB,IAAgCjC,MAAM,IAAIqW,cAA9C,EAA8D;QAC1DD,eAAe,CAAC3P,IAAhB,CAAqB,CAAC4P,cAAD,EAAiBrW,MAAjB,CAArB;MACH,CAFD,MAGK;QACD,KAAK6K,QAAL,CAAc7K,MAAd;MACH;IACJ;;IACD,OAAO;MACHmW,gBADG;MAEHC,eAFG;MAGHpH;IAHG,CAAP;EAKH;;EACDF,kCAAkC,CAACnM,KAAD,EAAQC,GAAR,EAAa2K,YAAb,EAA2B;IACzD,OAAO,KAAK4oC,uBAAL,CAA6BxzC,KAA7B,EAAoC,CAACua,GAAD,EAAMld,MAAN,KAAiB;MACxD,IAAI4C,GAAG,IAAI5C,MAAM,CAACyF,KAAP,CAAa7C,GAAxB,EAA6B;QACzB5C,MAAM,CAACqG,KAAP,CAAawT,WAAb,CAAyBtM,YAAzB;QACA,OAAO;UACH6oC,WAAW,EAAE,KADV;UAEHp2C,MAAM,EAAEA;QAFL,CAAP;MAIH,CAND,MAOK,IAAI4C,GAAG,GAAG5C,MAAM,CAACyF,KAAP,CAAa7C,GAAnB,IAA0BA,GAAG,IAAI5C,MAAM,CAAC0F,GAAP,CAAW9C,GAAhD,EAAqD;QACtD5C,MAAM,CAACqG,KAAP,CAAayT,YAAb,CAA0BvM,YAA1B;QACA,OAAO;UACH6oC,WAAW,EAAE,IADV;UAEHp2C,MAAM,EAAEA;QAFL,CAAP;MAIH,CANI,MAOA;QACD,OAAOiC,SAAP;MACH;IACJ,CAlBM,CAAP;EAmBH;;EACDoN,wCAAwC,CAAC1M,KAAD,EAAQ8S,MAAR,EAAgB/G,eAAhB,EAAiC;IACrE,OAAO,KAAKynC,uBAAL,CAA6BxzC,KAA7B,EAAoC,CAACua,GAAD,EAAMld,MAAN,KAAiB;MACxD,IAAIyV,MAAM,IAAIzV,MAAM,CAACyF,KAAP,CAAa1C,GAA3B,EAAgC;QAC5B/C,MAAM,CAACqG,KAAP,CAAa0T,cAAb,CAA4BrL,eAA5B;QACA,OAAO;UACH0nC,WAAW,EAAE,KADV;UAEHp2C,MAAM,EAAEA;QAFL,CAAP;MAIH,CAND,MAOK,IAAIyV,MAAM,GAAGzV,MAAM,CAACyF,KAAP,CAAa1C,GAAtB,IAA6B0S,MAAM,IAAIzV,MAAM,CAAC0F,GAAP,CAAW3C,GAAtD,EAA2D;QAC5D/C,MAAM,CAACqG,KAAP,CAAa8T,eAAb,CAA6BzL,eAA7B;QACA,OAAO;UACH0nC,WAAW,EAAE,IADV;UAEHp2C,MAAM,EAAEA;QAFL,CAAP;MAIH,CANI,MAOA;QACD,OAAOiC,SAAP;MACH;IACJ,CAlBM,CAAP;EAmBH;;EACDwO,2BAA2B,CAACT,WAAD,EAAc3M,OAAd,EAAuBC,QAAvB,EAAiCF,OAAjC,EAA0C;IACjE,KAAK+yC,uBAAL,CAA6BnmC,WAAW,CAACrN,KAAzC,EAAgD,CAACua,GAAD,EAAMld,MAAN,KAAiB;MAC7D,IAAIgQ,WAAW,CAACM,aAAZ,CAA0BtQ,MAAM,CAACqG,KAAjC,CAAJ,EAA6C;QACzCrG,MAAM,CAACqG,KAAP,CAAa0T,cAAb,CAA4B1W,OAA5B;QACArD,MAAM,CAACqG,KAAP,CAAawT,WAAb,CAAyBvW,QAAzB;QACAtD,MAAM,CAACqG,KAAP,CAAa+T,WAAb,CAAyBhX,OAAzB;QACA,OAAO;UACHgzC,WAAW,EAAE,KADV;UAEHp2C,MAAM,EAAEA;QAFL,CAAP;MAIH,CARD,MASK;QACD,OAAOiC,SAAP;MACH;IACJ,CAbD;EAcH;;EACDiM,mBAAmB,CAACvL,KAAD,EAAQ;IACvB,IAAI,KAAKuB,YAAL,CAAkBsC,GAAlB,CAAsB7D,KAAtB,CAAJ,EAAkC;MAC9B,MAAMmQ,MAAM,GAAG,KAAK5O,YAAL,CAAkBukB,GAAlB,CAAsB9lB,KAAtB,EAA6BqL,MAA7B,EAAf;MACA,KAAK9J,YAAL,CAAkBwT,MAAlB,CAAyB/U,KAAzB;MACA,OAAOmQ,MAAP;IACH;;IACD,OAAO,GAAGu6B,MAAM,CAACgJ,QAAV,GAAP;EACH;;EACa,CAAbphC,aAAa,CAACtS,KAAD,EAAQ;IAClB,MAAM8yC,QAAQ,GAAG,KAAKvxC,YAAL,CAAkBukB,GAAlB,CAAsB9lB,KAAtB,CAAjB;;IACA,IAAI,CAAC8yC,QAAL,EAAe;MACX;IACH;;IACD,OAAOA,QAAQ,CAACznC,MAAT,EAAP;EACH;;EAC6B,CAA7BuC,6BAA6B,CAACP,WAAD,EAAc;IACxC,KAAK,MAAMpF,WAAX,IAA0B,KAAKqK,aAAL,CAAmBjF,WAAW,CAACrN,KAA/B,CAA1B,EAAiE;MAC7D,IAAIqN,WAAW,CAACM,aAAZ,CAA0B1F,WAAW,CAACvE,KAAtC,CAAJ,EAAkD;QAC9C,MAAMuE,WAAN;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIxE,gBAAgB,CAACC,KAAD,EAAQ;IACpB,IAAIA,KAAK,CAACwK,MAAN,KAAiB,CAAjB,IAAsB+H,MAAM,CAAC7N,QAAP,CAAgB1E,KAAK,CAACwK,MAAN,EAAhB,CAA1B,EAA2D;MACvD,MAAMylC,qBAAqB,GAAG,IAAArzC,uBAAA,EAAkBoD,KAAK,CAACX,GAAN,CAAU/C,KAA5B,EAAmC0D,KAAK,CAACX,GAAN,CAAU3C,GAA7C,EAAkDsD,KAAK,CAACX,GAAN,CAAU9C,GAAV,GAAgB,CAAlE,CAA9B;MACA,MAAM2zC,aAAa,GAAG,KAAKltC,QAAL,CAAchD,KAAK,CAACZ,KAApB,EAA2B6wC,qBAA3B,CAAtB;;MACA,IAAIC,aAAa,KAAKt0C,SAAtB,EAAiC;QAC7B,MAAMkE,SAAS,GAAG,IAAIN,oCAAJ,CAAsB,IAAA5C,uBAAA,EAAkBoD,KAAK,CAACZ,KAAN,CAAY9C,KAA9B,EAAqC0D,KAAK,CAACZ,KAAN,CAAY1C,GAAjD,EAAsDsD,KAAK,CAACX,GAAN,CAAU9C,GAAhE,CAAtB,EAA4FyD,KAAK,CAACX,GAAlG,CAAlB;QACA,OAAO;UACHQ,kBAAkB,EAAEqwC,aADjB;UAEHpwC;QAFG,CAAP;MAIH;IACJ;;IACD,OAAO;MACHA,SAAS,EAAEE;IADR,CAAP;EAGH;;EACgB,CAAhBuvC,gBAAgB,CAACjzC,KAAD,EAAQ;IACrB,MAAM8yC,QAAQ,GAAG,KAAKvxC,YAAL,CAAkBukB,GAAlB,CAAsB9lB,KAAtB,CAAjB;;IACA,IAAI,CAAC8yC,QAAL,EAAe;MACX;IACH;;IACD,OAAOA,QAAQ,CAACrG,OAAT,EAAP;EACH;;EACDyG,WAAW,CAAClzC,KAAD,EAAQua,GAAR,EAAa;IACpB,KAAKhZ,YAAL,CAAkBukB,GAAlB,CAAsB9lB,KAAtB,EAA6B+U,MAA7B,CAAoCwF,GAApC;EACH;;EACDg5B,QAAQ,CAACvzC,KAAD,EAAQua,GAAR,EAAa;IACjB,IAAItZ,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAKM,YAAL,CAAkBukB,GAAlB,CAAsB9lB,KAAtB,CAAN,MAAwC,IAAxC,IAAgDiB,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAAC6kB,GAAH,CAAOvL,GAAP,CAAhF;EACH;;EACDi5B,uBAAuB,CAACxzC,KAAD,EAAQ0+B,EAAR,EAAY;IAC/B,MAAM6O,OAAO,GAAGj9B,KAAK,EAArB;;IACA,KAAK,MAAM,CAACiK,GAAD,EAAMld,MAAN,CAAX,IAA4B,KAAK41C,gBAAL,CAAsBjzC,KAAtB,CAA5B,EAA0D;MACtD,MAAMkM,MAAM,GAAGwyB,EAAE,CAACnkB,GAAD,EAAMld,MAAN,CAAjB;;MACA,IAAI6O,MAAM,KAAK5M,SAAf,EAA0B;QACtB,KAAK4zC,WAAL,CAAiBlzC,KAAjB,EAAwBua,GAAxB;QACAgzB,OAAO,CAACzpC,IAAR,CAAaoI,MAAb;MACH;IACJ;;IACDqhC,OAAO,CAACxlC,OAAR,CAAgB8rC,KAAK,IAAI;MACrB,KAAK3rC,QAAL,CAAc2rC,KAAK,CAACx2C,MAApB;IACH,CAFD;IAGA,OAAO;MACHgP,uBAAuB,EAAEkhC,OAAO,CAC3B/8B,MADoB,CACbqjC,KAAK,IAAIA,KAAK,CAACJ,WADF,EAEpBrxC,GAFoB,CAEhByxC,KAAK,IAAIA,KAAK,CAACx2C,MAFC;IADtB,CAAP;EAKH;;AAlOqB;;;;AAoO1B,SAAS01C,gBAAT,CAA0BjwC,KAA1B,EAAiCC,GAAjC,EAAsC;EAClC,OAAQ,GAAED,KAAK,CAAC1C,GAAI,IAAG0C,KAAK,CAAC7C,GAAI,IAAG8C,GAAG,CAAC3C,GAAI,IAAG2C,GAAG,CAAC9C,GAAI,EAAvD;AACH;;AACD,SAASqzC,YAAT,CAAsB5vC,KAAtB,EAA6B;EACzB,OAAOqvC,gBAAgB,CAACrvC,KAAK,CAACZ,KAAP,EAAcY,KAAK,CAACX,GAApB,CAAvB;AACH;;AACD,MAAMowC,SAAS,GAAG,CAAChyC,IAAD,EAAOC,KAAP,EAAcmS,UAAd,KAA6B;EAC3C,MAAMugC,SAAS,GAAGvgC,UAAU,CAACpS,IAAI,CAACuC,KAAL,CAAWZ,KAAZ,CAA5B;EACA,MAAMixC,UAAU,GAAGxgC,UAAU,CAACpS,IAAI,CAACuC,KAAL,CAAWZ,KAAZ,CAA7B;;EACA,IAAIgxC,SAAS,KAAKC,UAAlB,EAA8B;IAC1B,MAAMC,OAAO,GAAGzgC,UAAU,CAACpS,IAAI,CAACuC,KAAL,CAAWX,GAAZ,CAA1B;IACA,MAAMkxC,QAAQ,GAAG1gC,UAAU,CAACnS,KAAK,CAACsC,KAAN,CAAYX,GAAb,CAA3B;IACA,OAAOixC,OAAO,GAAGC,QAAjB;EACH,CAJD,MAKK;IACD,OAAOH,SAAS,GAAGC,UAAnB;EACH;AACJ,CAXD,C;;;;;;;;;;;;AC/OA;;AACA;;AALA;AACA;AACA;AACA;AAGA,SAASG,YAAT,CAAsBC,gBAAtB,EAAwC;EACpC,OAAOA,gBAAgB,CAACpM,WAAjB,EAAP;AACH;;AACD,MAAMqM,KAAN,CAAY;EACR70C,WAAW,CAAC80C,EAAD,EAAKrc,WAAL,EAAkB;IACzB,KAAKqc,EAAL,GAAUA,EAAV;IACA,KAAKrc,WAAL,GAAmBA,WAAnB;EACH;;EACgB,IAAbsc,aAAa,GAAG;IAChB,OAAOJ,YAAY,CAAC,KAAKlc,WAAN,CAAnB;EACH;;AAPO;;AASL,MAAMhzB,YAAN,CAAmB;EACtBzF,WAAW,CAAC3C,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAK23C,wBAAL,GAAgC,IAAI3oB,GAAJ,EAAhC;IACA,KAAK4oB,aAAL,GAAqB,IAAI5oB,GAAJ,EAArB;IACA,KAAK6oB,WAAL,GAAmB,CAAC,CAApB;;IACA,KAAKllC,KAAL,GAAcD,SAAD,IAAe;MACxB,MAAMtP,KAAK,GAAG,KAAKu0C,wBAAL,CAA8BzuB,GAA9B,CAAkCouB,YAAY,CAAC5kC,SAAD,CAA9C,CAAd;;MACA,IAAItP,KAAK,KAAKV,SAAd,EAAyB;QACrB,MAAM,IAAIzD,4BAAJ,CAAyByT,SAAzB,CAAN;MACH;;MACD,OAAOtP,KAAK,CAACq0C,EAAb;IACH,CAND;;IAOA,KAAKvuB,GAAL,GAAYxW,SAAD,IAAe;MACtB,IAAIrO,EAAJ;;MACA,OAAO,CAACA,EAAE,GAAG,KAAKszC,wBAAL,CAA8BzuB,GAA9B,CAAkCouB,YAAY,CAAC5kC,SAAD,CAA9C,CAAN,MAAsE,IAAtE,IAA8ErO,EAAE,KAAK,KAAK,CAA1F,GAA8F,KAAK,CAAnG,GAAuGA,EAAE,CAACozC,EAAjH;IACH,CAHD;;IAIA,KAAKK,gBAAL,GAAyBxrC,OAAD,IAAa;MACjC,OAAO,KAAKyrC,cAAL,CAAoBzrC,OAApB,EAA6B8uB,WAApC;IACH,CAFD;;IAGA,KAAK4c,eAAL,GAAuBh4C,SAAS,CAACi4C,gBAAV,CAA2BC,eAAA,CAAUC,gBAArC,CAAvB;EACH;;EACD7I,QAAQ,GAAyE;IAAA,IAAxE8I,mBAAwE,uEAAjD,GAAE,KAAKJ,eAAgB,GAAE,KAAKH,WAAL,GAAmB,CAAE,EAAG;IAC7E,MAAMQ,qBAAqB,GAAGf,YAAY,CAACc,mBAAD,CAA1C;;IACA,IAAI,KAAKT,wBAAL,CAA8B1wC,GAA9B,CAAkCoxC,qBAAlC,CAAJ,EAA8D;MAC1D,MAAM,IAAIh5C,kCAAJ,CAA+B+4C,mBAA/B,CAAN;IACH;;IACD,KAAKP,WAAL;IACA,MAAMz0C,KAAK,GAAG,IAAIo0C,KAAJ,CAAU,KAAKK,WAAf,EAA4BO,mBAA5B,CAAd;IACA,KAAKE,KAAL,CAAWl1C,KAAX;IACA,OAAOA,KAAK,CAACq0C,EAAb;EACH;;EACDtpC,WAAW,CAAC7B,OAAD,EAAU;IACjB,MAAMlJ,KAAK,GAAG,KAAK20C,cAAL,CAAoBzrC,OAApB,CAAd;;IACA,IAAIA,OAAO,IAAI,KAAKurC,WAApB,EAAiC;MAC7B,EAAE,KAAKA,WAAP;IACH;;IACD,KAAKF,wBAAL,CAA8Bx/B,MAA9B,CAAqC/U,KAAK,CAACs0C,aAA3C;IACA,KAAKE,aAAL,CAAmBz/B,MAAnB,CAA0B/U,KAAK,CAACq0C,EAAhC;EACH;;EACDc,cAAc,CAACjsC,OAAD,EAAU;IACpB,IAAIjI,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAKuzC,aAAL,CAAmB1uB,GAAnB,CAAuB5c,OAAvB,CAAN,MAA2C,IAA3C,IAAmDjI,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,EAAE,CAAC+2B,WAAtF;EACH;;EACY,CAAZod,YAAY,GAAG;IACZ,KAAK,MAAMp1C,KAAX,IAAoB,KAAKu0C,wBAAL,CAA8BlpC,MAA9B,EAApB,EAA4D;MACxD,MAAMrL,KAAK,CAACg4B,WAAZ;IACH;EACJ;;EACDqd,cAAc,GAAG;IACb,OAAO,KAAKd,wBAAL,CAA8BlvC,IAArC;EACH;;EACDiwC,cAAc,CAACpsC,OAAD,EAAU;IACpB,OAAO,KAAKsrC,aAAL,CAAmB3wC,GAAnB,CAAuBqF,OAAvB,CAAP;EACH;;EACDqsC,gBAAgB,CAACjmC,SAAD,EAAY;IACxB,OAAO,KAAKilC,wBAAL,CAA8B1wC,GAA9B,CAAkCqwC,YAAY,CAAC5kC,SAAD,CAA9C,CAAP;EACH;;EACDkmC,WAAW,CAACtsC,OAAD,EAAUusC,cAAV,EAA0B;IACjC,MAAMz1C,KAAK,GAAG,KAAK20C,cAAL,CAAoBzrC,OAApB,CAAd;IACA,MAAMwsC,kBAAkB,GAAG11C,KAAK,CAACg4B,WAAjC;;IACA,IAAI0d,kBAAkB,KAAKD,cAA3B,EAA2C;MACvC,OAAOn2C,SAAP;IACH;;IACD,MAAMq2C,0BAA0B,GAAG,KAAKpB,wBAAL,CAA8BzuB,GAA9B,CAAkCouB,YAAY,CAACuB,cAAD,CAA9C,CAAnC;;IACA,IAAIE,0BAA0B,KAAKr2C,SAA/B,IAA4Cq2C,0BAA0B,CAACtB,EAA3B,KAAkCr0C,KAAK,CAACq0C,EAAxF,EAA4F;MACxF,MAAM,IAAIp4C,kCAAJ,CAA+Bw5C,cAA/B,CAAN;IACH;;IACD,MAAMG,oBAAoB,GAAG51C,KAAK,CAACs0C,aAAnC;IACA,KAAKC,wBAAL,CAA8Bx/B,MAA9B,CAAqC6gC,oBAArC;IACA51C,KAAK,CAACg4B,WAAN,GAAoByd,cAApB;IACA,KAAKP,KAAL,CAAWl1C,KAAX;IACA,OAAO01C,kBAAP;EACH;;EACDG,UAAU,GAAG;IACT,OAAOvlC,KAAK,CAACC,IAAN,CAAW,KAAKikC,aAAL,CAAmBnpC,MAAnB,EAAX,EAAwCjJ,GAAxC,CAA6CswC,CAAD,IAAOA,CAAC,CAAC1a,WAArD,CAAP;EACH;;EACDkd,KAAK,CAACl1C,KAAD,EAAQ;IACT,KAAKw0C,aAAL,CAAmBruB,GAAnB,CAAuBnmB,KAAK,CAACq0C,EAA7B,EAAiCr0C,KAAjC;IACA,KAAKu0C,wBAAL,CAA8BpuB,GAA9B,CAAkCnmB,KAAK,CAACs0C,aAAxC,EAAuDt0C,KAAvD;EACH;;EACD20C,cAAc,CAACzrC,OAAD,EAAU;IACpB,MAAMlJ,KAAK,GAAG,KAAKw0C,aAAL,CAAmB1uB,GAAnB,CAAuB5c,OAAvB,CAAd;;IACA,IAAIlJ,KAAK,KAAKV,SAAd,EAAyB;MACrB,MAAM,IAAI1D,0BAAJ,CAAuBsN,OAAvB,CAAN;IACH;;IACD,OAAOlJ,KAAP;EACH;;AAvFqB;;;;;;;;;;;;;;ACd1B;;;;;AAJA;AACA;AACA;AACA;AAGO,IAAI80C,SAAJ;;;AACP,CAAC,UAAUA,SAAV,EAAqB;EAClBA,SAAS,CAAC,kBAAD,CAAT,GAAgC,kBAAhC;AACH,CAFD,EAEGA,SAAS,yBAAKA,SAAS,GAAG,EAAjB,CAFZ,E;;;;;;;;;;;;;ACHA;;AACA;;AACA;;AANA;AACA;AACA;AACA;AAIO,MAAMgB,kBAAN,CAAyB;EAC5Bv2C,WAAW,CAACw2C,SAAD,EAAYzwB,MAAZ,EAAoB0wB,EAApB,EAAwB;IAC/B,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKzwB,MAAL,GAAcA,MAAd;IACA,KAAK0wB,EAAL,GAAUA,EAAV;IACA,KAAKC,sBAAL,GAA8B;MAC1B,WAAW;IADe,CAA9B;IAGA,KAAKC,OAAL;IACA,KAAKC,WAAL;IACA,KAAKC,yBAAL,CAA+B,KAAKL,SAApC;IACAh5C,MAAM,CAACoB,MAAP,CAAc,KAAK43C,SAAnB,EAA8B,KAAKE,sBAAnC;EACH;;EACDI,eAAe,CAACC,8BAAD,EAAiC;IAC5C,KAAKF,yBAAL,CAA+BE,8BAA/B;IACAv5C,MAAM,CAACoB,MAAP,CAAc,KAAK43C,SAAnB,EAA8BO,8BAA9B;EACH;;EACD5yB,oBAAoB,GAAG;IACnB,OAAO3mB,MAAM,CAACw5C,IAAP,CAAY,KAAKR,SAAjB,EAA4Bh4B,MAA5B,CAAmC,CAACrM,GAAD,EAAM6I,GAAN,KAAc;MACpD7I,GAAG,CAAC,KAAKqkC,SAAL,CAAex7B,GAAf,CAAD,CAAH,GAA2BA,GAA3B;MACA,OAAO7I,GAAP;IACH,CAHM,EAGJ,EAHI,CAAP;EAIH;;EACD8kC,iBAAiB,GAAG;IAChB,OAAOz5C,MAAM,CAACw5C,IAAP,CAAY,KAAKjxB,MAAjB,EAAyBvH,MAAzB,CAAgC,CAACrM,GAAD,EAAM6I,GAAN,KAAc;MACjD7I,GAAG,CAAC,KAAK4T,MAAL,CAAY/K,GAAZ,CAAD,CAAH,GAAwBA,GAAxB;MACA,OAAO7I,GAAP;IACH,CAHM,EAGJ,EAHI,CAAP;EAIH;;EACDmmB,oBAAoB,CAACtd,GAAD,EAAM;IACtB,OAAO,KAAKw7B,SAAL,CAAex7B,GAAf,MAAwBjb,SAA/B;EACH;;EACDm3C,uBAAuB,CAACC,WAAD,EAAc;IACjC,MAAMC,YAAY,GAAG,EAArB;;IACA,KAAK,MAAMz7B,UAAX,IAAyBw7B,WAAzB,EAAsC;MAClC,IAAI,KAAK7e,oBAAL,CAA0B3c,UAA1B,CAAJ,EAA2C;QACvCy7B,YAAY,CAAC7yC,IAAb,CAAkB,KAAKiyC,SAAL,CAAe76B,UAAf,CAAlB;MACH;IACJ;;IACD,OAAOy7B,YAAP;EACH;;EACDpzB,sBAAsB,CAAChJ,GAAD,EAAM;IACxB,MAAMC,GAAG,GAAG,KAAKu7B,SAAL,CAAex7B,GAAf,CAAZ;;IACA,IAAIC,GAAG,KAAKlb,SAAZ,EAAuB;MACnB,MAAM,IAAIjE,+BAAJ,CAA6B,aAAYkf,GAAI,EAA7C,CAAN;IACH,CAFD,MAGK;MACD,OAAOC,GAAP;IACH;EACJ;;EACDo8B,2BAA2B,CAACr8B,GAAD,EAAM;IAC7B,OAAO,KAAKw7B,SAAL,CAAex7B,GAAf,CAAP;EACH;;EACDgO,mBAAmB,CAAChO,GAAD,EAAM;IACrB,IAAIA,GAAG,KAAKpgB,eAAA,CAAU08C,GAAtB,EAA2B;MACvB,OAAQ,IAAG18C,eAAA,CAAU08C,GAAI,GAAzB;IACH;;IACD,MAAMr8B,GAAG,GAAG,KAAK8K,MAAL,CAAY/K,GAAZ,CAAZ;;IACA,IAAIC,GAAG,KAAKlb,SAAZ,EAAuB;MACnB,MAAM,IAAIjE,+BAAJ,CAA6B,UAASkf,GAAI,EAA1C,CAAN;IACH,CAFD,MAGK;MACD,OAAOC,GAAP;IACH;EACJ;;EACDq6B,gBAAgB,CAACt6B,GAAD,EAAM;IAClB,MAAMC,GAAG,GAAG,KAAKw7B,EAAL,CAAQz7B,GAAR,CAAZ;;IACA,IAAIC,GAAG,KAAKlb,SAAZ,EAAuB;MACnB,MAAM,IAAIjE,+BAAJ,CAA6B,MAAKkf,GAAI,EAAtC,CAAN;IACH,CAFD,MAGK;MACD,OAAOC,GAAP;IACH;EACJ;;EACD07B,OAAO,GAAG;IACN,KAAK,MAAM37B,GAAX,IAAkBxd,MAAM,CAACsO,MAAP,CAAcypC,gBAAd,CAAlB,EAA4C;MACxC,IAAI,EAAEv6B,GAAG,IAAI,KAAKy7B,EAAd,CAAJ,EAAuB;QACnB,MAAM,IAAI36C,+BAAJ,CAA6B,MAAKkf,GAAI,EAAtC,CAAN;MACH;IACJ;EACJ;;EACD47B,WAAW,GAAG;IACV,KAAK,MAAM57B,GAAX,IAAkBxd,MAAM,CAACsO,MAAP,CAAclR,eAAd,CAAlB,EAA4C;MACxC,IAAI,EAAEogB,GAAG,IAAI,KAAK+K,MAAd,KAA0B/K,GAAG,KAAKpgB,eAAA,CAAU08C,GAAhD,EAAsD;QAClD,MAAM,IAAIx7C,+BAAJ,CAA6B,UAASkf,GAAI,EAA1C,CAAN;MACH;IACJ;EACJ;;EACD67B,yBAAyB,CAACL,SAAD,EAAY;IACjC,MAAMe,aAAa,GAAG,IAAIpvC,GAAJ,CAAQ3K,MAAM,CAACC,mBAAP,CAA2B+4C,SAA3B,CAAR,CAAtB;;IACA,KAAK,MAAMgB,oBAAX,IAAmCh6C,MAAM,CAACC,mBAAP,CAA2B,KAAKi5C,sBAAhC,CAAnC,EAA4F;MACxF,IAAIa,aAAa,CAACjzC,GAAd,CAAkBkzC,oBAAlB,CAAJ,EAA6C;QACzC,MAAM,IAAI/6C,yCAAJ,CAAsC+6C,oBAAtC,CAAN;MACH;IACJ;EACJ;;AA/F2B;;;;AAiGzB,SAASC,uBAAT,CAAiCC,qBAAjC,EAAwD;EAC3D,OAAO,IAAInB,kBAAJ,CAAuB/4C,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkB84C,qBAAqB,CAAClB,SAAxC,CAAvB,EAA2Eh5C,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkB84C,qBAAqB,CAAC3xB,MAAxC,CAA3E,EAA4HvoB,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkB84C,qBAAqB,CAACjB,EAAxC,CAA5H,CAAP;AACH,C;;;;;;;;;;;;ACtGD;;AAJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,MAAM9xC,eAAN,CAAsB;EACzB3E,WAAW,CAACjC,OAAD,CAAS;EAAT,EACT;IACE,KAAKA,OAAL,GAAeA,OAAf;EACH;EACD;AACJ;AACA;;;EACIwR,YAAY,GAAG;IACX,OAAOhQ,4BAAP;EACH;;AAVwB;;;;;;;;;;;;;;ACR7B;AACA;AACA;AACA;;AACA;AACA;AACA;AACO,MAAMhB,eAAN,CAAsB;EACzB;EACAyB,WAAW,CAACwH,WAAD,EAAcF,QAAd,EAAwB;IAC/B,KAAKE,WAAL,GAAmBA,WAAnB;IACA,KAAKF,QAAL,GAAgBA,QAAhB;EACH;;EACDD,SAAS,GAAG;IACR,OAAO;MAAEG,WAAW,EAAE,KAAKA,WAApB;MAAiCF,QAAQ,EAAE,KAAKA;IAAhD,CAAP;EACH;;EACDC,SAAS,CAACuE,MAAD,EAAS;IACd,KAAKtE,WAAL,GAAmBsE,MAAM,CAACtE,WAA1B;IACA,KAAKF,QAAL,GAAgBwE,MAAM,CAACxE,QAAvB;EACH;EACD;AACJ;AACA;;;EACIiI,YAAY,GAAG;IACX,OAAO,KAAK/H,WAAZ;EACH;;EACDgnC,YAAY,CAACmJ,UAAD,EAAa;IACrB,MAAM,gDAAN;EACH;;AArBwB;;;;;;;;;;;;;;ACH7B;;AAJA;AACA;AACA;AACA;AAEO,MAAMt5C,kBAAN,CAAyB;EAC5B2B,WAAW,CAAC+lB,MAAD,EAASoD,QAAT,EAAmB;IAC1B,KAAKpD,MAAL,GAAcA,MAAd;IACA,KAAKoD,QAAL,GAAgBA,QAAhB;EACH;;EACD5Z,YAAY,GAAG;IACX,OAAO/P,eAAA,CAAUY,YAAV,EAAP;EACH;;EACD2E,UAAU,GAAG;IACT,OAAO,KAAKokB,QAAZ;EACH;;AAV2B;;;;;;;;;;;;;;ACDhC;;AAJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMyuB,cAAN,CAAqB;EACxB53C,WAAW,CAAC0O,KAAD,EAAQC,MAAR,EAAgB;IACvB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA;AACR;AACA;AACA;AACA;AACA;;IACQ,KAAK69B,OAAL,GAAe,IAAIngB,GAAJ,EAAf;EACH;EACD;;;EACA3nB,OAAO,CAAC3G,OAAD,EAAU;IACb,IAAI2D,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAK8qC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC8C,GAAzB,CAAN,MAAyC,IAAzC,IAAiDa,EAAE,KAAK,KAAK,CAA7D,GAAiE,KAAK,CAAtE,GAA0EA,EAAE,CAAC6kB,GAAH,CAAOxoB,OAAO,CAAC2C,GAAf,CAAjF;EACH;EACD;;;EACAqG,OAAO,CAAChJ,OAAD,EAAUkI,SAAV,EAAqB;IACxB,KAAKyI,KAAL,GAAa2I,IAAI,CAACC,GAAL,CAAS,KAAK5I,KAAd,EAAqB3Q,OAAO,CAAC8C,GAAR,GAAc,CAAnC,CAAb;IACA,KAAK8N,MAAL,GAAc0I,IAAI,CAACC,GAAL,CAAS,KAAK3I,MAAd,EAAsB5Q,OAAO,CAAC2C,GAAR,GAAc,CAApC,CAAd;IACA,IAAIm3C,UAAU,GAAG,KAAKrL,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC8C,GAAzB,CAAjB;;IACA,IAAI,CAACg3C,UAAL,EAAiB;MACbA,UAAU,GAAG,IAAIxrB,GAAJ,EAAb;MACA,KAAKmgB,OAAL,CAAa5lB,GAAb,CAAiB7oB,OAAO,CAAC8C,GAAzB,EAA8Bg3C,UAA9B;IACH;;IACDA,UAAU,CAACjxB,GAAX,CAAe7oB,OAAO,CAAC2C,GAAvB,EAA4BuF,SAA5B;EACH;EACD;;;EACA3B,GAAG,CAACvG,OAAD,EAAU;IACT,IAAI2D,EAAJ;;IACA,OAAO,CAAC,EAAE,CAACA,EAAE,GAAG,KAAK8qC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC8C,GAAzB,CAAN,MAAyC,IAAzC,IAAiDa,EAAE,KAAK,KAAK,CAA7D,GAAiE,KAAK,CAAtE,GAA0EA,EAAE,CAAC6kB,GAAH,CAAOxoB,OAAO,CAAC2C,GAAf,CAA5E,CAAR;EACH;EACD;;;EACAwP,SAAS,GAAG;IACR,OAAO,KAAKvB,MAAZ;EACH;EACD;;;EACAyB,QAAQ,GAAG;IACP,OAAO,KAAK1B,KAAZ;EACH;;EACD5G,UAAU,CAAC/J,OAAD,EAAU;IAChB,IAAI2D,EAAJ;;IACA,CAACA,EAAE,GAAG,KAAK8qC,OAAL,CAAajmB,GAAb,CAAiBxoB,OAAO,CAAC8C,GAAzB,CAAN,MAAyC,IAAzC,IAAiDa,EAAE,KAAK,KAAK,CAA7D,GAAiE,KAAK,CAAtE,GAA0EA,EAAE,CAAC8T,MAAH,CAAUzX,OAAO,CAAC2C,GAAlB,CAA1E;EACH;;EACD+L,OAAO,CAAC/L,GAAD,EAAM2K,YAAN,EAAoB;IACvB,KAAKmhC,OAAL,CAAahkC,OAAb,CAAsBsvC,UAAD,IAAgB;MACjC,MAAMC,UAAU,GAAG,IAAI1rB,GAAJ,EAAnB;MACAyrB,UAAU,CAACtvC,OAAX,CAAmB,CAAC1K,MAAD,EAASk6C,SAAT,KAAuB;QACtC,IAAIA,SAAS,IAAIt3C,GAAjB,EAAsB;UAClBq3C,UAAU,CAACnxB,GAAX,CAAeoxB,SAAS,GAAG3sC,YAA3B,EAAyCvN,MAAzC;UACAg6C,UAAU,CAACtiC,MAAX,CAAkBwiC,SAAlB;QACH;MACJ,CALD;MAMAD,UAAU,CAACvvC,OAAX,CAAmB,CAAC1K,MAAD,EAASk6C,SAAT,KAAuB;QACtCF,UAAU,CAAClxB,GAAX,CAAeoxB,SAAf,EAA0Bl6C,MAA1B;MACH,CAFD;IAGH,CAXD;IAYA,KAAK6Q,MAAL,IAAetD,YAAf;EACH;;EACD4B,UAAU,CAACsG,MAAD,EAAS/G,eAAT,EAA0B;IAChC,MAAMurC,UAAU,GAAG,IAAI1rB,GAAJ,EAAnB;IACA,KAAKmgB,OAAL,CAAahkC,OAAb,CAAqB,CAACsvC,UAAD,EAAaG,SAAb,KAA2B;MAC5C,IAAIA,SAAS,IAAI1kC,MAAjB,EAAyB;QACrBwkC,UAAU,CAACnxB,GAAX,CAAeqxB,SAAS,GAAGzrC,eAA3B,EAA4CsrC,UAA5C;QACA,KAAKtL,OAAL,CAAah3B,MAAb,CAAoByiC,SAApB;MACH;IACJ,CALD;IAMAF,UAAU,CAACvvC,OAAX,CAAmB,CAACsvC,UAAD,EAAaG,SAAb,KAA2B;MAC1C,KAAKzL,OAAL,CAAa5lB,GAAb,CAAiBqxB,SAAjB,EAA4BH,UAA5B;IACH,CAFD;IAGA,KAAKppC,KAAL,IAAclC,eAAd;EACH;;EACDpC,UAAU,CAACC,WAAD,EAAc;IACpB,KAAKmiC,OAAL,CAAahkC,OAAb,CAAsBsvC,UAAD,IAAgB;MACjC,MAAMC,UAAU,GAAG,IAAI1rB,GAAJ,EAAnB;MACAyrB,UAAU,CAACtvC,OAAX,CAAmB,CAAC1K,MAAD,EAASk6C,SAAT,KAAuB;QACtC,IAAIA,SAAS,IAAI3tC,WAAW,CAACe,QAA7B,EAAuC;UACnC0sC,UAAU,CAACtiC,MAAX,CAAkBwiC,SAAlB;;UACA,IAAIA,SAAS,GAAG3tC,WAAW,CAACyP,MAA5B,EAAoC;YAChCi+B,UAAU,CAACnxB,GAAX,CAAeoxB,SAAS,GAAG3tC,WAAW,CAACgB,YAAvC,EAAqDvN,MAArD;UACH;QACJ;MACJ,CAPD;MAQAi6C,UAAU,CAACvvC,OAAX,CAAmB,CAAC1K,MAAD,EAASk6C,SAAT,KAAuB;QACtCF,UAAU,CAAClxB,GAAX,CAAeoxB,SAAf,EAA0Bl6C,MAA1B;MACH,CAFD;IAGH,CAbD;IAcA,MAAMo6C,mBAAmB,GAAG7gC,IAAI,CAACG,GAAL,CAAS,KAAK7I,MAAL,GAAc,CAAvB,EAA0BtE,WAAW,CAACyP,MAAtC,CAA5B;IACA,MAAMq+B,mBAAmB,GAAG9gC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY4gC,mBAAmB,GAAG7tC,WAAW,CAACe,QAAlC,GAA6C,CAAzD,CAA5B;IACA,KAAKuD,MAAL,GAAc0I,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAK3I,MAAL,GAAcwpC,mBAA1B,CAAd;EACH;;EACDhsC,aAAa,CAACC,cAAD,EAAiB;IAC1B,MAAM2rC,UAAU,GAAG,IAAI1rB,GAAJ,EAAnB;IACA,KAAKmgB,OAAL,CAAahkC,OAAb,CAAqB,CAACsvC,UAAD,EAAaG,SAAb,KAA2B;MAC5C,IAAIA,SAAS,IAAI7rC,cAAc,CAACG,WAAhC,EAA6C;QACzC,KAAKigC,OAAL,CAAah3B,MAAb,CAAoByiC,SAApB;;QACA,IAAIA,SAAS,GAAG7rC,cAAc,CAAC2N,SAA/B,EAA0C;UACtCg+B,UAAU,CAACnxB,GAAX,CAAeqxB,SAAS,GAAG7rC,cAAc,CAACI,eAA1C,EAA2DsrC,UAA3D;QACH;MACJ;IACJ,CAPD;IAQAC,UAAU,CAACvvC,OAAX,CAAmB,CAACsvC,UAAD,EAAaG,SAAb,KAA2B;MAC1C,KAAKzL,OAAL,CAAa5lB,GAAb,CAAiBqxB,SAAjB,EAA4BH,UAA5B;IACH,CAFD;IAGA,MAAMM,sBAAsB,GAAG/gC,IAAI,CAACG,GAAL,CAAS,KAAK9I,KAAL,GAAa,CAAtB,EAAyBtC,cAAc,CAAC2N,SAAxC,CAA/B;IACA,MAAMs+B,sBAAsB,GAAGhhC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY8gC,sBAAsB,GAAGhsC,cAAc,CAACG,WAAxC,GAAsD,CAAlE,CAA/B;IACA,KAAKmC,KAAL,GAAa2I,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAK5I,KAAL,GAAa2pC,sBAAzB,CAAb;EACH;;EACU,CAAVlL,UAAU,CAAC1sC,KAAD,EAAQ;IACf,KAAK,MAAM,CAACw3C,SAAD,EAAYp3C,GAAZ,CAAX,IAA+B,KAAK2rC,OAApC,EAA6C;MACzC,KAAK,MAAM,CAACwL,SAAD,EAAY/wC,KAAZ,CAAX,IAAiCpG,GAAjC,EAAsC;QAClC,MAAM,CAAC,IAAAE,uBAAA,EAAkBN,KAAlB,EAAyBw3C,SAAzB,EAAoCD,SAApC,CAAD,EAAiD/wC,KAAjD,CAAN;MACH;IACJ;EACJ;;EACkB,CAAlBqxC,kBAAkB,CAAC/kC,MAAD,EAAS;IACxB,MAAMskC,UAAU,GAAG,KAAKrL,OAAL,CAAajmB,GAAb,CAAiBhT,MAAjB,CAAnB;;IACA,IAAIskC,UAAU,KAAK93C,SAAnB,EAA8B;MAC1B;IACH;;IACD,KAAK,MAAM,CAAC+C,CAAD,EAAIhF,MAAJ,CAAX,IAA0B+5C,UAA1B,EAAsC;MAClC,MAAM/5C,MAAN;IACH;EACJ;;EACe,CAAfy6C,eAAe,CAAC73C,GAAD,EAAM;IAClB,KAAK,MAAMm3C,UAAX,IAAyB,KAAKrL,OAAL,CAAa1gC,MAAb,EAAzB,EAAgD;MAC5C,MAAM0sC,SAAS,GAAGX,UAAU,CAACtxB,GAAX,CAAe7lB,GAAf,CAAlB;;MACA,IAAI83C,SAAS,KAAKz4C,SAAlB,EAA6B;QACzB,MAAMy4C,SAAN;MACH;IACJ;EACJ;;EACuB,CAAvBlrC,uBAAuB,CAAC+B,WAAD,EAAc;IAClC,KAAK,MAAMkE,MAAX,IAAqBlE,WAAW,CAAC8qB,OAAZ,EAArB,EAA4C;MACxC,MAAM0d,UAAU,GAAG,KAAKrL,OAAL,CAAajmB,GAAb,CAAiBhT,MAAjB,CAAnB;;MACA,IAAIskC,UAAU,KAAK93C,SAAnB,EAA8B;QAC1B;MACH;;MACD,KAAK,MAAM,CAAC+C,CAAD,EAAIhF,MAAJ,CAAX,IAA0B+5C,UAA1B,EAAsC;QAClC,MAAM/5C,MAAN;MACH;IACJ;EACJ;;EACoB,CAApBkP,oBAAoB,CAACoC,QAAD,EAAW;IAC5B,KAAK,MAAMyoC,UAAX,IAAyB,KAAKrL,OAAL,CAAa1gC,MAAb,EAAzB,EAAgD;MAC5C,KAAK,MAAMpL,GAAX,IAAkB0O,QAAQ,CAAC0qB,IAAT,EAAlB,EAAmC;QAC/B,MAAM0e,SAAS,GAAGX,UAAU,CAACtxB,GAAX,CAAe7lB,GAAf,CAAlB;;QACA,IAAI83C,SAAS,KAAKz4C,SAAlB,EAA6B;UACzB,MAAMy4C,SAAN;QACH;MACJ;IACJ;EACJ;;EACmB,CAAnB/tC,mBAAmB,CAAC2E,QAAD,EAAW;IAC3B,KAAK,MAAM,CAACvO,GAAD,EAAMg3C,UAAN,CAAX,IAAgC,KAAKrL,OAAL,CAAaU,OAAb,EAAhC,EAAwD;MACpD,KAAK,MAAMxsC,GAAX,IAAkB0O,QAAQ,CAAC0qB,IAAT,EAAlB,EAAmC;QAC/B,MAAM0e,SAAS,GAAGX,UAAU,CAACtxB,GAAX,CAAe7lB,GAAf,CAAlB;;QACA,IAAI83C,SAAS,KAAKz4C,SAAlB,EAA6B;UACzB,MAAM,CAAC,IAAAgB,uBAAA,EAAkBqO,QAAQ,CAAC3O,KAA3B,EAAkCI,GAAlC,EAAuCH,GAAvC,CAAD,EAA8C83C,SAA9C,CAAN;QACH;MACJ;IACJ;EACJ;;EACsB,CAAtBnsC,sBAAsB,CAACgD,WAAD,EAAc;IACjC,KAAK,MAAMxO,GAAX,IAAkBwO,WAAW,CAAC8qB,OAAZ,EAAlB,EAAyC;MACrC,MAAM0d,UAAU,GAAG,KAAKrL,OAAL,CAAajmB,GAAb,CAAiB1lB,GAAjB,CAAnB;;MACA,IAAIg3C,UAAU,KAAK93C,SAAnB,EAA8B;QAC1B,KAAK,MAAM,CAACW,GAAD,EAAM5C,MAAN,CAAX,IAA4B+5C,UAAU,CAAC3K,OAAX,EAA5B,EAAkD;UAC9C,MAAM,CAAC,IAAAnsC,uBAAA,EAAkBsO,WAAW,CAAC5O,KAA9B,EAAqCI,GAArC,EAA0CH,GAA1C,CAAD,EAAiD5C,MAAjD,CAAN;QACH;MACJ;IACJ;EACJ;;EACQ,CAAR26C,QAAQ,GAAG;IACR,KAAK,MAAM,CAAC31C,CAAD,EAAIjC,GAAJ,CAAX,IAAuB,KAAK2rC,OAA5B,EAAqC;MACjC,KAAK,MAAM,CAAC1pC,CAAD,EAAImE,KAAJ,CAAX,IAAyBpG,GAAzB,EAA8B;QAC1B,IAAIoG,KAAK,KAAKlH,SAAd,EAAyB;UACrB,MAAMkH,KAAN;QACH;MACJ;IACJ;EACJ;;AAtLuB;;;;;;;;;;;;;;ACN5B;;AAJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMyxC,aAAN,CAAoB;EACvB;AACJ;AACA;AACA;EACI14C,WAAW,CAAC0O,KAAD,EAAQC,MAAR,EAAgB;IACvB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAK69B,OAAL,GAAe,IAAIz7B,KAAJ,CAAUpC,MAAV,CAAf;;IACA,KAAK,IAAI6a,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7a,MAApB,EAA4B6a,CAAC,EAA7B,EAAiC;MAC7B,KAAKgjB,OAAL,CAAahjB,CAAb,IAAkB,IAAIzY,KAAJ,CAAUrC,KAAV,CAAlB;IACH;EACJ;EACD;;;EACAhK,OAAO,CAAC3G,OAAD,EAAU;IACb,OAAO,KAAK46C,aAAL,CAAmB56C,OAAO,CAAC8C,GAA3B,EAAgC9C,OAAO,CAAC2C,GAAxC,CAAP;EACH;EACD;;;EACAqG,OAAO,CAAChJ,OAAD,EAAUkI,SAAV,EAAqB;IACxB,KAAKyI,KAAL,GAAa2I,IAAI,CAACC,GAAL,CAAS,KAAK5I,KAAd,EAAqB3Q,OAAO,CAAC8C,GAAR,GAAc,CAAnC,CAAb;IACA,KAAK8N,MAAL,GAAc0I,IAAI,CAACC,GAAL,CAAS,KAAK3I,MAAd,EAAsB5Q,OAAO,CAAC2C,GAAR,GAAc,CAApC,CAAd;IACA,MAAMo3C,UAAU,GAAG,KAAKtL,OAAL,CAAazuC,OAAO,CAAC2C,GAArB,CAAnB;;IACA,IAAI,CAACo3C,UAAL,EAAiB;MACb,KAAKtL,OAAL,CAAazuC,OAAO,CAAC2C,GAArB,IAA4B,IAAIqQ,KAAJ,CAAU,KAAKrC,KAAf,CAA5B;IACH;;IACD,KAAK89B,OAAL,CAAazuC,OAAO,CAAC2C,GAArB,EAA0B3C,OAAO,CAAC8C,GAAlC,IAAyCoF,SAAzC;EACH;EACD;;;EACA3B,GAAG,CAACvG,OAAD,EAAU;IACT,MAAM2C,GAAG,GAAG,KAAK8rC,OAAL,CAAazuC,OAAO,CAAC2C,GAArB,CAAZ;;IACA,IAAI,CAACA,GAAL,EAAU;MACN,OAAO,KAAP;IACH;;IACD,OAAO,CAAC,CAACA,GAAG,CAAC3C,OAAO,CAAC8C,GAAT,CAAZ;EACH;EACD;;;EACAqP,SAAS,GAAG;IACR,OAAO,KAAKvB,MAAZ;EACH;EACD;;;EACAyB,QAAQ,GAAG;IACP,OAAO,KAAK1B,KAAZ;EACH;;EACD5G,UAAU,CAAC/J,OAAD,EAAU;IAChB,IAAI,KAAKyuC,OAAL,CAAazuC,OAAO,CAAC2C,GAArB,MAA8BX,SAAlC,EAA6C;MACzC,OAAO,KAAKysC,OAAL,CAAazuC,OAAO,CAAC2C,GAArB,EAA0B3C,OAAO,CAAC8C,GAAlC,CAAP;IACH;EACJ;;EACD4L,OAAO,CAAC/L,GAAD,EAAM2K,YAAN,EAAoB;IACvB,MAAMutC,OAAO,GAAG,EAAhB;;IACA,KAAK,IAAIpvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGne,YAApB,EAAkCme,CAAC,EAAnC,EAAuC;MACnCovB,OAAO,CAACr0C,IAAR,CAAa,IAAIwM,KAAJ,CAAU,KAAKrC,KAAf,CAAb;IACH;;IACD,KAAK89B,OAAL,CAAakD,MAAb,CAAoBhvC,GAApB,EAAyB,CAAzB,EAA4B,GAAGk4C,OAA/B;IACA,KAAKjqC,MAAL,IAAetD,YAAf;EACH;;EACD4B,UAAU,CAACsG,MAAD,EAAS/G,eAAT,EAA0B;IAChC,KAAK,IAAIgd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7a,MAAzB,EAAiC6a,CAAC,EAAlC,EAAsC;MAClC,KAAKgjB,OAAL,CAAahjB,CAAb,EAAgBkmB,MAAhB,CAAuBn8B,MAAvB,EAA+B,CAA/B,EAAkC,GAAG,IAAIxC,KAAJ,CAAUvE,eAAV,CAArC;IACH;;IACD,KAAKkC,KAAL,IAAclC,eAAd;EACH;;EACDpC,UAAU,CAACC,WAAD,EAAc;IACpB,KAAKmiC,OAAL,CAAakD,MAAb,CAAoBrlC,WAAW,CAACe,QAAhC,EAA0Cf,WAAW,CAACgB,YAAtD;IACA,MAAM6sC,mBAAmB,GAAG7gC,IAAI,CAACG,GAAL,CAAS,KAAK7I,MAAL,GAAc,CAAvB,EAA0BtE,WAAW,CAACyP,MAAtC,CAA5B;IACA,MAAMq+B,mBAAmB,GAAG9gC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY4gC,mBAAmB,GAAG7tC,WAAW,CAACe,QAAlC,GAA6C,CAAzD,CAA5B;IACA,KAAKuD,MAAL,GAAc0I,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAK3I,MAAL,GAAcwpC,mBAA1B,CAAd;EACH;;EACDhsC,aAAa,CAACC,cAAD,EAAiB;IAC1B,KAAK,IAAIod,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7a,MAAzB,EAAiC6a,CAAC,EAAlC,EAAsC;MAClC,KAAKgjB,OAAL,CAAahjB,CAAb,EAAgBkmB,MAAhB,CAAuBtjC,cAAc,CAACG,WAAtC,EAAmDH,cAAc,CAACI,eAAlE;IACH;;IACD,MAAM4rC,sBAAsB,GAAG/gC,IAAI,CAACG,GAAL,CAAS,KAAK9I,KAAL,GAAa,CAAtB,EAAyBtC,cAAc,CAAC2N,SAAxC,CAA/B;IACA,MAAMs+B,sBAAsB,GAAGhhC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY8gC,sBAAsB,GAAGhsC,cAAc,CAACG,WAAxC,GAAsD,CAAlE,CAA/B;IACA,KAAKmC,KAAL,GAAa2I,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAK5I,KAAL,GAAa2pC,sBAAzB,CAAb;EACH;;EACU,CAAVlL,UAAU,CAAC1sC,KAAD,EAAQ;IACf,KAAK,IAAI+X,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7J,MAAzB,EAAiC,EAAE6J,CAAnC,EAAsC;MAClC,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,KAAzB,EAAgC,EAAE6H,CAAlC,EAAqC;QACjC,MAAMzY,MAAM,GAAG,KAAK66C,aAAL,CAAmBpiC,CAAnB,EAAsBiC,CAAtB,CAAf;;QACA,IAAI1a,MAAJ,EAAY;UACR,MAAM,CAAC,IAAAiD,uBAAA,EAAkBN,KAAlB,EAAyB8V,CAAzB,EAA4BiC,CAA5B,CAAD,EAAiC1a,MAAjC,CAAN;QACH;MACJ;IACJ;EACJ;;EACkB,CAAlBw6C,kBAAkB,CAAC/kC,MAAD,EAAS;IACxB,KAAK,IAAIiF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7J,MAAzB,EAAiC,EAAE6J,CAAnC,EAAsC;MAClC,MAAM1a,MAAM,GAAG,KAAK66C,aAAL,CAAmBplC,MAAnB,EAA2BiF,CAA3B,CAAf;;MACA,IAAI1a,MAAJ,EAAY;QACR,MAAMA,MAAN;MACH;IACJ;EACJ;;EACe,CAAfy6C,eAAe,CAAC73C,GAAD,EAAM;IAClB,KAAK,IAAI6V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,KAAzB,EAAgC,EAAE6H,CAAlC,EAAqC;MACjC,MAAMzY,MAAM,GAAG,KAAK66C,aAAL,CAAmBpiC,CAAnB,EAAsB7V,GAAtB,CAAf;;MACA,IAAI5C,MAAJ,EAAY;QACR,MAAMA,MAAN;MACH;IACJ;EACJ;;EACuB,CAAvBwP,uBAAuB,CAAC+B,WAAD,EAAc;IAClC,KAAK,IAAIkH,CAAC,GAAGlH,WAAW,CAAC9C,WAAzB,EAAsCgK,CAAC,IAAIlH,WAAW,CAAC0K,SAAvD,EAAkE,EAAExD,CAApE,EAAuE;MACnE,KAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7J,MAAzB,EAAiC,EAAE6J,CAAnC,EAAsC;QAClC,MAAM1a,MAAM,GAAG,KAAK66C,aAAL,CAAmBpiC,CAAnB,EAAsBiC,CAAtB,CAAf;;QACA,IAAI1a,MAAJ,EAAY;UACR,MAAMA,MAAN;QACH;MACJ;IACJ;EACJ;;EACoB,CAApBkP,oBAAoB,CAACoC,QAAD,EAAW;IAC5B,KAAK,IAAImH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,KAAzB,EAAgC,EAAE6H,CAAlC,EAAqC;MACjC,KAAK,IAAIiC,CAAC,GAAGpJ,QAAQ,CAAChE,QAAtB,EAAgCoN,CAAC,IAAIpJ,QAAQ,CAAC0K,MAA9C,EAAsD,EAAEtB,CAAxD,EAA2D;QACvD,MAAM1a,MAAM,GAAG,KAAK66C,aAAL,CAAmBpiC,CAAnB,EAAsBiC,CAAtB,CAAf;;QACA,IAAI1a,MAAJ,EAAY;UACR,MAAMA,MAAN;QACH;MACJ;IACJ;EACJ;;EACmB,CAAnB2M,mBAAmB,CAAC2E,QAAD,EAAW;IAC3B,KAAK,IAAImH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,KAAzB,EAAgC,EAAE6H,CAAlC,EAAqC;MACjC,KAAK,IAAIiC,CAAC,GAAGpJ,QAAQ,CAAChE,QAAtB,EAAgCoN,CAAC,IAAIpJ,QAAQ,CAAC0K,MAA9C,EAAsD,EAAEtB,CAAxD,EAA2D;QACvD,MAAM1a,MAAM,GAAG,KAAK66C,aAAL,CAAmBpiC,CAAnB,EAAsBiC,CAAtB,CAAf;;QACA,IAAI1a,MAAJ,EAAY;UACR,MAAM,CAAC,IAAAiD,uBAAA,EAAkBqO,QAAQ,CAAC3O,KAA3B,EAAkC8V,CAAlC,EAAqCiC,CAArC,CAAD,EAA0C1a,MAA1C,CAAN;QACH;MACJ;IACJ;EACJ;;EACsB,CAAtBuO,sBAAsB,CAACgD,WAAD,EAAc;IACjC,KAAK,IAAImJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7J,MAAzB,EAAiC,EAAE6J,CAAnC,EAAsC;MAClC,KAAK,IAAIjC,CAAC,GAAGlH,WAAW,CAAC9C,WAAzB,EAAsCgK,CAAC,IAAIlH,WAAW,CAAC0K,SAAvD,EAAkE,EAAExD,CAApE,EAAuE;QACnE,MAAMzY,MAAM,GAAG,KAAK66C,aAAL,CAAmBpiC,CAAnB,EAAsBiC,CAAtB,CAAf;;QACA,IAAI1a,MAAJ,EAAY;UACR,MAAM,CAAC,IAAAiD,uBAAA,EAAkBsO,WAAW,CAAC5O,KAA9B,EAAqC8V,CAArC,EAAwCiC,CAAxC,CAAD,EAA6C1a,MAA7C,CAAN;QACH;MACJ;IACJ;EACJ;;EACQ,CAAR26C,QAAQ,GAAG;IACR,KAAK,IAAIjgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7J,MAAzB,EAAiC,EAAE6J,CAAnC,EAAsC;MAClC,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,KAAzB,EAAgC,EAAE6H,CAAlC,EAAqC;QACjC,MAAMzY,MAAM,GAAG,KAAK66C,aAAL,CAAmBpiC,CAAnB,EAAsBiC,CAAtB,CAAf;;QACA,IAAI1a,MAAJ,EAAY;UACR,MAAMA,MAAN;QACH;MACJ;IACJ;EACJ;;EACD66C,aAAa,CAACpiC,CAAD,EAAIiC,CAAJ,EAAO;IAChB,IAAI9W,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAK8qC,OAAL,CAAah0B,CAAb,CAAN,MAA2B,IAA3B,IAAmC9W,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAAC6U,CAAD,CAArE;EACH;;AA3JsB;;;;;;;;;;;;;;ACV3B;AACA;AACA;AACA;AACO,MAAMvb,iBAAN,CAAwB;EAC3BgF,WAAW,CAACipB,KAAD,EAAQhiB,KAAR,EAAelJ,OAAf,EAAwB;IAC/B,IAAI2D,EAAJ;;IACA,KAAKuF,KAAL,GAAaA,KAAb;IACA,KAAKlJ,OAAL,GAAeA,OAAf;IACA,KAAKkC,IAAL,GAAYgpB,KAAK,CAAChpB,IAAlB;IACA,KAAKC,OAAL,GAAe,CAACwB,EAAE,GAAGunB,KAAK,CAAC/oB,OAAZ,MAAyB,IAAzB,IAAiCwB,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsD,EAArE;EACH;;EACD4W,QAAQ,GAAG;IACP,OAAO,KAAKrR,KAAZ;EACH;;EACD4xC,OAAO,GAAG;IACN,OAAO,KAAK5xC,KAAZ;EACH;;AAb0B;;;;;;;;;;;;;;;ACA/B;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAXA;AACA;AACA;AACA;AASA,MAAM6xC,WAAW,GAAG,IAAIC,OAAJ,EAApB;;AACO,MAAM/7C,MAAN,CAAa;EAChBgD,WAAW,GAA2C;IAAA,IAA1Cg5C,OAA0C,uEAAhC,EAAgC;IAAA,IAA5BC,mBAA4B,uEAAN,IAAM;IAClD,MAAM;MAAExQ,eAAF;MAAmByQ,qBAAnB;MAA0C7Q,aAA1C;MAAyDyC,SAAzD;MAAoEvlC,0BAApE;MAAgGwhC,cAAhG;MAAgHoS,WAAhH;MAA6Hp0B,gBAA7H;MAA+Iq0B,kBAA/I;MAAmKv0B,oBAAnK;MAAyLw0B,eAAzL;MAA0MtO,iBAA1M;MAA6NuO,YAA7N;MAA2OpO,UAA3O;MAAuPhuC,QAAvP;MAAiQmnB,gBAAjQ;MAAmRk1B,UAAnR;MAA+R9T,cAA/R;MAA+S/gB,oBAA/S;MAAqUF,iBAArU;MAAwV9K,OAAxV;MAAiWD,UAAjW;MAA6W+/B,QAA7W;MAAuXC,QAAvX;MAAiYC,aAAjY;MAAgZ5U,gBAAhZ;MAAka6U,iBAAla;MAAqbC,iBAArb;MAAwcC,iBAAxc;MAA2dhV,aAA3d;MAA0eiV,WAA1e;MAAufC,iBAAvf;MAA0gB5c,kBAA1gB;MAA8hB6c,QAA9hB;MAAwiBC,SAAxiB;MAAmjBC,cAAnjB;MAAmkB3U,qBAAnkB;MAA0lBC;IAA1lB,IAA4mBwT,OAAlnB;;IACA,IAAIC,mBAAJ,EAAyB;MACrBj8C,MAAM,CAACm9C,qBAAP,CAA6BnB,OAA7B;IACH;;IACD,KAAK7b,kBAAL,GAA0B,IAAAid,0CAAA,EAAqBjd,kBAArB,EAAyC,SAAzC,EAAoD,oBAApD,CAA1B;IACA,KAAKsL,eAAL,GAAuB,IAAA2R,0CAAA,EAAqB3R,eAArB,EAAsC,SAAtC,EAAiD,iBAAjD,CAAvB;IACA,KAAKJ,aAAL,GAAqB,IAAA+R,0CAAA,EAAqB/R,aAArB,EAAoC,SAApC,EAA+C,eAA/C,CAArB;IACA,KAAKyC,SAAL,GAAiB,IAAAsP,0CAAA,EAAqBtP,SAArB,EAAgC,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAhC,EAA6D,WAA7D,CAAjB;IACA,KAAKC,iBAAL,GAAyB,IAAAqP,0CAAA,EAAqBrP,iBAArB,EAAwC,SAAxC,EAAmD,mBAAnD,CAAzB;IACA,KAAKxlC,0BAAL,GAAkCA,0BAA0B,KAAK,IAA/B,IAAuCA,0BAA0B,KAAK,KAAK,CAA3E,GAA+EA,0BAA/E,GAA4GvI,MAAM,CAACC,aAAP,CAAqBsI,0BAAnK;IACA,KAAK4zC,WAAL,GAAmB,CAAC,GAAG,IAAAkB,+CAAA,EAA0BlB,WAA1B,EAAuCpoC,KAAK,CAAC8pB,OAA7C,EAAsD,OAAtD,EAA+D,aAA/D,CAAJ,CAAnB;IACA,KAAKif,WAAL,GAAmB,CAAC,GAAG,IAAAO,+CAAA,EAA0BP,WAA1B,EAAuC/oC,KAAK,CAAC8pB,OAA7C,EAAsD,OAAtD,EAA+D,aAA/D,CAAJ,CAAnB;IACA,KAAKhW,oBAAL,GAA4B,IAAAu1B,0CAAA,EAAqBv1B,oBAArB,EAA2C,QAA3C,EAAqD,sBAArD,CAA5B;IACA,KAAKE,gBAAL,GAAwB,IAAAq1B,0CAAA,EAAqBr1B,gBAArB,EAAuC,CAAC,GAAD,EAAM,GAAN,CAAvC,EAAmD,kBAAnD,CAAxB;IACA,KAAK7nB,QAAL,GAAgB,IAAAk9C,0CAAA,EAAqBl9C,QAArB,EAA+B,QAA/B,EAAyC,UAAzC,CAAhB;IACA,KAAKmnB,gBAAL,GAAwB,IAAA+1B,0CAAA,EAAqB/1B,gBAArB,EAAuC,CAAC,UAAD,EAAa,KAAb,CAAvC,EAA4D,kBAA5D,CAAxB;IACA,KAAKk1B,UAAL,GAAkB,IAAAa,0CAAA,EAAqBb,UAArB,EAAiC,QAAjC,EAA2C,YAA3C,CAAlB;IACA,KAAKQ,iBAAL,GAAyB,IAAAK,0CAAA,EAAqBL,iBAArB,EAAwC,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,CAAxC,EAA6D,mBAA7D,CAAzB;IACA,KAAKr1B,oBAAL,GAA4B,IAAA01B,0CAAA,EAAqB11B,oBAArB,EAA2C,CAAC,GAAD,EAAM,GAAN,CAA3C,EAAuD,sBAAvD,CAA5B;IACA,KAAKF,iBAAL,GAAyB,IAAA41B,0CAAA,EAAqB51B,iBAArB,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,mBAApD,CAAzB;IACA,KAAK0mB,UAAL,GAAkB,IAAAkP,0CAAA,EAAqBlP,UAArB,EAAiC,QAAjC,EAA2C,YAA3C,CAAlB;IACA,KAAKmO,eAAL,GAAuB,CAAC,IAAIA,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyDA,eAAzD,GAA2Er8C,MAAM,CAACC,aAAP,CAAqBo8C,eAApG,CAAD,CAAvB;IACA,KAAKxU,aAAL,GAAqB,IAAAuV,0CAAA,EAAqBvV,aAArB,EAAoC,SAApC,EAA+C,eAA/C,CAArB;IACA,KAAKuU,kBAAL,GAA0B,IAAAgB,0CAAA,EAAqBhB,kBAArB,EAAyC,SAAzC,EAAoD,oBAApD,CAA1B;IACA,KAAKI,QAAL,GAAgB,IAAAY,0CAAA,EAAqBZ,QAArB,EAA+B,QAA/B,EAAyC,UAAzC,CAAhB;IACA,IAAAc,+CAAA,EAA0B,KAAKd,QAA/B,EAAyC,UAAzC,EAAqD,CAArD;IACA,IAAAe,8CAAA,EAAyB,KAAKf,QAA9B,EAAwC,UAAxC,EAAoD,GAApD;IACA,KAAKG,iBAAL,GAAyB,IAAAS,0CAAA,EAAqBT,iBAArB,EAAwC,QAAxC,EAAkD,mBAAlD,CAAzB;IACA,IAAAW,+CAAA,EAA0B,KAAKX,iBAA/B,EAAkD,mBAAlD,EAAuE,CAAvE;IACA,KAAK7U,gBAAL,GAAwB,IAAAsV,0CAAA,EAAqBtV,gBAArB,EAAuC,QAAvC,EAAiD,kBAAjD,CAAxB;IACA,IAAAwV,+CAAA,EAA0B,KAAKxV,gBAA/B,EAAiD,kBAAjD,EAAqE,CAArE;IACA,KAAKoV,cAAL,GAAsB,IAAAE,0CAAA,EAAqBF,cAArB,EAAqC,SAArC,EAAgD,gBAAhD,CAAtB;IACA,KAAKF,QAAL,GAAgB,IAAAI,0CAAA,EAAqBJ,QAArB,EAA+B,SAA/B,EAA0C,UAA1C,CAAhB;IACA,KAAKd,qBAAL,GAA6BA,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,KAAK,KAAK,CAAjE,GAAqEA,qBAArE,GAA6Fl8C,MAAM,CAACC,aAAP,CAAqBi8C,qBAA/I;IACA,KAAKQ,aAAL,GAAqB,IAAAU,0CAAA,EAAqBV,aAArB,EAAoC,UAApC,EAAgD,eAAhD,CAArB;IACA,KAAKE,iBAAL,GAAyB,IAAAQ,0CAAA,EAAqBR,iBAArB,EAAwC,UAAxC,EAAoD,mBAApD,CAAzB;IACA,KAAKC,iBAAL,GAAyB,IAAAO,0CAAA,EAAqBP,iBAArB,EAAwC,UAAxC,EAAoD,mBAApD,CAAzB;IACA,KAAKn0C,kBAAL,GAA0B/K,0BAAA,CAAa6/C,WAAb,CAAyB,KAAKt9C,QAA9B,CAA1B;IACA,KAAK+mB,YAAL,GAAoB,KAAKve,kBAAL,CAAwBuxC,iBAAxB,EAApB;IACA,KAAKwC,QAAL,GAAgB,IAAAY,+CAAA,EAA0BZ,QAA1B,EAAoCgB,oCAApC,EAA0D,OAA1D,EAAmE,UAAnE,CAAhB;IACA,KAAKnB,YAAL,GAAoB,IAAAc,0CAAA,EAAqBd,YAArB,EAAmC,SAAnC,EAA8C,cAA9C,CAApB;IACA,KAAKW,SAAL,GAAiB,IAAAG,0CAAA,EAAqBH,SAArB,EAAgC,QAAhC,EAA0C,WAA1C,CAAjB;IACA,KAAK1U,qBAAL,GAA6B,IAAA6U,0CAAA,EAAqB7U,qBAArB,EAA4C,SAA5C,EAAuD,uBAAvD,CAA7B;IACA,KAAKC,YAAL,GAAoB,IAAA4U,0CAAA,EAAqB5U,YAArB,EAAmC,SAAnC,EAA8C,cAA9C,CAApB;IACA,KAAKC,cAAL,GAAsB,IAAA2U,0CAAA,EAAqB3U,cAArB,EAAqC,SAArC,EAAgD,gBAAhD,CAAtB;IACA,IAAA6U,+CAAA,EAA0B,KAAKL,SAA/B,EAA0C,WAA1C,EAAuD,CAAvD;IACA,KAAKvgC,OAAL,GAAe,IAAA0gC,0CAAA,EAAqB1gC,OAArB,EAA8B,QAA9B,EAAwC,SAAxC,CAAf;IACA,IAAA4gC,+CAAA,EAA0B,KAAK5gC,OAA/B,EAAwC,SAAxC,EAAmD,CAAnD;IACA,KAAKD,UAAL,GAAkB,IAAA2gC,0CAAA,EAAqB3gC,UAArB,EAAiC,QAAjC,EAA2C,YAA3C,CAAlB;IACA,KAAKstB,cAAL,GAAsB,KAAK2T,mBAAL,CAAyB3T,cAAzB,CAAtB;IACA,IAAAuT,+CAAA,EAA0B,KAAK7gC,UAA/B,EAA2C,YAA3C,EAAyD,CAAzD;IACAq/B,WAAW,CAAClyB,GAAZ,CAAgB,IAAhB,EAAsB;MAClB+zB,uBAAuB,EAAE,IAAAC,4CAAA,EAAwB,KAAKrB,UAA7B;IADP,CAAtB;IAGA,IAAAsB,0DAAA,EAAqC;MAAE5zC,KAAK,EAAE,KAAK8d,gBAAd;MAAgC1hB,IAAI,EAAE;IAAtC,CAArC,EAAiG;MAAE4D,KAAK,EAAE,KAAK4d,oBAAd;MAAoCxhB,IAAI,EAAE;IAA1C,CAAjG,EAAqK;MAAE4D,KAAK,EAAE,KAAK8yC,iBAAd;MAAiC12C,IAAI,EAAE;IAAvC,CAArK;IACA,IAAAw3C,0DAAA,EAAqC;MAAE5zC,KAAK,EAAE,KAAKud,iBAAd;MAAiCnhB,IAAI,EAAE;IAAvC,CAArC,EAAmG;MAAE4D,KAAK,EAAE,KAAKyd,oBAAd;MAAoCrhB,IAAI,EAAE;IAA1C,CAAnG;EACH;;EACDq3C,mBAAmB,CAAC3T,cAAD,EAAiB;IAChC,MAAM+T,eAAe,GAAG,CAAC,GAAG,IAAAT,+CAAA,EAA0BtT,cAA1B,EAA0Ch2B,KAAK,CAAC8pB,OAAhD,EAAyD,OAAzD,EAAkE,gBAAlE,CAAJ,CAAxB;IACAigB,eAAe,CAACtyC,OAAhB,CAAyByS,GAAD,IAAS;MAC7B,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;QACzB,MAAM,IAAI1f,gCAAJ,CAA6B,UAA7B,EAAyC,gBAAzC,CAAN;MACH;;MACD,IAAI0f,GAAG,KAAK,EAAZ,EAAgB;QACZ,MAAM,IAAIM,wBAAJ,CAAqB,gBAArB,CAAN;MACH;IACJ,CAPD;IAQA,OAAOu/B,eAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EAC+B,IAAvBH,uBAAuB,GAAG;IAC1B,OAAO7B,WAAW,CAACvyB,GAAZ,CAAgB,IAAhB,EAAsBo0B,uBAA7B;EACH;;EACDI,SAAS,GAAG;IACR,OAAOC,wBAAwB,CAAC,IAAD,CAA/B;EACH;;EACDC,WAAW,CAACC,IAAD,EAAO;IACd,MAAMC,YAAY,GAAG39C,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkB,KAAKm8C,SAAL,EAAlB,EAAoCG,IAApC,CAArB;IACAl+C,MAAM,CAACm9C,qBAAP,CAA6Be,IAA7B;IACA,OAAO,IAAIl+C,MAAJ,CAAWm+C,YAAX,EAAyB,KAAzB,CAAP;EACH;;EAC2B,OAArBhB,qBAAqB,CAACnB,OAAD,EAAU;IAClCh8C,MAAM,CAACo+C,oBAAP,CAA4BpC,OAAO,CAACE,qBAApC,EAA2D,uBAA3D,EAAoF,KAApF;EACH,CA1Fe,CA2FhB;;;EAC2B,OAApBkC,oBAAoB,CAACC,UAAD,EAAa//B,SAAb,EAAwBggC,WAAxB,EAAqCC,eAArC,EAAsD;IAC7E,IAAIF,UAAU,KAAKt7C,SAAnB,EAA8B;MAC1B,IAAIw7C,eAAe,KAAKx7C,SAAxB,EAAmC;QAC/By7C,OAAO,CAACC,IAAR,CAAc,GAAEngC,SAAU,+BAA8BggC,WAAY,EAApE;MACH,CAFD,MAGK;QACDE,OAAO,CAACC,IAAR,CAAc,GAAEngC,SAAU,+BAA8BggC,WAAY,gBAAeC,eAAgB,EAAnG;MACH;IACJ;EACJ;;AArGe;;;AAuGpBv+C,MAAM,CAACC,aAAP,GAAuB;EACnBwrC,eAAe,EAAE,KADE;EAEnByQ,qBAAqB,EAAE,EAFJ;EAGnBnS,cAAc,EAAE,CAAC,GAAD,CAHG;EAInBsB,aAAa,EAAE,KAJI;EAKnByC,SAAS,EAAE,OALQ;EAMnBvlC,0BAA0B,EAAE,IAAIm2C,uCAAJ,EANT;EAOnBvC,WAAW,EAAE,CAAC,YAAD,EAAe,UAAf,CAPM;EAQnBp0B,gBAAgB,EAAE,GARC;EASnBq0B,kBAAkB,EAAE,KATD;EAUnBv0B,oBAAoB,EAAE,GAVH;EAWnBw0B,eAAe,EAAE,EAXE;EAYnBtO,iBAAiB,EAAE,KAZA;EAanB7tC,QAAQ,EAAE,MAbS;EAcnBmnB,gBAAgB,EAAE,UAdC;EAenBk1B,UAAU,EAAE,EAfO;EAgBnBD,YAAY,EAAE,KAhBK;EAiBnBpO,UAAU,EAAE,IAjBO;EAkBnBzF,cAAc,EAAE,IAlBG;EAmBnB/gB,oBAAoB,EAAE,GAnBH;EAoBnBF,iBAAiB,EAAE,GApBA;EAqBnB9K,OAAO,EAAE,KArBU;EAsBnBD,UAAU,EAAE,KAtBO;EAuBnB+/B,QAAQ,EAAE,EAvBS;EAwBnBC,QAAQ,EAAE;IAAEkC,IAAI,EAAE,IAAR;IAAcC,KAAK,EAAE,EAArB;IAAyBC,GAAG,EAAE;EAA9B,CAxBS;EAyBnBnC,aAAa,EAAEoC,uCAzBI;EA0BnBhX,gBAAgB,EAAE,KA1BC;EA2BnB6U,iBAAiB,EAAE,EA3BA;EA4BnB9U,aAAa,EAAE,IA5BI;EA6BnB+U,iBAAiB,EAAEmC,gCA7BA;EA8BnBlC,iBAAiB,EAAEmC,gCA9BA;EA+BnBlC,WAAW,EAAE,CAAC,OAAD,EAAU,cAAV,CA/BM;EAgCnBC,iBAAiB,EAAE,EAhCA;EAiCnBE,SAAS,EAAE,EAjCQ;EAkCnB1U,qBAAqB,EAAE,KAlCJ;EAmCnBC,YAAY,EAAE,IAnCK;EAoCnB0U,cAAc,EAAE,KApCG;EAqCnBF,QAAQ,EAAE,KArCS;EAsCnB7c,kBAAkB,EAAE;AAtCD,CAAvB;;AAwCA,SAAS6d,wBAAT,CAAkCiB,aAAlC,EAAiD;EAC7C,IAAIv6C,EAAJ,CAD6C,CAE7C;;;EACA,MAAMyQ,GAAG,GAAG,EAAZ;;EACA,KAAK,MAAM6I,GAAX,IAAkBhe,MAAM,CAACC,aAAzB,EAAwC;IACpC,MAAMge,GAAG,GAAG,CAACvZ,EAAE,GAAGu6C,aAAa,CAACjhC,GAAD,CAAnB,MAA8B,IAA9B,IAAsCtZ,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2D1E,MAAM,CAACC,aAAP,CAAqB+d,GAArB,CAAvE;;IACA,IAAIjK,KAAK,CAAC8pB,OAAN,CAAc5f,GAAd,CAAJ,EAAwB;MACpB9I,GAAG,CAAC6I,GAAD,CAAH,GAAW,CAAC,GAAGC,GAAJ,CAAX;IACH,CAFD,MAGK;MACD9I,GAAG,CAAC6I,GAAD,CAAH,GAAWC,GAAX;IACH;EACJ;;EACD,OAAO9I,GAAP;AACH;;AACM,SAAS+pC,gBAAT,GAA4B;EAC/B,OAAOlB,wBAAwB,CAAC,EAAD,CAA/B;AACH,C;;;;;;;;;;;;;;;;;ACzKD;;AACA;;AALA;AACA;AACA;AACA;AAGA;AACO,SAASZ,oBAAT,CAA8BiB,UAA9B,EAA0ChgC,YAA1C,EAAwDC,SAAxD,EAAmE;EACtE,IAAI,OAAO+/B,UAAP,KAAsB,WAA1B,EAAuC;IACnC,OAAOr+C,cAAA,CAAOC,aAAP,CAAqBqe,SAArB,CAAP;EACH,CAFD,MAGK,IAAI,OAAOD,YAAP,KAAwB,QAA5B,EAAsC;IACvC,IAAI,OAAOggC,UAAP,KAAsBhgC,YAA1B,EAAwC;MACpC,OAAOggC,UAAP;IACH,CAFD,MAGK;MACD,MAAM,IAAI9/C,gCAAJ,CAA6B8f,YAA7B,EAA2CC,SAA3C,CAAN;IACH;EACJ,CAPI,MAQA;IACD,IAAID,YAAY,CAAC2uB,QAAb,CAAsBqR,UAAtB,CAAJ,EAAuC;MACnC,OAAOA,UAAP;IACH,CAFD,MAGK;MACD,MAAM,IAAI//C,gCAAJ,CAA6B+f,YAAY,CAACxY,GAAb,CAAkBoY,GAAD,IAAU,IAAGA,GAAI,GAAlC,EAAsCmN,IAAtC,CAA2C,GAA3C,CAA7B,EAA8E9M,SAA9E,CAAN;IACH;EACJ;AACJ;;AACM,SAASg/B,yBAAT,CAAmCrzC,KAAnC,EAA0CqU,SAA1C,EAAqDE,OAArD,EAA8D;EACjE,IAAIvU,KAAK,GAAGuU,OAAZ,EAAqB;IACjB,MAAM,IAAIpgB,gCAAJ,CAA6BkgB,SAA7B,EAAwCE,OAAxC,CAAN;EACH;AACJ;;AACM,SAAS++B,wBAAT,CAAkCtzC,KAAlC,EAAyCqU,SAAzC,EAAoDG,OAApD,EAA6D;EAChE,IAAIxU,KAAK,GAAGwU,OAAZ,EAAqB;IACjB,MAAM,IAAItgB,8BAAJ,CAA2BmgB,SAA3B,EAAsCG,OAAtC,CAAN;EACH;AACJ,C,CACD;;;AACO,SAAS4+B,yBAAT,CAAmCgB,UAAnC,EAA+Cc,SAA/C,EAA0D9gC,YAA1D,EAAwEC,SAAxE,EAAmF;EACtF,IAAI6gC,SAAS,CAACd,UAAD,CAAb,EAA2B;IACvB,OAAOA,UAAP;EACH,CAFD,MAGK,IAAI,OAAOA,UAAP,KAAsB,WAA1B,EAAuC;IACxC,OAAOr+C,cAAA,CAAOC,aAAP,CAAqBqe,SAArB,CAAP;EACH,CAFI,MAGA;IACD,MAAM,IAAI/f,gCAAJ,CAA6B8f,YAA7B,EAA2CC,SAA3C,CAAN;EACH;AACJ;;AACM,SAASu/B,oCAAT,GAAyD;EAC5D,MAAMuB,SAAS,GAAG,IAAI/vB,GAAJ,EAAlB;;EAD4D,kCAAR4V,MAAQ;IAARA,MAAQ;EAAA;;EAE5DA,MAAM,CAACz5B,OAAP,CAAgB6zC,KAAD,IAAW;IACtB,MAAMC,KAAK,GAAGF,SAAS,CAAC71B,GAAV,CAAc81B,KAAK,CAACp1C,KAApB,KAA8B,EAA5C;IACAq1C,KAAK,CAAC/3C,IAAN,CAAW83C,KAAK,CAACh5C,IAAjB;IACA+4C,SAAS,CAACx1B,GAAV,CAAcy1B,KAAK,CAACp1C,KAApB,EAA2Bq1C,KAA3B;EACH,CAJD;EAKA,MAAMC,UAAU,GAAG,EAAnB;;EACA,KAAK,MAAMjI,KAAX,IAAoB8H,SAAS,CAACtwC,MAAV,EAApB,EAAwC;IACpC,IAAIwoC,KAAK,CAACxlC,MAAN,GAAe,CAAnB,EAAsB;MAClBytC,UAAU,CAACh4C,IAAX,CAAgB+vC,KAAhB;IACH;EACJ;;EACD,IAAIiI,UAAU,CAACztC,MAAX,GAAoB,CAAxB,EAA2B;IACvBytC,UAAU,CAAC/zC,OAAX,CAAmB8rC,KAAK,IAAIA,KAAK,CAACjiB,IAAN,EAA5B;IACA,MAAMmqB,UAAU,GAAGD,UAAU,CAAC15C,GAAX,CAAeyxC,KAAK,IAAK,IAAGA,KAAM,GAAlC,EAAsClsB,IAAtC,CAA2C,IAA3C,CAAnB;IACA,MAAM,IAAIhpB,KAAJ,CAAW,yDAAwDo9C,UAAW,EAA9E,CAAN;EACH;AACJ,C,CACD;;;AACO,SAASC,iBAAT,CAA2BpB,UAA3B,EAAuChgC,YAAvC,EAAqDC,SAArD,EAAgE;EACnE,IAAI,OAAO+/B,UAAP,KAAsBhgC,YAA1B,EAAwC;IACpC,MAAM,IAAI9f,gCAAJ,CAA6B8f,YAA7B,EAA2CC,SAA3C,CAAN;EACH;AACJ,C;;;;;;;;;;;;;AC1ED;AACA;AACA;AACA;AACO,SAASwgC,sBAAT,CAAgCY,cAAhC,EAAgDC,UAAhD,EAA4DC,UAA5D,EAAwE;EAC3EF,cAAc,GAAGA,cAAc,CAAC39B,OAAf,CAAuB,QAAvB,EAAiC,GAAjC,EAAsCynB,IAAtC,GAA6CgC,WAA7C,EAAjB;EACA,IAAIqU,SAAS,GAAGH,cAAc,CAACI,SAAf,CAAyBJ,cAAc,CAAC5tC,MAAf,GAAwB,CAAjD,CAAhB;;EACA,IAAI+tC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,IAAxC,EAA8C;IAC1CH,cAAc,GAAGA,cAAc,CAACI,SAAf,CAAyB,CAAzB,EAA4BJ,cAAc,CAAC5tC,MAAf,GAAwB,CAApD,EAAuD03B,IAAvD,EAAjB;EACH,CAFD,MAGK;IACDqW,SAAS,GAAGH,cAAc,CAACI,SAAf,CAAyBJ,cAAc,CAAC5tC,MAAf,GAAwB,CAAjD,CAAZ;;IACA,IAAI+tC,SAAS,KAAK,GAAd,IAAqBA,SAAS,KAAK,GAAvC,EAA4C;MACxCH,cAAc,GAAGA,cAAc,CAACI,SAAf,CAAyB,CAAzB,EAA4BJ,cAAc,CAAC5tC,MAAf,GAAwB,CAApD,EAAuD03B,IAAvD,EAAjB;IACH,CAFD,MAGK;MACDqW,SAAS,GAAG98C,SAAZ;IACH;EACJ;;EACD,MAAMg9C,SAAS,GAAGL,cAAc,CAAC/+B,KAAf,CAAqB,SAArB,CAAlB;;EACA,IAAIo/B,SAAS,CAACjuC,MAAV,IAAoB,CAApB,IAAyBiuC,SAAS,CAACA,SAAS,CAACjuC,MAAV,GAAmB,CAApB,CAAT,CAAgCk7B,QAAhC,CAAyC,GAAzC,CAA7B,EAA4E;IACxE+S,SAAS,CAACA,SAAS,CAACjuC,MAAV,GAAmB,CAApB,CAAT,GAAkCiuC,SAAS,CAACA,SAAS,CAACjuC,MAAV,GAAmB,CAApB,CAAT,GAAkC,GAAlC,GAAwCiuC,SAAS,CAACA,SAAS,CAACjuC,MAAV,GAAmB,CAApB,CAAnF;IACAiuC,SAAS,CAAC9oB,GAAV;EACH;;EACD,MAAM+oB,SAAS,GAAGD,SAAS,CAACA,SAAS,CAACjuC,MAAV,GAAmB,CAApB,CAAT,CAAgC6O,KAAhC,CAAsC,GAAtC,CAAlB;;EACA,IAAIk/B,SAAS,KAAK98C,SAAlB,EAA6B;IACzBi9C,SAAS,CAACz4C,IAAV,CAAes4C,SAAf;EACH;;EACD,IAAIE,SAAS,CAACjuC,MAAV,KAAqB,CAAzB,EAA4B;IACxB,OAAOmuC,kBAAkB,CAACD,SAAD,EAAYJ,UAAZ,CAAzB;EACH;;EACD,IAAII,SAAS,CAACluC,MAAV,KAAqB,CAAzB,EAA4B;IACxB,OAAOouC,kBAAkB,CAACH,SAAD,EAAYJ,UAAZ,CAAzB;EACH;;EACD,MAAMQ,UAAU,GAAGD,kBAAkB,CAACH,SAAS,CAACx1B,KAAV,CAAgB,CAAhB,EAAmBw1B,SAAS,CAACjuC,MAAV,GAAmB,CAAtC,CAAD,EAA2C6tC,UAA3C,CAArC;EACA,MAAMS,UAAU,GAAGH,kBAAkB,CAACD,SAAD,EAAYJ,UAAZ,CAArC;;EACA,IAAIO,UAAU,KAAKp9C,SAAnB,EAA8B;IAC1B,OAAOA,SAAP;EACH,CAFD,MAGK,IAAIq9C,UAAU,KAAKr9C,SAAnB,EAA8B;IAC/B,OAAOA,SAAP;EACH,CAFI,MAGA;IACD,OAAOvC,MAAM,CAACoB,MAAP,CAAcpB,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkBu+C,UAAlB,CAAd,EAA6CC,UAA7C,CAAP;EACH;AACJ;;AACM,MAAMC,qBAAqB,GAAG,kBAA9B;;;AACP,SAASJ,kBAAT,CAA4BD,SAA5B,EAAuCJ,UAAvC,EAAmD;EAC/C,MAAMU,SAAS,GAAG,IAAlB;;EACA,IAAIV,UAAU,KAAK78C,SAAnB,EAA8B;IAC1B,OAAOA,SAAP;EACH;;EACD68C,UAAU,GAAGA,UAAU,CAACpU,WAAX,EAAb;;EACA,IAAIoU,UAAU,CAAClW,QAAX,CAAoB,OAApB,CAAJ,EAAkC;IAC9BkW,UAAU,GAAGA,UAAU,CAACE,SAAX,CAAqB,CAArB,EAAwBF,UAAU,CAAC9tC,MAAX,GAAoB,CAA5C,EAA+C03B,IAA/C,EAAb;EACH,CAFD,MAGK,IAAIoW,UAAU,CAAClW,QAAX,CAAoB,KAApB,CAAJ,EAAgC;IACjCkW,UAAU,GAAGA,UAAU,CAACE,SAAX,CAAqB,CAArB,EAAwBF,UAAU,CAAC9tC,MAAX,GAAoB,CAA5C,EAA+C03B,IAA/C,EAAb;EACH;;EACD,MAAM+W,WAAW,GAAGX,UAAU,CAACj/B,KAAX,CAAiB,GAAjB,CAApB;EACA,IAAI6/B,IAAI,GAAGz9C,SAAX;;EACA,IAAIi9C,SAAS,CAACA,SAAS,CAACluC,MAAV,GAAmB,CAApB,CAAT,KAAoC,IAApC,IAA4CkuC,SAAS,CAACA,SAAS,CAACluC,MAAV,GAAmB,CAApB,CAAT,KAAoC,GAApF,EAAyF;IACrF0uC,IAAI,GAAG,KAAP;IACAR,SAAS,CAAC/oB,GAAV;EACH,CAHD,MAIK,IAAI+oB,SAAS,CAACA,SAAS,CAACluC,MAAV,GAAmB,CAApB,CAAT,KAAoC,IAApC,IAA4CkuC,SAAS,CAACA,SAAS,CAACluC,MAAV,GAAmB,CAApB,CAAT,KAAoC,GAApF,EAAyF;IAC1F0uC,IAAI,GAAG,IAAP;IACAR,SAAS,CAAC/oB,GAAV;EACH;;EACD,IAAI+oB,SAAS,CAACluC,MAAV,KAAqByuC,WAAW,CAACzuC,MAArC,EAA6C;IACzC,OAAO/O,SAAP;EACH;;EACD,MAAM09C,SAAS,GAAGF,WAAW,CAACG,OAAZ,CAAoB,IAApB,CAAlB;EACA,MAAMC,WAAW,GAAGJ,WAAW,CAACG,OAAZ,CAAoB,IAApB,CAApB;EACA,MAAME,WAAW,GAAGL,WAAW,CAACM,SAAZ,CAAsBjrC,IAAI,IAAIyqC,qBAAqB,CAACv+B,IAAtB,CAA2BlM,IAA3B,CAA9B,CAApB;EACA,MAAMkrC,UAAU,GAAGL,SAAS,KAAK,CAAC,CAAf,GAAmBT,SAAS,CAACS,SAAD,CAA5B,GAA0C,GAA7D;;EACA,IAAI,CAAC,QAAQ3+B,IAAR,CAAag/B,UAAb,CAAL,EAA+B;IAC3B,OAAO/9C,SAAP;EACH;;EACD,IAAIg+C,KAAK,GAAGrnC,MAAM,CAAConC,UAAD,CAAlB;;EACA,IAAIN,IAAI,KAAKz9C,SAAb,EAAwB;IACpB,IAAIg+C,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;MACzB,OAAOh+C,SAAP;IACH;;IACDg+C,KAAK,GAAGA,KAAK,GAAG,EAAhB;;IACA,IAAIP,IAAJ,EAAU;MACNO,KAAK,GAAGA,KAAK,GAAG,EAAhB;IACH;EACJ;;EACD,MAAMC,YAAY,GAAGL,WAAW,KAAK,CAAC,CAAjB,GAAqBX,SAAS,CAACW,WAAD,CAA9B,GAA8C,GAAnE;;EACA,IAAI,CAAC,QAAQ7+B,IAAR,CAAak/B,YAAb,CAAL,EAAiC;IAC7B,OAAOj+C,SAAP;EACH;;EACD,MAAMk+C,OAAO,GAAGvnC,MAAM,CAACsnC,YAAD,CAAtB;EACA,MAAME,YAAY,GAAGN,WAAW,KAAK,CAAC,CAAjB,GAAqBZ,SAAS,CAACY,WAAD,CAA9B,GAA8C,GAAnE;;EACA,IAAI,CAAC,gBAAgB9+B,IAAhB,CAAqBo/B,YAArB,CAAL,EAAyC;IACrC,OAAOn+C,SAAP;EACH;;EACD,MAAMo+C,OAAO,GAAG9mC,IAAI,CAAC+mC,KAAL,CAAW1nC,MAAM,CAACwnC,YAAD,CAAN,GAAuBZ,SAAlC,IAA+CA,SAA/D;EACA,OAAO;IAAES,KAAF;IAASE,OAAT;IAAkBE;EAAlB,CAAP;AACH;;AACD,SAASjB,kBAAT,CAA4BH,SAA5B,EAAuCJ,UAAvC,EAAmD;EAC/C,IAAIA,UAAU,KAAK58C,SAAnB,EAA8B;IAC1B,OAAOA,SAAP;EACH;;EACD,MAAMw9C,WAAW,GAAGZ,UAAU,CAACnU,WAAX,GAAyB7qB,KAAzB,CAA+B,SAA/B,CAApB;;EACA,IAAIo/B,SAAS,CAACjuC,MAAV,KAAqByuC,WAAW,CAACzuC,MAArC,EAA6C;IACzC,OAAO/O,SAAP;EACH;;EACD,MAAMs+C,UAAU,GAAGd,WAAW,CAACG,OAAZ,CAAoB,IAApB,CAAnB;EACA,MAAMY,QAAQ,GAAGf,WAAW,CAACG,OAAZ,CAAoB,IAApB,CAAjB;EACA,MAAMa,aAAa,GAAGhB,WAAW,CAACG,OAAZ,CAAoB,MAApB,CAAtB;EACA,MAAMc,cAAc,GAAGjB,WAAW,CAACG,OAAZ,CAAoB,IAApB,CAAvB;;EACA,IAAI,EAAEW,UAAU,IAAItB,SAAhB,KAA8B,EAAEuB,QAAQ,IAAIvB,SAAd,CAA9B,IACC,EAAEwB,aAAa,IAAIxB,SAAnB,KAAiC,EAAEyB,cAAc,IAAIzB,SAApB,CADtC,EACuE;IACnE,OAAOh9C,SAAP;EACH;;EACD,IAAIw+C,aAAa,IAAIxB,SAAjB,IAA8ByB,cAAc,IAAIzB,SAApD,EAA+D;IAC3D,OAAOh9C,SAAP;EACH;;EACD,IAAI47C,IAAJ;;EACA,IAAI4C,aAAa,IAAIxB,SAArB,EAAgC;IAC5B,MAAM0B,UAAU,GAAG1B,SAAS,CAACwB,aAAD,CAA5B;;IACA,IAAI,QAAQz/B,IAAR,CAAa2/B,UAAb,CAAJ,EAA8B;MAC1B9C,IAAI,GAAGjlC,MAAM,CAAC+nC,UAAD,CAAb;;MACA,IAAI9C,IAAI,GAAG,IAAP,IAAeA,IAAI,GAAG,IAA1B,EAAgC;QAC5B,OAAO57C,SAAP;MACH;IACJ,CALD,MAMK;MACD,OAAOA,SAAP;IACH;EACJ,CAXD,MAYK;IACD,MAAM0+C,UAAU,GAAG1B,SAAS,CAACyB,cAAD,CAA5B;;IACA,IAAI,QAAQ1/B,IAAR,CAAa2/B,UAAb,CAAJ,EAA8B;MAC1B9C,IAAI,GAAGjlC,MAAM,CAAC+nC,UAAD,CAAb;;MACA,IAAI9C,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAvB,EAA2B;QACvB,OAAO57C,SAAP;MACH;IACJ,CALD,MAMK;MACD,OAAOA,SAAP;IACH;EACJ;;EACD,MAAM2+C,WAAW,GAAG3B,SAAS,CAACsB,UAAD,CAA7B;;EACA,IAAI,CAAC,QAAQv/B,IAAR,CAAa4/B,WAAb,CAAL,EAAgC;IAC5B,OAAO3+C,SAAP;EACH;;EACD,MAAM67C,KAAK,GAAGllC,MAAM,CAACgoC,WAAD,CAApB;EACA,MAAMC,SAAS,GAAG5B,SAAS,CAACuB,QAAD,CAA3B;;EACA,IAAI,CAAC,QAAQx/B,IAAR,CAAa6/B,SAAb,CAAL,EAA8B;IAC1B,OAAO5+C,SAAP;EACH;;EACD,MAAM87C,GAAG,GAAGnlC,MAAM,CAACioC,SAAD,CAAlB;EACA,OAAO;IAAEhD,IAAF;IAAQC,KAAR;IAAeC;EAAf,CAAP;AACH,C;;;;;;;;;;;;;;;;;;;;;ACxJD;;AAJA;AACA;AACA;AACA;AAEA,MAAM+C,OAAO,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAhB;AACA,MAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,CAApB;AACA,MAAMC,kBAAkB,GAAG,EAA3B;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAMC,aAAa,GAAG,EAAtB,C,CACA;;AACO,SAASvE,oBAAT,CAA8Bl5C,GAA9B,EAAmC;EACtC,IAAIA,GAAG,KAAK,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA/C,CAAP,EAAmE;IAC/D,OAAO,UAAUA,GAAV,IAAiB,OAAOA,GAAG,CAACo6C,IAAX,KAAoB,QAArC,IAAiD,WAAWp6C,GAA5D,IAAmE,OAAOA,GAAG,CAACq6C,KAAX,KAAqB,QAAxF,IAAoG,SAASr6C,GAA7G,IAAoH,OAAOA,GAAG,CAACs6C,GAAX,KAAmB,QAA9I;EACH,CAFD,MAGK;IACD,OAAO,KAAP;EACH;AACJ,C,CACD;;;AACO,SAASoD,oBAAT,CAA8B19C,GAA9B,EAAmC;EACtC,IAAIA,GAAG,KAAK,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA/C,CAAP,EAAmE;IAC/D,OAAO,WAAWA,GAAX,IAAkB,OAAOA,GAAG,CAACw8C,KAAX,KAAqB,QAAvC,IAAmD,aAAax8C,GAAhE,IAAuE,OAAOA,GAAG,CAAC08C,OAAX,KAAuB,QAA9F,IAA0G,aAAa18C,GAAvH,IAA8H,OAAOA,GAAG,CAAC48C,OAAX,KAAuB,QAA5J;EACH,CAFD,MAGK;IACD,OAAO,KAAP;EACH;AACJ;;AACM,MAAMe,OAAO,GAAG;EAAEvD,IAAI,EAAE,IAAR;EAAcC,KAAK,EAAE,EAArB;EAAyBC,GAAG,EAAE;AAA9B,CAAhB;;;AACA,MAAMsD,cAAN,CAAqB;EACxBn/C,WAAW,CAACqF,MAAD,EAAS;IAChB,KAAKA,MAAL,GAAcA,MAAd;IACA,KAAK+5C,oBAAL,GAA4B,KAAKC,oBAAL,CAA0Bh6C,MAAM,CAACo0C,QAAjC,CAA5B;IACA,KAAK6F,YAAL,GAAoB,KAAKC,YAAL,CAAkBL,OAAlB,CAApB;IACA,KAAK5F,YAAL,GAAoBj0C,MAAM,CAACi0C,YAA3B,CAJgB,CAKhB;IACA;IACA;IACA;;IACA,IAAI,CAAC,KAAKA,YAAN,IAAsB,KAAK,KAAKiG,YAAL,CAAkB;MAAE5D,IAAI,EAAE,IAAR;MAAcC,KAAK,EAAE,CAArB;MAAwBC,GAAG,EAAE;IAA7B,CAAlB,CAA/B,EAAqF;MACjF,KAAK2D,aAAL,GAAqB,KAAKC,kBAAL,CAAwB,CAAxB,EAA2B9D,IAAhD;IACH,CAFD,MAGK;MACD,KAAK6D,aAAL,GAAqB,KAAKC,kBAAL,CAAwB,CAAxB,EAA2B9D,IAAhD;IACH;;IACD,KAAKjC,aAAL,GAAqBr0C,MAAM,CAACq0C,aAA5B;EACH;;EACDgG,eAAe,CAACC,SAAD,EAAY;IACvB,OAAQA,SAAS,IAAI,KAAKL,YAAnB,IAAqCK,SAAS,IAAI,CAAlD,GAAuDA,SAAvD,GAAmE5/C,SAA1E;EACH;;EACDmmC,sBAAsB,CAACwW,cAAD,EAAiB;IACnC,MAAM;MAAEkD,QAAF;MAAYjD,UAAU,GAAG,EAAzB;MAA6BC,UAAU,GAAG;IAA1C,IAAiD,KAAKiD,8BAAL,CAAoCnD,cAApC,CAAvD;;IACA,IAAIkD,QAAQ,KAAK7/C,SAAjB,EAA4B;MACxB,OAAOA,SAAP;IACH;;IACD,IAAIk/C,oBAAoB,CAACW,QAAD,CAAxB,EAAoC;MAChC,IAAInF,oBAAoB,CAACmF,QAAD,CAAxB,EAAoC;QAChC,OAAO,IAAI7X,gCAAJ,CAAmB+X,YAAY,CAACF,QAAD,CAAZ,GAAyB,KAAKL,YAAL,CAAkBK,QAAlB,CAA5C,EAAyEjD,UAAU,GAAG,GAAb,GAAmBC,UAA5F,CAAP;MACH,CAFD,MAGK;QACD,OAAO,IAAI3U,4BAAJ,CAAe6X,YAAY,CAACF,QAAD,CAA3B,EAAuChD,UAAvC,CAAP;MACH;IACJ,CAPD,MAQK;MACD,IAAInC,oBAAoB,CAACmF,QAAD,CAAxB,EAAoC;QAChC,OAAO,IAAI/X,4BAAJ,CAAe,KAAK0X,YAAL,CAAkBK,QAAlB,CAAf,EAA4CjD,UAA5C,CAAP;MACH,CAFD,MAGK;QACD,OAAO,CAAP;MACH;IACJ;EACJ;;EACDkD,8BAA8B,CAACnD,cAAD,EAAiB;IAC3C,OAAO,KAAKqD,wBAAL,CAA8BrD,cAA9B,EAA8C,KAAKr3C,MAAL,CAAY8zC,WAA1D,EAAuE,KAAK9zC,MAAL,CAAYy0C,WAAnF,CAAP;EACH;;EACDkG,WAAW,GAAG;IACV,OAAO,KAAK36C,MAAL,CAAYm0C,QAAnB;EACH;;EACDyG,gBAAgB,GAAG;IACf,OAAO,KAAKT,aAAZ;EACH;;EACDU,WAAW,CAACC,IAAD,EAAO;IACd,IAAIrW,KAAK,CAACqW,IAAI,CAACxE,IAAN,CAAL,IAAoB7R,KAAK,CAACqW,IAAI,CAACvE,KAAN,CAAzB,IAAyC9R,KAAK,CAACqW,IAAI,CAACtE,GAAN,CAAlD,EAA8D;MAC1D,OAAO,KAAP;IACH,CAFD,MAGK,IAAIsE,IAAI,CAACtE,GAAL,KAAaxkC,IAAI,CAAC+mC,KAAL,CAAW+B,IAAI,CAACtE,GAAhB,CAAb,IAAqCsE,IAAI,CAACvE,KAAL,KAAevkC,IAAI,CAAC+mC,KAAL,CAAW+B,IAAI,CAACvE,KAAhB,CAApD,IAA8EuE,IAAI,CAACxE,IAAL,KAActkC,IAAI,CAAC+mC,KAAL,CAAW+B,IAAI,CAACxE,IAAhB,CAAhG,EAAuH;MACxH,OAAO,KAAP;IACH,CAFI,MAGA,IAAIwE,IAAI,CAACxE,IAAL,GAAY,IAAhB,EAAsB;MAAE;MACzB,OAAO,KAAP;IACH,CAFI,MAGA,IAAIwE,IAAI,CAACvE,KAAL,GAAa,CAAb,IAAkBuE,IAAI,CAACvE,KAAL,GAAa,EAAnC,EAAuC;MACxC,OAAO,KAAP;IACH,CAFI,MAGA,IAAIuE,IAAI,CAACtE,GAAL,GAAW,CAAf,EAAkB;MACnB,OAAO,KAAP;IACH,CAFI,MAGA,IAAI,KAAKuE,UAAL,CAAgBD,IAAI,CAACxE,IAArB,KAA8BwE,IAAI,CAACvE,KAAL,KAAe,CAAjD,EAAoD;MACrD,OAAOuE,IAAI,CAACtE,GAAL,IAAY,EAAnB;IACH,CAFI,MAGA;MACD,OAAOsE,IAAI,CAACtE,GAAL,IAAY+C,OAAO,CAACuB,IAAI,CAACvE,KAAL,GAAa,CAAd,CAA1B;IACH;EACJ;;EACD2D,YAAY,CAACY,IAAD,EAAO;IACf,OAAO,KAAKd,oBAAL,CAA0Bc,IAA1B,IAAkC,KAAKf,oBAA9C;EACH;;EACDiB,8BAA8B,CAACthD,GAAD,EAAM;IAChC,OAAOA,GAAG,GAAG,KAAKqgD,oBAAX,IAAmC,KAAK9F,YAAL,GAAoB,CAApB,GAAwB,CAA3D,CAAP;EACH;;EACDmG,kBAAkB,CAAC1gD,GAAD,EAAM;IACpB,MAAMuhD,UAAU,GAAGjpC,IAAI,CAACuH,KAAL,CAAW7f,GAAX,IAAkB,KAAKqgD,oBAA1C;IACA,IAAIzD,IAAI,GAAGtkC,IAAI,CAACuH,KAAL,CAAW0hC,UAAU,GAAG,QAAxB,CAAX;;IACA,IAAI,KAAKjB,oBAAL,CAA0B;MAAE1D,IAAI,EAAEA,IAAI,GAAG,CAAf;MAAkBC,KAAK,EAAE,CAAzB;MAA4BC,GAAG,EAAE;IAAjC,CAA1B,KAAmEyE,UAAvE,EAAmF;MAC/E3E,IAAI;IACP,CAFD,MAGK,IAAI,KAAK0D,oBAAL,CAA0B;MAAE1D,IAAI,EAAEA,IAAI,GAAG,CAAf;MAAkBC,KAAK,EAAE,CAAzB;MAA4BC,GAAG,EAAE;IAAjC,CAA1B,IAAkEyE,UAAtE,EAAkF;MACnF3E,IAAI;IACP;;IACD,MAAM4E,SAAS,GAAGD,UAAU,GAAG,KAAKjB,oBAAL,CAA0B;MAAE1D,IAAF;MAAQC,KAAK,EAAE,CAAf;MAAkBC,GAAG,EAAE;IAAvB,CAA1B,CAA/B;IACA,MAAMD,KAAK,GAAG4E,UAAU,CAACD,SAAS,IAAI,KAAKH,UAAL,CAAgBzE,IAAhB,KAAyB4E,SAAS,IAAI,EAAtC,GAA2C,CAA3C,GAA+C,CAAnD,CAAV,CAAxB;IACA,MAAM1E,GAAG,GAAG0E,SAAS,GAAG1B,WAAW,CAACjD,KAAD,CAAvB,IAAkC,KAAKwE,UAAL,CAAgBzE,IAAhB,KAAyBC,KAAK,GAAG,CAAjC,GAAqC,CAArC,GAAyC,CAA3E,CAAZ;IACA,OAAO;MAAED,IAAF;MAAQC,KAAK,EAAEA,KAAK,GAAG,CAAvB;MAA0BC,GAAG,EAAEA,GAAG,GAAG;IAArC,CAAP;EACH;;EACD4E,sBAAsB,CAAC1hD,GAAD,EAAM;IACxB,MAAMqzC,IAAI,GAAGsO,kBAAkB,CAAC3hD,GAAG,GAAG,CAAP,CAA/B;IACA,MAAM4hD,SAAS,GAAGtpC,IAAI,CAACuH,KAAL,CAAWwzB,IAAI,CAAC2L,KAAL,GAAaiB,aAAxB,CAAlB;IACA5M,IAAI,CAAC2L,KAAL,GAAa3L,IAAI,CAAC2L,KAAL,GAAaiB,aAA1B;IACA,MAAMmB,IAAI,GAAG,KAAKV,kBAAL,CAAwBpoC,IAAI,CAACuH,KAAL,CAAW7f,GAAX,IAAkB4hD,SAA1C,CAAb;IACA,OAAOnjD,MAAM,CAACoB,MAAP,CAAcpB,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkBuhD,IAAlB,CAAd,EAAuC/N,IAAvC,CAAP;EACH;;EACDwO,cAAc,CAACjF,IAAD,EAAO;IACjB,OAAOtkC,IAAI,CAACuH,KAAL,CAAW+8B,IAAI,GAAG,CAAlB,IAAuBtkC,IAAI,CAACuH,KAAL,CAAW+8B,IAAI,GAAG,GAAlB,CAAvB,GAAgDtkC,IAAI,CAACuH,KAAL,CAAW+8B,IAAI,GAAG,GAAlB,CAAhD,IAA0E,KAAKt2C,MAAL,CAAYi0C,YAAZ,IAA4BqC,IAAI,IAAI,IAApC,GAA2C,CAA3C,GAA+C,CAAzH,CAAP;EACH;;EACDkF,WAAW,CAAClF,IAAD,EAAOC,KAAP,EAAc;IACrB,IAAI,KAAKwE,UAAL,CAAgBzE,IAAhB,KAAyBC,KAAK,KAAK,CAAvC,EAA0C;MACtC,OAAO,EAAP;IACH,CAFD,MAGK;MACD,OAAOgD,OAAO,CAAChD,KAAK,GAAG,CAAT,CAAd;IACH;EACJ;;EACDkF,UAAU,CAACX,IAAD,EAAO;IACb,OAAO;MAAExE,IAAI,EAAEwE,IAAI,CAACxE,IAAb;MAAmBC,KAAK,EAAEuE,IAAI,CAACvE,KAA/B;MAAsCC,GAAG,EAAE,KAAKgF,WAAL,CAAiBV,IAAI,CAACxE,IAAtB,EAA4BwE,IAAI,CAACvE,KAAjC;IAA3C,CAAP;EACH;;EACDmF,SAAS,CAACx9C,KAAD,EAAQC,GAAR,EAAa;IAClB,IAAID,KAAK,CAACs4C,GAAN,KAAc,EAAlB,EAAsB;MAClBt4C,KAAK,CAACs4C,GAAN,GAAY,EAAZ;IACH;;IACD,IAAIt4C,KAAK,CAACs4C,GAAN,KAAc,EAAd,IAAoBr4C,GAAG,CAACq4C,GAAJ,KAAY,EAApC,EAAwC;MACpCr4C,GAAG,CAACq4C,GAAJ,GAAU,EAAV;IACH;;IACD,IAAIt4C,KAAK,CAACq4C,KAAN,KAAgB,CAAhB,IAAqBr4C,KAAK,CAACs4C,GAAN,KAAc,KAAKgF,WAAL,CAAiBt9C,KAAK,CAACo4C,IAAvB,EAA6Bp4C,KAAK,CAACq4C,KAAnC,CAAvC,EAAkF;MAC9Er4C,KAAK,CAACs4C,GAAN,GAAY,EAAZ;;MACA,IAAIr4C,GAAG,CAACo4C,KAAJ,KAAc,CAAd,IAAmBp4C,GAAG,CAACq4C,GAAJ,KAAY,KAAKgF,WAAL,CAAiBr9C,GAAG,CAACm4C,IAArB,EAA2Bn4C,GAAG,CAACo4C,KAA/B,CAAnC,EAA0E;QACtEp4C,GAAG,CAACq4C,GAAJ,GAAU,EAAV;MACH;IACJ;;IACD,OAAO,CAACt4C,KAAD,EAAQC,GAAR,CAAP;EACH;;EACDw9C,kBAAkB,CAACz9C,KAAD,EAAQC,GAAR,EAAa;IAC3B,IAAID,KAAK,CAACo4C,IAAN,KAAen4C,GAAG,CAACm4C,IAAvB,EAA6B;MACzB,IAAKp4C,KAAK,CAACo4C,IAAN,GAAa,CAAb,KAAmBn4C,GAAG,CAACm4C,IAAxB,IAAkCp4C,KAAK,CAACq4C,KAAN,GAAcp4C,GAAG,CAACo4C,KAApD,IAA+Dr4C,KAAK,CAACq4C,KAAN,KAAgBp4C,GAAG,CAACo4C,KAApB,IAA6Br4C,KAAK,CAACs4C,GAAN,GAAYr4C,GAAG,CAACq4C,GAAhH,EAAsH;QAClH;QACA,OAAO,CAAC,KAAK+E,cAAL,CAAoBp9C,GAAG,CAACm4C,IAAxB,IAAgC,KAAKiF,cAAL,CAAoBr9C,KAAK,CAACo4C,IAAN,GAAa,CAAjC,CAAjC,KAAyEn4C,GAAG,CAACm4C,IAAJ,GAAWp4C,KAAK,CAACo4C,IAAjB,GAAwB,CAAjG,IAAsG,GAA7G;MACH;;MACD,IAAI,KAAKsF,aAAL,CAAmBz9C,GAAnB,MAA4B,KAAKy9C,aAAL,CAAmB;QAAEtF,IAAI,EAAEp4C,KAAK,CAACo4C,IAAd;QAAoBC,KAAK,EAAEr4C,KAAK,CAACq4C,KAAjC;QAAwCC,GAAG,EAAEt4C,KAAK,CAACs4C,GAAN,GAAY;MAAzD,CAAnB,CAAhC,EAAkH;QAC9G,OAAO,GAAP;MACH,CAFD,MAGK;QACD,OAAO,GAAP;MACH;IACJ;;IACD,IAAI,KAAKuE,UAAL,CAAgB78C,KAAK,CAACo4C,IAAtB,CAAJ,EAAiC;MAC7B,OAAO,GAAP;IACH,CAFD,MAGK;MACD,OAAO,GAAP;IACH;EACJ;;EACDuF,iBAAiB,CAACC,UAAD,EAAaxE,UAAb,EAAyBC,UAAzB,EAAqC;IAClD,MAAMgD,QAAQ,GAAG,KAAKlG,aAAL,CAAmByH,UAAnB,EAA+BxE,UAA/B,EAA2CC,UAA3C,CAAjB;;IACA,IAAInC,oBAAoB,CAACmF,QAAD,CAAxB,EAAoC;MAChC,IAAIA,QAAQ,CAACjE,IAAT,IAAiB,CAAjB,IAAsBiE,QAAQ,CAACjE,IAAT,GAAgB,GAA1C,EAA+C;QAC3C,IAAIiE,QAAQ,CAACjE,IAAT,GAAgB,KAAKqE,WAAL,EAApB,EAAwC;UACpCJ,QAAQ,CAACjE,IAAT,IAAiB,IAAjB;QACH,CAFD,MAGK;UACDiE,QAAQ,CAACjE,IAAT,IAAiB,IAAjB;QACH;MACJ;;MACD,IAAI,CAAC,KAAKuE,WAAL,CAAiBN,QAAjB,CAAL,EAAiC;QAC7B,OAAO7/C,SAAP;MACH;IACJ;;IACD,OAAO6/C,QAAP;EACH;;EACDG,wBAAwB,CAACrD,cAAD,EAAiBvD,WAAjB,EAA8BW,WAA9B,EAA2C;IAC/D,MAAMsH,kBAAkB,GAAGjI,WAAW,CAACrqC,MAAZ,KAAuB,CAAvB,GAA2B,CAAC/O,SAAD,CAA3B,GAAyCo5C,WAApE;IACA,MAAMkI,kBAAkB,GAAGvH,WAAW,CAAChrC,MAAZ,KAAuB,CAAvB,GAA2B,CAAC/O,SAAD,CAA3B,GAAyC+5C,WAApE;;IACA,KAAK,MAAM6C,UAAX,IAAyByE,kBAAzB,EAA6C;MACzC,KAAK,MAAMxE,UAAX,IAAyByE,kBAAzB,EAA6C;QACzC,MAAMzB,QAAQ,GAAG,KAAKsB,iBAAL,CAAuBxE,cAAvB,EAAuCC,UAAvC,EAAmDC,UAAnD,CAAjB;;QACA,IAAIgD,QAAQ,KAAK7/C,SAAjB,EAA4B;UACxB,OAAO;YAAE6/C,QAAF;YAAYhD,UAAZ;YAAwBD;UAAxB,CAAP;QACH;MACJ;IACJ;;IACD,OAAO,EAAP;EACH;;EACDsE,aAAa,CAACd,IAAD,EAAO;IAChB,IAAIA,IAAI,CAACvE,KAAL,GAAa,CAAb,IAAmBuE,IAAI,CAACvE,KAAL,KAAe,CAAf,IAAoBuE,IAAI,CAACtE,GAAL,IAAY,EAAvD,EAA4D;MACxD,OAAO,KAAK+E,cAAL,CAAoBT,IAAI,CAACxE,IAAzB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,KAAKiF,cAAL,CAAoBT,IAAI,CAACxE,IAAL,GAAY,CAAhC,CAAP;IACH;EACJ;;EACD0D,oBAAoB,CAACc,IAAD,EAAO;IACvB,OAAO,MAAMA,IAAI,CAACxE,IAAX,GAAkBkD,WAAW,CAACsB,IAAI,CAACvE,KAAL,GAAa,CAAd,CAA7B,GAAgDuE,IAAI,CAACtE,GAArD,GAA2D,CAA3D,IAAgEsE,IAAI,CAACvE,KAAL,IAAc,CAAd,GAAkB,KAAKgF,cAAL,CAAoBT,IAAI,CAACxE,IAAL,GAAY,CAAhC,CAAlB,GAAuD,KAAKiF,cAAL,CAAoBT,IAAI,CAACxE,IAAzB,CAAvH,CAAP;EACH;;EACDyE,UAAU,CAACzE,IAAD,EAAO;IACb,IAAIA,IAAI,GAAG,CAAX,EAAc;MACV,OAAO,KAAP;IACH,CAFD,MAGK,IAAIA,IAAI,GAAG,GAAX,EAAgB;MACjB,OAAO,IAAP;IACH,CAFI,MAGA,IAAIA,IAAI,GAAG,GAAX,EAAgB;MACjB,OAAOA,IAAI,KAAK,IAAT,IAAiB,KAAKt2C,MAAL,CAAYi0C,YAApC;IACH,CAFI,MAGA;MACD,OAAO,IAAP;IACH;EACJ;;AA7MuB;;;;AA+M5B,SAASkH,UAAT,CAAoBD,SAApB,EAA+B;EAC3B,IAAI3E,KAAK,GAAG,CAAZ;;EACA,IAAIiD,WAAW,CAACjD,KAAK,GAAG,CAAT,CAAX,IAA0B2E,SAA9B,EAAyC;IACrC3E,KAAK,IAAI,CAAT;EACH;;EACD,IAAIiD,WAAW,CAACjD,KAAK,GAAG,CAAT,CAAX,IAA0B2E,SAA9B,EAAyC;IACrC3E,KAAK,IAAI,CAAT;EACH;;EACD,IAAIiD,WAAW,CAACjD,KAAK,GAAG,CAAT,CAAX,IAA0B2E,SAA9B,EAAyC;IACrC3E,KAAK,IAAI,CAAT;EACH,CAFD,MAGK,IAAIiD,WAAW,CAACjD,KAAK,GAAG,CAAT,CAAX,IAA0B2E,SAA9B,EAAyC;IAC1C3E,KAAK,IAAI,CAAT;EACH;;EACD,OAAOA,KAAP;AACH;;AACM,SAAS0F,WAAT,CAAqBnB,IAArB,EAA2B1V,MAA3B,EAAmC;EACtC,MAAM8W,MAAM,GAAG,KAAKpB,IAAI,CAACxE,IAAV,GAAiBwE,IAAI,CAACvE,KAAtB,GAA8B,CAA9B,GAAkCnR,MAAjD;EACA,OAAO;IAAEkR,IAAI,EAAEtkC,IAAI,CAACuH,KAAL,CAAW2iC,MAAM,GAAG,EAApB,CAAR;IAAiC3F,KAAK,EAAE2F,MAAM,GAAG,EAAT,GAAc,CAAtD;IAAyD1F,GAAG,EAAEsE,IAAI,CAACtE;EAAnE,CAAP;AACH;;AACM,SAAS2F,kBAAT,CAA4BrB,IAA5B,EAAkC;EACrC,OAAO;IAAExE,IAAI,EAAEwE,IAAI,CAACxE,IAAb;IAAmBC,KAAK,EAAEuE,IAAI,CAACvE,KAA/B;IAAsCC,GAAG,EAAExkC,IAAI,CAACG,GAAL,CAAS2oC,IAAI,CAACtE,GAAd,EAAmB+C,OAAO,CAACuB,IAAI,CAACvE,KAAL,GAAa,CAAd,CAA1B;EAA3C,CAAP;AACH;;AACM,SAAS6F,oBAAT,CAA8B1iD,GAA9B,EAAmC;EACtC,OAAOsY,IAAI,CAAC+mC,KAAL,CAAWr/C,GAAG,GAAG,IAAN,GAAa,EAAxB,KAA+B,OAAO,EAAtC,CAAP;AACH;;AACD,SAAS2iD,cAAT,CAAwB3iD,GAAxB,EAA0C;EAAA,IAAb4iD,OAAa,uEAAH,CAAG;EACtC,OAAOtqC,IAAI,CAAC+mC,KAAL,CAAWr/C,GAAG,GAAG4iD,OAAjB,IAA4BA,OAAnC;AACH,C,CACD;;;AACO,SAASjB,kBAAT,CAA4B3hD,GAA5B,EAAiC;EACpC,MAAM6iD,YAAY,GAAG7iD,GAAG,GAAGigD,aAAN,GAAsBD,gBAAtB,GAAyCD,kBAA9D;EACA,MAAMX,OAAO,GAAGuD,cAAc,CAACE,YAAY,GAAG9C,kBAAhB,EAAoC,MAApC,CAAd,GAA4DA,kBAA5E;EACA,MAAM+C,YAAY,GAAG,CAACD,YAAY,GAAGzD,OAAhB,IAA2BW,kBAAhD;EACA,MAAMb,OAAO,GAAG5mC,IAAI,CAAC+mC,KAAL,CAAWyD,YAAY,GAAG9C,gBAA1B,IAA8CA,gBAA9D;EACA,MAAM+C,UAAU,GAAG,CAACD,YAAY,GAAG5D,OAAhB,IAA2Bc,gBAA9C;EACA,MAAMhB,KAAK,GAAG1mC,IAAI,CAAC+mC,KAAL,CAAW0D,UAAX,CAAd;EACA,OAAO;IAAE/D,KAAF;IAASE,OAAT;IAAkBE;EAAlB,CAAP;AACH;;AACM,SAAS2B,YAAT,CAAsB1N,IAAtB,EAA4B;EAC/B,OAAO,CAAC,CAACA,IAAI,CAAC+L,OAAL,GAAe,EAAf,GAAoB/L,IAAI,CAAC6L,OAA1B,IAAqC,EAArC,GAA0C7L,IAAI,CAAC2L,KAAhD,IAAyD,EAAhE;AACH;;AACM,SAASgE,SAAT,CAAmB5B,IAAnB,EAAyB;EAC5B,OAAO;IAAExE,IAAI,EAAEwE,IAAI,CAACxE,IAAb;IAAmBC,KAAK,EAAEuE,IAAI,CAACvE,KAA/B;IAAsCC,GAAG,EAAExkC,IAAI,CAACG,GAAL,CAAS,EAAT,EAAa2oC,IAAI,CAACtE,GAAlB;EAA3C,CAAP;AACH,C;;;;;;;;;;;;ACpRD;;AACA;;AALA;AACA;AACA;AACA;AAGO,MAAMmG,iCAAN,CAAwC;EAC3ChiD,WAAW,CAACiiD,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EACDjV,IAAI,CAACF,IAAD,EAAO;IACP,IAAIA,IAAI,GAAG,KAAKmV,SAAhB,EAA2B;MACvB,OAAOvJ,4BAAP;IACH,CAFD,MAGK;MACD,OAAOd,8BAAP;IACH;EACJ;;AAX0C;;;;AAaxC,MAAMsK,YAAN,CAAmB;EACtBlV,IAAI,GAAG;IACH,OAAO4K,8BAAP;EACH;;AAHqB;;;;AAKnB,MAAM8D,WAAN,CAAkB;EACrB1O,IAAI,GAAG;IACH,OAAO0L,4BAAP;EACH;;AAHoB;;;;;;;;;;;;;;;;;;ACpBzB;;AACA;;AACA;;AANA;AACA;AACA;AACA;AAIO,SAASvW,MAAT,CAAgBl7B,KAAhB,EAAuBk7C,SAAvB,EAAkC98C,MAAlC,EAA0C+8C,UAA1C,EAAsD;EACzD,MAAMC,WAAW,GAAGh9C,MAAM,CAACu0C,iBAAP,CAAyBwI,UAAU,CAAC3B,sBAAX,CAAkCx5C,KAAlC,CAAzB,EAAmEk7C,SAAnE,CAApB,CADyD,CAC0C;;EACnG,IAAIE,WAAW,KAAKtiD,SAApB,EAA+B;IAC3B,OAAOsiD,WAAP;EACH;;EACD,MAAMC,WAAW,GAAGj9C,MAAM,CAACw0C,iBAAP,CAAyB,IAAA6G,kCAAA,EAAmBz5C,KAAnB,CAAzB,EAAoDk7C,SAApD,CAApB;;EACA,IAAIG,WAAW,KAAKviD,SAApB,EAA+B;IAC3B,OAAOuiD,WAAP;EACH;;EACD,MAAMj5B,UAAU,GAAG,IAAAk5B,4BAAA,EAAqBJ,SAArB,CAAnB;;EACA,IAAI94B,UAAU,KAAKtpB,SAAnB,EAA8B;IAC1B,OAAOyiD,YAAY,CAACn5B,UAAU,CAAChD,MAAZ,EAAoBpf,KAApB,CAAnB;EACH;;EACD,OAAOk7C,SAAP;AACH;;AACM,SAASM,OAAT,CAAiB3xB,MAAjB,EAAyBhrB,IAAzB,EAA+B;EAClC,IAAI6G,MAAM,GAAGmkB,MAAM,GAAG,EAAtB;;EACA,OAAOnkB,MAAM,CAACmC,MAAP,GAAgBhJ,IAAvB,EAA6B;IACzB6G,MAAM,GAAG,MAAMA,MAAf;EACH;;EACD,OAAOA,MAAP;AACH;;AACM,SAAS+1C,QAAT,CAAkB5xB,MAAlB,EAA0BhrB,IAA1B,EAAgC;EACnC,IAAI6G,MAAM,GAAGmkB,MAAM,GAAG,EAAtB;;EACA,OAAOnkB,MAAM,CAACmC,MAAP,GAAgBhJ,IAAvB,EAA6B;IACzB6G,MAAM,GAAGA,MAAM,GAAG,GAAlB;EACH;;EACD,OAAOA,MAAP;AACH;;AACD,SAASg2C,UAAT,CAAoB/8B,IAApB,EAA0Bg9B,IAA1B,EAAgC;EAC5B,OAAOh9B,IAAI,CAACjI,KAAL,CAAWilC,IAAX,EAAiB9zC,MAAjB,GAA0B,CAAjC;AACH;;AACD,SAAS0zC,YAAT,CAAsBn8B,MAAtB,EAA8Bpf,KAA9B,EAAqC;EACjC,IAAI0F,MAAM,GAAG,EAAb;;EACA,KAAK,IAAI6c,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnD,MAAM,CAACvX,MAA3B,EAAmC,EAAE0a,CAArC,EAAwC;IACpC,MAAMtC,KAAK,GAAGb,MAAM,CAACmD,CAAD,CAApB;;IACA,IAAItC,KAAK,CAACjnB,IAAN,KAAe4iD,iBAAA,CAAUC,SAA7B,EAAwC;MACpCn2C,MAAM,IAAIua,KAAK,CAACjgB,KAAhB;MACA;IACH;;IACD,MAAM87C,UAAU,GAAG77B,KAAK,CAACjgB,KAAN,CAAY0W,KAAZ,CAAkB,GAAlB,CAAnB;IACA,MAAMqlC,aAAa,GAAGD,UAAU,CAAC,CAAD,CAAhC;IACA,MAAME,aAAa,GAAGF,UAAU,CAAC,CAAD,CAAV,IAAiB,EAAvC;IACA,MAAMl1B,SAAS,GAAGk1B,UAAU,CAAC,CAAD,CAAV,GAAgB,GAAhB,GAAsB,EAAxC;IACA;;IACA,MAAMG,UAAU,GAAGxsC,MAAM,CAACzP,KAAK,CAACk8C,OAAN,CAAcF,aAAa,CAACn0C,MAA5B,CAAD,CAAN,CAA4CwJ,QAA5C,GAAuDqF,KAAvD,CAA6D,GAA7D,CAAnB;IACA,IAAIylC,WAAW,GAAGF,UAAU,CAAC,CAAD,CAAV,IAAiB,EAAnC;IACA,IAAIG,WAAW,GAAGH,UAAU,CAAC,CAAD,CAAV,IAAiB,EAAnC;;IACA,IAAIF,aAAa,CAACl0C,MAAd,GAAuBs0C,WAAW,CAACt0C,MAAvC,EAA+C;MAC3C,MAAMw0C,cAAc,GAAGX,UAAU,CAACK,aAAa,CAACO,MAAd,CAAqB,CAArB,EAAwBP,aAAa,CAACl0C,MAAd,GAAuBs0C,WAAW,CAACt0C,MAA3D,CAAD,EAAqE,GAArE,CAAjC;MACAs0C,WAAW,GAAGX,OAAO,CAACW,WAAD,EAAcE,cAAc,GAAGF,WAAW,CAACt0C,MAA3C,CAArB;IACH;;IACD,MAAM00C,cAAc,GAAGb,UAAU,CAACM,aAAa,CAACM,MAAd,CAAqBF,WAAW,CAACv0C,MAAjC,EAAyCm0C,aAAa,CAACn0C,MAAd,GAAuBu0C,WAAW,CAACv0C,MAA5E,CAAD,EAAsF,GAAtF,CAAjC;IACAu0C,WAAW,GAAGX,QAAQ,CAACW,WAAD,EAAcG,cAAc,GAAGH,WAAW,CAACv0C,MAA3C,CAAtB;IACAnC,MAAM,IAAIy2C,WAAW,GAAGv1B,SAAd,GAA0Bw1B,WAApC;EACH;;EACD,OAAO12C,MAAP;AACH;;AACM,SAASqvC,wBAAT,CAAkC5J,IAAlC,EAAwC+P,SAAxC,EAAmD;EACtD,MAAM94B,UAAU,GAAG,IAAAo6B,8BAAA,EAAuBtB,SAAvB,CAAnB;;EACA,IAAI94B,UAAU,KAAKtpB,SAAnB,EAA8B;IAC1B,OAAOA,SAAP;EACH;;EACD,MAAMsmB,MAAM,GAAGgD,UAAU,CAAChD,MAA1B;EACA,IAAI1Z,MAAM,GAAG,EAAb;;EACA,KAAK,MAAMua,KAAX,IAAoBb,MAApB,EAA4B;IACxB,IAAIa,KAAK,CAACjnB,IAAN,KAAe4iD,iBAAA,CAAUC,SAA7B,EAAwC;MACpCn2C,MAAM,IAAIua,KAAK,CAACjgB,KAAhB;MACA;IACH;;IACD,QAAQigB,KAAK,CAACjgB,KAAN,CAAYuhC,WAAZ,EAAR;MACI,KAAK,GAAL;MACA,KAAK,IAAL;QAAW;UACP77B,MAAM,IAAI81C,OAAO,CAACrQ,IAAI,CAAC2L,KAAN,EAAa72B,KAAK,CAACjgB,KAAN,CAAY6H,MAAzB,CAAjB;UACAsjC,IAAI,CAAC2L,KAAL,GAAa,CAAb;UACA;QACH;;MACD,KAAK,MAAL;QAAa;UACTpxC,MAAM,IAAI81C,OAAO,CAACrQ,IAAI,CAAC2L,KAAN,EAAa72B,KAAK,CAACjgB,KAAN,CAAY6H,MAAZ,GAAqB,CAAlC,CAAjB;UACAsjC,IAAI,CAAC2L,KAAL,GAAa,CAAb;UACA;QACH;;MACD,KAAK,GAAL;MACA,KAAK,IAAL;QAAW;UACPpxC,MAAM,IAAI81C,OAAO,CAACrQ,IAAI,CAAC6L,OAAN,EAAe/2B,KAAK,CAACjgB,KAAN,CAAY6H,MAA3B,CAAjB;UACAsjC,IAAI,CAAC6L,OAAL,GAAe,CAAf;UACA;QACH;;MACD,KAAK,MAAL;QAAa;UACTtxC,MAAM,IAAI81C,OAAO,CAACrQ,IAAI,CAAC6L,OAAL,GAAe,KAAK7L,IAAI,CAAC2L,KAA1B,EAAiC72B,KAAK,CAACjgB,KAAN,CAAY6H,MAAZ,GAAqB,CAAtD,CAAjB;UACAsjC,IAAI,CAAC6L,OAAL,GAAe,CAAf;UACA7L,IAAI,CAAC2L,KAAL,GAAa,CAAb;UACA;QACH;;MACD;;MACA,KAAK,GAAL;MACA,KAAK,IAAL;QAAW;UACPpxC,MAAM,IAAI81C,OAAO,CAACprC,IAAI,CAACuH,KAAL,CAAWwzB,IAAI,CAAC+L,OAAhB,CAAD,EAA2Bj3B,KAAK,CAACjgB,KAAN,CAAY6H,MAAvC,CAAjB;UACA;QACH;;MACD;QAAS;UACL,IAAIuuC,sCAAA,CAAsBv+B,IAAtB,CAA2BoI,KAAK,CAACjgB,KAAjC,CAAJ,EAA6C;YACzC,MAAMy8C,yBAAyB,GAAGrsC,IAAI,CAACC,GAAL,CAAS4P,KAAK,CAACjgB,KAAN,CAAY6H,MAAZ,GAAqB,CAA9B,EAAiC,CAAjC,CAAlC;YACAnC,MAAM,IAAI,CAACylC,IAAI,CAAC+L,OAAL,GAAe,EAAf,GAAoB,GAApB,GAA0B,EAA3B,IAAiC9mC,IAAI,CAACuH,KAAL,CAAWwzB,IAAI,CAAC+L,OAAL,GAAe9mC,IAAI,CAAC2rB,GAAL,CAAS,EAAT,EAAa0gB,yBAAb,CAA1B,IAAqErsC,IAAI,CAAC2rB,GAAL,CAAS,EAAT,EAAa0gB,yBAAb,CAAhH;YACA;UACH;;UACD,OAAO3jD,SAAP;QACH;IArCL;EAuCH;;EACD,OAAO4M,MAAP;AACH;;AACM,SAASovC,wBAAT,CAAkC6D,QAAlC,EAA4CuC,SAA5C,EAAuD;EAC1D,MAAM94B,UAAU,GAAG,IAAAo6B,8BAAA,EAAuBtB,SAAvB,CAAnB;;EACA,IAAI94B,UAAU,KAAKtpB,SAAnB,EAA8B;IAC1B,OAAOA,SAAP;EACH;;EACD,MAAMsmB,MAAM,GAAGgD,UAAU,CAAChD,MAA1B;EACA,IAAI1Z,MAAM,GAAG,EAAb;EACA,IAAIsxC,OAAO,GAAG,KAAd;EACA,MAAMT,IAAI,GAAGn3B,MAAM,CAACwG,IAAP,CAAa3F,KAAD,IAAWA,KAAK,CAACjnB,IAAN,KAAe4iD,iBAAA,CAAUc,MAAzB,KAC/Bz8B,KAAK,CAACjgB,KAAN,KAAgB,KAAhB,IAAyBigB,KAAK,CAACjgB,KAAN,KAAgB,KAAzC,IAAkDigB,KAAK,CAACjgB,KAAN,KAAgB,OAAlE,IAA6EigB,KAAK,CAACjgB,KAAN,KAAgB,OAD9D,CAAvB,CAAb;;EAEA,KAAK,IAAIuiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnD,MAAM,CAACvX,MAA3B,EAAmC0a,CAAC,EAApC,EAAwC;IACpC,MAAMtC,KAAK,GAAGb,MAAM,CAACmD,CAAD,CAApB;;IACA,IAAItC,KAAK,CAACjnB,IAAN,KAAe4iD,iBAAA,CAAUC,SAA7B,EAAwC;MACpCn2C,MAAM,IAAIua,KAAK,CAACjgB,KAAhB;MACA;IACH;;IACD,QAAQigB,KAAK,CAACjgB,KAAN,CAAYuhC,WAAZ,EAAR;MACI;MACA,KAAK,GAAL;MACA,KAAK,IAAL;QAAW;UACPyV,OAAO,GAAG,IAAV;UACAtxC,MAAM,IAAI81C,OAAO,CAACjF,IAAI,GAAG,CAACoC,QAAQ,CAAC7B,KAAT,GAAiB,EAAlB,IAAwB,EAAxB,GAA6B,CAAhC,GAAoC6B,QAAQ,CAAC7B,KAAlD,EAAyD72B,KAAK,CAACjgB,KAAN,CAAY6H,MAArE,CAAjB;UACA;QACH;;MACD;;MACA,KAAK,GAAL;MACA,KAAK,IAAL;QAAW;UACPnC,MAAM,IAAI81C,OAAO,CAAC7C,QAAQ,CAAC/D,GAAV,EAAe30B,KAAK,CAACjgB,KAAN,CAAY6H,MAA3B,CAAjB;UACA;QACH;;MACD;;MACA,KAAK,GAAL;MACA,KAAK,IAAL;QAAW;UACPnC,MAAM,IAAI81C,OAAO,CAACprC,IAAI,CAACuH,KAAL,CAAWghC,QAAQ,CAACzB,OAApB,CAAD,EAA+Bj3B,KAAK,CAACjgB,KAAN,CAAY6H,MAA3C,CAAjB;UACA;QACH;;MACD;;MACA,KAAK,GAAL;MACA,KAAK,IAAL;QAAW;UACP,IAAI0a,CAAC,GAAG,CAAJ,GAAQnD,MAAM,CAACvX,MAAf,IAAyBuX,MAAM,CAACmD,CAAC,GAAG,CAAL,CAAN,CAAcviB,KAAd,CAAoBtJ,UAApB,CAA+B,GAA/B,CAA7B,EAAkE;YAC9DsgD,OAAO,GAAG,IAAV;UACH;;UACD,IAAIA,OAAJ,EAAa;YACTtxC,MAAM,IAAI81C,OAAO,CAAC7C,QAAQ,CAAC3B,OAAV,EAAmB/2B,KAAK,CAACjgB,KAAN,CAAY6H,MAA/B,CAAjB;UACH,CAFD,MAGK;YACDnC,MAAM,IAAI81C,OAAO,CAAC7C,QAAQ,CAAChE,KAAV,EAAiB10B,KAAK,CAACjgB,KAAN,CAAY6H,MAA7B,CAAjB;UACH;;UACDmvC,OAAO,GAAG,IAAV;UACA;QACH;;MACD;;MACA,KAAK,IAAL;QAAW;UACPtxC,MAAM,IAAI81C,OAAO,CAAC7C,QAAQ,CAACjE,IAAT,GAAgB,GAAjB,EAAsBz0B,KAAK,CAACjgB,KAAN,CAAY6H,MAAlC,CAAjB;UACA;QACH;;MACD,KAAK,MAAL;QAAa;UACTnC,MAAM,IAAIizC,QAAQ,CAACjE,IAAnB;UACA;QACH;;MACD;;MACA,KAAK,OAAL;MACA,KAAK,KAAL;QAAY;UACR,MAAM,CAACiI,EAAD,EAAKC,EAAL,IAAW38B,KAAK,CAACjgB,KAAN,CAAY0W,KAAZ,CAAkB,GAAlB,CAAjB;UACAhR,MAAM,IAAIizC,QAAQ,CAAC7B,KAAT,GAAiB,EAAjB,GAAsB6F,EAAtB,GAA2BC,EAArC;UACA;QACH;;MACD;QAAS;UACL,IAAIxG,sCAAA,CAAsBv+B,IAAtB,CAA2BoI,KAAK,CAACjgB,KAAjC,CAAJ,EAA6C;YACzC,MAAMy8C,yBAAyB,GAAGx8B,KAAK,CAACjgB,KAAN,CAAY6H,MAAZ,GAAqB,CAAvD;YACAnC,MAAM,IAAI,CAACizC,QAAQ,CAACzB,OAAT,GAAmB,EAAnB,GAAwB,GAAxB,GAA8B,EAA/B,IAAqC9mC,IAAI,CAACuH,KAAL,CAAWghC,QAAQ,CAACzB,OAAT,GAAmB9mC,IAAI,CAAC2rB,GAAL,CAAS,EAAT,EAAa0gB,yBAAb,CAA9B,IAAyErsC,IAAI,CAAC2rB,GAAL,CAAS,EAAT,EAAa0gB,yBAAb,CAAxH;YACA;UACH;;UACD,OAAO3jD,SAAP;QACH;IA1DL;EA4DH;;EACD,OAAO4M,MAAP;AACH,C;;;;;;;;;;;;;;;;;ACrMD;AACA;AACA;AACA;AACA,MAAMm3C,eAAe,GAAG,uHAAxB;AACA,MAAMC,iBAAiB,GAAG,wBAA1B;AACO,IAAIlB,SAAJ;;;AACP,CAAC,UAAUA,SAAV,EAAqB;EAClBA,SAAS,CAAC,QAAD,CAAT,GAAsB,QAAtB;EACAA,SAAS,CAAC,WAAD,CAAT,GAAyB,WAAzB;AACH,CAHD,EAGGA,SAAS,yBAAKA,SAAS,GAAG,EAAjB,CAHZ;;AAIO,SAASmB,WAAT,CAAqB/jD,IAArB,EAA2BgH,KAA3B,EAAkC;EACrC,OAAO;IACHhH,IADG;IAEHgH;EAFG,CAAP;AAIH;;AACM,IAAIg9C,oBAAJ;;;AACP,CAAC,UAAUA,oBAAV,EAAgC;EAC7BA,oBAAoB,CAAC,MAAD,CAApB,GAA+B,MAA/B;EACAA,oBAAoB,CAAC,QAAD,CAApB,GAAiC,QAAjC;EACAA,oBAAoB,CAAC,QAAD,CAApB,GAAiC,QAAjC;AACH,CAJD,EAIGA,oBAAoB,oCAAKA,oBAAoB,GAAG,EAA5B,CAJvB;;AAKA,SAASC,eAAT,CAAyBnzB,GAAzB,EAA8B;EAC1B+yB,eAAe,CAACK,SAAhB,GAA4B,CAA5B;EACA,MAAM99B,MAAM,GAAG,EAAf;EACA,IAAI+9B,CAAJ;;EACA,GAAG;IACCA,CAAC,GAAGN,eAAe,CAAClnC,IAAhB,CAAqBmU,GAArB,CAAJ;;IACA,IAAIqzB,CAAC,KAAK,IAAV,EAAgB;MACZ/9B,MAAM,CAAC9hB,IAAP,CAAY6/C,CAAZ;IACH;EACJ,CALD,QAKSA,CALT;;EAMA,OAAO/9B,MAAP;AACH;;AACD,SAASg+B,iBAAT,CAA2BtzB,GAA3B,EAAgC;EAC5BgzB,iBAAiB,CAACI,SAAlB,GAA8B,CAA9B;EACA,MAAMG,iBAAiB,GAAGP,iBAAiB,CAACnnC,IAAlB,CAAuBmU,GAAvB,CAA1B;;EACA,IAAIuzB,iBAAiB,KAAK,IAA1B,EAAgC;IAC5B,OAAO,CAACA,iBAAD,CAAP;EACH,CAFD,MAGK;IACD,OAAO,EAAP;EACH;AACJ;;AACD,SAASC,YAAT,CAAsBC,WAAtB,EAAmCzzB,GAAnC,EAAwC;EACpC,MAAM1K,MAAM,GAAG,EAAf;EACA,IAAI9iB,KAAK,GAAG,CAAZ;;EACA,KAAK,IAAIimB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGg7B,WAAW,CAAC11C,MAAhC,EAAwC,EAAE0a,CAA1C,EAA6C;IACzC,MAAMtC,KAAK,GAAGs9B,WAAW,CAACh7B,CAAD,CAAzB;;IACA,IAAItC,KAAK,CAACme,KAAN,KAAgB9hC,KAApB,EAA2B;MACvB,MAAMkhD,WAAW,GAAG1zB,GAAG,CAACwyB,MAAJ,CAAWhgD,KAAX,EAAkB2jB,KAAK,CAACme,KAAN,GAAc9hC,KAAhC,CAApB;MACA8iB,MAAM,CAAC9hB,IAAP,CAAYy/C,WAAW,CAACnB,SAAS,CAACC,SAAX,EAAsB2B,WAAtB,CAAvB;IACH;;IACD,IAAIv9B,KAAK,CAAC,CAAD,CAAL,CAASvpB,UAAT,CAAoB,IAApB,CAAJ,EAA+B;MAC3B0oB,MAAM,CAAC9hB,IAAP,CAAYy/C,WAAW,CAACnB,SAAS,CAACC,SAAX,EAAsB57B,KAAK,CAAC,CAAD,CAA3B,CAAvB;IACH,CAFD,MAGK;MACDb,MAAM,CAAC9hB,IAAP,CAAYy/C,WAAW,CAACnB,SAAS,CAACc,MAAX,EAAmBz8B,KAAK,CAAC,CAAD,CAAxB,CAAvB;IACH;;IACD3jB,KAAK,GAAG2jB,KAAK,CAACme,KAAN,GAAcne,KAAK,CAAC,CAAD,CAAL,CAASpY,MAA/B;EACH;;EACD,MAAM41C,SAAS,GAAGF,WAAW,CAACA,WAAW,CAAC11C,MAAZ,GAAqB,CAAtB,CAA7B;;EACA,IAAI41C,SAAS,CAACrf,KAAV,GAAkBqf,SAAS,CAAC,CAAD,CAAT,CAAa51C,MAA/B,GAAwCiiB,GAAG,CAACjiB,MAAhD,EAAwD;IACpD,MAAM61C,cAAc,GAAG5zB,GAAG,CAACwyB,MAAJ,CAAWmB,SAAS,CAACrf,KAAV,GAAkBqf,SAAS,CAAC,CAAD,CAAT,CAAa51C,MAA1C,EAAkDiiB,GAAG,CAACjiB,MAAtD,CAAvB;IACAuX,MAAM,CAAC9hB,IAAP,CAAYy/C,WAAW,CAACnB,SAAS,CAACC,SAAX,EAAsB6B,cAAtB,CAAvB;EACH;;EACD,OAAOt+B,MAAP;AACH;;AACM,SAASo9B,sBAAT,CAAgC1yB,GAAhC,EAAqC;EACxC,MAAM6zB,gBAAgB,GAAGV,eAAe,CAACnzB,GAAD,CAAxC;;EACA,IAAI6zB,gBAAgB,CAACC,KAAjB,CAAwBC,IAAD,IAAUC,aAAa,CAACD,IAAD,CAA9C,CAAJ,EAA2D;IACvD,OAAO/kD,SAAP;EACH,CAFD,MAGK;IACD,OAAO;MACHE,IAAI,EAAEgkD,oBAAoB,CAACe,IADxB;MAEH3+B,MAAM,EAAEk+B,YAAY,CAACK,gBAAD,EAAmB7zB,GAAnB;IAFjB,CAAP;EAIH;AACJ;;AACM,SAASwxB,oBAAT,CAA8BxxB,GAA9B,EAAmC;EACtC,MAAMk0B,kBAAkB,GAAGZ,iBAAiB,CAACtzB,GAAD,CAA5C;;EACA,IAAIk0B,kBAAkB,CAACJ,KAAnB,CAA0BC,IAAD,IAAUC,aAAa,CAACD,IAAD,CAAhD,CAAJ,EAA6D;IACzD,OAAO/kD,SAAP;EACH,CAFD,MAGK;IACD,OAAO;MACHE,IAAI,EAAEgkD,oBAAoB,CAACjlD,MADxB;MAEHqnB,MAAM,EAAEk+B,YAAY,CAACU,kBAAD,EAAqBl0B,GAArB;IAFjB,CAAP;EAIH;AACJ;;AACM,SAASpL,KAAT,CAAeoL,GAAf,EAAoB;EACvB,IAAIrvB,EAAJ,EAAQ22B,EAAR;;EACA,OAAO,CAACA,EAAE,GAAG,CAAC32B,EAAE,GAAG+hD,sBAAsB,CAAC1yB,GAAD,CAA5B,MAAuC,IAAvC,IAA+CrvB,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoE6gD,oBAAoB,CAACxxB,GAAD,CAA9F,MAAyG,IAAzG,IAAiHsH,EAAE,KAAK,KAAK,CAA7H,GAAiIA,EAAjI,GAAsI;IACzIp4B,IAAI,EAAEgkD,oBAAoB,CAAChlD,MAD8G;IAEzIonB,MAAM,EAAE,CAAC;MACDpmB,IAAI,EAAE4iD,SAAS,CAACC,SADf;MAED77C,KAAK,EAAE8pB;IAFN,CAAD;EAFiI,CAA7I;AAOH;;AACM,SAASg0B,aAAT,CAAuB79B,KAAvB,EAA8B;EACjC,OAAOA,KAAK,CAAC,CAAD,CAAL,CAASvpB,UAAT,CAAoB,IAApB,CAAP;AACH,C;;;;;;;;;;;;ACrGD;;AAJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMunD,eAAe,GAAG;EACpBC,OAAO,EAAE,MAAM,8CADK;EAEpBC,OAAO,EAAE;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OAAyB,6CAC7B,OAAMA,eAAgB,+CADlB;EAAA,CAFW;EAIpBC,OAAO,EAAE,MAAM;AAJK,CAAxB;AAMA,IAAIC,SAAS,GAAG,KAAhB;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS3K,uBAAT,CAAiCrB,UAAjC,EAA6C;EAChD,MAAMiM,iBAAiB,GAAG;IACtBC,QAAQ,EAAE;IAAU;IADE;IAEtBC,IAAI,EAAE;EAFgB,CAA1B;;EAIA,IAAInM,UAAU,KAAK,QAAf,IAA2BA,UAAU,KAAK,8BAA9C,EAA8E;IAC1EiM,iBAAiB,CAACC,QAAlB,GAA6B;IAAQ;IAArC;EACH,CAFD,MAGK,IAAI,OAAOlM,UAAP,KAAsB,QAAtB,IAAkC,IAAAoM,gCAAA,EAAepM,UAAf,CAAtC,EAAkE;IACnE,MAAM,CAACsC,GAAD,EAAMD,KAAN,EAAaD,IAAb,IAAqB,CAAC,gBAA+B,KAAhC,EAAoCh+B,KAApC,CAA0C,GAA1C,CAA3B;IACA,MAAMioC,WAAW,GAAGvuC,IAAI,CAACuH,KAAL,CAAW,IAAIstB,IAAJ,CAAU,GAAE0P,KAAM,IAAGC,GAAI,IAAGF,IAAK,EAAjC,EAAoCkK,OAApC,KAAgD,MAA3D,CAApB;IACA,MAAMC,eAAe,GAAG,IAAAC,6BAAA,EAAYxM,UAAZ,CAAxB;IACAiM,iBAAiB,CAACE,IAAlB,CAAuBL,eAAvB,GAAyCW,UAAU,CAAC,IAAI9Z,IAAJ,CAAS,CAAC4Z,eAAe,GAAG,CAAnB,IAAwB,MAAjC,CAAD,CAAnD;;IACA,IAAIF,WAAW,GAAGE,eAAlB,EAAmC;MAC/BN,iBAAiB,CAACC,QAAlB,GAA6B;MAAU;MAAvC;IACH,CAFD,MAGK;MACDD,iBAAiB,CAACC,QAAlB,GAA6B;MAAQ;MAArC;IACH;EACJ,CAXI,MAYA,IAAIlM,UAAU,KAAK,EAAnB,EAAuB;IACxBiM,iBAAiB,CAACC,QAAlB,GAA6B;IAAU;IAAvC;EACH;;EACD,IAAI,CAACF,SAAD,IAAcC,iBAAiB,CAACC,QAAlB,KAA+B;EAAQ;EAAzD,EAAsE;IAClEjK,OAAO,CAACC,IAAR,CAAayJ,eAAe,CAACM,iBAAiB,CAACC,QAAnB,CAAf,CAA4CD,iBAAiB,CAACE,IAA9D,CAAb;IACAH,SAAS,GAAG,IAAZ;EACH;;EACD,OAAOC,iBAAiB,CAACC,QAAzB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,UAAT,CAAoB7F,IAApB,EAA0B;EACtB,MAAM8F,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACf,MADe,EACP,QADO,EACG,WADH,EACgB,SADhB,EAC2B,UAD3B,EACuC,UADvC,CAAnB;EAGA,MAAMrK,KAAK,GAAGqK,UAAU,CAAC9F,IAAI,CAAC+F,QAAL,EAAD,CAAxB;EACA,MAAMrK,GAAG,GAAGsE,IAAI,CAACgG,OAAL,EAAZ;EACA,MAAMxK,IAAI,GAAGwE,IAAI,CAACiG,WAAL,EAAb;EACA,OAAQ,GAAExK,KAAM,IAAGC,GAAI,KAAIF,IAAK,EAAhC;AACH,C;;;;;;;;;;;;;AChED;AACA;AACA;AACA;AACA;;AACA;AACA,MAAM0K,GAAG,GAAG,0BAAZ;;AACA,MAAMC,GAAG,GAAI5iD,CAAD,IAAO6iD,QAAQ,CAAC7iD,CAAD,EAAI,EAAJ,CAA3B;;AACA,MAAM8iD,GAAG,GAAI9iD,CAAD,IAAO6iD,QAAQ,CAAC7iD,CAAD,EAAI,EAAJ,CAA3B;;AACA,MAAM+iD,GAAG,GAAI/iD,CAAD,IAAO,CAACA,CAAC,GAAG,EAAL,EAASqb,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAnB;;AACA,MAAM2nC,GAAG,GAAG,CAAChjD,CAAD,EAAIyvC,CAAJ,EAAOwT,CAAP,KAAajjD,CAAC,CAAC,0BAAD,CAAD,CAA8ByvC,CAA9B,EAAiCwT,CAAjC,CAAzB;;AACA,MAAMC,GAAG,GAAIljD,CAAD,IAAOA,CAAC,CAAC,8CAAD,CAAD,CAAkD,CAAlD,IAAuD,EAA1E;;AACO,SAASqiD,WAAT,CAAqBriD,CAArB,EAAwB;EAC3B,OAAO+iD,GAAG,CAAC/iD,CAAD,CAAH,CAAO2iD,GAAP,MAAiB,MAAM,CAAvB,GAA4BC,GAAG,CAACI,GAAG,CAACD,GAAG,CAAC/iD,CAAD,CAAJ,EAAS4iD,GAAG,CAAC,IAAD,CAAZ,EAAoBM,GAAG,CAAC,MAAD,CAAvB,CAAJ,CAAH,IAA4CN,GAAG,CAACI,GAAG,CAACD,GAAG,CAAC/iD,CAAD,CAAJ,EAASkjD,GAAG,CAAC,GAAD,CAAZ,EAAmBA,GAAG,CAAC,MAAD,CAAH,IAAe,CAAlC,CAAJ,CAAH,IAAgD,CAAE,CAAC,CAAC,CAAC,GAAGP,GAAH,CAAJ,IAAgB,CAAjB,IAAsB,CAAlH,CAA5B,GAAmJ,CAA1J;AACH;;AACM,SAASV,cAAT,CAAwBjiD,CAAxB,EAA2B;EAC9BA,CAAC,GAAG,CAACA,CAAC,GAAG,EAAL,EAASqb,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAJ;;EACA,IAAIrb,CAAC,CAAC2iD,GAAD,CAAD,KAAWO,GAAG,CAAC,MAAD,CAAlB,EAA4B;IACxB,OAAO,KAAP;EACH;;EACD,IAAIC,EAAE,GAAG,CAAT;EACA,OAAO,CAAC,CAAC,CAAD,EAAID,GAAG,CAAC,MAAD,CAAH,GAAc,CAAlB,CAAD,EAAuB,CAACA,GAAG,CAAC,MAAD,CAAJ,EAAcA,GAAG,CAAC,MAAD,CAAH,GAAc,CAA5B,CAAvB,EAAuD,CAACA,GAAG,CAAC,GAAD,CAAH,GAAWA,GAAG,CAAC,GAAD,CAAf,EAAsBA,GAAG,CAAC,MAAD,CAAzB,CAAvD,EAA2FpoC,MAA3F,CAAkG,CAACwH,CAAD,QAAY0f,CAAZ,KAAkB;IAAA,IAAd,CAACohB,CAAD,EAAIC,CAAJ,CAAc;IACvH/gC,CAAC,IAAI,CAACwgC,GAAG,CAAE,GAAEA,GAAG,CAACF,GAAG,CAACI,GAAG,CAAChjD,CAAD,EAAI,GAAG,CAACmjD,EAAE,GAAGC,CAAL,IAAUphB,CAAC,KAAM,KAAK,CAAZ,GAAiB,CAAjB,GAAqB,CAA/B,CAAD,EAAoCqhB,CAAC,IAAI,CAACrhB,CAAD,GAAK,CAAL,GAAS,CAAb,CAArC,CAAP,CAAJ,CAAH,GAAwE,CAAC4gB,GAAG,CAACI,GAAG,CAAChjD,CAAD,EAAI,GAAG,CAACmjD,EAAE,GAAGC,CAAL,GAASC,CAAV,EAAa,CAAb,CAAP,CAAJ,CAAH,GAAkC,EAAnC,EAAuCC,QAAvC,CAAgD,CAAhD,EAAmD,GAAnD,CAAzE,CAAkI,EAAzI,CAAH,GAAiJ,EAAjJ,IAAuJ,CAAxJ,KAA8J,CAAnK;IACAH,EAAE,IAAI,CAAN;IACA,OAAO7gC,CAAP;EACH,CAJM,EAIJ4gC,GAAG,CAAC,GAAD,CAJC,MAIW,KAAK,CAAL,IAAU,CAJ5B;AAKH;AACD,mB;;;;;;;;;;;;ACvBA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAjBA;AACA;AACA;AACA;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMjsD,YAAN,CAAmB;EACtBqF,WAAW,CAACinD,OAAD,EAAUC,MAAV,EAAkBvtC,gBAAlB,EAAoCwtC,aAApC,EAAmDC,OAAnD,EAA4DC,SAA5D,EAAuEC,kBAAvE,EAA2FC,UAA3F,EAAuGC,6BAAvG,EAAsIC,eAAtI,EAAuJC,SAAvJ,EAAkKC,iBAAlK,EAAqLC,cAArL,EAAqMC,iBAArM,EAAwN;IAC/N,KAAKZ,OAAL,GAAeA,OAAf;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKvtC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKwtC,aAAL,GAAqBA,aAArB;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,6BAAL,GAAqCA,6BAArC;IACA,KAAKC,eAAL,GAAuBA,eAAvB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,QAAL,GAAgB,IAAIC,gBAAJ,EAAhB;IACA,KAAKC,oBAAL,GAA4B,KAA5B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC4B,WAAb/qD,aAAa,GAAG;IACvB,OAAO,IAAAi/C,wBAAA,GAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACa,IAAL93C,KAAK,GAAG;IACR,OAAO,KAAK0U,eAAL,CAAqB1U,KAA5B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACoB,IAAZpC,YAAY,GAAG;IACf,OAAO,KAAK8W,eAAL,CAAqB9W,YAA5B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACoB,IAAZE,YAAY,GAAG;IACf,OAAO,KAAK4W,eAAL,CAAqB5W,YAA5B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACoB,IAAZD,YAAY,GAAG;IACf,OAAO,KAAK6W,eAAL,CAAqB7W,YAA5B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACsB,IAAdF,cAAc,GAAG;IACjB,OAAO,KAAK+W,eAAL,CAAqB/W,cAA5B;EACH;EACD;;;EACmB,IAAf+W,eAAe,GAAG;IAClB,OAAO,KAAKa,gBAAZ;EACH;EACD;;;EACa,IAATsuC,SAAS,GAAG;IACZ,OAAO,KAAKV,UAAZ;EACH;EACD;;;EACgB,IAAZ9mB,YAAY,GAAG;IACf,OAAO,KAAK0mB,aAAZ;EACH;EACD;;;EACgC,IAA5B/kD,4BAA4B,GAAG;IAC/B,OAAO,KAAKolD,6BAAZ;EACH;EACD;AACJ;AACA;AACA;AACA;;;EAC+B,IAAvB7M,uBAAuB,GAAG;IAC1B,OAAO,KAAKsM,OAAL,CAAatM,uBAApB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACyB,OAAduN,cAAc,CAACznD,KAAD,EAAiD;IAAA,IAAzC0nD,WAAyC,uEAA3B,EAA2B;IAAA,IAAvB7lD,gBAAuB,uEAAJ,EAAI;IAClE,OAAO,KAAK8lD,oBAAL,CAA0BC,sCAAA,CAAmBC,cAAnB,CAAkC7nD,KAAlC,EAAyC0nD,WAAzC,EAAsD7lD,gBAAtD,CAA1B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC0B,OAAfimD,eAAe,CAACC,MAAD,EAAkD;IAAA,IAAzCL,WAAyC,uEAA3B,EAA2B;IAAA,IAAvB7lD,gBAAuB,uEAAJ,EAAI;IACpE,OAAO,KAAK8lD,oBAAL,CAA0BC,sCAAA,CAAmBE,eAAnB,CAAmCC,MAAnC,EAA2CL,WAA3C,EAAwD7lD,gBAAxD,CAA1B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACqB,OAAV8C,UAAU,GAA0C;IAAA,IAAzC+iD,WAAyC,uEAA3B,EAA2B;IAAA,IAAvB7lD,gBAAuB,uEAAJ,EAAI;IACvD,OAAO,KAAK8lD,oBAAL,CAA0BC,sCAAA,CAAmBjjD,UAAnB,CAA8B+iD,WAA9B,EAA2C7lD,gBAA3C,CAA1B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACsB,OAAXk4C,WAAW,CAACiO,YAAD,EAAe;IAC7B,IAAAhM,uCAAA,EAAkBgM,YAAlB,EAAgC,QAAhC,EAA0C,cAA1C;IACA,MAAMxtC,GAAG,GAAG,KAAKytC,mBAAL,CAAyBniC,GAAzB,CAA6BkiC,YAA7B,CAAZ;;IACA,IAAIxtC,GAAG,KAAKlb,SAAZ,EAAuB;MACnB,MAAM,IAAInE,kCAAJ,EAAN;IACH,CAFD,MAGK;MACD,OAAOqf,GAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC2B,OAAhB9d,gBAAgB,CAACsrD,YAAD,EAAeE,eAAf,EAAgC;IACnD,IAAAlM,uCAAA,EAAkBgM,YAAlB,EAAgC,QAAhC,EAA0C,cAA1C;;IACA,IAAI,KAAKC,mBAAL,CAAyBpkD,GAAzB,CAA6BmkD,YAA7B,CAAJ,EAAgD;MAC5C,MAAM,IAAI5sD,sCAAJ,EAAN;IACH,CAFD,MAGK;MACD,KAAK6sD,mBAAL,CAAyB9hC,GAAzB,CAA6B6hC,YAA7B,EAA2C,IAAAhR,6BAAA,EAAwBkR,eAAxB,CAA3C;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC6B,OAAlBC,kBAAkB,CAACH,YAAD,EAAe;IACpC,IAAAhM,uCAAA,EAAkBgM,YAAlB,EAAgC,QAAhC,EAA0C,cAA1C;;IACA,IAAI,KAAKC,mBAAL,CAAyBpkD,GAAzB,CAA6BmkD,YAA7B,CAAJ,EAAgD;MAC5C,KAAKC,mBAAL,CAAyBlzC,MAAzB,CAAgCizC,YAAhC;IACH,CAFD,MAGK;MACD,MAAM,IAAI7sD,kCAAJ,EAAN;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACsC,OAA3BitD,2BAA2B,GAAG;IACjC,OAAO93C,KAAK,CAACC,IAAN,CAAW,KAAK03C,mBAAL,CAAyB1R,IAAzB,EAAX,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACiC,OAAtBp5C,sBAAsB,CAACkrD,MAAD,EAAS1R,YAAT,EAAuB;IAChD2R,kCAAA,CAAiBnrD,sBAAjB,CAAwCkrD,MAAxC,EAAgD1R,YAAhD;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACmC,OAAxB4R,wBAAwB,CAACF,MAAD,EAAS;IACpCC,kCAAA,CAAiBC,wBAAjB,CAA0CF,MAA1C;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC2B,OAAhBG,gBAAgB,CAACttC,UAAD,EAAamtC,MAAb,EAAqB1R,YAArB,EAAmC;IACtD,IAAAqF,uCAAA,EAAkB9gC,UAAlB,EAA8B,QAA9B,EAAwC,YAAxC;;IACAotC,kCAAA,CAAiBE,gBAAjB,CAAkCttC,UAAlC,EAA8CmtC,MAA9C,EAAsD1R,YAAtD;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC6B,OAAlB8R,kBAAkB,CAACvtC,UAAD,EAAa;IAClC,IAAA8gC,uCAAA,EAAkB9gC,UAAlB,EAA8B,QAA9B,EAAwC,YAAxC;;IACAotC,kCAAA,CAAiBG,kBAAjB,CAAoCvtC,UAApC;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACiC,OAAtBwtC,sBAAsB,GAAG;IAC5BJ,kCAAA,CAAiBK,aAAjB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACqC,OAA1BC,0BAA0B,CAACC,IAAD,EAAO;IACpC,IAAA7M,uCAAA,EAAkB6M,IAAlB,EAAwB,QAAxB,EAAkC,MAAlC;;IACA,MAAMnS,WAAW,GAAG4R,kCAAA,CAAiBQ,wBAAjB,EAApB;;IACA,MAAMrsD,QAAQ,GAAG,KAAKs9C,WAAL,CAAiB8O,IAAjB,CAAjB;IACA,OAAOpsD,QAAQ,CAACg6C,uBAAT,CAAiCC,WAAjC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC4B,OAAjBqS,iBAAiB,CAAC7tC,UAAD,EAAa;IACjC,IAAA8gC,uCAAA,EAAkB9gC,UAAlB,EAA8B,QAA9B,EAAwC,YAAxC;IACA,OAAOotC,kCAAA,CAAiBS,iBAAjB,CAAmC7tC,UAAnC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACgC,OAArB8tC,qBAAqB,GAAG;IAC3B,OAAOV,kCAAA,CAAiBW,UAAjB,EAAP;EACH;;EAC0B,OAApBtB,oBAAoB,CAACuB,MAAD,EAAS;IAChC,OAAO,IAAIhvD,YAAJ,CAAiBgvD,MAAM,CAACtkD,MAAxB,EAAgCskD,MAAM,CAACxnD,KAAvC,EAA8CwnD,MAAM,CAAC7wC,eAArD,EAAsE6wC,MAAM,CAAClpB,YAA7E,EAA2FkpB,MAAM,CAACC,MAAlG,EAA0GD,MAAM,CAACE,QAAjH,EAA2HF,MAAM,CAACG,iBAAlI,EAAqJH,MAAM,CAAC1B,SAA5J,EAAuK0B,MAAM,CAACvnD,4BAA9K,EAA4MunD,MAAM,CAACI,cAAnN,EAAmOJ,MAAM,CAAChvB,QAA1O,EAAoPgvB,MAAM,CAACrnD,gBAA3P,EAA6QqnD,MAAM,CAACjpB,aAApR,EAAmSipB,MAAM,CAACtnD,gBAA1S,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIkN,YAAY,CAACoE,WAAD,EAAc;IACtB,IAAI,CAAC,IAAArS,yBAAA,EAAoBqS,WAApB,CAAL,EAAuC;MACnC,MAAM,IAAIpY,gCAAJ,CAA6B,mBAA7B,EAAkD,aAAlD,CAAN;IACH;;IACD,KAAKyuD,8BAAL;IACA,OAAO,KAAKpC,cAAL,CAAoBr4C,YAApB,CAAiCoE,WAAjC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIs2C,cAAc,CAACt2C,WAAD,EAAc;IACxB,IAAI,CAAC,IAAArS,yBAAA,EAAoBqS,WAApB,CAAL,EAAuC;MACnC,MAAM,IAAIpY,gCAAJ,CAA6B,mBAA7B,EAAkD,aAAlD,CAAN;IACH;;IACD,OAAO,KAAKqsD,cAAL,CAAoBqC,cAApB,CAAmCt2C,WAAnC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIu2C,iBAAiB,CAACv2C,WAAD,EAAc;IAC3B,IAAI,CAAC,IAAArS,yBAAA,EAAoBqS,WAApB,CAAL,EAAuC;MACnC,MAAM,IAAIpY,gCAAJ,CAA6B,mBAA7B,EAAkD,aAAlD,CAAN;IACH;;IACD,KAAKyuD,8BAAL;IACA,OAAO,KAAKpC,cAAL,CAAoBsC,iBAApB,CAAsCv2C,WAAtC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIw2C,cAAc,CAACxgD,OAAD,EAAU;IACpB,IAAA8yC,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;IACA,KAAKqgD,8BAAL;IACA,OAAO,KAAKpC,cAAL,CAAoBuC,cAApB,CAAmCxgD,OAAnC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIygD,gBAAgB,CAACzgD,OAAD,EAAU;IACtB,IAAA8yC,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;IACA,OAAO,KAAKi+C,cAAL,CAAoBwC,gBAApB,CAAqCzgD,OAArC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI0gD,kBAAkB,CAAC1gD,OAAD,EAAU;IACxB,IAAA8yC,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;IACA,KAAKqgD,8BAAL;IACA,OAAO,KAAKpC,cAAL,CAAoByC,kBAApB,CAAuC1gD,OAAvC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI2gD,sBAAsB,GAAG;IACrB,OAAO,KAAK1C,cAAL,CAAoB2C,sBAApB,CAA4CxrD,GAAD,IAAS,KAAKyrD,kBAAL,CAAwBzrD,GAAxB,CAApD,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIyrD,kBAAkB,CAAC7gD,OAAD,EAAU;IACxB,IAAA8yC,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;IACA,OAAO;MACH+E,KAAK,EAAE,KAAKoK,eAAL,CAAqB3I,aAArB,C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O,KAAP;IACH;;IACD,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIimC,eAAe,CAACC,oBAAD,EAAuBC,YAAvB,EAAqC;IAChD,KAAK1E,eAAL,CAAqBwE,eAArB,CAAqCC,oBAArC,EAA2DC,YAA3D;;IACA,OAAO,KAAKV,iCAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIW,cAAc,CAACziD,OAAD,EAAUmuC,UAAV,EAAsB;IAChC,IAAA2E,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,KAAK89C,eAAL,CAAqB4E,WAArB,CAAiC1iD,OAAjC,EAA0CmuC,UAA1C;;IACA,OAAO,KAAK2T,iCAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIa,4BAA4B,CAAC3iD,OAAD,EAAUmuC,UAAV,EAAsB;IAC9C,IAAA2E,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,IAAI;MACA,KAAK89C,eAAL,CAAqB8E,sBAArB,CAA4C5iD,OAA5C,EAAqDmuC,UAArD;;MACA,KAAK2P,eAAL,CAAqB+E,qBAArB,CAA2C7iD,OAA3C,EAAoDmuC,UAApD;;MACA,OAAO,IAAP;IACH,CAJD,CAKA,OAAO9xB,CAAP,EAAU;MACN,OAAO,KAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIqmC,WAAW,CAAC1iD,OAAD,EAAU8iD,WAAV,EAAuB;IAC9B,IAAAhQ,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,MAAM6iC,OAAO,GAAG,KAAKib,eAAL,CAAqBiF,gBAArB,CAAsC/iD,OAAtC,EAA+C8iD,WAA/C,EAA4D,KAA5D,CAAhB;;IACA,OAAO,KAAKL,cAAL,CAAoBziD,OAApB,EAA6B6iC,OAA7B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACImgB,yBAAyB,CAAChjD,OAAD,EAAU8iD,WAAV,EAAuB;IAC5C,IAAAhQ,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,IAAI;MACA,MAAMmuC,UAAU,GAAG,KAAK2P,eAAL,CAAqBiF,gBAArB,CAAsC/iD,OAAtC,EAA+C8iD,WAA/C,EAA4D,KAA5D,CAAnB;;MACA,KAAKhF,eAAL,CAAqB8E,sBAArB,CAA4C5iD,OAA5C,EAAqDmuC,UAArD;;MACA,KAAK2P,eAAL,CAAqB+E,qBAArB,CAA2C7iD,OAA3C,EAAoDmuC,UAApD;;MACA,OAAO,IAAP;IACH,CALD,CAMA,OAAO9xB,CAAP,EAAU;MACN,OAAO,KAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI4mC,iBAAiB,CAACjjD,OAAD,EAAUkjD,aAAV,EAAyB;IACtC,IAAApQ,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,KAAK89C,eAAL,CAAqBqF,cAArB,CAAoCnjD,OAApC,EAA6CkjD,aAA7C;;IACA,OAAO,KAAKpB,iCAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIsB,+BAA+B,CAACpjD,OAAD,EAAUkjD,aAAV,EAAyB;IACpD,IAAApQ,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,IAAI;MACA,KAAK89C,eAAL,CAAqBuF,yBAArB,CAA+CrjD,OAA/C,EAAwDkjD,aAAxD;;MACA,KAAKpF,eAAL,CAAqBwF,wBAArB,CAA8CtjD,OAA9C,EAAuDkjD,aAAvD;;MACA,OAAO,IAAP;IACH,CAJD,CAKA,OAAO7mC,CAAP,EAAU;MACN,OAAO,KAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI8mC,cAAc,CAACnjD,OAAD,EAAUujD,cAAV,EAA0B;IACpC,IAAAzQ,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,MAAM6iC,OAAO,GAAG,KAAKib,eAAL,CAAqBiF,gBAArB,CAAsC/iD,OAAtC,EAA+CujD,cAA/C,EAA+D,QAA/D,CAAhB;;IACA,OAAO,KAAKN,iBAAL,CAAuBjjD,OAAvB,EAAgC6iC,OAAhC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AAC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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIk6C,GAAG,CAACl6C,MAAD,EAAS;IACR,IAAI,CAAC,IAAAe,oCAAA,EAAkBf,MAAlB,CAAL,EAAgC;MAC5B,MAAM,IAAIrZ,gCAAJ,CAA6B,iBAA7B,EAAgD,QAAhD,CAAN;IACH;;IACD,MAAM4I,KAAK,GAAG,IAAIR,oCAAJ,CAAsBiR,MAAM,CAACrR,KAA7B,EAAoCqR,MAAM,CAACpR,GAA3C,CAAd;;IACA,KAAKikD,eAAL,CAAqBqH,GAArB,CAAyB3qD,KAAK,CAACZ,KAA/B,EAAsCY,KAAK,CAACuK,KAAN,EAAtC,EAAqDvK,KAAK,CAACwK,MAAN,EAArD;;IACA,OAAO,KAAKkgD,cAAL,CAAoBj6C,MAApB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIm6C,KAAK,CAACC,gBAAD,EAAmB;IACpB,IAAI,CAAC,IAAA1tD,yBAAA,EAAoB0tD,gBAApB,CAAL,EAA4C;MACxC,MAAM,IAAIzzD,gCAAJ,CAA6B,mBAA7B,EAAkD,kBAAlD,CAAN;IACH;;IACD,KAAKyuD,8BAAL;;IACA,KAAKvC,eAAL,CAAqBsH,KAArB,CAA2BC,gBAA3B;;IACA,OAAO,KAAKvD,iCAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIwD,gBAAgB,GAAG;IACf,OAAO,KAAKxH,eAAL,CAAqBwH,gBAArB,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,cAAc,GAAG;IACb,KAAKzH,eAAL,CAAqByH,cAArB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,cAAc,GAAG;IACb,KAAK1H,eAAL,CAAqB2H,QAArB,CAA8BD,cAA9B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIE,cAAc,GAAG;IACb,KAAK5H,eAAL,CAAqB2H,QAArB,CAA8BC,cAA9B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIR,cAAc,CAACj6C,MAAD,EAAS;IACnB,IAAI,CAAC,IAAAe,oCAAA,EAAkBf,MAAlB,CAAL,EAAgC;MAC5B,MAAM,IAAIrZ,gCAAJ,CAA6B,iBAA7B,EAAgD,QAAhD,CAAN;IACH;;IACD,MAAM+zD,SAAS,GAAG,IAAI3rD,oCAAJ,CAAsBiR,MAAM,CAACrR,KAA7B,EAAoCqR,MAAM,CAACpR,GAA3C,CAAlB;IACA,OAAO8rD,SAAS,CAAC/2C,uBAAV,GAAoC1V,GAApC,CAAyC0sD,QAAD,IAAcA,QAAQ,CAAC1sD,GAAT,CAAc9E,OAAD,IAAa,KAAKwR,YAAL,CAAkBxR,OAAlB,CAA1B,CAAtD,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIyxD,gBAAgB,CAAC56C,MAAD,EAAS;IACrB,IAAI,CAAC,IAAAe,oCAAA,EAAkBf,MAAlB,CAAL,EAAgC;MAC5B,MAAM,IAAIrZ,gCAAJ,CAA6B,iBAA7B,EAAgD,QAAhD,CAAN;IACH;;IACD,MAAM+zD,SAAS,GAAG,IAA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AAP;IACH,CAHD,CAIA,OAAOiW,CAAP,EAAU;MACN,OAAO,KAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI2mB,QAAQ,CAAC58B,SAAD,EAAY;IAChB,IAAIA,SAAS,KAAKhQ,SAAlB,EAA6B;MACzB,IAAA08C,uCAAA,EAAkB1sC,SAAlB,EAA6B,QAA7B,EAAuC,WAAvC;IACH;;IACD,MAAMigD,cAAc,GAAG,KAAKvI,eAAL,CAAqB9a,QAArB,CAA8B58B,SAA9B,CAAvB;;IACA,KAAK+3C,QAAL,CAAcmI,IAAd,CAAmBC,eAAA,CAAOC,UAA1B,EAAsCH,cAAtC;;IACA,OAAOA,cAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACII,yBAAyB,CAACzmD,OAAD,EAAU;IAC/B,IAAA8yC,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;;IACA,IAAI;MACA,KAAK89C,eAAL,CAAqB4I,oBAArB,CAA0C1mD,OAA1C;;MACA,OAAO,IAAP;IACH,CAHD,CAIA,OAAOqc,CAAP,EAAU;MACN,OAAO,KAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIxa,WAAW,CAAC7B,OAAD,EAAU;IACjB,IAAA8yC,uCAAA,EAAkB9yC,OAAlB,EAA2B,QAA3B,EAAqC,SAArC;IACA,MAAM8uB,WAAW,GAAG,KAAKx2B,YAAL,CAAkB2zC,cAAlB,CAAiCjsC,OAAjC,CAApB;;IACA,KAAK89C,eAAL,CAAqBj8C,WAArB,CAAiC7B,OAAjC;;IACA,MAAMp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EACImnD,aAAa,GAAG;IACZ,OAAO,KAAK7uD,YAAL,CAAkBq0C,UAAlB,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIxmC,UAAU,CAACC,SAAD,EAAY;IAClB,IAAA0sC,uCAAA,EAAkB1sC,SAAlB,EAA6B,QAA7B,EAAuC,WAAvC;IACA,OAAO,KAAK9N,YAAL,CAAkBskB,GAAlB,CAAsBxW,SAAtB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIghD,cAAc,CAAChhD,SAAD,EAAY;IACtB,IAAA0sC,uCAAA,EAAkB1sC,SAAlB,EAA6B,QAA7B,EAAuC,WAAvC;IACA,OAAO,KAAK9N,YAAL,CAAkB+zC,gBAAlB,CAAmCjmC,SAAnC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIlS,WAAW,CAAC8V,WAAD,EAAc;IACrB,IAAI,CAAC,IAAArS,yBAAA,EAAoBqS,WAApB,CAAL,EAAuC;MACnC,MAAM,IAAIpY,gCAAJ,CAA6B,mBAA7B,EAAkD,aAAlD,CAAN;IACH;;IACD,MAAMuC,MAAM,GAAG,KAAKgb,eAAL,CAAqBpU,OAArB,CAA6BiP,WAA7B,CAAf;IACA,OAAO,IAAA9V,iBAAA,EAAYC,MAAZ,EAAoB6V,WAApB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIq9C,uBAAuB,CAACr9C,WAAD,EAAc;IACjC,IAAI,CAAC,IAAArS,yBAAA,EAAoBqS,WAApB,CAAL,EAAuC;MACnC,MAAM,IAAIpY,gCAAJ,CAA6B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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACII,KAAK,CAACC,eAAD,EAAkB;IACnB,KAAKC,iBAAL;;IACA,KAAKpK,eAAL,CAAqBqK,sBAArB;;IACA,IAAI;MACAF,eAAe;IAClB,CAFD,CAGA,OAAO5rC,CAAP,EAAU;MACN,KAAKyhC,eAAL,CAAqBsK,uBAArB;;MACA,KAAKC,gBAAL;MACA,MAAOhsC,CAAP;IACH;;IACD,KAAKyhC,eAAL,CAAqBsK,uBAArB;;IACA,OAAO,KAAKC,gBAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIH,iBAAiB,GAAG;IAChB,KAAK7J,oBAAL,GAA4B,IAA5B;;IACA,KAAKF,QAAL,CAAcmI,IAAd,CAAmBC,eAAA,CAAO+B,mBAA1B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACID,gBAAgB,GAAG;IACf,KAAKhK,oBAAL,GAA4B,KAA5B;IACA,MAAMzlD,OAAO,GAAG,KAAKkpD,iCAAL,EAAhB;;IACA,KAAK3D,QAAL,CAAcmI,IAAd,CAAmBC,eAAA,CAAOgC,iBAA1B,EAA6C3vD,OAA7C;;IACA,OAAOA,OAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI4vD,qBAAqB,GAAG;IACpB,OAAO,KAAKnK,oBAAZ;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIgtC,qBAAqB,CAACtpD,cAAD,EAAiBopD,aAAjB,EAAgCT,KAAhC,EAAuCrZ,OAAvC,EAAgD;IACjE,IAAAyD,uCAAA,EAAkB/yC,cAAlB,EAAkC,QAAlC,EAA4C,gBAA5C;;IACA,IAAI2oD,KAAK,KAAKtyD,SAAd,EAAyB;MACrB,IAAA08C,uCAAA,EAAkB4V,KAAlB,EAAyB,QAAzB,EAAmC,OAAnC;IACH;;IACD,KAAK5K,eAAL,CAAqBwL,+BAArB,CAAqDvpD,cAArD,EAAqE2oD,KAArE,EAA4ES,aAA5E,EAA2F9Z,OAA3F;;IACA,OAAO,KAAKyS,iCAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIyH,mCAAmC,CAACxpD,cAAD,EAAiB2oD,KAAjB,EAAwB;IACvD,IAAA5V,uCAAA,EAAkB/yC,cAAlB,EAAkC,QAAlC,EAA4C,gBAA5C;;IACA,IAAI2oD,KAAK,KAAKtyD,SAAd,EAAyB;MACrB,IAAA08C,uCAAA,EAAkB4V,KAAlB,EAAyB,QAAzB,EAAmC,OAAnC;IACH;;IACD,IAAI;MACA,KAAK5K,eAAL,CAAqByL,mCAArB,CAAyDxpD,cAAzD,EAAyE2oD,KAAzE;;MACA,OAAO,IAAP;IACH,CAHD,CAIA,OAAOrsC,CAAP,EAAU;MACN,OAAO,KAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACImtC,qBAAqB,CAACzpD,cAAD,EAAiB2oD,KAAjB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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAGIC,YAAY,CAACD,WAAD,EAAc;IACtB,IAAAxX,uCAAA,EAAkBwX,WAAlB,EAA+B,QAA/B,EAAyC,KAAzC;IACA,OAAO,KAAK1M,UAAL,CAAgBxoB,WAAhB,CAA4B6B,cAA5B,CAA2C6e,kBAA3C,CAA8DwU,WAA9D,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIE,YAAY,CAACF,WAAD,EAAc;IACtB,IAAAxX,uCAAA,EAAkBwX,WAAlB,EAA+B,QAA/B,EAAyC,KAAzC;IACA,OAAO,IAAAvT,kCAAA,EAAmBuT,WAAnB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIG,EAAE,CAACC,KAAD,EAAQC,QAAR,EAAkB;IAChB,KAAKxM,QAAL,CAAcsM,EAAd,CAAiBC,KAAjB,EAAwBC,QAAxB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,IAAI,CAACF,KAAD,EAAQC,QAAR,EAAkB;IAClB,KAAKxM,QAAL,CAAcyM,IAAd,CAAmBF,KAAnB,EAA0BC,QAA1B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIE,GAAG,CAACH,KAAD,EAAQC,QAAR,EAAkB;IACjB,KAAKxM,QAAL,CAAc0M,GAAd,CAAkBH,KAAlB,EAAyBC,QAAzB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIG,OAAO,GAAG;IACN,I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","file":"hyperformula.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chevrotain\"), require(\"unorm\"), require(\"tiny-emitter\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"HyperFormula\", [\"chevrotain\", \"unorm\", \"tiny-emitter\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HyperFormula\"] = factory(require(\"chevrotain\"), require(\"unorm\"), require(\"tiny-emitter\"));\n\telse\n\t\troot[\"HyperFormula\"] = factory(root[\"chevrotain\"], root[\"unorm\"], root[\"TinyEmitter\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__12__, __WEBPACK_EXTERNAL_MODULE__30__, __WEBPACK_EXTERNAL_MODULE__98__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, CellType, CellValueDetailedType, CellValueType, ErrorType } from './Cell';\r\nimport { DetailedCellError } from './CellValue';\r\nimport { Config } from './Config';\r\nimport { AlwaysDense, AlwaysSparse, DenseSparseChooseBasedOnThreshold } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\r\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError, UnableToParseError } from './errors';\r\nimport { ExportedCellChange, ExportedNamedExpressionChange } from './Exporter';\r\nimport { HyperFormula } from './HyperFormula';\r\nimport enGB from './i18n/languages/enGB';\r\nimport { FunctionPlugin } from './interpreter';\r\nimport * as plugins from './interpreter/plugin';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\n/** @internal */\r\nclass HyperFormulaNS extends HyperFormula {\r\n}\r\nHyperFormulaNS.HyperFormula = HyperFormula;\r\nHyperFormulaNS.ErrorType = ErrorType;\r\nHyperFormulaNS.CellType = CellType;\r\nHyperFormulaNS.CellValueType = CellValueType;\r\nHyperFormulaNS.CellValueDetailedType = CellValueDetailedType;\r\nHyperFormulaNS.DetailedCellError = DetailedCellError;\r\nHyperFormulaNS.ExportedCellChange = ExportedCellChange;\r\nHyperFormulaNS.ExportedNamedExpressionChange = ExportedNamedExpressionChange;\r\nHyperFormulaNS.ConfigValueTooBigError = ConfigValueTooBigError;\r\nHyperFormulaNS.ConfigValueTooSmallError = ConfigValueTooSmallError;\r\nHyperFormulaNS.EvaluationSuspendedError = EvaluationSuspendedError;\r\nHyperFormulaNS.ExpectedOneOfValuesError = ExpectedOneOfValuesError;\r\nHyperFormulaNS.ExpectedValueOfTypeError = ExpectedValueOfTypeError;\r\nHyperFormulaNS.FunctionPlugin = FunctionPlugin;\r\nHyperFormulaNS.FunctionPluginValidationError = FunctionPluginValidationError;\r\nHyperFormulaNS.InvalidAddressError = InvalidAddressError;\r\nHyperFormulaNS.InvalidArgumentsError = InvalidArgumentsError;\r\nHyperFormulaNS.LanguageNotRegisteredError = LanguageNotRegisteredError;\r\nHyperFormulaNS.LanguageAlreadyRegisteredError = LanguageAlreadyRegisteredError;\r\nHyperFormulaNS.MissingTranslationError = MissingTranslationError;\r\nHyperFormulaNS.NamedExpressionDoesNotExistError = NamedExpressionDoesNotExistError;\r\nHyperFormulaNS.NamedExpressionNameIsAlreadyTakenError = NamedExpressionNameIsAlreadyTakenError;\r\nHyperFormulaNS.NamedExpressionNameIsInvalidError = NamedExpressionNameIsInvalidError;\r\nHyperFormulaNS.NoOperationToRedoError = NoOperationToRedoError;\r\nHyperFormulaNS.NoOperationToUndoError = NoOperationToUndoError;\r\nHyperFormulaNS.NoRelativeAddressesAllowedError = NoRelativeAddressesAllowedError;\r\nHyperFormulaNS.NoSheetWithIdError = NoSheetWithIdError;\r\nHyperFormulaNS.NoSheetWithNameError = NoSheetWithNameError;\r\nHyperFormulaNS.NotAFormulaError = NotAFormulaError;\r\nHyperFormulaNS.NothingToPasteError = NothingToPasteError;\r\nHyperFormulaNS.ProtectedFunctionTranslationError = ProtectedFunctionTranslationError;\r\nHyperFormulaNS.SheetNameAlreadyTakenError = SheetNameAlreadyTakenError;\r\nHyperFormulaNS.SheetSizeLimitExceededError = SheetSizeLimitExceededError;\r\nHyperFormulaNS.SourceLocationHasArrayError = SourceLocationHasArrayError;\r\nHyperFormulaNS.TargetLocationHasArrayError = TargetLocationHasArrayError;\r\nHyperFormulaNS.UnableToParseError = UnableToParseError;\r\nconst defaultLanguage = Config.defaultConfig.language;\r\nHyperFormula.registerLanguage(defaultLanguage, enGB);\r\nHyperFormula.languages[enGB.langCode] = enGB;\r\nfor (const pluginName of Object.getOwnPropertyNames(plugins)) {\r\n    if (!pluginName.startsWith('_')) {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n        // @ts-ignore\r\n        HyperFormula.registerFunctionPlugin(plugins[pluginName]);\r\n    }\r\n}\r\nexport default HyperFormulaNS;\r\nexport { AlwaysDense, AlwaysSparse, DenseSparseChooseBasedOnThreshold, HyperFormula, CellType, CellValueType, CellValueDetailedType, ErrorType, ExportedCellChange, ExportedNamedExpressionChange, DetailedCellError, CellError, ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPlugin, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SimpleRangeValue, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError, UnableToParseError, };\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\r\nimport { ErrorMessage } from './error-message';\r\nimport { EmptyValue, getFormatOfExtendedNumber, getTypeOfExtendedNumber, isExtendedNumber, NumberType, } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\n/**\r\n * Possible errors returned by our interpreter.\r\n */\r\nexport var ErrorType;\r\n(function (ErrorType) {\r\n    /** Division by zero. */\r\n    ErrorType[\"DIV_BY_ZERO\"] = \"DIV_BY_ZERO\";\r\n    /** Unknown function name. */\r\n    ErrorType[\"NAME\"] = \"NAME\";\r\n    ErrorType[\"VALUE\"] = \"VALUE\";\r\n    ErrorType[\"NUM\"] = \"NUM\";\r\n    ErrorType[\"NA\"] = \"NA\";\r\n    /** Cyclic dependency. */\r\n    ErrorType[\"CYCLE\"] = \"CYCLE\";\r\n    /** Wrong address reference. */\r\n    ErrorType[\"REF\"] = \"REF\";\r\n    /** Array spill error. */\r\n    ErrorType[\"SPILL\"] = \"SPILL\";\r\n    /** Invalid/missing licence error. */\r\n    ErrorType[\"LIC\"] = \"LIC\";\r\n    /** Generic error */\r\n    ErrorType[\"ERROR\"] = \"ERROR\";\r\n})(ErrorType || (ErrorType = {}));\r\nexport var CellType;\r\n(function (CellType) {\r\n    CellType[\"FORMULA\"] = \"FORMULA\";\r\n    CellType[\"VALUE\"] = \"VALUE\";\r\n    CellType[\"ARRAY\"] = \"ARRAY\";\r\n    CellType[\"EMPTY\"] = \"EMPTY\";\r\n    CellType[\"ARRAYFORMULA\"] = \"ARRAYFORMULA\";\r\n})(CellType || (CellType = {}));\r\nexport const getCellType = (vertex, address) => {\r\n    if (vertex instanceof ArrayVertex) {\r\n        if (vertex.isLeftCorner(address)) {\r\n            return CellType.ARRAYFORMULA;\r\n        }\r\n        else {\r\n            return CellType.ARRAY;\r\n        }\r\n    }\r\n    if (vertex instanceof FormulaCellVertex || vertex instanceof ParsingErrorVertex) {\r\n        return CellType.FORMULA;\r\n    }\r\n    if (vertex instanceof ValueCellVertex) {\r\n        return CellType.VALUE;\r\n    }\r\n    return CellType.EMPTY;\r\n};\r\nexport var CellValueNoNumber;\r\n(function (CellValueNoNumber) {\r\n    CellValueNoNumber[\"EMPTY\"] = \"EMPTY\";\r\n    CellValueNoNumber[\"NUMBER\"] = \"NUMBER\";\r\n    CellValueNoNumber[\"STRING\"] = \"STRING\";\r\n    CellValueNoNumber[\"BOOLEAN\"] = \"BOOLEAN\";\r\n    CellValueNoNumber[\"ERROR\"] = \"ERROR\";\r\n})(CellValueNoNumber || (CellValueNoNumber = {}));\r\nexport var CellValueJustNumber;\r\n(function (CellValueJustNumber) {\r\n    CellValueJustNumber[\"NUMBER\"] = \"NUMBER\";\r\n})(CellValueJustNumber || (CellValueJustNumber = {}));\r\nexport const CellValueType = Object.assign(Object.assign({}, CellValueNoNumber), CellValueJustNumber);\r\nexport const CellValueDetailedType = Object.assign(Object.assign({}, CellValueNoNumber), NumberType);\r\nexport const CellValueTypeOrd = (arg) => {\r\n    switch (arg) {\r\n        case CellValueType.EMPTY:\r\n            return 0;\r\n        case CellValueType.NUMBER:\r\n            return 1;\r\n        case CellValueType.STRING:\r\n            return 2;\r\n        case CellValueType.BOOLEAN:\r\n            return 3;\r\n        case CellValueType.ERROR:\r\n            return 4;\r\n    }\r\n    throw new Error('Cell value not computed');\r\n};\r\nexport const getCellValueType = (cellValue) => {\r\n    if (cellValue === EmptyValue) {\r\n        return CellValueType.EMPTY;\r\n    }\r\n    if (cellValue instanceof CellError || cellValue instanceof SimpleRangeValue) {\r\n        return CellValueType.ERROR;\r\n    }\r\n    if (typeof cellValue === 'string') {\r\n        return CellValueType.STRING;\r\n    }\r\n    else if (isExtendedNumber(cellValue)) {\r\n        return CellValueType.NUMBER;\r\n    }\r\n    else if (typeof cellValue === 'boolean') {\r\n        return CellValueType.BOOLEAN;\r\n    }\r\n    throw new Error('Cell value not computed');\r\n};\r\nexport const getCellValueDetailedType = (cellValue) => {\r\n    if (isExtendedNumber(cellValue)) {\r\n        return getTypeOfExtendedNumber(cellValue);\r\n    }\r\n    else {\r\n        return getCellValueType(cellValue);\r\n    }\r\n};\r\nexport const getCellValueFormat = (cellValue) => {\r\n    if (isExtendedNumber(cellValue)) {\r\n        return getFormatOfExtendedNumber(cellValue);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nexport class CellError {\r\n    constructor(type, message, root) {\r\n        this.type = type;\r\n        this.message = message;\r\n        this.root = root;\r\n    }\r\n    static parsingError() {\r\n        return new CellError(ErrorType.ERROR, ErrorMessage.ParseError);\r\n    }\r\n    attachRootVertex(vertex) {\r\n        if (this.root === undefined) {\r\n            return new CellError(this.type, this.message, vertex);\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n    }\r\n}\r\nexport const simpleRowAddress = (sheet, row) => ({ sheet, row });\r\nexport const invalidSimpleRowAddress = (address) => (address.row < 0);\r\nexport const simpleColumnAddress = (sheet, col) => ({ sheet, col });\r\nexport const invalidSimpleColumnAddress = (address) => (address.col < 0);\r\nexport const simpleCellAddress = (sheet, col, row) => ({ sheet, col, row });\r\nexport const invalidSimpleCellAddress = (address) => (address.col < 0 || address.row < 0);\r\nexport const movedSimpleCellAddress = (address, toSheet, toRight, toBottom) => {\r\n    return simpleCellAddress(toSheet, address.col + toRight, address.row + toBottom);\r\n};\r\nexport const addressKey = (address) => `${address.sheet},${address.row},${address.col}`;\r\nexport function isSimpleCellAddress(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'col' in obj && typeof obj.col === 'number' && 'row' in obj && typeof obj.row === 'number' && 'sheet' in obj && typeof obj.sheet === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const absoluteSheetReference = (address, baseAddress) => {\r\n    var _a;\r\n    return (_a = address.sheet) !== null && _a !== void 0 ? _a : baseAddress.sheet;\r\n};\r\nexport const equalSimpleCellAddress = (left, right) => {\r\n    return left.sheet === right.sheet && left.col === right.col && left.row === right.row;\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { DependencyGraph } from './DependencyGraph';\r\nexport { AddressMapping } from './AddressMapping/AddressMapping';\r\nexport { Graph } from './Graph';\r\nexport { RangeMapping } from './RangeMapping';\r\nexport { SheetMapping } from './SheetMapping';\r\nexport { ArrayMapping } from './ArrayMapping';\r\nexport { FormulaCellVertex } from './FormulaCellVertex';\r\nexport { EmptyCellVertex } from './EmptyCellVertex';\r\nexport { ValueCellVertex } from './ValueCellVertex';\r\nexport { ParsingErrorVertex } from './ParsingErrorVertex';\r\nexport { RangeVertex } from './RangeVertex';\r\nexport { SparseStrategy } from './AddressMapping/SparseStrategy';\r\nexport { DenseStrategy } from './AddressMapping/DenseStrategy';\r\nexport { ArrayVertex } from './FormulaCellVertex';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, simpleCellRange } from '../AbsoluteCellRange';\r\nimport { absolutizeDependencies } from '../absolutizeDependencies';\r\nimport { CellError, ErrorType, isSimpleCellAddress, simpleCellAddress } from '../Cell';\r\nimport { ContentChanges } from '../ContentChanges';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from '../interpreter/SimpleRangeValue';\r\nimport { collectDependencies, NamedExpressionDependency } from '../parser';\r\nimport { ColumnsSpan, RowsSpan } from '../Span';\r\nimport { StatType } from '../statistics';\r\nimport { ArrayVertex, EmptyCellVertex, FormulaCellVertex, RangeVertex, ValueCellVertex, } from './';\r\nimport { AddressMapping } from './AddressMapping/AddressMapping';\r\nimport { ArrayMapping } from './ArrayMapping';\r\nimport { collectAddressesDependentToRange } from './collectAddressesDependentToRange';\r\nimport { FormulaVertex } from './FormulaCellVertex';\r\nimport { Graph } from './Graph';\r\nimport { RangeMapping } from './RangeMapping';\r\nimport { SheetMapping } from './SheetMapping';\r\nexport class DependencyGraph {\r\n    constructor(addressMapping, rangeMapping, sheetMapping, arrayMapping, stats, lazilyTransformingAstService, functionRegistry, namedExpressions) {\r\n        this.addressMapping = addressMapping;\r\n        this.rangeMapping = rangeMapping;\r\n        this.sheetMapping = sheetMapping;\r\n        this.arrayMapping = arrayMapping;\r\n        this.stats = stats;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.functionRegistry = functionRegistry;\r\n        this.namedExpressions = namedExpressions;\r\n        this.changes = ContentChanges.empty();\r\n        this.dependencyQueryAddresses = (vertex) => {\r\n            if (vertex instanceof RangeVertex) {\r\n                return this.rangeDependencyQuery(vertex).map(([address, _]) => address);\r\n            }\r\n            else {\r\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\r\n                if (dependenciesResult !== undefined) {\r\n                    const [address, dependencies] = dependenciesResult;\r\n                    return dependencies.map((dependency) => {\r\n                        if (dependency instanceof NamedExpressionDependency) {\r\n                            return this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet).address;\r\n                        }\r\n                        else if (isSimpleCellAddress(dependency)) {\r\n                            return dependency;\r\n                        }\r\n                        else {\r\n                            return simpleCellRange(dependency.start, dependency.end);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return [];\r\n                }\r\n            }\r\n        };\r\n        this.dependencyQueryVertices = (vertex) => {\r\n            if (vertex instanceof RangeVertex) {\r\n                return this.rangeDependencyQuery(vertex).map(([_, v]) => v);\r\n            }\r\n            else {\r\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\r\n                if (dependenciesResult !== undefined) {\r\n                    const [address, dependencies] = dependenciesResult;\r\n                    return dependencies.map((dependency) => {\r\n                        if (dependency instanceof AbsoluteCellRange) {\r\n                            return this.rangeMapping.fetchRange(dependency.start, dependency.end);\r\n                        }\r\n                        else if (dependency instanceof NamedExpressionDependency) {\r\n                            const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet);\r\n                            return this.addressMapping.fetchCell(namedExpression.address);\r\n                        }\r\n                        else {\r\n                            return this.addressMapping.fetchCell(dependency);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return [];\r\n                }\r\n            }\r\n        };\r\n        this.rangeDependencyQuery = (vertex) => {\r\n            const allDeps = [];\r\n            const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(vertex.range); //checking whether this range was splitted by bruteForce or not\r\n            let range;\r\n            if (smallerRangeVertex !== undefined && this.graph.adjacentNodes(smallerRangeVertex).has(vertex)) {\r\n                range = restRange;\r\n                allDeps.push([new AbsoluteCellRange(smallerRangeVertex.start, smallerRangeVertex.end), smallerRangeVertex]);\r\n            }\r\n            else { //did we ever need to use full range\r\n                range = vertex.range;\r\n            }\r\n            for (const address of range.addresses(this)) {\r\n                const cell = this.addressMapping.getCell(address);\r\n                if (cell instanceof EmptyCellVertex) {\r\n                    cell.address = address;\r\n                }\r\n                if (cell !== undefined) {\r\n                    allDeps.push([address, cell]);\r\n                }\r\n            }\r\n            return allDeps;\r\n        };\r\n        this.formulaDependencyQuery = (vertex) => {\r\n            let formula;\r\n            let address;\r\n            if (vertex instanceof FormulaVertex) {\r\n                address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                formula = vertex.getFormula(this.lazilyTransformingAstService);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n            const deps = collectDependencies(formula, this.functionRegistry);\r\n            return [address, absolutizeDependencies(deps, address)];\r\n        };\r\n        this.graph = new Graph(this.dependencyQueryVertices);\r\n    }\r\n    /**\r\n     * Invariants:\r\n     * - empty cell has associated EmptyCellVertex if and only if it is a dependency (possibly indirect, through range) to some formula\r\n     */\r\n    static buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats) {\r\n        return new DependencyGraph(new AddressMapping(config.chooseAddressMappingPolicy), new RangeMapping(), new SheetMapping(config.translationPackage), new ArrayMapping(), stats, lazilyTransformingAstService, functionRegistry, namedExpressions);\r\n    }\r\n    setFormulaToCell(address, ast, dependencies, size, hasVolatileFunction, hasStructuralChangeFunction) {\r\n        const newVertex = FormulaVertex.fromAst(ast, address, size, this.lazilyTransformingAstService.version());\r\n        this.exchangeOrAddFormulaVertex(newVertex);\r\n        this.processCellDependencies(dependencies, newVertex);\r\n        this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\r\n        if (hasVolatileFunction) {\r\n            this.markAsVolatile(newVertex);\r\n        }\r\n        if (hasStructuralChangeFunction) {\r\n            this.markAsDependentOnStructureChange(newVertex);\r\n        }\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setParsingErrorToCell(address, errorVertex) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        this.exchangeOrAddGraphNode(vertex, errorVertex);\r\n        this.addressMapping.setCell(address, errorVertex);\r\n        this.graph.markNodeAsSpecialRecentlyChanged(errorVertex);\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setValueToCell(address, value) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.arrayMapping.removeArray(vertex.getRange());\r\n        }\r\n        if (vertex instanceof ValueCellVertex) {\r\n            const oldValues = vertex.getValues();\r\n            if (oldValues.rawValue !== value.rawValue) {\r\n                vertex.setValues(value);\r\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n            }\r\n        }\r\n        else {\r\n            const newVertex = new ValueCellVertex(value.parsedValue, value.rawValue);\r\n            this.exchangeOrAddGraphNode(vertex, newVertex);\r\n            this.addressMapping.setCell(address, newVertex);\r\n            this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\r\n        }\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setCellEmpty(address) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex === undefined) {\r\n            return ContentChanges.empty();\r\n        }\r\n        if (this.graph.adjacentNodes(vertex).size > 0) {\r\n            const emptyVertex = new EmptyCellVertex(address);\r\n            this.exchangeGraphNode(vertex, emptyVertex);\r\n            if (this.graph.adjacentNodesCount(emptyVertex) === 0) {\r\n                this.removeVertex(emptyVertex);\r\n                this.addressMapping.removeCell(address);\r\n            }\r\n            else {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\r\n                this.addressMapping.setCell(address, emptyVertex);\r\n            }\r\n        }\r\n        else {\r\n            this.removeVertex(vertex);\r\n            this.addressMapping.removeCell(address);\r\n        }\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    ensureThatVertexIsNonArrayCellVertex(vertex) {\r\n        if (vertex instanceof ArrayVertex) {\r\n            throw new Error('Illegal operation');\r\n        }\r\n    }\r\n    clearRecentlyChangedVertices() {\r\n        this.graph.clearSpecialNodesRecentlyChanged();\r\n    }\r\n    verticesToRecompute() {\r\n        return new Set([...this.graph.specialNodesRecentlyChanged, ...this.volatileVertices()]);\r\n    }\r\n    processCellDependencies(cellDependencies, endVertex) {\r\n        cellDependencies.forEach((dep) => {\r\n            if (dep instanceof AbsoluteCellRange) {\r\n                const range = dep;\r\n                let rangeVertex = this.getRange(range.start, range.end);\r\n                if (rangeVertex === undefined) {\r\n                    rangeVertex = new RangeVertex(range);\r\n                    this.rangeMapping.setRange(rangeVertex);\r\n                }\r\n                this.graph.addNode(rangeVertex);\r\n                if (!range.isFinite()) {\r\n                    this.graph.markNodeAsInfiniteRange(rangeVertex);\r\n                }\r\n                const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(range);\r\n                if (smallerRangeVertex !== undefined) {\r\n                    this.graph.addEdge(smallerRangeVertex, rangeVertex);\r\n                    if (rangeVertex.bruteForce) {\r\n                        rangeVertex.bruteForce = false;\r\n                        for (const cellFromRange of range.addresses(this)) { //if we ever switch heuristic to processing by sorted sizes, this would be unnecessary\r\n                            this.graph.removeEdge(this.fetchCell(cellFromRange), rangeVertex);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    rangeVertex.bruteForce = true;\r\n                }\r\n                const array = this.arrayMapping.getArray(restRange);\r\n                if (array !== undefined) {\r\n                    this.graph.addEdge(array, rangeVertex);\r\n                }\r\n                else {\r\n                    for (const cellFromRange of restRange.addresses(this)) {\r\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(cellFromRange), rangeVertex);\r\n                    }\r\n                }\r\n                this.graph.addEdge(rangeVertex, endVertex);\r\n                if (range.isFinite()) {\r\n                    this.correctInfiniteRangesDependenciesByRangeVertex(rangeVertex);\r\n                }\r\n            }\r\n            else if (dep instanceof NamedExpressionDependency) {\r\n                const sheetOfVertex = endVertex.getAddress(this.lazilyTransformingAstService).sheet;\r\n                const namedExpressionVertex = this.fetchNamedExpressionVertex(dep.name, sheetOfVertex);\r\n                this.graph.addEdge(namedExpressionVertex, endVertex);\r\n            }\r\n            else {\r\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(dep), endVertex);\r\n            }\r\n        });\r\n    }\r\n    fetchNamedExpressionVertex(expressionName, sheetId) {\r\n        const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(expressionName, sheetId);\r\n        return this.fetchCellOrCreateEmpty(namedExpression.address);\r\n    }\r\n    exchangeNode(addressFrom, addressTo) {\r\n        const vertexFrom = this.fetchCellOrCreateEmpty(addressFrom);\r\n        const vertexTo = this.fetchCellOrCreateEmpty(addressTo);\r\n        this.addressMapping.removeCell(addressFrom);\r\n        this.exchangeGraphNode(vertexFrom, vertexTo);\r\n    }\r\n    correctInfiniteRangesDependency(address) {\r\n        let vertex = undefined;\r\n        for (const range of this.graph.infiniteRanges) {\r\n            const infiniteRangeVertex = range;\r\n            if (infiniteRangeVertex.range.addressInRange(address)) {\r\n                vertex = vertex !== null && vertex !== void 0 ? vertex : this.fetchCellOrCreateEmpty(address);\r\n                this.graph.addEdge(vertex, infiniteRangeVertex);\r\n            }\r\n        }\r\n    }\r\n    fetchCellOrCreateEmpty(address) {\r\n        let vertex = this.addressMapping.getCell(address);\r\n        if (vertex === undefined) {\r\n            vertex = new EmptyCellVertex(address);\r\n            this.graph.addNode(vertex);\r\n            this.addressMapping.setCell(address, vertex);\r\n        }\r\n        return vertex;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\r\n            for (const [address, vertex] of this.addressMapping.entriesFromRowsSpan(removedRows)) {\r\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n                }\r\n                if (vertex instanceof ArrayVertex) {\r\n                    if (vertex.isLeftCorner(address)) {\r\n                        this.shrinkArrayToCorner(vertex);\r\n                        this.arrayMapping.removeArray(vertex.getRange());\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n                this.removeVertex(vertex);\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.removeRows(removedRows);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const affectedRanges = this.truncateRanges(removedRows, address => address.row);\r\n            return this.getArrayVerticesRelatedToRanges(affectedRanges);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            this.fixArraysAfterRemovingRows(removedRows.sheet, removedRows.rowStart, removedRows.numberOfRows);\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n        return {\r\n            affectedArrays,\r\n            contentChanges: this.getAndClearContentChanges()\r\n        };\r\n    }\r\n    removeSheet(removedSheetId) {\r\n        const arrays = new Set();\r\n        for (const [adr, vertex] of this.addressMapping.sheetEntries(removedSheetId)) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                if (arrays.has(vertex)) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    arrays.add(vertex);\r\n                }\r\n            }\r\n            for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n            }\r\n            this.removeVertex(vertex);\r\n            this.addressMapping.removeCell(adr);\r\n        }\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            for (const array of arrays.values()) {\r\n                this.arrayMapping.removeArray(array.getRange());\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const rangesToRemove = this.rangeMapping.removeRangesInSheet(removedSheetId);\r\n            for (const range of rangesToRemove) {\r\n                this.removeVertex(range);\r\n            }\r\n            this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n                this.addressMapping.removeSheet(removedSheetId);\r\n            });\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n    }\r\n    clearSheet(sheetId) {\r\n        const arrays = new Set();\r\n        for (const [address, vertex] of this.addressMapping.sheetEntries(sheetId)) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                arrays.add(vertex);\r\n            }\r\n            else {\r\n                this.setCellEmpty(address);\r\n            }\r\n        }\r\n        for (const array of arrays.values()) {\r\n            this.setArrayEmpty(array);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n    }\r\n    removeColumns(removedColumns) {\r\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\r\n            for (const [address, vertex] of this.addressMapping.entriesFromColumnsSpan(removedColumns)) {\r\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n                }\r\n                if (vertex instanceof ArrayVertex) {\r\n                    if (vertex.isLeftCorner(address)) {\r\n                        this.shrinkArrayToCorner(vertex);\r\n                        this.arrayMapping.removeArray(vertex.getRange());\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n                this.removeVertex(vertex);\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.removeColumns(removedColumns);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const affectedRanges = this.truncateRanges(removedColumns, address => address.col);\r\n            return this.getArrayVerticesRelatedToRanges(affectedRanges);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            return this.fixArraysAfterRemovingColumns(removedColumns.sheet, removedColumns.columnStart, removedColumns.numberOfColumns);\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n        return {\r\n            affectedArrays,\r\n            contentChanges: this.getAndClearContentChanges(),\r\n        };\r\n    }\r\n    addRows(addedRows) {\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.addRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const result = this.rangeMapping.moveAllRangesInSheetAfterRowByRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n            this.fixRangesWhenAddingRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n            return this.getArrayVerticesRelatedToRanges(result.verticesWithChangedSize);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            this.fixArraysAfterAddingRow(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n        });\r\n        for (const vertex of this.addressMapping.verticesFromRowsSpan(addedRows)) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n        return { affectedArrays };\r\n    }\r\n    addColumns(addedColumns) {\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.addColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const result = this.rangeMapping.moveAllRangesInSheetAfterColumnByColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n            this.fixRangesWhenAddingColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n            return this.getArrayVerticesRelatedToRanges(result.verticesWithChangedSize);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            return this.fixArraysAfterAddingColumn(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n        });\r\n        for (const vertex of this.addressMapping.verticesFromColumnsSpan(addedColumns)) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n        return { affectedArrays, contentChanges: this.getAndClearContentChanges() };\r\n    }\r\n    ensureNoArrayInRange(range) {\r\n        if (this.arrayMapping.isFormulaArrayInRange(range)) {\r\n            throw Error('It is not possible to move / replace cells with array');\r\n        }\r\n    }\r\n    isThereSpaceForArray(arrayVertex) {\r\n        const range = arrayVertex.getRangeOrUndef();\r\n        if (range === undefined) {\r\n            return false;\r\n        }\r\n        for (const address of range.addresses(this)) {\r\n            const vertexUnderAddress = this.addressMapping.getCell(address);\r\n            if (vertexUnderAddress !== undefined && !(vertexUnderAddress instanceof EmptyCellVertex) && vertexUnderAddress !== arrayVertex) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    moveCells(sourceRange, toRight, toBottom, toSheet) {\r\n        for (const sourceAddress of sourceRange.addressesWithDirection(toRight, toBottom, this)) {\r\n            const targetAddress = simpleCellAddress(toSheet, sourceAddress.col + toRight, sourceAddress.row + toBottom);\r\n            let sourceVertex = this.addressMapping.getCell(sourceAddress);\r\n            const targetVertex = this.addressMapping.getCell(targetAddress);\r\n            this.addressMapping.removeCell(sourceAddress);\r\n            if (sourceVertex !== undefined) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\r\n                this.addressMapping.setCell(targetAddress, sourceVertex);\r\n                let emptyVertex = undefined;\r\n                for (const adjacentNode of this.graph.adjacentNodes(sourceVertex)) {\r\n                    if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\r\n                        emptyVertex = emptyVertex !== null && emptyVertex !== void 0 ? emptyVertex : this.fetchCellOrCreateEmpty(sourceAddress);\r\n                        this.graph.addEdge(emptyVertex, adjacentNode);\r\n                        this.graph.removeEdge(sourceVertex, adjacentNode);\r\n                    }\r\n                }\r\n                if (emptyVertex) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\r\n                    this.addressMapping.setCell(sourceAddress, emptyVertex);\r\n                }\r\n            }\r\n            if (targetVertex !== undefined) {\r\n                if (sourceVertex === undefined) {\r\n                    this.addressMapping.removeCell(targetAddress);\r\n                }\r\n                for (const adjacentNode of this.graph.adjacentNodes(targetVertex)) {\r\n                    sourceVertex = sourceVertex !== null && sourceVertex !== void 0 ? sourceVertex : this.fetchCellOrCreateEmpty(targetAddress);\r\n                    this.graph.addEdge(sourceVertex, adjacentNode);\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\r\n                }\r\n                this.removeVertex(targetVertex);\r\n            }\r\n        }\r\n        for (const rangeVertex of this.rangeMapping.rangeVerticesContainedInRange(sourceRange)) {\r\n            for (const adjacentNode of this.graph.adjacentNodes(rangeVertex)) {\r\n                if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\r\n                    this.graph.removeEdge(rangeVertex, adjacentNode);\r\n                    for (const address of rangeVertex.range.addresses(this)) {\r\n                        const newEmptyVertex = this.fetchCellOrCreateEmpty(address);\r\n                        this.graph.addEdge(newEmptyVertex, adjacentNode);\r\n                        this.addressMapping.setCell(address, newEmptyVertex);\r\n                        this.graph.markNodeAsSpecialRecentlyChanged(newEmptyVertex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.rangeMapping.moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet);\r\n    }\r\n    setArrayEmpty(arrayVertex) {\r\n        const arrayRange = AbsoluteCellRange.spanFrom(arrayVertex.getAddress(this.lazilyTransformingAstService), arrayVertex.width, arrayVertex.height);\r\n        const adjacentNodes = this.graph.adjacentNodes(arrayVertex);\r\n        for (const address of arrayRange.addresses(this)) {\r\n            this.addressMapping.removeCell(address);\r\n        }\r\n        for (const adjacentNode of adjacentNodes.values()) {\r\n            const nodeDependencies = collectAddressesDependentToRange(this.functionRegistry, adjacentNode, arrayVertex.getRange(), this.lazilyTransformingAstService, this);\r\n            for (const address of nodeDependencies) {\r\n                const vertex = this.fetchCellOrCreateEmpty(address);\r\n                this.graph.addEdge(vertex, adjacentNode);\r\n            }\r\n            if (nodeDependencies.length > 0) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n            }\r\n        }\r\n        this.removeVertex(arrayVertex);\r\n        this.arrayMapping.removeArray(arrayVertex.getRange());\r\n    }\r\n    addVertex(address, vertex) {\r\n        this.graph.addNode(vertex);\r\n        this.addressMapping.setCell(address, vertex);\r\n    }\r\n    addArrayVertex(address, vertex) {\r\n        this.graph.addNode(vertex);\r\n        this.setAddressMappingForArrayVertex(vertex, address);\r\n    }\r\n    *arrayFormulaNodes() {\r\n        for (const vertex of this.graph.nodes) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        yield* this.addressMapping.entriesFromRowsSpan(rowsSpan);\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        yield* this.addressMapping.entriesFromColumnsSpan(columnsSpan);\r\n    }\r\n    existsVertex(address) {\r\n        return this.addressMapping.has(address);\r\n    }\r\n    fetchCell(address) {\r\n        return this.addressMapping.fetchCell(address);\r\n    }\r\n    getCell(address) {\r\n        return this.addressMapping.getCell(address);\r\n    }\r\n    getCellValue(address) {\r\n        return this.addressMapping.getCellValue(address);\r\n    }\r\n    getRawValue(address) {\r\n        return this.addressMapping.getRawValue(address);\r\n    }\r\n    getScalarValue(address) {\r\n        const value = this.addressMapping.getCellValue(address);\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        return value;\r\n    }\r\n    existsEdge(fromNode, toNode) {\r\n        return this.graph.existsEdge(fromNode, toNode);\r\n    }\r\n    getSheetId(sheetName) {\r\n        return this.sheetMapping.fetch(sheetName);\r\n    }\r\n    getSheetHeight(sheet) {\r\n        return this.addressMapping.getHeight(sheet);\r\n    }\r\n    getSheetWidth(sheet) {\r\n        return this.addressMapping.getWidth(sheet);\r\n    }\r\n    getArray(range) {\r\n        return this.arrayMapping.getArray(range);\r\n    }\r\n    setArray(range, vertex) {\r\n        this.arrayMapping.setArray(range, vertex);\r\n    }\r\n    getRange(start, end) {\r\n        return this.rangeMapping.getRange(start, end);\r\n    }\r\n    topSortWithScc() {\r\n        return this.graph.topSortWithScc();\r\n    }\r\n    markAsVolatile(vertex) {\r\n        this.graph.markNodeAsSpecial(vertex);\r\n    }\r\n    markAsDependentOnStructureChange(vertex) {\r\n        this.graph.markNodeAsChangingWithStructure(vertex);\r\n    }\r\n    forceApplyPostponedTransformations() {\r\n        for (const vertex of this.graph.nodes.values()) {\r\n            if (vertex instanceof FormulaCellVertex) {\r\n                vertex.ensureRecentData(this.lazilyTransformingAstService);\r\n            }\r\n        }\r\n    }\r\n    volatileVertices() {\r\n        return this.graph.specialNodes;\r\n    }\r\n    getArrayVerticesRelatedToRanges(ranges) {\r\n        const arrayVertices = ranges.map(range => {\r\n            if (this.graph.hasNode(range)) {\r\n                return Array.from(this.graph.adjacentNodes(range)).filter(node => node instanceof ArrayVertex);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        return new Set(...arrayVertices);\r\n    }\r\n    *rawValuesFromRange(range) {\r\n        for (const address of range.addresses(this)) {\r\n            const value = this.getScalarValue(address);\r\n            if (value !== EmptyValue) {\r\n                yield [getRawValue(value), address];\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRange(range) {\r\n        for (const address of range.addresses(this)) {\r\n            yield [address, this.getCell(address)];\r\n        }\r\n    }\r\n    exchangeGraphNode(oldNode, newNode) {\r\n        this.graph.addNode(newNode);\r\n        const adjNodesStored = this.graph.adjacentNodes(oldNode);\r\n        this.removeVertex(oldNode);\r\n        adjNodesStored.forEach((adjacentNode) => {\r\n            if (this.graph.hasNode(adjacentNode)) {\r\n                this.graph.addEdge(newNode, adjacentNode);\r\n            }\r\n        });\r\n    }\r\n    exchangeOrAddGraphNode(oldNode, newNode) {\r\n        if (oldNode) {\r\n            this.exchangeGraphNode(oldNode, newNode);\r\n        }\r\n        else {\r\n            this.graph.addNode(newNode);\r\n        }\r\n    }\r\n    computeListOfValuesInRange(range) {\r\n        const values = [];\r\n        for (const cellFromRange of range.addresses(this)) {\r\n            const value = this.getScalarValue(cellFromRange);\r\n            values.push(value);\r\n        }\r\n        return values;\r\n    }\r\n    shrinkArrayToCorner(array) {\r\n        this.cleanAddressMappingUnderArray(array);\r\n        for (const adjacentVertex of this.adjacentArrayVertices(array)) {\r\n            let relevantDependencies;\r\n            if (adjacentVertex instanceof FormulaVertex) {\r\n                relevantDependencies = this.formulaDirectDependenciesToArray(adjacentVertex, array);\r\n            }\r\n            else {\r\n                relevantDependencies = this.rangeDirectDependenciesToArray(adjacentVertex, array);\r\n            }\r\n            let dependentToCorner = false;\r\n            for (const [address, vertex] of relevantDependencies) {\r\n                if (array.isLeftCorner(address)) {\r\n                    dependentToCorner = true;\r\n                }\r\n                this.graph.addEdge(vertex, adjacentVertex);\r\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n            }\r\n            if (!dependentToCorner) {\r\n                this.graph.removeEdge(array, adjacentVertex);\r\n            }\r\n        }\r\n        this.graph.markNodeAsSpecialRecentlyChanged(array);\r\n    }\r\n    isArrayInternalCell(address) {\r\n        const vertex = this.getCell(address);\r\n        return vertex instanceof ArrayVertex && !vertex.isLeftCorner(address);\r\n    }\r\n    getAndClearContentChanges() {\r\n        const changes = this.changes;\r\n        this.changes = ContentChanges.empty();\r\n        return changes;\r\n    }\r\n    getAdjacentNodesAddresses(inputVertex) {\r\n        const deps = this.graph.adjacentNodes(inputVertex);\r\n        const ret = [];\r\n        deps.forEach((vertex) => {\r\n            const castVertex = vertex;\r\n            if (castVertex instanceof RangeVertex) {\r\n                ret.push(simpleCellRange(castVertex.start, castVertex.end));\r\n            }\r\n            else {\r\n                ret.push(castVertex.getAddress(this.lazilyTransformingAstService));\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    correctInfiniteRangesDependenciesByRangeVertex(vertex) {\r\n        for (const range of this.graph.infiniteRanges) {\r\n            const infiniteRangeVertex = range;\r\n            const intersection = vertex.range.intersectionWith(infiniteRangeVertex.range);\r\n            if (intersection === undefined) {\r\n                continue;\r\n            }\r\n            for (const address of intersection.addresses(this)) {\r\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(address), range);\r\n            }\r\n        }\r\n    }\r\n    cleanAddressMappingUnderArray(vertex) {\r\n        const arrayRange = vertex.getRange();\r\n        for (const address of arrayRange.addresses(this)) {\r\n            const oldValue = vertex.getArrayCellValue(address);\r\n            if (this.getCell(address) === vertex) {\r\n                if (vertex.isLeftCorner(address)) {\r\n                    this.changes.addChange(new CellError(ErrorType.REF), address, oldValue);\r\n                }\r\n                else {\r\n                    this.addressMapping.removeCell(address);\r\n                    this.changes.addChange(EmptyValue, address, oldValue);\r\n                }\r\n            }\r\n            else {\r\n                this.changes.addChange(EmptyValue, address, oldValue);\r\n            }\r\n        }\r\n    }\r\n    *formulaDirectDependenciesToArray(vertex, array) {\r\n        var _a;\r\n        const [, formulaDependencies] = (_a = this.formulaDependencyQuery(vertex)) !== null && _a !== void 0 ? _a : [];\r\n        if (formulaDependencies === undefined) {\r\n            return;\r\n        }\r\n        for (const dependency of formulaDependencies) {\r\n            if (dependency instanceof NamedExpressionDependency || dependency instanceof AbsoluteCellRange) {\r\n                continue;\r\n            }\r\n            if (array.getRange().addressInRange(dependency)) {\r\n                const vertex = this.fetchCellOrCreateEmpty(dependency);\r\n                yield [dependency, vertex];\r\n            }\r\n        }\r\n    }\r\n    *rangeDirectDependenciesToArray(vertex, array) {\r\n        const { restRange: range } = this.rangeMapping.findSmallerRange(vertex.range);\r\n        for (const address of range.addresses(this)) {\r\n            if (array.getRange().addressInRange(address)) {\r\n                const cell = this.fetchCellOrCreateEmpty(address);\r\n                yield [address, cell];\r\n            }\r\n        }\r\n    }\r\n    *adjacentArrayVertices(vertex) {\r\n        const adjacentNodes = this.graph.adjacentNodes(vertex);\r\n        for (const item of adjacentNodes) {\r\n            if (item instanceof FormulaVertex || item instanceof RangeVertex) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    addStructuralNodesToChangeSet() {\r\n        for (const vertex of this.graph.specialNodesStructuralChanges) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n    }\r\n    fixRangesWhenAddingRows(sheet, row, numberOfRows) {\r\n        const originalValues = Array.from(this.rangeMapping.rangesInSheet(sheet));\r\n        for (const rangeVertex of originalValues) {\r\n            if (rangeVertex.range.includesRow(row + numberOfRows)) {\r\n                if (rangeVertex.bruteForce) {\r\n                    const addedSubrangeInThatRange = rangeVertex.range.rangeWithSameWidth(row, numberOfRows);\r\n                    for (const address of addedSubrangeInThatRange.addresses(this)) {\r\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\r\n                    }\r\n                }\r\n                else {\r\n                    let currentRangeVertex = rangeVertex;\r\n                    let find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\r\n                    if (find.smallerRangeVertex !== undefined) {\r\n                        continue;\r\n                    }\r\n                    while (find.smallerRangeVertex === undefined) {\r\n                        const newRangeVertex = new RangeVertex(AbsoluteCellRange.spanFrom(currentRangeVertex.range.start, currentRangeVertex.range.width(), currentRangeVertex.range.height() - 1));\r\n                        this.rangeMapping.setRange(newRangeVertex);\r\n                        this.graph.addNode(newRangeVertex);\r\n                        const restRange = new AbsoluteCellRange(simpleCellAddress(currentRangeVertex.range.start.sheet, currentRangeVertex.range.start.col, currentRangeVertex.range.end.row), currentRangeVertex.range.end);\r\n                        this.addAllFromRange(restRange, currentRangeVertex);\r\n                        this.graph.addEdge(newRangeVertex, currentRangeVertex);\r\n                        currentRangeVertex = newRangeVertex;\r\n                        find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\r\n                    }\r\n                    this.graph.addEdge(find.smallerRangeVertex, currentRangeVertex);\r\n                    this.addAllFromRange(find.restRange, currentRangeVertex);\r\n                    this.graph.removeEdge(find.smallerRangeVertex, rangeVertex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addAllFromRange(range, vertex) {\r\n        for (const address of range.addresses(this)) {\r\n            this.graph.addEdge(this.fetchCellOrCreateEmpty(address), vertex);\r\n        }\r\n    }\r\n    fixRangesWhenAddingColumns(sheet, column, numberOfColumns) {\r\n        for (const rangeVertex of this.rangeMapping.rangesInSheet(sheet)) {\r\n            if (rangeVertex.range.includesColumn(column + numberOfColumns)) {\r\n                let subrange;\r\n                if (rangeVertex.bruteForce) {\r\n                    subrange = rangeVertex.range.rangeWithSameHeight(column, numberOfColumns);\r\n                }\r\n                else {\r\n                    subrange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, column, rangeVertex.range.end.row), numberOfColumns, 1);\r\n                }\r\n                for (const address of subrange.addresses(this)) {\r\n                    this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exchangeOrAddFormulaVertex(vertex) {\r\n        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n        const range = AbsoluteCellRange.spanFrom(address, vertex.width, vertex.height);\r\n        const oldNode = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.setArray(range, vertex);\r\n        }\r\n        this.exchangeOrAddGraphNode(oldNode, vertex);\r\n        this.addressMapping.setCell(address, vertex);\r\n        if (vertex instanceof ArrayVertex) {\r\n            if (!this.isThereSpaceForArray(vertex)) {\r\n                return;\r\n            }\r\n            for (const cellAddress of range.addresses(this)) {\r\n                if (vertex.isLeftCorner(cellAddress)) {\r\n                    continue;\r\n                }\r\n                const old = this.getCell(cellAddress);\r\n                this.exchangeOrAddGraphNode(old, vertex);\r\n            }\r\n        }\r\n        for (const cellAddress of range.addresses(this)) {\r\n            this.addressMapping.setCell(cellAddress, vertex);\r\n        }\r\n    }\r\n    setAddressMappingForArrayVertex(vertex, formulaAddress) {\r\n        this.addressMapping.setCell(formulaAddress, vertex);\r\n        if (!(vertex instanceof ArrayVertex)) {\r\n            return;\r\n        }\r\n        const range = AbsoluteCellRange.spanFromOrUndef(formulaAddress, vertex.width, vertex.height);\r\n        if (range === undefined) {\r\n            return;\r\n        }\r\n        this.setArray(range, vertex);\r\n        if (!this.isThereSpaceForArray(vertex)) {\r\n            return;\r\n        }\r\n        for (const address of range.addresses(this)) {\r\n            this.addressMapping.setCell(address, vertex);\r\n        }\r\n    }\r\n    truncateRanges(span, coordinate) {\r\n        const { verticesToRemove, verticesToMerge, verticesWithChangedSize } = this.rangeMapping.truncateRanges(span, coordinate);\r\n        for (const [existingVertex, mergedVertex] of verticesToMerge) {\r\n            this.mergeRangeVertices(existingVertex, mergedVertex);\r\n        }\r\n        for (const rangeVertex of verticesToRemove) {\r\n            this.removeVertexAndCleanupDependencies(rangeVertex);\r\n        }\r\n        return verticesWithChangedSize;\r\n    }\r\n    fixArraysAfterAddingRow(sheet, rowStart, numberOfRows) {\r\n        this.arrayMapping.moveArrayVerticesAfterRowByRows(sheet, rowStart, numberOfRows);\r\n        if (rowStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart - 1, rowStart - 1))) {\r\n            const arrayRange = array.getRange();\r\n            for (let col = arrayRange.start.col; col <= arrayRange.end.col; ++col) {\r\n                for (let row = rowStart; row <= arrayRange.end.row; ++row) {\r\n                    const destination = simpleCellAddress(sheet, col, row);\r\n                    const source = simpleCellAddress(sheet, col, row + numberOfRows);\r\n                    const value = array.getArrayCellValue(destination);\r\n                    this.addressMapping.moveCell(source, destination);\r\n                    this.changes.addChange(EmptyValue, source, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterRemovingRows(sheet, rowStart, numberOfRows) {\r\n        this.arrayMapping.moveArrayVerticesAfterRowByRows(sheet, rowStart, -numberOfRows);\r\n        if (rowStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart - 1, rowStart - 1))) {\r\n            if (this.isThereSpaceForArray(array)) {\r\n                for (const address of array.getRange().addresses(this)) {\r\n                    this.addressMapping.setCell(address, array);\r\n                }\r\n            }\r\n            else {\r\n                this.setNoSpaceIfArray(array);\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterAddingColumn(sheet, columnStart, numberOfColumns) {\r\n        this.arrayMapping.moveArrayVerticesAfterColumnByColumns(sheet, columnStart, numberOfColumns);\r\n        if (columnStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInCols(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart - 1, columnStart - 1))) {\r\n            const arrayRange = array.getRange();\r\n            for (let row = arrayRange.start.row; row <= arrayRange.end.row; ++row) {\r\n                for (let col = columnStart; col <= arrayRange.end.col; ++col) {\r\n                    const destination = simpleCellAddress(sheet, col, row);\r\n                    const source = simpleCellAddress(sheet, col + numberOfColumns, row);\r\n                    const value = array.getArrayCellValue(destination);\r\n                    this.addressMapping.moveCell(source, destination);\r\n                    this.changes.addChange(EmptyValue, source, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterRemovingColumns(sheet, columnStart, numberOfColumns) {\r\n        this.arrayMapping.moveArrayVerticesAfterColumnByColumns(sheet, columnStart, -numberOfColumns);\r\n        if (columnStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInCols(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart - 1, columnStart - 1))) {\r\n            if (this.isThereSpaceForArray(array)) {\r\n                for (const address of array.getRange().addresses(this)) {\r\n                    this.addressMapping.setCell(address, array);\r\n                }\r\n            }\r\n            else {\r\n                this.setNoSpaceIfArray(array);\r\n            }\r\n        }\r\n    }\r\n    shrinkPossibleArrayAndGetCell(address) {\r\n        const vertex = this.getCell(address);\r\n        if (!(vertex instanceof ArrayVertex)) {\r\n            return vertex;\r\n        }\r\n        this.setNoSpaceIfArray(vertex);\r\n        return this.getCell(address);\r\n    }\r\n    setNoSpaceIfArray(vertex) {\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.shrinkArrayToCorner(vertex);\r\n            vertex.setNoSpace();\r\n        }\r\n    }\r\n    removeVertex(vertex) {\r\n        this.removeVertexAndCleanupDependencies(vertex);\r\n        if (vertex instanceof RangeVertex) {\r\n            this.rangeMapping.removeRange(vertex);\r\n        }\r\n    }\r\n    mergeRangeVertices(existingVertex, newVertex) {\r\n        const adjNodesStored = this.graph.adjacentNodes(newVertex);\r\n        this.removeVertexAndCleanupDependencies(newVertex);\r\n        this.graph.softRemoveEdge(existingVertex, newVertex);\r\n        adjNodesStored.forEach((adjacentNode) => {\r\n            if (this.graph.hasNode(adjacentNode)) {\r\n                this.graph.addEdge(existingVertex, adjacentNode);\r\n            }\r\n        });\r\n    }\r\n    removeVertexAndCleanupDependencies(inputVertex) {\r\n        const dependencies = new Set(this.graph.removeNode(inputVertex));\r\n        while (dependencies.size > 0) {\r\n            const vertex = dependencies.values().next().value;\r\n            dependencies.delete(vertex);\r\n            if (this.graph.hasNode(vertex) && this.graph.adjacentNodesCount(vertex) === 0) {\r\n                if (vertex instanceof RangeVertex || vertex instanceof EmptyCellVertex) {\r\n                    this.graph.removeNode(vertex).forEach((candidate) => dependencies.add(candidate));\r\n                }\r\n                if (vertex instanceof RangeVertex) {\r\n                    this.rangeMapping.removeRange(vertex);\r\n                }\r\n                else if (vertex instanceof EmptyCellVertex) {\r\n                    this.addressMapping.removeCell(vertex.address);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { equalSimpleCellAddress, isSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { SheetsNotEqual } from './errors';\r\nimport { AstNodeType } from './parser';\r\nimport { RowsSpan } from './Span';\r\nexport const WRONG_RANGE_SIZE = 'AbsoluteCellRange: Wrong range size';\r\nexport function isSimpleCellRange(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'start' in obj && isSimpleCellAddress(obj.start) && 'end' in obj && isSimpleCellAddress(obj.end);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const simpleCellRange = (start, end) => ({ start, end });\r\nexport class AbsoluteCellRange {\r\n    constructor(start, end) {\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        this.start = simpleCellAddress(start.sheet, start.col, start.row);\r\n        this.end = simpleCellAddress(end.sheet, end.col, end.row);\r\n    }\r\n    get sheet() {\r\n        return this.start.sheet;\r\n    }\r\n    static fromAst(ast, baseAddress) {\r\n        if (ast.type === AstNodeType.CELL_RANGE) {\r\n            return AbsoluteCellRange.fromCellRange(ast, baseAddress);\r\n        }\r\n        else if (ast.type === AstNodeType.COLUMN_RANGE) {\r\n            return AbsoluteColumnRange.fromColumnRange(ast, baseAddress);\r\n        }\r\n        else {\r\n            return AbsoluteRowRange.fromRowRangeAst(ast, baseAddress);\r\n        }\r\n    }\r\n    static fromAstOrUndef(ast, baseAddress) {\r\n        try {\r\n            return AbsoluteCellRange.fromAst(ast, baseAddress);\r\n        }\r\n        catch (_e) {\r\n            return undefined;\r\n        }\r\n    }\r\n    static fromCellRange(x, baseAddress) {\r\n        return new AbsoluteCellRange(x.start.toSimpleCellAddress(baseAddress), x.end.toSimpleCellAddress(baseAddress));\r\n    }\r\n    static spanFrom(topLeftCorner, width, height) {\r\n        const ret = AbsoluteCellRange.spanFromOrUndef(topLeftCorner, width, height);\r\n        if (ret === undefined) {\r\n            throw new Error(WRONG_RANGE_SIZE);\r\n        }\r\n        return ret;\r\n    }\r\n    static spanFromOrUndef(topLeftCorner, width, height) {\r\n        if (!Number.isFinite(width) && Number.isFinite(height)) {\r\n            if (topLeftCorner.col !== 0) {\r\n                return undefined;\r\n            }\r\n            return new AbsoluteRowRange(topLeftCorner.sheet, topLeftCorner.row, topLeftCorner.row + height - 1);\r\n        }\r\n        else if (!Number.isFinite(height) && Number.isFinite(width)) {\r\n            if (topLeftCorner.row !== 0) {\r\n                return undefined;\r\n            }\r\n            return new AbsoluteColumnRange(topLeftCorner.sheet, topLeftCorner.col, topLeftCorner.col + width - 1);\r\n        }\r\n        else if (Number.isFinite(height) && Number.isFinite(width)) {\r\n            return new AbsoluteCellRange(topLeftCorner, simpleCellAddress(topLeftCorner.sheet, topLeftCorner.col + width - 1, topLeftCorner.row + height - 1));\r\n        }\r\n        return undefined;\r\n    }\r\n    static fromCoordinates(sheet, x1, y1, x2, y2) {\r\n        return new AbsoluteCellRange(simpleCellAddress(sheet, x1, y1), simpleCellAddress(sheet, x2, y2));\r\n    }\r\n    isFinite() {\r\n        return Number.isFinite(this.size());\r\n    }\r\n    doesOverlap(other) {\r\n        if (this.start.sheet != other.start.sheet) {\r\n            return false;\r\n        }\r\n        if (this.end.row < other.start.row || this.start.row > other.end.row) {\r\n            return false;\r\n        }\r\n        if (this.end.col < other.start.col || this.start.col > other.end.col) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    addressInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.row <= address.row\r\n            && this.end.row >= address.row\r\n            && this.start.col <= address.col\r\n            && this.end.col >= address.col;\r\n    }\r\n    columnInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.col <= address.col && this.end.col >= address.col;\r\n    }\r\n    rowInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.row <= address.row && this.end.row >= address.row;\r\n    }\r\n    containsRange(range) {\r\n        return this.addressInRange(range.start) && this.addressInRange(range.end);\r\n    }\r\n    intersectionWith(other) {\r\n        if (this.sheet !== other.start.sheet) {\r\n            return undefined;\r\n        }\r\n        const startRow = Math.max(this.start.row, other.start.row);\r\n        const endRow = Math.min(this.end.row, other.end.row);\r\n        const startCol = Math.max(this.start.col, other.start.col);\r\n        const endCol = Math.min(this.end.col, other.end.col);\r\n        if (startRow > endRow || startCol > endCol) {\r\n            return undefined;\r\n        }\r\n        return new AbsoluteCellRange(simpleCellAddress(this.sheet, startCol, startRow), simpleCellAddress(this.sheet, endCol, endRow));\r\n    }\r\n    includesRow(row) {\r\n        return this.start.row < row && this.end.row >= row;\r\n    }\r\n    includesColumn(column) {\r\n        return this.start.col < column && this.end.col >= column;\r\n    }\r\n    shiftByRows(numberOfRows) {\r\n        this.start.row += numberOfRows;\r\n        this.end.row += numberOfRows;\r\n    }\r\n    expandByRows(numberOfRows) {\r\n        this.end.row += numberOfRows;\r\n    }\r\n    shiftByColumns(numberOfColumns) {\r\n        this.start.col += numberOfColumns;\r\n        this.end.col += numberOfColumns;\r\n    }\r\n    shifted(byCols, byRows) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col + byCols, this.start.row + byRows), this.width(), this.height());\r\n    }\r\n    expandByColumns(numberOfColumns) {\r\n        this.end.col += numberOfColumns;\r\n    }\r\n    moveToSheet(toSheet) {\r\n        this.start.sheet = toSheet;\r\n        this.end.sheet = toSheet;\r\n    }\r\n    removeSpan(span) {\r\n        if (span instanceof RowsSpan) {\r\n            this.removeRows(span.start, span.end);\r\n        }\r\n        else {\r\n            this.removeColumns(span.start, span.end);\r\n        }\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.width() <= 0 || this.height() <= 0;\r\n    }\r\n    rangeWithSameWidth(startRow, numberOfRows) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col, startRow), this.width(), numberOfRows);\r\n    }\r\n    rangeWithSameHeight(startColumn, numberOfColumns) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, startColumn, this.start.row), numberOfColumns, this.height());\r\n    }\r\n    toString() {\r\n        return `${this.start.sheet},${this.start.col},${this.start.row},${this.end.col},${this.end.row}`;\r\n    }\r\n    width() {\r\n        return this.end.col - this.start.col + 1;\r\n    }\r\n    height() {\r\n        return this.end.row - this.start.row + 1;\r\n    }\r\n    size() {\r\n        return this.height() * this.width();\r\n    }\r\n    arrayOfAddressesInRange() {\r\n        const result = [];\r\n        for (let y = 0; y < this.height(); ++y) {\r\n            result[y] = [];\r\n            for (let x = 0; x < this.width(); ++x) {\r\n                const value = simpleCellAddress(this.sheet, this.start.col + x, this.start.row + y);\r\n                result[y].push(value);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    withStart(newStart) {\r\n        return new AbsoluteCellRange(newStart, this.end);\r\n    }\r\n    sameDimensionsAs(other) {\r\n        return this.width() === other.width() && this.height() === other.height();\r\n    }\r\n    sameAs(other) {\r\n        return equalSimpleCellAddress(this.start, other.start) && equalSimpleCellAddress(this.end, other.end);\r\n    }\r\n    addressesArrayMap(dependencyGraph, op) {\r\n        const ret = [];\r\n        let currentRow = this.start.row;\r\n        while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n            let currentColumn = this.start.col;\r\n            const tmp = [];\r\n            while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                tmp.push(op(simpleCellAddress(this.start.sheet, currentColumn, currentRow)));\r\n                currentColumn++;\r\n            }\r\n            ret.push(tmp);\r\n            currentRow++;\r\n        }\r\n        return ret;\r\n    }\r\n    addresses(dependencyGraph) {\r\n        const ret = [];\r\n        let currentRow = this.start.row;\r\n        const limitRow = this.effectiveEndRow(dependencyGraph);\r\n        const limitColumn = this.effectiveEndColumn(dependencyGraph);\r\n        while (currentRow <= limitRow) {\r\n            let currentColumn = this.start.col;\r\n            while (currentColumn <= limitColumn) {\r\n                ret.push(simpleCellAddress(this.start.sheet, currentColumn, currentRow));\r\n                currentColumn++;\r\n            }\r\n            currentRow++;\r\n        }\r\n        return ret;\r\n    }\r\n    *addressesWithDirection(right, bottom, dependencyGraph) {\r\n        if (right > 0) {\r\n            if (bottom > 0) {\r\n                let currentRow = this.effectiveEndRow(dependencyGraph);\r\n                while (currentRow >= this.start.row) {\r\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\r\n                    while (currentColumn >= this.start.col) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn -= 1;\r\n                    }\r\n                    currentRow -= 1;\r\n                }\r\n            }\r\n            else {\r\n                let currentRow = this.start.row;\r\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\r\n                    while (currentColumn >= this.start.col) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn -= 1;\r\n                    }\r\n                    currentRow += 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (bottom > 0) {\r\n                let currentRow = this.effectiveEndRow(dependencyGraph);\r\n                while (currentRow >= this.start.row) {\r\n                    let currentColumn = this.start.col;\r\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn += 1;\r\n                    }\r\n                    currentRow -= 1;\r\n                }\r\n            }\r\n            else {\r\n                let currentRow = this.start.row;\r\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n                    let currentColumn = this.start.col;\r\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn += 1;\r\n                    }\r\n                    currentRow += 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAddress(col, row) {\r\n        if (col < 0 || row < 0 || row > this.height() - 1 || col > this.width() - 1) {\r\n            throw Error('Index out of bound');\r\n        }\r\n        return simpleCellAddress(this.start.sheet, this.start.col + col, this.start.row + row);\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\r\n        return this.end.col >= maxColumns || this.end.row >= maxRows;\r\n    }\r\n    effectiveEndColumn(_dependencyGraph) {\r\n        return this.end.col;\r\n    }\r\n    effectiveEndRow(_dependencyGraph) {\r\n        return this.end.row;\r\n    }\r\n    effectiveWidth(_dependencyGraph) {\r\n        return this.width();\r\n    }\r\n    effectiveHeight(_dependencyGraph) {\r\n        return this.height();\r\n    }\r\n    removeRows(rowStart, rowEnd) {\r\n        if (rowStart > this.end.row) {\r\n            return;\r\n        }\r\n        if (rowEnd < this.start.row) {\r\n            const numberOfRows = rowEnd - rowStart + 1;\r\n            return this.shiftByRows(-numberOfRows);\r\n        }\r\n        if (rowStart <= this.start.row) {\r\n            this.start.row = rowStart;\r\n        }\r\n        this.end.row -= Math.min(rowEnd, this.end.row) - rowStart + 1;\r\n    }\r\n    removeColumns(columnStart, columnEnd) {\r\n        if (columnStart > this.end.col) {\r\n            return;\r\n        }\r\n        if (columnEnd < this.start.col) {\r\n            const numberOfColumns = columnEnd - columnStart + 1;\r\n            return this.shiftByColumns(-numberOfColumns);\r\n        }\r\n        if (columnStart <= this.start.col) {\r\n            this.start.col = columnStart;\r\n        }\r\n        this.end.col -= Math.min(columnEnd, this.end.col) - columnStart + 1;\r\n    }\r\n}\r\nexport class AbsoluteColumnRange extends AbsoluteCellRange {\r\n    constructor(sheet, columnStart, columnEnd) {\r\n        super(simpleCellAddress(sheet, columnStart, 0), simpleCellAddress(sheet, columnEnd, Number.POSITIVE_INFINITY));\r\n    }\r\n    static fromColumnRange(x, baseAddress) {\r\n        const start = x.start.toSimpleColumnAddress(baseAddress);\r\n        const end = x.end.toSimpleColumnAddress(baseAddress);\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.width() <= 0;\r\n    }\r\n    shiftByRows(_numberOfRows) {\r\n        return;\r\n    }\r\n    expandByRows(_numberOfRows) {\r\n        return;\r\n    }\r\n    shifted(byCols, _byRows) {\r\n        return new AbsoluteColumnRange(this.sheet, this.start.col + byCols, this.end.col + byCols);\r\n    }\r\n    rangeWithSameHeight(startColumn, numberOfColumns) {\r\n        return new AbsoluteColumnRange(this.sheet, startColumn, startColumn + numberOfColumns - 1);\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, _maxRows) {\r\n        return this.end.col >= maxColumns;\r\n    }\r\n    effectiveEndRow(dependencyGraph) {\r\n        return this.effectiveHeight(dependencyGraph) - 1;\r\n    }\r\n    effectiveHeight(dependencyGraph) {\r\n        return dependencyGraph.getSheetHeight(this.sheet);\r\n    }\r\n    removeRows(_rowStart, _rowEnd) {\r\n        return;\r\n    }\r\n}\r\nexport class AbsoluteRowRange extends AbsoluteCellRange {\r\n    constructor(sheet, rowStart, rowEnd) {\r\n        super(simpleCellAddress(sheet, 0, rowStart), simpleCellAddress(sheet, Number.POSITIVE_INFINITY, rowEnd));\r\n    }\r\n    static fromRowRangeAst(x, baseAddress) {\r\n        const start = x.start.toSimpleRowAddress(baseAddress);\r\n        const end = x.end.toSimpleRowAddress(baseAddress);\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.height() <= 0;\r\n    }\r\n    shiftByColumns(_numberOfColumns) {\r\n        return;\r\n    }\r\n    expandByColumns(_numberOfColumns) {\r\n        return;\r\n    }\r\n    shifted(byCols, byRows) {\r\n        return new AbsoluteRowRange(this.sheet, this.start.row + byRows, this.end.row + byRows);\r\n    }\r\n    rangeWithSameWidth(startRow, numberOfRows) {\r\n        return new AbsoluteRowRange(this.sheet, startRow, startRow + numberOfRows - 1);\r\n    }\r\n    exceedsSheetSizeLimits(_maxColumns, maxRows) {\r\n        return this.end.row >= maxRows;\r\n    }\r\n    effectiveEndColumn(dependencyGraph) {\r\n        return this.effectiveWidth(dependencyGraph) - 1;\r\n    }\r\n    effectiveWidth(dependencyGraph) {\r\n        return dependencyGraph.getSheetWidth(this.sheet);\r\n    }\r\n    removeColumns(_columnStart, _columnEnd) {\r\n        return;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Error thrown when the sheet of a given ID does not exist.\r\n */\r\nexport class NoSheetWithIdError extends Error {\r\n    constructor(sheetId) {\r\n        super(`There's no sheet with id = ${sheetId}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the sheet of a given name does not exist.\r\n */\r\nexport class NoSheetWithNameError extends Error {\r\n    constructor(sheetName) {\r\n        super(`There's no sheet with name '${sheetName}'`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the sheet of a given name already exists.\r\n */\r\nexport class SheetNameAlreadyTakenError extends Error {\r\n    constructor(sheetName) {\r\n        super(`Sheet with name ${sheetName} already exists`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when loaded sheet size exceeds configured limits.\r\n */\r\nexport class SheetSizeLimitExceededError extends Error {\r\n    constructor() {\r\n        super('Sheet size limit exceeded');\r\n    }\r\n}\r\n/**\r\n * Error thrown when the the provided string is not a valid formula, i.e does not start with \"=\"\r\n */\r\nexport class NotAFormulaError extends Error {\r\n    constructor() {\r\n        super('This is not a formula');\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given address is invalid.\r\n */\r\nexport class InvalidAddressError extends Error {\r\n    constructor(address) {\r\n        super(`Address (row = ${address.row}, col = ${address.col}) is invalid`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given arguments are invalid\r\n */\r\nexport class InvalidArgumentsError extends Error {\r\n    constructor(expectedArguments) {\r\n        super(`Invalid arguments, expected ${expectedArguments}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given sheets are not equal.\r\n */\r\nexport class SheetsNotEqual extends Error {\r\n    constructor(sheet1, sheet2) {\r\n        super(`Sheets ${sheet1} and ${sheet2} are not equal.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given named expression already exists in the workbook and therefore it cannot be added.\r\n */\r\nexport class NamedExpressionNameIsAlreadyTakenError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Name of Named Expression '${expressionName}' is already present`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the name given for the named expression is invalid.\r\n */\r\nexport class NamedExpressionNameIsInvalidError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Name of Named Expression '${expressionName}' is invalid`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given named expression does not exist.\r\n */\r\nexport class NamedExpressionDoesNotExistError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Named Expression '${expressionName}' does not exist`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when there are no operations to be undone by the [[undo]] method.\r\n */\r\nexport class NoOperationToUndoError extends Error {\r\n    constructor() {\r\n        super('There is no operation to undo');\r\n    }\r\n}\r\n/**\r\n * Error thrown when there are no operations to redo by the [[redo]] method.\r\n */\r\nexport class NoOperationToRedoError extends Error {\r\n    constructor() {\r\n        super('There is no operation to redo');\r\n    }\r\n}\r\n/**\r\n * Error thrown when there is nothing to paste by the [[paste]] method.\r\n */\r\nexport class NothingToPasteError extends Error {\r\n    constructor() {\r\n        super('There is nothing to paste');\r\n    }\r\n}\r\nfunction replacer(key, val) {\r\n    switch (typeof val) {\r\n        case 'function':\r\n        case 'symbol':\r\n            return val.toString();\r\n        case 'bigint':\r\n            return 'BigInt(' + val.toString() + ')';\r\n        default: {\r\n            if (val instanceof RegExp) {\r\n                return 'RegExp(' + val.toString() + ')';\r\n            }\r\n            else {\r\n                return val;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given value cannot be parsed.\r\n *\r\n * Checks against the validity in:\r\n *\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[setCellsContents]]\r\n */\r\nexport class UnableToParseError extends Error {\r\n    constructor(value) {\r\n        super(`Unable to parse value: ${JSON.stringify(value, replacer, 4)}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the expected value type differs from the given value type.\r\n * It also displays the expected type.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ExpectedValueOfTypeError extends Error {\r\n    constructor(expectedType, paramName) {\r\n        super(`Expected value of type: ${expectedType} for config parameter: ${paramName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is an empty string.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueEmpty extends Error {\r\n    constructor(paramName) {\r\n        super(`Config parameter ${paramName} cannot be empty.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is too small.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueTooSmallError extends Error {\r\n    constructor(paramName, minimum) {\r\n        super(`Config parameter ${paramName} should be at least ${minimum}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is too big.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueTooBigError extends Error {\r\n    constructor(paramName, maximum) {\r\n        super(`Config parameter ${paramName} should be at most ${maximum}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the value was expected to be set for a config parameter.\r\n * It also displays the expected value.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ExpectedOneOfValuesError extends Error {\r\n    constructor(values, paramName) {\r\n        super(`Expected one of ${values} for config parameter: ${paramName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when computations become suspended.\r\n * To perform any other action wait for the batch to complete or resume the evaluation.\r\n * Relates to:\r\n *\r\n * @see [[batch]]\r\n * @see [[suspendEvaluation]]\r\n * @see [[resumeEvaluation]]\r\n */\r\nexport class EvaluationSuspendedError extends Error {\r\n    constructor() {\r\n        super('Computations are suspended');\r\n    }\r\n}\r\n/**\r\n * Error thrown when translation is missing in translation package.\r\n *\r\n * TODO\r\n */\r\nexport class MissingTranslationError extends Error {\r\n    constructor(key) {\r\n        super(`Translation for ${key} is missing in the translation package you're using.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to override protected translation.\r\n *\r\n * @see [[registerLanguage]]\r\n * @see [[registerFunction]]\r\n * @see [[registerFunctionPlugin]]\r\n */\r\nexport class ProtectedFunctionTranslationError extends Error {\r\n    constructor(key) {\r\n        super(`Cannot register translation for function with id: ${key}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to retrieve not registered language\r\n *\r\n * @see [[getLanguage]]\r\n * @see [[unregisterLanguage]]\r\n */\r\nexport class LanguageNotRegisteredError extends Error {\r\n    constructor() {\r\n        super('Language not registered.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to register already registered language\r\n *\r\n * @see [[registerLanguage]]\r\n */\r\nexport class LanguageAlreadyRegisteredError extends Error {\r\n    constructor() {\r\n        super('Language already registered.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when function plugin is invalid.\r\n *\r\n * @see [[registerFunction]]\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * */\r\nexport class FunctionPluginValidationError extends Error {\r\n    static functionNotDeclaredInPlugin(functionId, pluginName) {\r\n        return new FunctionPluginValidationError(`Function with id ${functionId} not declared in plugin ${pluginName}`);\r\n    }\r\n    static functionMethodNotFound(functionName, pluginName) {\r\n        return new FunctionPluginValidationError(`Function method ${functionName} not found in plugin ${pluginName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to register, override or remove function with reserved id.\r\n *\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[registerFunction]]\r\n * @see [[unregisterFunction]]\r\n * */\r\nexport class ProtectedFunctionError extends Error {\r\n    static cannotRegisterFunctionWithId(functionId) {\r\n        return new ProtectedFunctionError(`Cannot register function with id ${functionId}`);\r\n    }\r\n    static cannotUnregisterFunctionWithId(functionId) {\r\n        return new ProtectedFunctionError(`Cannot unregister function with id ${functionId}`);\r\n    }\r\n    static cannotUnregisterProtectedPlugin() {\r\n        return new ProtectedFunctionError('Cannot unregister protected plugin');\r\n    }\r\n}\r\n/**\r\n * Error thrown when selected source location has an array.\r\n */\r\nexport class SourceLocationHasArrayError extends Error {\r\n    constructor() {\r\n        super('Cannot perform this operation, source location has an array inside.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when selected target location has an array.\r\n *\r\n * @see [[addRows]]\r\n * @see [[addColumns]]\r\n * @see [[moveCells]]\r\n * @see [[moveRows]]\r\n * @see [[moveColumns]]\r\n * @see [[paste]]\r\n */\r\nexport class TargetLocationHasArrayError extends Error {\r\n    constructor() {\r\n        super('Cannot perform this operation, target location has an array inside.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when named expression contains relative addresses.\r\n *\r\n * @see [[addNamedExpression]]\r\n * @see [[changeNamedExpression]]\r\n * */\r\nexport class NoRelativeAddressesAllowedError extends Error {\r\n    constructor() {\r\n        super('Relative addresses not allowed in named expressions.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when alias to a function is already defined.\r\n *\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[registerFunction]]\r\n */\r\nexport class AliasAlreadyExisting extends Error {\r\n    constructor(name, pluginName) {\r\n        super(`Alias id ${name} in plugin ${pluginName} already defined as a function or alias.`);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString, } from './addressRepresentationConverters';\r\nexport { CellAddress } from './CellAddress';\r\nexport { ParserWithCaching, } from './ParserWithCaching';\r\nexport { collectDependencies, } from './collectDependencies';\r\nexport { buildLexerConfig, } from './LexerConfig';\r\nexport { FormulaLexer, } from './FormulaParser';\r\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst, } from './Ast';\r\nexport { Unparser } from './Unparser';\r\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency, } from './RelativeDependency';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellRange } from '../AbsoluteCellRange';\r\nimport { simpleCellAddress } from '../Cell';\r\nimport { CellAddress } from './CellAddress';\r\nimport { ColumnAddress } from './ColumnAddress';\r\nimport { ABSOLUTE_OPERATOR, RANGE_OPERATOR, sheetNameRegexp, simpleSheetName } from './LexerConfig';\r\nimport { RowAddress } from './RowAddress';\r\nconst addressRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\${ABSOLUTE_OPERATOR}?)([A-Za-z]+)(\\\\${ABSOLUTE_OPERATOR}?)([0-9]+)$`);\r\nconst columnRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\${ABSOLUTE_OPERATOR}?)([A-Za-z]+)$`);\r\nconst rowRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\${ABSOLUTE_OPERATOR}?)([0-9]+)$`);\r\nconst simpleSheetNameRegex = new RegExp(`^${simpleSheetName}$`);\r\n/**\r\n * Computes R0C0 representation of cell address based on it's string representation and base address.\r\n *\r\n * @param sheetMapping - mapping function needed to change name of a sheet to index\r\n * @param stringAddress - string representation of cell address, e.g. 'C64'\r\n * @param baseAddress - base address for R0C0 conversion\r\n * @returns object representation of address\r\n */\r\nexport const cellAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = addressRegex.exec(stringAddress);\r\n    const col = columnLabelToIndex(result[6]);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const row = Number(result[8]) - 1;\r\n    if (result[5] === ABSOLUTE_OPERATOR && result[7] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absolute(col, row, sheet);\r\n    }\r\n    else if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absoluteCol(col, row - baseAddress.row, sheet);\r\n    }\r\n    else if (result[7] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absoluteRow(col - baseAddress.col, row, sheet);\r\n    }\r\n    else {\r\n        return CellAddress.relative(row - baseAddress.row, col - baseAddress.col, sheet);\r\n    }\r\n};\r\nexport const columnAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = columnRegex.exec(stringAddress);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const col = columnLabelToIndex(result[6]);\r\n    if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return ColumnAddress.absolute(col, sheet);\r\n    }\r\n    else {\r\n        return ColumnAddress.relative(col - baseAddress.col, sheet);\r\n    }\r\n};\r\nexport const rowAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = rowRegex.exec(stringAddress);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const row = Number(result[6]) - 1;\r\n    if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return RowAddress.absolute(row, sheet);\r\n    }\r\n    else {\r\n        return RowAddress.relative(row - baseAddress.row, sheet);\r\n    }\r\n};\r\n/**\r\n * Computes simple (absolute) address of a cell address based on its string representation.\r\n * If sheet name present in string representation but is not present in sheet mapping, returns undefined.\r\n * If sheet name is not present in string representation, returns {@param sheetContext} as sheet number\r\n *\r\n * @param sheetMapping - mapping function needed to change name of a sheet to index\r\n * @param stringAddress - string representation of cell address, e.g. 'C64'\r\n * @param sheetContext - sheet in context of which we should parse the address\r\n * @returns absolute representation of address, e.g. { sheet: 0, col: 1, row: 1 }\r\n */\r\nexport const simpleCellAddressFromString = (sheetMapping, stringAddress, sheetContext) => {\r\n    const result = addressRegex.exec(stringAddress);\r\n    const col = columnLabelToIndex(result[6]);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = sheetContext;\r\n    }\r\n    const row = Number(result[8]) - 1;\r\n    return simpleCellAddress(sheet, col, row);\r\n};\r\nexport const simpleCellRangeFromString = (sheetMapping, stringAddress, sheetContext) => {\r\n    const split = stringAddress.split(RANGE_OPERATOR);\r\n    if (split.length !== 2) {\r\n        return undefined;\r\n    }\r\n    const [startString, endString] = split;\r\n    const start = simpleCellAddressFromString(sheetMapping, startString, sheetContext);\r\n    if (start === undefined) {\r\n        return undefined;\r\n    }\r\n    const end = simpleCellAddressFromString(sheetMapping, endString, start.sheet);\r\n    if (end === undefined) {\r\n        return undefined;\r\n    }\r\n    if (start.sheet !== end.sheet) {\r\n        return undefined;\r\n    }\r\n    return simpleCellRange(start, end);\r\n};\r\n/**\r\n * Returns string representation of absolute address\r\n * If sheet index is not present in sheet mapping, returns undefined\r\n *\r\n * @param sheetIndexMapping - mapping function needed to change sheet index to sheet name\r\n * @param address - object representation of absolute address\r\n * @param sheetIndex - if is not equal with address sheet index, string representation will contain sheet name\r\n * */\r\nexport const simpleCellAddressToString = (sheetIndexMapping, address, sheetIndex) => {\r\n    const column = columnIndexToLabel(address.col);\r\n    const sheetName = sheetIndexToString(address.sheet, sheetIndexMapping);\r\n    if (sheetName === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheetIndex !== address.sheet) {\r\n        return `${sheetName}!${column}${address.row + 1}`;\r\n    }\r\n    else {\r\n        return `${column}${address.row + 1}`;\r\n    }\r\n};\r\nexport const simpleCellRangeToString = (sheetIndexMapping, address, sheetIndex) => {\r\n    const startString = simpleCellAddressToString(sheetIndexMapping, address.start, sheetIndex);\r\n    const endString = simpleCellAddressToString(sheetIndexMapping, address.end, address.start.sheet);\r\n    if (startString === undefined || endString === undefined) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return `${startString}${RANGE_OPERATOR}${endString}`;\r\n    }\r\n};\r\n/**\r\n * Convert column label to index\r\n *\r\n * @param columnStringRepresentation - column label (e.g. 'AAB')\r\n * @returns column index\r\n * */\r\nfunction columnLabelToIndex(columnStringRepresentation) {\r\n    if (columnStringRepresentation.length === 1) {\r\n        return columnStringRepresentation.toUpperCase().charCodeAt(0) - 65;\r\n    }\r\n    else {\r\n        return columnStringRepresentation.split('').reduce((currentColumn, nextLetter) => {\r\n            return currentColumn * 26 + (nextLetter.toUpperCase().charCodeAt(0) - 64);\r\n        }, 0) - 1;\r\n    }\r\n}\r\n/**\r\n * Converts column index to label\r\n *\r\n * @param column - address to convert\r\n * @returns string representation, e.g. 'AAB'\r\n */\r\nexport function columnIndexToLabel(column) {\r\n    let result = '';\r\n    while (column >= 0) {\r\n        result = String.fromCharCode((column % 26) + 97) + result;\r\n        column = Math.floor(column / 26) - 1;\r\n    }\r\n    return result.toUpperCase();\r\n}\r\nexport function sheetIndexToString(sheetId, sheetMappingFn) {\r\n    let sheetName = sheetMappingFn(sheetId);\r\n    if (sheetName === undefined) {\r\n        return undefined;\r\n    }\r\n    if (simpleSheetNameRegex.test(sheetName)) {\r\n        return sheetName;\r\n    }\r\n    else {\r\n        sheetName = sheetName.replace(/'/g, \"''\");\r\n        return `'${sheetName}'`;\r\n    }\r\n}\r\nfunction extractSheetNumber(regexResult, sheetMapping) {\r\n    var _a;\r\n    let maybeSheetName = (_a = regexResult[3]) !== null && _a !== void 0 ? _a : regexResult[2];\r\n    if (maybeSheetName) {\r\n        maybeSheetName = maybeSheetName.replace(/''/g, \"'\");\r\n        return sheetMapping(maybeSheetName);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleCellAddress, simpleCellAddress, simpleColumnAddress, simpleRowAddress, } from '../Cell';\r\nimport { columnIndexToLabel } from './addressRepresentationConverters';\r\nimport { ColumnAddress, ReferenceType } from './ColumnAddress';\r\nimport { RowAddress } from './RowAddress';\r\n/** Possible kinds of cell references */\r\nexport var CellReferenceType;\r\n(function (CellReferenceType) {\r\n    /** Cell reference with both row and column relative. */\r\n    CellReferenceType[\"CELL_REFERENCE_RELATIVE\"] = \"CELL_REFERENCE\";\r\n    /** Cell reference with both row and column absolute. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE\"] = \"CELL_REFERENCE_ABSOLUTE\";\r\n    /** Cell reference with absolute column and relative row. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_COL\"] = \"CELL_REFERENCE_ABSOLUTE_COL\";\r\n    /** Cell reference with relative column and absolute row. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_ROW\"] = \"CELL_REFERENCE_ABSOLUTE_ROW\";\r\n})(CellReferenceType || (CellReferenceType = {}));\r\nexport class CellAddress {\r\n    constructor(col, row, type, sheet) {\r\n        this.col = col;\r\n        this.row = row;\r\n        this.type = type;\r\n        this.sheet = sheet;\r\n    }\r\n    static fromColAndRow(col, row, sheet) {\r\n        const factoryMethod = col.isColumnAbsolute() && row.isRowAbsolute()\r\n            ? CellAddress.absolute.bind(this)\r\n            : col.isColumnAbsolute()\r\n                ? CellAddress.absoluteCol.bind(this)\r\n                : row.isRowAbsolute()\r\n                    ? CellAddress.absoluteRow.bind(this)\r\n                    // this is because `CellAddress.relative` expects arguments in a different order\r\n                    : (col, row, sheet) => CellAddress.relative(row, col, sheet);\r\n        return factoryMethod(col.col, row.row, sheet);\r\n    }\r\n    static relative(row, col, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_RELATIVE, sheet);\r\n    }\r\n    static absolute(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE, sheet);\r\n    }\r\n    static absoluteCol(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL, sheet);\r\n    }\r\n    static absoluteRow(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW, sheet);\r\n    }\r\n    /**\r\n     * Converts R0C0 representation of cell address to simple object representation.\r\n     *\r\n     * @param baseAddress - base address for R0C0 shifts\r\n     */\r\n    toSimpleCellAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE) {\r\n            return simpleCellAddress(sheet, this.col, this.row);\r\n        }\r\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\r\n            return simpleCellAddress(sheet, baseAddress.col + this.col, this.row);\r\n        }\r\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\r\n            return simpleCellAddress(sheet, this.col, baseAddress.row + this.row);\r\n        }\r\n        else {\r\n            return simpleCellAddress(sheet, baseAddress.col + this.col, baseAddress.row + this.row);\r\n        }\r\n    }\r\n    toColumnAddress() {\r\n        const refType = this.isColumnRelative() ? ReferenceType.RELATIVE : ReferenceType.ABSOLUTE;\r\n        return new ColumnAddress(refType, this.col, this.sheet);\r\n    }\r\n    toRowAddress() {\r\n        const refType = this.isRowRelative() ? ReferenceType.RELATIVE : ReferenceType.ABSOLUTE;\r\n        return new RowAddress(refType, this.row, this.sheet);\r\n    }\r\n    toSimpleColumnAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let column = this.col;\r\n        if (this.isColumnRelative()) {\r\n            column += baseAddress.col;\r\n        }\r\n        return simpleColumnAddress(sheet, column);\r\n    }\r\n    toSimpleRowAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let row = this.row;\r\n        if (this.isRowRelative()) {\r\n            row += baseAddress.row;\r\n        }\r\n        return simpleRowAddress(sheet, row);\r\n    }\r\n    isRowAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\r\n    }\r\n    isColumnAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\r\n    }\r\n    isColumnRelative() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\r\n    }\r\n    isRowRelative() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    shiftedByRows(numberOfRows) {\r\n        return new CellAddress(this.col, this.row + numberOfRows, this.type, this.sheet);\r\n    }\r\n    shiftedByColumns(numberOfColumns) {\r\n        return new CellAddress(this.col + numberOfColumns, this.row, this.type, this.sheet);\r\n    }\r\n    moved(toSheet, toRight, toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new CellAddress(this.col + toRight, this.row + toBottom, this.type, newSheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new CellAddress(this.col, this.row, this.type, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return invalidSimpleCellAddress(this.toSimpleCellAddress(baseAddress));\r\n    }\r\n    shiftRelativeDimensions(toRight, toBottom) {\r\n        const col = this.isColumnAbsolute() ? this.col : this.col + toRight;\r\n        const row = this.isRowAbsolute() ? this.row : this.row + toBottom;\r\n        return new CellAddress(col, row, this.type, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, toBottom) {\r\n        const col = this.isColumnRelative() ? this.col : this.col + toRight;\r\n        const row = this.isRowRelative() ? this.row : this.row + toBottom;\r\n        return new CellAddress(col, row, this.type, this.sheet);\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case CellReferenceType.CELL_REFERENCE_RELATIVE: {\r\n                return `${sheetPart}#${this.row}R${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE: {\r\n                return `${sheetPart}#${this.row}A${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL: {\r\n                return `${sheetPart}#${this.row}AC${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW: {\r\n                return `${sheetPart}#${this.row}AR${this.col}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleCellAddress(baseAddress);\r\n        if (invalidSimpleCellAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const column = columnIndexToLabel(simpleAddress.col);\r\n        const rowDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW ? '$' : '';\r\n        const colDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL ? '$' : '';\r\n        return `${colDollar}${column}${rowDollar}${simpleAddress.row + 1}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\r\n        return this.row >= maxRows || this.col >= maxColumns;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleColumnAddress, simpleColumnAddress } from '../Cell';\r\nimport { columnIndexToLabel } from './addressRepresentationConverters';\r\nexport var ReferenceType;\r\n(function (ReferenceType) {\r\n    ReferenceType[\"RELATIVE\"] = \"RELATIVE\";\r\n    ReferenceType[\"ABSOLUTE\"] = \"ABSOLUTE\";\r\n})(ReferenceType || (ReferenceType = {}));\r\nexport class ColumnAddress {\r\n    constructor(type, col, sheet) {\r\n        this.type = type;\r\n        this.col = col;\r\n        this.sheet = sheet;\r\n    }\r\n    static absolute(column, sheet) {\r\n        return new ColumnAddress(ReferenceType.ABSOLUTE, column, sheet);\r\n    }\r\n    static relative(column, sheet) {\r\n        return new ColumnAddress(ReferenceType.RELATIVE, column, sheet);\r\n    }\r\n    static compareByAbsoluteAddress(baseAddress) {\r\n        return (colA, colB) => colA.toSimpleColumnAddress(baseAddress).col - colB.toSimpleColumnAddress(baseAddress).col;\r\n    }\r\n    isColumnAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE);\r\n    }\r\n    isColumnRelative() {\r\n        return (this.type === ReferenceType.RELATIVE);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    moved(toSheet, toRight, _toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new ColumnAddress(this.type, this.col + toRight, newSheet);\r\n    }\r\n    shiftedByColumns(numberOfColumns) {\r\n        return new ColumnAddress(this.type, this.col + numberOfColumns, this.sheet);\r\n    }\r\n    toSimpleColumnAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let column = this.col;\r\n        if (this.isColumnRelative()) {\r\n            column = baseAddress.col + this.col;\r\n        }\r\n        return simpleColumnAddress(sheet, column);\r\n    }\r\n    shiftRelativeDimensions(toRight, _toBottom) {\r\n        const col = this.isColumnRelative() ? this.col + toRight : this.col;\r\n        return new ColumnAddress(this.type, col, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, _toBottom) {\r\n        const col = this.isColumnAbsolute() ? this.col + toRight : this.col;\r\n        return new ColumnAddress(this.type, col, this.sheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new ColumnAddress(this.type, this.col, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return this.toSimpleColumnAddress(baseAddress).col < 0;\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case ReferenceType.RELATIVE: {\r\n                return `${sheetPart}#COLR${this.col}`;\r\n            }\r\n            case ReferenceType.ABSOLUTE: {\r\n                return `${sheetPart}#COLA${this.col}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleColumnAddress(baseAddress);\r\n        if (invalidSimpleColumnAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const column = columnIndexToLabel(simpleAddress.col);\r\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\r\n        return `${dollar}${column}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns) {\r\n        return this.col >= maxColumns;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleRowAddress, simpleRowAddress } from '../Cell';\r\nimport { ReferenceType } from './ColumnAddress';\r\nexport class RowAddress {\r\n    constructor(type, row, sheet) {\r\n        this.type = type;\r\n        this.row = row;\r\n        this.sheet = sheet;\r\n    }\r\n    static absolute(row, sheet) {\r\n        return new RowAddress(ReferenceType.ABSOLUTE, row, sheet);\r\n    }\r\n    static relative(row, sheet) {\r\n        return new RowAddress(ReferenceType.RELATIVE, row, sheet);\r\n    }\r\n    static compareByAbsoluteAddress(baseAddress) {\r\n        return (rowA, rowB) => rowA.toSimpleRowAddress(baseAddress).row - rowB.toSimpleRowAddress(baseAddress).row;\r\n    }\r\n    isRowAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE);\r\n    }\r\n    isRowRelative() {\r\n        return (this.type === ReferenceType.RELATIVE);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    moved(toSheet, toRight, toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new RowAddress(this.type, this.row + toBottom, newSheet);\r\n    }\r\n    shiftedByRows(numberOfColumns) {\r\n        return new RowAddress(this.type, this.row + numberOfColumns, this.sheet);\r\n    }\r\n    toSimpleRowAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let row = this.row;\r\n        if (this.isRowRelative()) {\r\n            row = baseAddress.row + this.row;\r\n        }\r\n        return simpleRowAddress(sheet, row);\r\n    }\r\n    shiftRelativeDimensions(toRight, toBottom) {\r\n        const row = this.isRowRelative() ? this.row + toBottom : this.row;\r\n        return new RowAddress(this.type, row, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, toBottom) {\r\n        const row = this.isRowAbsolute() ? this.row + toBottom : this.row;\r\n        return new RowAddress(this.type, row, this.sheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new RowAddress(this.type, this.row, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return this.toSimpleRowAddress(baseAddress).row < 0;\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case ReferenceType.RELATIVE: {\r\n                return `${sheetPart}#ROWR${this.row}`;\r\n            }\r\n            case ReferenceType.ABSOLUTE: {\r\n                return `${sheetPart}#ROWA${this.row}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleRowAddress(baseAddress);\r\n        if (invalidSimpleRowAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\r\n        return `${dollar}${simpleAddress.row + 1}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxRows) {\r\n        return this.row >= maxRows;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { createToken, Lexer } from 'chevrotain';\r\nexport const RANGE_OPERATOR = ':';\r\nexport const ABSOLUTE_OPERATOR = '$';\r\nexport const ALL_WHITESPACE_REGEXP = /\\s+/;\r\nexport const ODFF_WHITESPACE_REGEXP = /[ \\t\\n\\r]+/;\r\n/* arithmetic */\r\n// abstract for + -\r\nexport const AdditionOp = createToken({\r\n    name: 'AdditionOp',\r\n    pattern: Lexer.NA,\r\n});\r\nexport const PlusOp = createToken({ name: 'PlusOp', pattern: /\\+/, categories: AdditionOp });\r\nexport const MinusOp = createToken({ name: 'MinusOp', pattern: /-/, categories: AdditionOp });\r\n// abstract for * /\r\nexport const MultiplicationOp = createToken({\r\n    name: 'MultiplicationOp',\r\n    pattern: Lexer.NA,\r\n});\r\nexport const TimesOp = createToken({ name: 'TimesOp', pattern: /\\*/, categories: MultiplicationOp });\r\nexport const DivOp = createToken({ name: 'DivOp', pattern: /\\//, categories: MultiplicationOp });\r\nexport const PowerOp = createToken({ name: 'PowerOp', pattern: /\\^/ });\r\nexport const PercentOp = createToken({ name: 'PercentOp', pattern: /%/ });\r\nexport const BooleanOp = createToken({\r\n    name: 'BooleanOp',\r\n    pattern: Lexer.NA,\r\n});\r\nexport const EqualsOp = createToken({ name: 'EqualsOp', pattern: /=/, categories: BooleanOp });\r\nexport const NotEqualOp = createToken({ name: 'NotEqualOp', pattern: /<>/, categories: BooleanOp });\r\nexport const GreaterThanOp = createToken({ name: 'GreaterThanOp', pattern: />/, categories: BooleanOp });\r\nexport const LessThanOp = createToken({ name: 'LessThanOp', pattern: /</, categories: BooleanOp });\r\nexport const GreaterThanOrEqualOp = createToken({ name: 'GreaterThanOrEqualOp', pattern: />=/, categories: BooleanOp });\r\nexport const LessThanOrEqualOp = createToken({ name: 'LessThanOrEqualOp', pattern: /<=/, categories: BooleanOp });\r\nexport const ConcatenateOp = createToken({ name: 'ConcatenateOp', pattern: /&/ });\r\n/* addresses */\r\nexport const simpleSheetName = '[A-Za-z0-9_\\u00C0-\\u02AF]+';\r\nexport const quotedSheetName = \"'(((?!').|'')*)'\";\r\nexport const sheetNameRegexp = `(${simpleSheetName}|${quotedSheetName})!`;\r\nexport const CellReference = createToken({\r\n    name: 'CellReference',\r\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+\\\\${ABSOLUTE_OPERATOR}?[0-9]+`),\r\n});\r\nexport const ColumnRange = createToken({\r\n    name: 'ColumnRange',\r\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+${RANGE_OPERATOR}(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+`),\r\n});\r\nexport const RowRange = createToken({\r\n    name: 'RowRange',\r\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[0-9]+${RANGE_OPERATOR}(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[0-9]+`),\r\n});\r\nexport const RangeSeparator = createToken({ name: 'RangeSeparator', pattern: `${RANGE_OPERATOR}` });\r\n/* parenthesis */\r\nexport const LParen = createToken({ name: 'LParen', pattern: /\\(/ });\r\nexport const RParen = createToken({ name: 'RParen', pattern: /\\)/ });\r\n/* array parenthesis */\r\nexport const ArrayLParen = createToken({ name: 'ArrayLParen', pattern: /{/ });\r\nexport const ArrayRParen = createToken({ name: 'ArrayRParen', pattern: /}/ });\r\n/* procedures */\r\nexport const ProcedureName = createToken({\r\n    name: 'ProcedureName',\r\n    pattern: /([A-Za-z\\u00C0-\\u02AF][A-Za-z0-9\\u00C0-\\u02AF._]*)\\(/\r\n});\r\n/* named expressions */\r\nexport const NamedExpression = createToken({\r\n    name: 'NamedExpression',\r\n    pattern: /[A-Za-z\\u00C0-\\u02AF_][A-Za-z0-9\\u00C0-\\u02AF._]*/\r\n});\r\n/* string literal */\r\nexport const StringLiteral = createToken({ name: 'StringLiteral', pattern: /\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/ });\r\n/* error literal */\r\nexport const ErrorLiteral = createToken({ name: 'ErrorLiteral', pattern: /#[A-Za-z0-9\\/]+[?!]?/ });\r\nexport const buildLexerConfig = (config) => {\r\n    const offsetProcedureNameLiteral = config.translationPackage.getFunctionTranslation('OFFSET');\r\n    const errorMapping = config.errorMapping;\r\n    const functionMapping = config.translationPackage.buildFunctionMapping();\r\n    const whitespaceTokenRegexp = config.ignoreWhiteSpace === 'standard' ? ODFF_WHITESPACE_REGEXP : ALL_WHITESPACE_REGEXP;\r\n    const WhiteSpace = createToken({ name: 'WhiteSpace', pattern: whitespaceTokenRegexp });\r\n    const ArrayRowSeparator = createToken({ name: 'ArrayRowSep', pattern: config.arrayRowSeparator });\r\n    const ArrayColSeparator = createToken({ name: 'ArrayColSep', pattern: config.arrayColumnSeparator });\r\n    /* configurable tokens */\r\n    let ArgSeparator, inject;\r\n    if (config.functionArgSeparator === config.arrayColumnSeparator) {\r\n        ArgSeparator = ArrayColSeparator;\r\n        inject = [];\r\n    }\r\n    else if (config.functionArgSeparator === config.arrayRowSeparator) {\r\n        ArgSeparator = ArrayRowSeparator;\r\n        inject = [];\r\n    }\r\n    else {\r\n        ArgSeparator = createToken({ name: 'ArgSeparator', pattern: config.functionArgSeparator });\r\n        inject = [ArgSeparator];\r\n    }\r\n    const NumberLiteral = createToken({\r\n        name: 'NumberLiteral',\r\n        pattern: new RegExp(`(([${config.decimalSeparator}]\\\\d+)|(\\\\d+([${config.decimalSeparator}]\\\\d*)?))(e[+-]?\\\\d+)?`)\r\n    });\r\n    const OffsetProcedureName = createToken({\r\n        name: 'OffsetProcedureName',\r\n        pattern: new RegExp(offsetProcedureNameLiteral, 'i')\r\n    });\r\n    /* order is important, first pattern is used */\r\n    const allTokens = [\r\n        WhiteSpace,\r\n        PlusOp,\r\n        MinusOp,\r\n        TimesOp,\r\n        DivOp,\r\n        PowerOp,\r\n        EqualsOp,\r\n        NotEqualOp,\r\n        PercentOp,\r\n        GreaterThanOrEqualOp,\r\n        LessThanOrEqualOp,\r\n        GreaterThanOp,\r\n        LessThanOp,\r\n        LParen,\r\n        RParen,\r\n        ArrayLParen,\r\n        ArrayRParen,\r\n        OffsetProcedureName,\r\n        ProcedureName,\r\n        RangeSeparator,\r\n        ...inject,\r\n        ColumnRange,\r\n        RowRange,\r\n        NumberLiteral,\r\n        StringLiteral,\r\n        ErrorLiteral,\r\n        ConcatenateOp,\r\n        BooleanOp,\r\n        AdditionOp,\r\n        MultiplicationOp,\r\n        CellReference,\r\n        NamedExpression,\r\n        ArrayRowSeparator,\r\n        ArrayColSeparator,\r\n    ];\r\n    return {\r\n        ArgSeparator,\r\n        NumberLiteral,\r\n        OffsetProcedureName,\r\n        ArrayRowSeparator,\r\n        ArrayColSeparator,\r\n        WhiteSpace,\r\n        allTokens,\r\n        errorMapping,\r\n        functionMapping,\r\n        decimalSeparator: config.decimalSeparator,\r\n        maxColumns: config.maxColumns,\r\n        maxRows: config.maxRows\r\n    };\r\n};\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { tokenMatcher } from 'chevrotain';\r\nimport { ErrorType } from '../Cell';\r\nimport { AstNodeType, buildParsingErrorAst } from './';\r\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\r\nimport { imageWithWhitespace, ParsingErrorType, RangeSheetReferenceType } from './Ast';\r\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\r\nimport { Cache } from './Cache';\r\nimport { FormulaLexer, FormulaParser } from './FormulaParser';\r\nimport { buildLexerConfig, CellReference, ColumnRange, ProcedureName, RowRange, } from './LexerConfig';\r\nimport { formatNumber } from './Unparser';\r\n/**\r\n * Parses formula using caching if feasible.\r\n */\r\nexport class ParserWithCaching {\r\n    constructor(config, functionRegistry, sheetMapping) {\r\n        this.config = config;\r\n        this.functionRegistry = functionRegistry;\r\n        this.sheetMapping = sheetMapping;\r\n        this.statsCacheUsed = 0;\r\n        this.lexerConfig = buildLexerConfig(config);\r\n        this.lexer = new FormulaLexer(this.lexerConfig);\r\n        this.formulaParser = new FormulaParser(this.lexerConfig, this.sheetMapping);\r\n        this.cache = new Cache(this.functionRegistry);\r\n    }\r\n    /**\r\n     * Parses a formula.\r\n     *\r\n     * @param text - formula to parse\r\n     * @param formulaAddress - address with regard to which formula should be parsed. Impacts computed addresses in R0C0 format.\r\n     */\r\n    parse(text, formulaAddress) {\r\n        const lexerResult = this.tokenizeFormula(text);\r\n        if (lexerResult.errors.length > 0) {\r\n            const errors = lexerResult.errors.map((e) => ({\r\n                type: ParsingErrorType.LexingError,\r\n                message: e.message,\r\n            }));\r\n            return {\r\n                ast: buildParsingErrorAst(),\r\n                errors,\r\n                hasVolatileFunction: false,\r\n                hasStructuralChangeFunction: false,\r\n                dependencies: []\r\n            };\r\n        }\r\n        const hash = this.computeHashFromTokens(lexerResult.tokens, formulaAddress);\r\n        let cacheResult = this.cache.get(hash);\r\n        if (cacheResult !== undefined) {\r\n            ++this.statsCacheUsed;\r\n        }\r\n        else {\r\n            const processedTokens = this.bindWhitespacesToTokens(lexerResult.tokens);\r\n            const parsingResult = this.formulaParser.parseFromTokens(processedTokens, formulaAddress);\r\n            if (parsingResult.errors.length > 0) {\r\n                return Object.assign(Object.assign({}, parsingResult), { hasVolatileFunction: false, hasStructuralChangeFunction: false, dependencies: [] });\r\n            }\r\n            else {\r\n                cacheResult = this.cache.set(hash, parsingResult.ast);\r\n            }\r\n        }\r\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\r\n        return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\r\n    }\r\n    fetchCachedResultForAst(ast) {\r\n        const hash = this.computeHashFromAst(ast);\r\n        return this.fetchCachedResult(hash);\r\n    }\r\n    fetchCachedResult(hash) {\r\n        const cacheResult = this.cache.get(hash);\r\n        if (cacheResult === undefined) {\r\n            throw new Error('There is no AST with such key in the cache');\r\n        }\r\n        else {\r\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\r\n            return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\r\n        }\r\n    }\r\n    computeHashFromTokens(tokens, baseAddress) {\r\n        var _a;\r\n        let hash = '';\r\n        let idx = 0;\r\n        while (idx < tokens.length) {\r\n            const token = tokens[idx];\r\n            if (tokenMatcher(token, CellReference)) {\r\n                const cellAddress = cellAddressFromString(this.sheetMapping, token.image, baseAddress);\r\n                if (cellAddress === undefined) {\r\n                    hash = hash.concat(token.image);\r\n                }\r\n                else {\r\n                    hash = hash.concat(cellAddress.hash(true));\r\n                }\r\n            }\r\n            else if (tokenMatcher(token, ProcedureName)) {\r\n                const procedureName = token.image.toUpperCase().slice(0, -1);\r\n                const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\r\n                hash = hash.concat(canonicalProcedureName, '(');\r\n            }\r\n            else if (tokenMatcher(token, ColumnRange)) {\r\n                const [start, end] = token.image.split(':');\r\n                const startAddress = columnAddressFromString(this.sheetMapping, start, baseAddress);\r\n                const endAddress = columnAddressFromString(this.sheetMapping, end, baseAddress);\r\n                if (startAddress === undefined || endAddress === undefined) {\r\n                    hash = hash.concat('!REF');\r\n                }\r\n                else {\r\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\r\n                }\r\n            }\r\n            else if (tokenMatcher(token, RowRange)) {\r\n                const [start, end] = token.image.split(':');\r\n                const startAddress = rowAddressFromString(this.sheetMapping, start, baseAddress);\r\n                const endAddress = rowAddressFromString(this.sheetMapping, end, baseAddress);\r\n                if (startAddress === undefined || endAddress === undefined) {\r\n                    hash = hash.concat('!REF');\r\n                }\r\n                else {\r\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\r\n                }\r\n            }\r\n            else {\r\n                hash = hash.concat(token.image);\r\n            }\r\n            idx++;\r\n        }\r\n        return hash;\r\n    }\r\n    rememberNewAst(ast) {\r\n        const hash = this.computeHashFromAst(ast);\r\n        return this.cache.maybeSetAndThenGet(hash, ast);\r\n    }\r\n    computeHashFromAst(ast) {\r\n        return '=' + this.computeHashOfAstNode(ast);\r\n    }\r\n    computeHashOfAstNode(ast) {\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return ast.leadingWhitespace || '';\r\n            }\r\n            case AstNodeType.NUMBER: {\r\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.STRING: {\r\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                return imageWithWhitespace(ast.expressionName, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                const args = ast.args.map((arg) => this.computeHashOfAstNode(arg)).join(this.config.functionArgSeparator);\r\n                const rightPart = ast.procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                return imageWithWhitespace(ast.reference.hash(true), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                const start = ast.start.hash(ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE);\r\n                const end = ast.end.hash(ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE);\r\n                return imageWithWhitespace(start + ':' + end, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                return imageWithWhitespace('-' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                return imageWithWhitespace('+' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                return this.computeHashOfAstNode(ast.value) + imageWithWhitespace('%', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR: {\r\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\r\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const args = ast.args.map(row => row.map(val => this.computeHashOfAstNode(val)).join(',')).join(';');\r\n                return imageWithWhitespace('{' + args + imageWithWhitespace('}', ast.internalWhitespace), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                const expression = this.computeHashOfAstNode(ast.expression);\r\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            default: {\r\n                return this.computeHashOfAstNode(ast.left) + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + this.computeHashOfAstNode(ast.right);\r\n            }\r\n        }\r\n    }\r\n    bindWhitespacesToTokens(tokens) {\r\n        const processedTokens = [];\r\n        const first = tokens[0];\r\n        if (!tokenMatcher(first, this.lexerConfig.WhiteSpace)) {\r\n            processedTokens.push(first);\r\n        }\r\n        for (let i = 1; i < tokens.length; ++i) {\r\n            const current = tokens[i];\r\n            if (tokenMatcher(current, this.lexerConfig.WhiteSpace)) {\r\n                continue;\r\n            }\r\n            const previous = tokens[i - 1];\r\n            if (tokenMatcher(previous, this.lexerConfig.WhiteSpace)) {\r\n                current.leadingWhitespace = previous;\r\n            }\r\n            processedTokens.push(current);\r\n        }\r\n        return processedTokens;\r\n    }\r\n    tokenizeFormula(text) {\r\n        return this.lexer.tokenizeFormula(text);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../Cell';\r\nexport const parsingError = (type, message) => ({\r\n    type, message\r\n});\r\nexport var ParsingErrorType;\r\n(function (ParsingErrorType) {\r\n    ParsingErrorType[\"LexingError\"] = \"LexingError\";\r\n    ParsingErrorType[\"ParserError\"] = \"ParsingError\";\r\n    ParsingErrorType[\"StaticOffsetError\"] = \"StaticOffsetError\";\r\n    ParsingErrorType[\"StaticOffsetOutOfRangeError\"] = \"StaticOffsetOutOfRangeError\";\r\n    ParsingErrorType[\"RangeOffsetNotAllowed\"] = \"RangeOffsetNotAllowed\";\r\n})(ParsingErrorType || (ParsingErrorType = {}));\r\nexport var AstNodeType;\r\n(function (AstNodeType) {\r\n    AstNodeType[\"EMPTY\"] = \"EMPTY\";\r\n    AstNodeType[\"NUMBER\"] = \"NUMBER\";\r\n    AstNodeType[\"STRING\"] = \"STRING\";\r\n    AstNodeType[\"MINUS_UNARY_OP\"] = \"MINUS_UNARY_OP\";\r\n    AstNodeType[\"PLUS_UNARY_OP\"] = \"PLUS_UNARY_OP\";\r\n    AstNodeType[\"PERCENT_OP\"] = \"PERCENT_OP\";\r\n    AstNodeType[\"CONCATENATE_OP\"] = \"CONCATENATE_OP\";\r\n    AstNodeType[\"EQUALS_OP\"] = \"EQUALS_OP\";\r\n    AstNodeType[\"NOT_EQUAL_OP\"] = \"NOT_EQUAL_OP\";\r\n    AstNodeType[\"GREATER_THAN_OP\"] = \"GREATER_THAN_OP\";\r\n    AstNodeType[\"LESS_THAN_OP\"] = \"LESS_THAN_OP\";\r\n    AstNodeType[\"GREATER_THAN_OR_EQUAL_OP\"] = \"GREATER_THAN_OR_EQUAL_OP\";\r\n    AstNodeType[\"LESS_THAN_OR_EQUAL_OP\"] = \"LESS_THAN_OR_EQUAL_OP\";\r\n    AstNodeType[\"PLUS_OP\"] = \"PLUS_OP\";\r\n    AstNodeType[\"MINUS_OP\"] = \"MINUS_OP\";\r\n    AstNodeType[\"TIMES_OP\"] = \"TIMES_OP\";\r\n    AstNodeType[\"DIV_OP\"] = \"DIV_OP\";\r\n    AstNodeType[\"POWER_OP\"] = \"POWER_OP\";\r\n    AstNodeType[\"FUNCTION_CALL\"] = \"FUNCTION_CALL\";\r\n    AstNodeType[\"NAMED_EXPRESSION\"] = \"NAMED_EXPRESSION\";\r\n    AstNodeType[\"PARENTHESIS\"] = \"PARENTHESES\";\r\n    AstNodeType[\"CELL_REFERENCE\"] = \"CELL_REFERENCE\";\r\n    AstNodeType[\"CELL_RANGE\"] = \"CELL_RANGE\";\r\n    AstNodeType[\"COLUMN_RANGE\"] = \"COLUMN_RANGE\";\r\n    AstNodeType[\"ROW_RANGE\"] = \"ROW_RANGE\";\r\n    AstNodeType[\"ERROR\"] = \"ERROR\";\r\n    AstNodeType[\"ERROR_WITH_RAW_INPUT\"] = \"ERROR_WITH_RAW_INPUT\";\r\n    AstNodeType[\"ARRAY\"] = \"ARRAY\";\r\n})(AstNodeType || (AstNodeType = {}));\r\nexport var RangeSheetReferenceType;\r\n(function (RangeSheetReferenceType) {\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"RELATIVE\"] = 0] = \"RELATIVE\";\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"START_ABSOLUTE\"] = 1] = \"START_ABSOLUTE\";\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"BOTH_ABSOLUTE\"] = 2] = \"BOTH_ABSOLUTE\";\r\n})(RangeSheetReferenceType || (RangeSheetReferenceType = {}));\r\nexport const buildEmptyArgAst = (leadingWhitespace) => ({\r\n    type: AstNodeType.EMPTY,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildNumberAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.NUMBER,\r\n    value: value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildStringAst = (token) => {\r\n    var _a;\r\n    return ({\r\n        type: AstNodeType.STRING,\r\n        value: token.image.slice(1, -1),\r\n        leadingWhitespace: (_a = token.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image,\r\n    });\r\n};\r\nexport const buildCellReferenceAst = (reference, leadingWhitespace) => ({\r\n    type: AstNodeType.CELL_REFERENCE,\r\n    reference,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildCellRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.CELL_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace\r\n    };\r\n};\r\nexport const buildColumnRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.COLUMN_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    };\r\n};\r\nexport const buildRowRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.ROW_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    };\r\n};\r\nexport const buildConcatenateOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.CONCATENATE_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildEqualsOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.EQUALS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildNotEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.NOT_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildGreaterThanOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.GREATER_THAN_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildLessThanOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.LESS_THAN_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildGreaterThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.GREATER_THAN_OR_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildLessThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.LESS_THAN_OR_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPlusOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.PLUS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildMinusOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.MINUS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildTimesOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.TIMES_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildDivOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.DIV_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPowerOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.POWER_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildMinusUnaryOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.MINUS_UNARY_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPlusUnaryOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.PLUS_UNARY_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPercentOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.PERCENT_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildProcedureAst = (procedureName, args, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.FUNCTION_CALL,\r\n    procedureName,\r\n    args,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildArrayAst = (args, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.ARRAY,\r\n    args,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildNamedExpressionAst = (expressionName, leadingWhitespace) => ({\r\n    type: AstNodeType.NAMED_EXPRESSION,\r\n    expressionName,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildParenthesisAst = (expression, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.PARENTHESIS,\r\n    expression,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildCellErrorAst = (error, leadingWhitespace) => ({\r\n    type: AstNodeType.ERROR,\r\n    error,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildErrorWithRawInputAst = (rawInput, error, leadingWhitespace) => ({\r\n    type: AstNodeType.ERROR_WITH_RAW_INPUT,\r\n    error,\r\n    rawInput,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildParsingErrorAst = () => ({\r\n    type: AstNodeType.ERROR,\r\n    error: CellError.parsingError()\r\n});\r\nfunction assertRangeConsistency(start, end, sheetReferenceType) {\r\n    if ((start.sheet !== undefined && end.sheet === undefined) || (start.sheet === undefined && end.sheet !== undefined)) {\r\n        throw new Error('Start address inconsistent with end address');\r\n    }\r\n    if ((start.sheet === undefined && sheetReferenceType !== RangeSheetReferenceType.RELATIVE)\r\n        || (start.sheet !== undefined && sheetReferenceType === RangeSheetReferenceType.RELATIVE)) {\r\n        throw new Error('Sheet address inconsistent with sheet reference type');\r\n    }\r\n}\r\nexport function imageWithWhitespace(image, leadingWhitespace) {\r\n    return (leadingWhitespace !== null && leadingWhitespace !== void 0 ? leadingWhitespace : '') + image;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AstNodeType } from './Ast';\r\nexport const binaryOpTokenMap = {\r\n    [AstNodeType.PLUS_OP]: '+',\r\n    [AstNodeType.MINUS_OP]: '-',\r\n    [AstNodeType.TIMES_OP]: '*',\r\n    [AstNodeType.DIV_OP]: '/',\r\n    [AstNodeType.CONCATENATE_OP]: '&',\r\n    [AstNodeType.POWER_OP]: '^',\r\n    [AstNodeType.EQUALS_OP]: '=',\r\n    [AstNodeType.NOT_EQUAL_OP]: '<>',\r\n    [AstNodeType.GREATER_THAN_OP]: '>',\r\n    [AstNodeType.GREATER_THAN_OR_EQUAL_OP]: '>=',\r\n    [AstNodeType.LESS_THAN_OP]: '<',\r\n    [AstNodeType.LESS_THAN_OR_EQUAL_OP]: '<=',\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AstNodeType, collectDependencies } from './';\r\nconst buildCacheEntry = (ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction) => ({\r\n    ast,\r\n    relativeDependencies,\r\n    hasVolatileFunction,\r\n    hasStructuralChangeFunction\r\n});\r\nexport class Cache {\r\n    constructor(functionRegistry) {\r\n        this.functionRegistry = functionRegistry;\r\n        this.cache = new Map();\r\n    }\r\n    set(hash, ast) {\r\n        const astRelativeDependencies = collectDependencies(ast, this.functionRegistry);\r\n        const cacheEntry = buildCacheEntry(ast, astRelativeDependencies, doesContainFunctions(ast, this.functionRegistry.isFunctionVolatile), doesContainFunctions(ast, this.functionRegistry.isFunctionDependentOnSheetStructureChange));\r\n        this.cache.set(hash, cacheEntry);\r\n        return cacheEntry;\r\n    }\r\n    get(hash) {\r\n        return this.cache.get(hash);\r\n    }\r\n    maybeSetAndThenGet(hash, ast) {\r\n        const entryFromCache = this.cache.get(hash);\r\n        if (entryFromCache !== undefined) {\r\n            return entryFromCache.ast;\r\n        }\r\n        else {\r\n            this.set(hash, ast);\r\n            return ast;\r\n        }\r\n    }\r\n}\r\nexport const doesContainFunctions = (ast, functionCriterion) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n        case AstNodeType.CELL_REFERENCE:\r\n        case AstNodeType.CELL_RANGE:\r\n        case AstNodeType.COLUMN_RANGE:\r\n        case AstNodeType.ROW_RANGE:\r\n        case AstNodeType.NAMED_EXPRESSION:\r\n            return false;\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            return doesContainFunctions(ast.value, functionCriterion);\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            return doesContainFunctions(ast.left, functionCriterion) || doesContainFunctions(ast.right, functionCriterion);\r\n        case AstNodeType.PARENTHESIS:\r\n            return doesContainFunctions(ast.expression, functionCriterion);\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            if (functionCriterion(ast.procedureName)) {\r\n                return true;\r\n            }\r\n            return ast.args.some((arg) => doesContainFunctions(arg, functionCriterion));\r\n        }\r\n        case AstNodeType.ARRAY: {\r\n            return ast.args.some(row => row.some(arg => doesContainFunctions(arg, functionCriterion)));\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmbeddedActionsParser, EMPTY_ALT, Lexer, tokenMatcher } from 'chevrotain';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\r\nimport { AstNodeType, buildArrayAst, buildCellErrorAst, buildCellRangeAst, buildCellReferenceAst, buildColumnRangeAst, buildConcatenateOpAst, buildDivOpAst, buildEmptyArgAst, buildEqualsOpAst, buildErrorWithRawInputAst, buildGreaterThanOpAst, buildGreaterThanOrEqualOpAst, buildLessThanOpAst, buildLessThanOrEqualOpAst, buildMinusOpAst, buildMinusUnaryOpAst, buildNamedExpressionAst, buildNotEqualOpAst, buildNumberAst, buildParenthesisAst, buildParsingErrorAst, buildPercentOpAst, buildPlusOpAst, buildPlusUnaryOpAst, buildPowerOpAst, buildProcedureAst, buildRowRangeAst, buildStringAst, buildTimesOpAst, parsingError, ParsingErrorType, RangeSheetReferenceType, } from './Ast';\r\nimport { CellAddress, CellReferenceType } from './CellAddress';\r\nimport { AdditionOp, ArrayLParen, ArrayRParen, BooleanOp, CellReference, ColumnRange, ConcatenateOp, DivOp, EqualsOp, ErrorLiteral, GreaterThanOp, GreaterThanOrEqualOp, LessThanOp, LessThanOrEqualOp, LParen, MinusOp, MultiplicationOp, NamedExpression, NotEqualOp, PercentOp, PlusOp, PowerOp, ProcedureName, RangeSeparator, RowRange, RParen, StringLiteral, TimesOp, } from './LexerConfig';\r\nimport { RowAddress } from './RowAddress';\r\nimport { ColumnAddress } from './ColumnAddress';\r\n/**\r\n * LL(k) formula parser described using Chevrotain DSL\r\n *\r\n * It is equivalent to the grammar below:\r\n *\r\n * F -> '=' E <br/>\r\n * B -> K < B | K >= B ... | K <br/>\r\n * K -> E & K | E <br/>\r\n * E -> M + E | M - E | M <br/>\r\n * M -> W * M | W / M | W <br/>\r\n * W -> C * W | C <br/>\r\n * C -> N | R | O | A | P | num <br/>\r\n * N -> '(' E ')' <br/>\r\n * R -> A:OFFSET(..) | A:A <br/>\r\n * O -> OFFSET(..) | OFFSET(..):A | OFFSET(..):OFFSET(..) <br/>\r\n * A -> A1 | $A1 | A$1 | $A$1 <br/>\r\n * P -> SUM(..) <br/>\r\n */\r\nexport class FormulaParser extends EmbeddedActionsParser {\r\n    constructor(lexerConfig, sheetMapping) {\r\n        super(lexerConfig.allTokens, { outputCst: false, maxLookahead: 7 });\r\n        this.booleanExpressionOrEmpty = this.RULE('booleanExpressionOrEmpty', () => {\r\n            return this.OR([\r\n                { ALT: () => this.SUBRULE(this.booleanExpression) },\r\n                { ALT: EMPTY_ALT(buildEmptyArgAst()) }\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for procedure expressions: SUM(1,A1)\r\n         */\r\n        this.procedureExpression = this.RULE('procedureExpression', () => {\r\n            var _a;\r\n            const procedureNameToken = this.CONSUME(ProcedureName);\r\n            const procedureName = procedureNameToken.image.toUpperCase().slice(0, -1);\r\n            const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\r\n            const args = [];\r\n            let argument = this.SUBRULE(this.booleanExpressionOrEmpty);\r\n            this.MANY(() => {\r\n                var _a;\r\n                const separator = this.CONSUME(this.lexerConfig.ArgSeparator);\r\n                if (argument.type === AstNodeType.EMPTY) {\r\n                    argument.leadingWhitespace = (_a = separator.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image;\r\n                }\r\n                args.push(argument);\r\n                argument = this.SUBRULE2(this.booleanExpressionOrEmpty);\r\n            });\r\n            args.push(argument);\r\n            if (args.length === 1 && args[0].type === AstNodeType.EMPTY) {\r\n                args.length = 0;\r\n            }\r\n            const rParenToken = this.CONSUME(RParen);\r\n            return buildProcedureAst(canonicalProcedureName, args, procedureNameToken.leadingWhitespace, rParenToken.leadingWhitespace);\r\n        });\r\n        this.namedExpressionExpression = this.RULE('namedExpressionExpression', () => {\r\n            const name = this.CONSUME(NamedExpression);\r\n            return buildNamedExpressionAst(name.image, name.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for OFFSET() function expression\r\n         */\r\n        this.offsetProcedureExpression = this.RULE('offsetProcedureExpression', () => {\r\n            const args = [];\r\n            this.CONSUME(this.lexerConfig.OffsetProcedureName);\r\n            this.CONSUME(LParen);\r\n            this.MANY_SEP({\r\n                SEP: this.lexerConfig.ArgSeparator,\r\n                DEF: () => {\r\n                    args.push(this.SUBRULE(this.booleanExpression));\r\n                },\r\n            });\r\n            this.CONSUME(RParen);\r\n            return this.handleOffsetHeuristic(args);\r\n        });\r\n        /**\r\n         * Rule for column range, e.g. A:B, Sheet1!A:B, Sheet1!A:Sheet1!B\r\n         */\r\n        this.columnRangeExpression = this.RULE('columnRangeExpression', () => {\r\n            const range = this.CONSUME(ColumnRange);\r\n            const [startImage, endImage] = range.image.split(':');\r\n            const firstAddress = this.ACTION(() => columnAddressFromString(this.sheetMapping, startImage, this.formulaAddress));\r\n            const secondAddress = this.ACTION(() => columnAddressFromString(this.sheetMapping, endImage, this.formulaAddress));\r\n            if (firstAddress === undefined || secondAddress === undefined) {\r\n                return buildCellErrorAst(new CellError(ErrorType.REF));\r\n            }\r\n            if (firstAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns) || secondAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns)) {\r\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\r\n            }\r\n            if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n            }\r\n            const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n            const { start, end } = this.orderColumnRangeEnds(firstEnd, secondEnd);\r\n            return buildColumnRangeAst(start, end, sheetRefType, range.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for row range, e.g. 1:2, Sheet1!1:2, Sheet1!1:Sheet1!2\r\n         */\r\n        this.rowRangeExpression = this.RULE('rowRangeExpression', () => {\r\n            const range = this.CONSUME(RowRange);\r\n            const [startImage, endImage] = range.image.split(':');\r\n            const firstAddress = this.ACTION(() => rowAddressFromString(this.sheetMapping, startImage, this.formulaAddress));\r\n            const secondAddress = this.ACTION(() => rowAddressFromString(this.sheetMapping, endImage, this.formulaAddress));\r\n            if (firstAddress === undefined || secondAddress === undefined) {\r\n                return buildCellErrorAst(new CellError(ErrorType.REF));\r\n            }\r\n            if (firstAddress.exceedsSheetSizeLimits(this.lexerConfig.maxRows) || secondAddress.exceedsSheetSizeLimits(this.lexerConfig.maxRows)) {\r\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\r\n            }\r\n            if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n            }\r\n            const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n            const { start, end } = this.orderRowRangeEnds(firstEnd, secondEnd);\r\n            return buildRowRangeAst(start, end, sheetRefType, range.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for cell reference expression (e.g. A1, $A1, A$1, $A$1, $Sheet42!A$17)\r\n         */\r\n        this.cellReference = this.RULE('cellReference', () => {\r\n            const cell = this.CONSUME(CellReference);\r\n            const address = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, cell.image, this.formulaAddress);\r\n            });\r\n            if (address === undefined) {\r\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.REF), cell.leadingWhitespace);\r\n            }\r\n            else if (address.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\r\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.NAME), cell.leadingWhitespace);\r\n            }\r\n            else {\r\n                return buildCellReferenceAst(address, cell.leadingWhitespace);\r\n            }\r\n        });\r\n        /**\r\n         * Rule for end range reference expression with additional checks considering range start\r\n         */\r\n        this.endRangeReference = this.RULE('endRangeReference', (start) => {\r\n            var _a;\r\n            const end = this.CONSUME(CellReference);\r\n            const startAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\r\n            });\r\n            const endAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\r\n            });\r\n            if (startAddress === undefined || endAddress === undefined) {\r\n                return this.ACTION(() => {\r\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.REF), start.leadingWhitespace);\r\n                });\r\n            }\r\n            else if (startAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)\r\n                || endAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\r\n                return this.ACTION(() => {\r\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.NAME), start.leadingWhitespace);\r\n                });\r\n            }\r\n            return this.buildCellRange(startAddress, endAddress, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\r\n        });\r\n        /**\r\n         * Rule for end of range expression\r\n         *\r\n         * End of range may be a cell reference or OFFSET() function call\r\n         */\r\n        this.endOfRangeExpression = this.RULE('endOfRangeExpression', (start) => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        return this.SUBRULE(this.endRangeReference, { ARGS: [start] });\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        var _a;\r\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n                        const startAddress = this.ACTION(() => {\r\n                            return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\r\n                        });\r\n                        if (startAddress === undefined) {\r\n                            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n                        }\r\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\r\n                            return this.buildCellRange(startAddress, offsetProcedure.reference, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                        }\r\n                    },\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for cell ranges (e.g. A1:B$3, A1:OFFSET())\r\n         */\r\n        this.cellRangeExpression = this.RULE('cellRangeExpression', () => {\r\n            const start = this.CONSUME(CellReference);\r\n            this.CONSUME2(RangeSeparator);\r\n            return this.SUBRULE(this.endOfRangeExpression, { ARGS: [start] });\r\n        });\r\n        /**\r\n         * Rule for end range reference expression starting with offset procedure with additional checks considering range start\r\n         */\r\n        this.endRangeWithOffsetStartReference = this.RULE('endRangeWithOffsetStartReference', (start) => {\r\n            const end = this.CONSUME(CellReference);\r\n            const endAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\r\n            });\r\n            if (endAddress === undefined) {\r\n                return this.ACTION(() => {\r\n                    return buildCellErrorAst(new CellError(ErrorType.REF));\r\n                });\r\n            }\r\n            return this.buildCellRange(start.reference, endAddress, start.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for end of range expression\r\n         *\r\n         * End of range may be a cell reference or OFFSET() function call\r\n         */\r\n        this.endOfRangeWithOffsetStartExpression = this.RULE('endOfRangeWithOffsetStartExpression', (start) => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        return this.SUBRULE(this.endRangeWithOffsetStartReference, { ARGS: [start] });\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\r\n                            return this.buildCellRange(start.reference, offsetProcedure.reference, start.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                        }\r\n                    },\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for expressions that start with the OFFSET function.\r\n         *\r\n         * The OFFSET function can occur as a cell reference, or as a part of a cell range.\r\n         * To preserve LL(k) properties, expressions that start with the OFFSET function need a separate rule.\r\n         *\r\n         * Depending on the presence of the {@link RangeSeparator}, a proper {@link Ast} node type is built.\r\n         */\r\n        this.offsetExpression = this.RULE('offsetExpression', () => {\r\n            const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n            let end;\r\n            this.OPTION(() => {\r\n                this.CONSUME(RangeSeparator);\r\n                if (offsetProcedure.type === AstNodeType.CELL_RANGE) {\r\n                    end = this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                }\r\n                else {\r\n                    end = this.SUBRULE(this.endOfRangeWithOffsetStartExpression, { ARGS: [offsetProcedure] });\r\n                }\r\n            });\r\n            if (end !== undefined) {\r\n                return end;\r\n            }\r\n            return offsetProcedure;\r\n        });\r\n        this.insideArrayExpression = this.RULE('insideArrayExpression', () => {\r\n            const ret = [[]];\r\n            ret[ret.length - 1].push(this.SUBRULE(this.booleanExpression));\r\n            this.MANY(() => {\r\n                this.OR([\r\n                    {\r\n                        ALT: () => {\r\n                            this.CONSUME(this.lexerConfig.ArrayColSeparator);\r\n                            ret[ret.length - 1].push(this.SUBRULE2(this.booleanExpression));\r\n                        }\r\n                    },\r\n                    {\r\n                        ALT: () => {\r\n                            this.CONSUME(this.lexerConfig.ArrayRowSeparator);\r\n                            ret.push([]);\r\n                            ret[ret.length - 1].push(this.SUBRULE3(this.booleanExpression));\r\n                        }\r\n                    }\r\n                ]);\r\n            });\r\n            return buildArrayAst(ret);\r\n        });\r\n        /**\r\n         * Rule for parenthesis expression\r\n         */\r\n        this.parenthesisExpression = this.RULE('parenthesisExpression', () => {\r\n            const lParenToken = this.CONSUME(LParen);\r\n            const expression = this.SUBRULE(this.booleanExpression);\r\n            const rParenToken = this.CONSUME(RParen);\r\n            return buildParenthesisAst(expression, lParenToken.leadingWhitespace, rParenToken.leadingWhitespace);\r\n        });\r\n        this.arrayExpression = this.RULE('arrayExpression', () => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        const ltoken = this.CONSUME(ArrayLParen);\r\n                        const ret = this.SUBRULE(this.insideArrayExpression);\r\n                        const rtoken = this.CONSUME(ArrayRParen);\r\n                        return buildArrayAst(ret.args, ltoken.leadingWhitespace, rtoken.leadingWhitespace);\r\n                    }\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.parenthesisExpression)\r\n                }\r\n            ]);\r\n        });\r\n        this.numericStringToNumber = (input) => {\r\n            const normalized = input.replace(this.lexerConfig.decimalSeparator, '.');\r\n            return Number(normalized);\r\n        };\r\n        /**\r\n         * Rule for positive atomic expressions\r\n         */\r\n        this.positiveAtomicExpression = this.RULE('positiveAtomicExpression', () => {\r\n            var _a;\r\n            return this.OR((_a = this.atomicExpCache) !== null && _a !== void 0 ? _a : (this.atomicExpCache = [\r\n                {\r\n                    ALT: () => this.SUBRULE(this.arrayExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.cellRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.columnRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.rowRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.offsetExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.cellReference),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.procedureExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.namedExpressionExpression),\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const number = this.CONSUME(this.lexerConfig.NumberLiteral);\r\n                        return buildNumberAst(this.numericStringToNumber(number.image), number.leadingWhitespace);\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const str = this.CONSUME(StringLiteral);\r\n                        return buildStringAst(str);\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const token = this.CONSUME(ErrorLiteral);\r\n                        const errString = token.image.toUpperCase();\r\n                        const errorType = this.lexerConfig.errorMapping[errString];\r\n                        if (errorType) {\r\n                            return buildCellErrorAst(new CellError(errorType), token.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.ParserError, 'Unknown error literal');\r\n                        }\r\n                    },\r\n                },\r\n            ]));\r\n        });\r\n        this.rightUnaryOpAtomicExpression = this.RULE('rightUnaryOpAtomicExpression', () => {\r\n            const positiveAtomicExpression = this.SUBRULE(this.positiveAtomicExpression);\r\n            const percentage = this.OPTION(() => {\r\n                return this.CONSUME(PercentOp);\r\n            });\r\n            if (percentage) {\r\n                return buildPercentOpAst(positiveAtomicExpression, percentage.leadingWhitespace);\r\n            }\r\n            return positiveAtomicExpression;\r\n        });\r\n        /**\r\n         * Rule for atomic expressions, which is positive atomic expression or negation of it\r\n         */\r\n        this.atomicExpression = this.RULE('atomicExpression', () => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        const op = this.CONSUME(AdditionOp);\r\n                        const value = this.SUBRULE(this.atomicExpression);\r\n                        if (tokenMatcher(op, PlusOp)) {\r\n                            return buildPlusUnaryOpAst(value, op.leadingWhitespace);\r\n                        }\r\n                        else if (tokenMatcher(op, MinusOp)) {\r\n                            return buildMinusUnaryOpAst(value, op.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            this.customParsingError = parsingError(ParsingErrorType.ParserError, 'Mismatched token type');\r\n                            return this.customParsingError;\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE2(this.rightUnaryOpAtomicExpression),\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for power expression\r\n         */\r\n        this.powerExpression = this.RULE('powerExpression', () => {\r\n            let lhs = this.SUBRULE(this.atomicExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(PowerOp);\r\n                const rhs = this.SUBRULE2(this.atomicExpression);\r\n                if (tokenMatcher(op, PowerOp)) {\r\n                    lhs = buildPowerOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for multiplication category operators (e.g. 1 * A1, 1 / A1)\r\n         */\r\n        this.multiplicationExpression = this.RULE('multiplicationExpression', () => {\r\n            let lhs = this.SUBRULE(this.powerExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(MultiplicationOp);\r\n                const rhs = this.SUBRULE2(this.powerExpression);\r\n                if (tokenMatcher(op, TimesOp)) {\r\n                    lhs = buildTimesOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, DivOp)) {\r\n                    lhs = buildDivOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for addition category operators (e.g. 1 + A1, 1 - A1)\r\n         */\r\n        this.additionExpression = this.RULE('additionExpression', () => {\r\n            let lhs = this.SUBRULE(this.multiplicationExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(AdditionOp);\r\n                const rhs = this.SUBRULE2(this.multiplicationExpression);\r\n                if (tokenMatcher(op, PlusOp)) {\r\n                    lhs = buildPlusOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, MinusOp)) {\r\n                    lhs = buildMinusOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for concatenation operator expression (e.g. \"=\" & A1)\r\n         */\r\n        this.concatenateExpression = this.RULE('concatenateExpression', () => {\r\n            let lhs = this.SUBRULE(this.additionExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(ConcatenateOp);\r\n                const rhs = this.SUBRULE2(this.additionExpression);\r\n                lhs = buildConcatenateOpAst(lhs, rhs, op.leadingWhitespace);\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for boolean expression (e.g. 1 <= A1)\r\n         */\r\n        this.booleanExpression = this.RULE('booleanExpression', () => {\r\n            let lhs = this.SUBRULE(this.concatenateExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(BooleanOp);\r\n                const rhs = this.SUBRULE2(this.concatenateExpression);\r\n                if (tokenMatcher(op, EqualsOp)) {\r\n                    lhs = buildEqualsOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, NotEqualOp)) {\r\n                    lhs = buildNotEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, GreaterThanOp)) {\r\n                    lhs = buildGreaterThanOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, LessThanOp)) {\r\n                    lhs = buildLessThanOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, GreaterThanOrEqualOp)) {\r\n                    lhs = buildGreaterThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, LessThanOrEqualOp)) {\r\n                    lhs = buildLessThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Entry rule\r\n         */\r\n        this.formula = this.RULE('formula', () => {\r\n            this.CONSUME(EqualsOp);\r\n            return this.SUBRULE(this.booleanExpression);\r\n        });\r\n        this.lexerConfig = lexerConfig;\r\n        this.sheetMapping = sheetMapping;\r\n        this.formulaAddress = simpleCellAddress(0, 0, 0);\r\n        this.performSelfAnalysis();\r\n    }\r\n    /**\r\n     * Parses tokenized formula and builds abstract syntax tree\r\n     *\r\n     * @param tokens - tokenized formula\r\n     * @param formulaAddress - address of the cell in which formula is located\r\n     */\r\n    parseFromTokens(tokens, formulaAddress) {\r\n        this.input = tokens;\r\n        let ast = this.formulaWithContext(formulaAddress);\r\n        let errors = [];\r\n        if (this.customParsingError) {\r\n            errors.push(this.customParsingError);\r\n        }\r\n        errors = errors.concat(this.errors.map((e) => ({\r\n            type: ParsingErrorType.ParserError,\r\n            message: e.message,\r\n        })));\r\n        if (errors.length > 0) {\r\n            ast = buildParsingErrorAst();\r\n        }\r\n        return {\r\n            ast,\r\n            errors\r\n        };\r\n    }\r\n    reset() {\r\n        super.reset();\r\n        this.customParsingError = undefined;\r\n    }\r\n    /**\r\n     * Entry rule wrapper that sets formula address\r\n     *\r\n     * @param address - address of the cell in which formula is located\r\n     */\r\n    formulaWithContext(address) {\r\n        this.formulaAddress = address;\r\n        return this.formula();\r\n    }\r\n    buildCellRange(firstAddress, secondAddress, leadingWhitespace) {\r\n        if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n            return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n        }\r\n        const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n        const { start, end } = this.orderCellRangeEnds(firstEnd, secondEnd);\r\n        return buildCellRangeAst(start, end, sheetRefType, leadingWhitespace);\r\n    }\r\n    static fixSheetIdsForRangeEnds(firstEnd, secondEnd) {\r\n        const sheetRefType = FormulaParser.rangeSheetReferenceType(firstEnd.sheet, secondEnd.sheet);\r\n        const secondEndFixed = (firstEnd.sheet !== undefined && secondEnd.sheet === undefined)\r\n            ? secondEnd.withSheet(firstEnd.sheet)\r\n            : secondEnd;\r\n        return { firstEnd, secondEnd: secondEndFixed, sheetRefType };\r\n    }\r\n    orderCellRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startCol, endCol] = ends.map(e => e.toColumnAddress()).sort(ColumnAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startRow, endRow] = ends.map(e => e.toRowAddress()).sort(RowAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(FormulaParser.compareSheetIds.bind(this));\r\n        return {\r\n            start: CellAddress.fromColAndRow(startCol, startRow, startSheet),\r\n            end: CellAddress.fromColAndRow(endCol, endRow, endSheet),\r\n        };\r\n    }\r\n    orderColumnRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startCol, endCol] = ends.sort(ColumnAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(FormulaParser.compareSheetIds.bind(this));\r\n        return {\r\n            start: new ColumnAddress(startCol.type, startCol.col, startSheet),\r\n            end: new ColumnAddress(endCol.type, endCol.col, endSheet),\r\n        };\r\n    }\r\n    orderRowRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startRow, endRow] = ends.sort(RowAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(FormulaParser.compareSheetIds.bind(this));\r\n        return {\r\n            start: new RowAddress(startRow.type, startRow.row, startSheet),\r\n            end: new RowAddress(endRow.type, endRow.row, endSheet),\r\n        };\r\n    }\r\n    static compareSheetIds(sheetA, sheetB) {\r\n        sheetA = sheetA != null ? sheetA : Infinity;\r\n        sheetB = sheetB != null ? sheetB : Infinity;\r\n        return sheetA - sheetB;\r\n    }\r\n    /**\r\n     * Returns {@link CellReferenceAst} or {@link CellRangeAst} based on OFFSET function arguments\r\n     *\r\n     * @param args - OFFSET function arguments\r\n     */\r\n    handleOffsetHeuristic(args) {\r\n        const cellArg = args[0];\r\n        if (cellArg.type !== AstNodeType.CELL_REFERENCE) {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'First argument to OFFSET is not a reference');\r\n        }\r\n        const rowsArg = args[1];\r\n        let rowShift;\r\n        if (rowsArg.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value)) {\r\n            rowShift = rowsArg.value;\r\n        }\r\n        else if (rowsArg.type === AstNodeType.PLUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\r\n            rowShift = rowsArg.value.value;\r\n        }\r\n        else if (rowsArg.type === AstNodeType.MINUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\r\n            rowShift = -rowsArg.value.value;\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Second argument to OFFSET is not a static number');\r\n        }\r\n        const columnsArg = args[2];\r\n        let colShift;\r\n        if (columnsArg.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value)) {\r\n            colShift = columnsArg.value;\r\n        }\r\n        else if (columnsArg.type === AstNodeType.PLUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\r\n            colShift = columnsArg.value.value;\r\n        }\r\n        else if (columnsArg.type === AstNodeType.MINUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\r\n            colShift = -columnsArg.value.value;\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Third argument to OFFSET is not a static number');\r\n        }\r\n        const heightArg = args[3];\r\n        let height;\r\n        if (heightArg === undefined) {\r\n            height = 1;\r\n        }\r\n        else if (heightArg.type === AstNodeType.NUMBER) {\r\n            height = heightArg.value;\r\n            if (height < 1) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is too small number');\r\n            }\r\n            else if (!Number.isInteger(height)) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not integer');\r\n            }\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not a static number');\r\n        }\r\n        const widthArg = args[4];\r\n        let width;\r\n        if (widthArg === undefined) {\r\n            width = 1;\r\n        }\r\n        else if (widthArg.type === AstNodeType.NUMBER) {\r\n            width = widthArg.value;\r\n            if (width < 1) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is too small number');\r\n            }\r\n            else if (!Number.isInteger(width)) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not integer');\r\n            }\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not a static number');\r\n        }\r\n        const topLeftCorner = new CellAddress(cellArg.reference.col + colShift, cellArg.reference.row + rowShift, cellArg.reference.type);\r\n        let absoluteCol = topLeftCorner.col;\r\n        let absoluteRow = topLeftCorner.row;\r\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\r\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\r\n            absoluteRow = absoluteRow + this.formulaAddress.row;\r\n        }\r\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\r\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            absoluteCol = absoluteCol + this.formulaAddress.col;\r\n        }\r\n        if (absoluteCol < 0 || absoluteRow < 0) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF, ErrorMessage.OutOfSheet));\r\n        }\r\n        if (width === 1 && height === 1) {\r\n            return buildCellReferenceAst(topLeftCorner);\r\n        }\r\n        else {\r\n            const bottomRightCorner = new CellAddress(topLeftCorner.col + width - 1, topLeftCorner.row + height - 1, topLeftCorner.type);\r\n            return buildCellRangeAst(topLeftCorner, bottomRightCorner, RangeSheetReferenceType.RELATIVE);\r\n        }\r\n    }\r\n    parsingError(type, message) {\r\n        this.customParsingError = parsingError(type, message);\r\n        return buildParsingErrorAst();\r\n    }\r\n    static rangeSheetReferenceType(start, end) {\r\n        if (start === undefined) {\r\n            return RangeSheetReferenceType.RELATIVE;\r\n        }\r\n        else if (end === undefined) {\r\n            return RangeSheetReferenceType.START_ABSOLUTE;\r\n        }\r\n        else {\r\n            return RangeSheetReferenceType.BOTH_ABSOLUTE;\r\n        }\r\n    }\r\n}\r\nexport class FormulaLexer {\r\n    constructor(lexerConfig) {\r\n        this.lexerConfig = lexerConfig;\r\n        this.lexer = new Lexer(lexerConfig.allTokens, { ensureOptimizations: true });\r\n    }\r\n    /**\r\n     * Returns Lexer tokens from formula string\r\n     *\r\n     * @param text - string representation of a formula\r\n     */\r\n    tokenizeFormula(text) {\r\n        const lexingResult = this.lexer.tokenize(text);\r\n        let tokens = lexingResult.tokens;\r\n        tokens = this.trimTrailingWhitespaces(tokens);\r\n        tokens = this.skipWhitespacesInsideRanges(tokens);\r\n        tokens = this.skipWhitespacesBeforeArgSeparators(tokens);\r\n        lexingResult.tokens = tokens;\r\n        return lexingResult;\r\n    }\r\n    skipWhitespacesInsideRanges(tokens) {\r\n        return FormulaLexer.filterTokensByNeighbors(tokens, (previous, current, next) => {\r\n            return (tokenMatcher(previous, CellReference) || tokenMatcher(previous, RangeSeparator))\r\n                && tokenMatcher(current, this.lexerConfig.WhiteSpace)\r\n                && (tokenMatcher(next, CellReference) || tokenMatcher(next, RangeSeparator));\r\n        });\r\n    }\r\n    skipWhitespacesBeforeArgSeparators(tokens) {\r\n        return FormulaLexer.filterTokensByNeighbors(tokens, (previous, current, next) => {\r\n            return !tokenMatcher(previous, this.lexerConfig.ArgSeparator)\r\n                && tokenMatcher(current, this.lexerConfig.WhiteSpace)\r\n                && tokenMatcher(next, this.lexerConfig.ArgSeparator);\r\n        });\r\n    }\r\n    static filterTokensByNeighbors(tokens, shouldBeSkipped) {\r\n        if (tokens.length < 3) {\r\n            return tokens;\r\n        }\r\n        let i = 0;\r\n        const filteredTokens = [tokens[i++]];\r\n        while (i < tokens.length - 1) {\r\n            if (!shouldBeSkipped(tokens[i - 1], tokens[i], tokens[i + 1])) {\r\n                filteredTokens.push(tokens[i]);\r\n            }\r\n            ++i;\r\n        }\r\n        filteredTokens.push(tokens[i]);\r\n        return filteredTokens;\r\n    }\r\n    trimTrailingWhitespaces(tokens) {\r\n        if (tokens.length > 0 && tokenMatcher(tokens[tokens.length - 1], this.lexerConfig.WhiteSpace)) {\r\n            tokens.pop();\r\n        }\r\n        return tokens;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * This is a class for detailed error messages across HyperFormula.\r\n */\r\nexport class ErrorMessage {\r\n}\r\nErrorMessage.DistinctSigns = 'Distinct signs.';\r\nErrorMessage.WrongArgNumber = 'Wrong number of arguments.';\r\nErrorMessage.EmptyArg = 'Empty function argument.';\r\nErrorMessage.EmptyArray = 'Empty array not allowed.';\r\nErrorMessage.ArrayDimensions = 'Array dimensions are not compatible.';\r\nErrorMessage.NoSpaceForArrayResult = 'No space for array result.';\r\nErrorMessage.ValueSmall = 'Value too small.';\r\nErrorMessage.ValueLarge = 'Value too large.';\r\nErrorMessage.BadCriterion = 'Incorrect criterion.';\r\nErrorMessage.RangeManySheets = 'Range spans more than one sheet.';\r\nErrorMessage.CellRangeExpected = 'Cell range expected.';\r\nErrorMessage.WrongDimension = 'Wrong range dimension.';\r\nErrorMessage.ScalarExpected = 'Cell range not allowed.';\r\nErrorMessage.NumberCoercion = 'Value cannot be coerced to number.';\r\nErrorMessage.NumberExpected = 'Number argument expected.';\r\nErrorMessage.IntegerExpected = 'Value needs to be an integer.';\r\nErrorMessage.BadMode = 'Mode not recognized.';\r\nErrorMessage.DateBounds = 'Date outside of bounds.';\r\nErrorMessage.OutOfSheet = 'Resulting reference is out of the sheet.';\r\nErrorMessage.WrongType = 'Wrong type of argument.';\r\nErrorMessage.NaN = 'NaN or infinite value encountered.';\r\nErrorMessage.EqualLength = 'Ranges need to be of equal length.';\r\nErrorMessage.Negative = 'Value cannot be negative.';\r\nErrorMessage.NotBinary = 'String does not represent a binary number.';\r\nErrorMessage.NotOctal = 'String does not represent an octal number.';\r\nErrorMessage.NotHex = 'String does not represent a hexadecimal number.';\r\nErrorMessage.EndStartPeriod = 'End period needs to be at least start period.';\r\nErrorMessage.CellRefExpected = 'Cell reference expected.';\r\nErrorMessage.EmptyRange = 'Empty range not allowed.';\r\nErrorMessage.BadRef = 'Address is not correct.';\r\nErrorMessage.NumberRange = 'Number-only range expected.';\r\nErrorMessage.ValueNotFound = 'Value not found.';\r\nErrorMessage.ValueBaseLarge = 'Value in base too large.';\r\nErrorMessage.ValueBaseSmall = 'Value in base too small.';\r\nErrorMessage.ValueBaseLong = 'Value in base too long.';\r\nErrorMessage.NegativeLength = 'Length cannot be negative.';\r\nErrorMessage.PatternNotFound = 'Pattern not found.';\r\nErrorMessage.OneValue = 'Needs at least one value.';\r\nErrorMessage.TwoValues = 'Range needs to contain at least two elements.';\r\nErrorMessage.ThreeValues = 'Range needs to contain at least three elements.';\r\nErrorMessage.IndexBounds = 'Index out of bounds.';\r\nErrorMessage.IndexLarge = 'Index too large.';\r\nErrorMessage.Formula = 'Expected formula.';\r\nErrorMessage.NegativeCount = 'Count cannot be negative.';\r\nErrorMessage.ParseError = 'Parsing error.';\r\nErrorMessage.SheetRef = 'Sheet does not exist.';\r\nErrorMessage.PeriodLong = 'Period number cannot exceed life length.';\r\nErrorMessage.InvalidDate = 'Invalid date.';\r\nErrorMessage.BitshiftLong = 'Result of bitshift is too long.';\r\nErrorMessage.EmptyString = 'Empty-string argument not allowed.';\r\nErrorMessage.LengthBounds = 'Length out of bounds.';\r\nErrorMessage.NegativeTime = 'Time cannot be negative.';\r\nErrorMessage.NoDefault = 'No default option.';\r\nErrorMessage.Selector = 'Selector cannot exceed the number of arguments.';\r\nErrorMessage.StartEndDate = 'Start date needs to be earlier than end date.';\r\nErrorMessage.IncorrectDateTime = 'String does not represent correct DateTime.';\r\nErrorMessage.CharacterCodeBounds = 'Character code out of bounds.';\r\nErrorMessage.NonZero = 'Argument cannot be 0.';\r\nErrorMessage.LessThanOne = 'Argument cannot be less than 1.';\r\nErrorMessage.WeekendString = 'Incorrect weekend bitmask string.';\r\nErrorMessage.InvalidRoman = 'Invalid roman numeral.';\r\nErrorMessage.WrongOrder = 'Wrong order of values.';\r\nErrorMessage.ComplexNumberExpected = 'Complex number expected.';\r\nErrorMessage.ShouldBeIorJ = 'Should be \\'i\\' or \\'j\\'.';\r\nErrorMessage.SizeMismatch = 'Array dimensions mismatched.';\r\nErrorMessage.FunctionName = (arg) => `Function name ${arg} not recognized.`;\r\nErrorMessage.NamedExpressionName = (arg) => `Named expression ${arg} not recognized.`;\r\nErrorMessage.LicenseKey = (arg) => `License key is ${arg}.`;\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { NoSheetWithIdError } from '../index';\r\nimport { sheetIndexToString } from './addressRepresentationConverters';\r\nimport { AstNodeType, imageWithWhitespace, RangeSheetReferenceType, } from './Ast';\r\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\r\nexport class Unparser {\r\n    constructor(config, lexerConfig, sheetMappingFn, namedExpressions) {\r\n        this.config = config;\r\n        this.lexerConfig = lexerConfig;\r\n        this.sheetMappingFn = sheetMappingFn;\r\n        this.namedExpressions = namedExpressions;\r\n    }\r\n    unparse(ast, address) {\r\n        return '=' + this.unparseAst(ast, address);\r\n    }\r\n    unparseAst(ast, address) {\r\n        var _a, _b;\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return imageWithWhitespace('', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NUMBER: {\r\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.STRING: {\r\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                const args = ast.args.map((arg) => arg !== undefined ? this.unparseAst(arg, address) : '').join(this.config.functionArgSeparator);\r\n                const procedureName = this.config.translationPackage.isFunctionTranslated(ast.procedureName) ?\r\n                    this.config.translationPackage.getFunctionTranslation(ast.procedureName) :\r\n                    ast.procedureName;\r\n                const rightPart = procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                const originalNamedExpressionName = (_a = this.namedExpressions.nearestNamedExpression(ast.expressionName, address.sheet)) === null || _a === void 0 ? void 0 : _a.displayName;\r\n                return imageWithWhitespace(originalNamedExpressionName || ast.expressionName, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                let image;\r\n                if (ast.reference.sheet !== undefined) {\r\n                    image = this.unparseSheetName(ast.reference.sheet) + '!';\r\n                }\r\n                else {\r\n                    image = '';\r\n                }\r\n                image += (_b = ast.reference.unparse(address)) !== null && _b !== void 0 ? _b : this.config.translationPackage.getErrorTranslation(ErrorType.REF);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                return imageWithWhitespace(this.formatRange(ast, address), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                const unparsedExpr = this.unparseAst(ast.value, address);\r\n                return imageWithWhitespace('+', ast.leadingWhitespace) + unparsedExpr;\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                const unparsedExpr = this.unparseAst(ast.value, address);\r\n                return imageWithWhitespace('-', ast.leadingWhitespace) + unparsedExpr;\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                return this.unparseAst(ast.value, address) + imageWithWhitespace('%', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR: {\r\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\r\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                const expression = this.unparseAst(ast.expression, address);\r\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const ret = '{' + ast.args.map(row => row.map(val => this.unparseAst(val, address)).join(this.config.arrayColumnSeparator)).join(this.config.arrayRowSeparator) + imageWithWhitespace('}', ast.internalWhitespace);\r\n                return imageWithWhitespace(ret, ast.leadingWhitespace);\r\n            }\r\n            default: {\r\n                const left = this.unparseAst(ast.left, address);\r\n                const right = this.unparseAst(ast.right, address);\r\n                return left + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + right;\r\n            }\r\n        }\r\n    }\r\n    unparseSheetName(sheetId) {\r\n        const sheetName = sheetIndexToString(sheetId, this.sheetMappingFn);\r\n        if (sheetName === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetName;\r\n    }\r\n    formatRange(ast, baseAddress) {\r\n        let startSheeet = '';\r\n        let endSheet = '';\r\n        if (ast.start.sheet !== undefined && (ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE)) {\r\n            startSheeet = this.unparseSheetName(ast.start.sheet) + '!';\r\n        }\r\n        if (ast.end.sheet !== undefined && ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE) {\r\n            endSheet = this.unparseSheetName(ast.end.sheet) + '!';\r\n        }\r\n        const unparsedStart = ast.start.unparse(baseAddress);\r\n        const unparsedEnd = ast.end.unparse(baseAddress);\r\n        if (unparsedStart === undefined || unparsedEnd === undefined) {\r\n            return this.config.translationPackage.getErrorTranslation(ErrorType.REF);\r\n        }\r\n        return `${startSheeet}${unparsedStart}:${endSheet}${unparsedEnd}`;\r\n    }\r\n}\r\nexport function formatNumber(number, decimalSeparator) {\r\n    const numericString = number.toString();\r\n    return numericString.replace('.', decimalSeparator);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AddressDependency, AstNodeType, CellRangeDependency, ColumnRangeDependency, NamedExpressionDependency, RowRangeDependency } from './';\r\nconst collectDependenciesFn = (ast, functionRegistry, dependenciesSet, needArgument) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n            return;\r\n        case AstNodeType.NAMED_EXPRESSION: {\r\n            if (needArgument) {\r\n                dependenciesSet.push(new NamedExpressionDependency(ast.expressionName));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.CELL_REFERENCE: {\r\n            if (needArgument) {\r\n                dependenciesSet.push(new AddressDependency(ast.reference));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.CELL_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new CellRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.COLUMN_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new ColumnRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.ROW_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new RowRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            collectDependenciesFn(ast.value, functionRegistry, dependenciesSet, true);\r\n            return;\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            collectDependenciesFn(ast.left, functionRegistry, dependenciesSet, true);\r\n            collectDependenciesFn(ast.right, functionRegistry, dependenciesSet, true);\r\n            return;\r\n        case AstNodeType.PARENTHESIS:\r\n            collectDependenciesFn(ast.expression, functionRegistry, dependenciesSet, needArgument);\r\n            return;\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            const functionNeedArgument = !functionRegistry.doesFunctionNeedArgumentToBeComputed(ast.procedureName);\r\n            ast.args.forEach((argAst) => collectDependenciesFn(argAst, functionRegistry, dependenciesSet, functionNeedArgument));\r\n            return;\r\n        }\r\n    }\r\n};\r\nexport const collectDependencies = (ast, functionRegistry) => {\r\n    const result = new Array();\r\n    collectDependenciesFn(ast, functionRegistry, result, true);\r\n    return result;\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\r\nexport class AddressDependency {\r\n    constructor(dependency) {\r\n        this.dependency = dependency;\r\n    }\r\n    absolutize(baseAddress) {\r\n        return this.dependency.toSimpleCellAddress(baseAddress);\r\n    }\r\n}\r\nexport class CellRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        return new AbsoluteCellRange(this.start.toSimpleCellAddress(baseAddress), this.end.toSimpleCellAddress(baseAddress));\r\n    }\r\n}\r\nexport class ColumnRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        const start = this.start.toSimpleColumnAddress(baseAddress);\r\n        const end = this.end.toSimpleColumnAddress(baseAddress);\r\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\r\n    }\r\n}\r\nexport class RowRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        const start = this.start.toSimpleRowAddress(baseAddress);\r\n        const end = this.end.toSimpleRowAddress(baseAddress);\r\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\r\n    }\r\n}\r\nexport class NamedExpressionDependency {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    absolutize(_baseAddress) {\r\n        return this;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/*\r\n * A class representing a set of rows in specific sheet\r\n */\r\nexport class RowsSpan {\r\n    constructor(sheet, rowStart, rowEnd) {\r\n        this.sheet = sheet;\r\n        this.rowStart = rowStart;\r\n        this.rowEnd = rowEnd;\r\n        if (rowStart < 0) {\r\n            throw Error('Starting row cant be less than 0');\r\n        }\r\n        if (rowEnd < rowStart) {\r\n            throw Error('Row span cant end before start');\r\n        }\r\n    }\r\n    get numberOfRows() {\r\n        return this.rowEnd - this.rowStart + 1;\r\n    }\r\n    get start() {\r\n        return this.rowStart;\r\n    }\r\n    get end() {\r\n        return this.rowEnd;\r\n    }\r\n    static fromNumberOfRows(sheet, rowStart, numberOfRows) {\r\n        return new RowsSpan(sheet, rowStart, rowStart + numberOfRows - 1);\r\n    }\r\n    static fromRowStartAndEnd(sheet, rowStart, rowEnd) {\r\n        return new RowsSpan(sheet, rowStart, rowEnd);\r\n    }\r\n    *rows() {\r\n        for (let col = this.rowStart; col <= this.rowEnd; ++col) {\r\n            yield col;\r\n        }\r\n    }\r\n    intersect(otherSpan) {\r\n        if (this.sheet !== otherSpan.sheet) {\r\n            throw Error('Can\\'t intersect spans from different sheets');\r\n        }\r\n        const start = Math.max(this.rowStart, otherSpan.rowStart);\r\n        const end = Math.min(this.rowEnd, otherSpan.rowEnd);\r\n        if (start > end) {\r\n            return null;\r\n        }\r\n        return new RowsSpan(this.sheet, start, end);\r\n    }\r\n    firstRow() {\r\n        return new RowsSpan(this.sheet, this.rowStart, this.rowStart);\r\n    }\r\n}\r\n/*\r\n * A class representing a set of columns in specific sheet\r\n */\r\nexport class ColumnsSpan {\r\n    constructor(sheet, columnStart, columnEnd) {\r\n        this.sheet = sheet;\r\n        this.columnStart = columnStart;\r\n        this.columnEnd = columnEnd;\r\n        if (columnStart < 0) {\r\n            throw Error('Starting column cant be less than 0');\r\n        }\r\n        if (columnEnd < columnStart) {\r\n            throw Error('Column span cant end before start');\r\n        }\r\n    }\r\n    get numberOfColumns() {\r\n        return this.columnEnd - this.columnStart + 1;\r\n    }\r\n    get start() {\r\n        return this.columnStart;\r\n    }\r\n    get end() {\r\n        return this.columnEnd;\r\n    }\r\n    static fromNumberOfColumns(sheet, columnStart, numberOfColumns) {\r\n        return new ColumnsSpan(sheet, columnStart, columnStart + numberOfColumns - 1);\r\n    }\r\n    static fromColumnStartAndEnd(sheet, columnStart, columnEnd) {\r\n        return new ColumnsSpan(sheet, columnStart, columnEnd);\r\n    }\r\n    *columns() {\r\n        for (let col = this.columnStart; col <= this.columnEnd; ++col) {\r\n            yield col;\r\n        }\r\n    }\r\n    intersect(otherSpan) {\r\n        if (this.sheet !== otherSpan.sheet) {\r\n            throw Error('Can\\'t intersect spans from different sheets');\r\n        }\r\n        const start = Math.max(this.columnStart, otherSpan.columnStart);\r\n        const end = Math.min(this.columnEnd, otherSpan.columnEnd);\r\n        if (start > end) {\r\n            return null;\r\n        }\r\n        return new ColumnsSpan(this.sheet, start, end);\r\n    }\r\n    firstColumn() {\r\n        return new ColumnsSpan(this.sheet, this.columnStart, this.columnStart);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress } from './Cell';\r\nimport { NamedExpressionDependency } from './parser';\r\n/**\r\n * Converts dependencies from maybe relative addressing to absolute addressing.\r\n *\r\n * @param deps - list of addresses in R0C0 format\r\n * @param baseAddress - base address with regard to which make a convertion\r\n */\r\nexport const absolutizeDependencies = (deps, baseAddress) => {\r\n    return deps.map(dep => dep.absolutize(baseAddress));\r\n};\r\nexport const filterDependenciesOutOfScope = (deps) => {\r\n    return deps.filter(dep => {\r\n        if (dep instanceof NamedExpressionDependency) {\r\n            return true;\r\n        }\r\n        if (dep instanceof AbsoluteCellRange) {\r\n            return !(invalidSimpleCellAddress(dep.start) || invalidSimpleCellAddress(dep.end));\r\n        }\r\n        else {\r\n            return !invalidSimpleCellAddress(dep);\r\n        }\r\n    });\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { addressKey } from './Cell';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nexport class ContentChanges {\r\n    constructor() {\r\n        this.changes = new Map();\r\n    }\r\n    static empty() {\r\n        return new ContentChanges();\r\n    }\r\n    addAll(other) {\r\n        for (const change of other.changes.values()) {\r\n            this.add(change.address, change);\r\n        }\r\n        return this;\r\n    }\r\n    addChange(newValue, address, oldValue) {\r\n        this.addInterpreterValue(newValue, address, oldValue);\r\n    }\r\n    exportChanges(exporter) {\r\n        let ret = [];\r\n        this.changes.forEach((e) => {\r\n            const change = exporter.exportChange(e);\r\n            if (Array.isArray(change)) {\r\n                ret = ret.concat(change);\r\n            }\r\n            else {\r\n                ret.push(change);\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changes.values());\r\n    }\r\n    isEmpty() {\r\n        return this.changes.size === 0;\r\n    }\r\n    add(address, change) {\r\n        const value = change.value;\r\n        if (value instanceof SimpleRangeValue) {\r\n            for (const cellAddress of value.effectiveAddressesFromData(address)) {\r\n                this.changes.delete(`${cellAddress.sheet},${cellAddress.col},${cellAddress.row}`);\r\n            }\r\n        }\r\n        this.changes.set(addressKey((address)), change);\r\n    }\r\n    addInterpreterValue(value, address, oldValue) {\r\n        this.add(address, {\r\n            address,\r\n            value,\r\n            oldValue\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../ArraySize';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { isExtendedNumber } from './InterpreterValue';\r\nexport class SimpleRangeValue {\r\n    constructor(_data, range, dependencyGraph, _hasOnlyNumbers) {\r\n        this._data = _data;\r\n        this.range = range;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this._hasOnlyNumbers = _hasOnlyNumbers;\r\n        if (_data === undefined) {\r\n            this.size = new ArraySize(range.effectiveWidth(dependencyGraph), range.effectiveHeight(dependencyGraph));\r\n        }\r\n        else {\r\n            this.size = new ArraySize(_data[0].length, _data.length);\r\n        }\r\n    }\r\n    get data() {\r\n        this.ensureThatComputed();\r\n        return this._data;\r\n    }\r\n    static fromRange(data, range, dependencyGraph) {\r\n        return new SimpleRangeValue(data, range, dependencyGraph, true);\r\n    }\r\n    static onlyNumbers(data) {\r\n        return new SimpleRangeValue(data, undefined, undefined, true);\r\n    }\r\n    static onlyValues(data) {\r\n        return new SimpleRangeValue(data, undefined, undefined, undefined);\r\n    }\r\n    static onlyRange(range, dependencyGraph) {\r\n        return new SimpleRangeValue(undefined, range, dependencyGraph, undefined);\r\n    }\r\n    static fromScalar(scalar) {\r\n        return new SimpleRangeValue([[scalar]], undefined, undefined, undefined);\r\n    }\r\n    isAdHoc() {\r\n        return this.range === undefined;\r\n    }\r\n    width() {\r\n        return this.size.width; //should be equal to this.data[0].length\r\n    }\r\n    height() {\r\n        return this.size.height; //should be equal to this.data.length\r\n    }\r\n    valuesFromTopLeftCorner() {\r\n        this.ensureThatComputed();\r\n        const ret = [];\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            for (let j = 0; j < this._data[0].length; j++) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                ret.push(this._data[i][j]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    *effectiveAddressesFromData(leftCorner) {\r\n        for (let row = 0; row < this.data.length; ++row) {\r\n            const rowData = this.data[row];\r\n            for (let col = 0; col < rowData.length; ++col) {\r\n                yield simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row);\r\n            }\r\n        }\r\n    }\r\n    *entriesFromTopLeftCorner(leftCorner) {\r\n        this.ensureThatComputed();\r\n        for (let row = 0; row < this.size.height; ++row) {\r\n            for (let col = 0; col < this.size.width; ++col) {\r\n                yield [this._data[row][col], simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row)];\r\n            }\r\n        }\r\n    }\r\n    *iterateValuesFromTopLeftCorner() {\r\n        yield* this.valuesFromTopLeftCorner();\r\n    }\r\n    numberOfElements() {\r\n        return this.size.width * this.size.height;\r\n    }\r\n    hasOnlyNumbers() {\r\n        if (this._hasOnlyNumbers === undefined) {\r\n            this._hasOnlyNumbers = true;\r\n            for (const row of this.data) {\r\n                for (const v of row) {\r\n                    if (typeof v !== 'number') {\r\n                        this._hasOnlyNumbers = false;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._hasOnlyNumbers;\r\n    }\r\n    rawNumbers() {\r\n        return this._data;\r\n    }\r\n    rawData() {\r\n        var _a;\r\n        this.ensureThatComputed();\r\n        return (_a = this._data) !== null && _a !== void 0 ? _a : [];\r\n    }\r\n    sameDimensionsAs(other) {\r\n        return this.width() === other.width() && this.height() === other.height();\r\n    }\r\n    ensureThatComputed() {\r\n        if (this._data !== undefined) {\r\n            return;\r\n        }\r\n        this._hasOnlyNumbers = true;\r\n        this._data = this.range.addressesArrayMap(this.dependencyGraph, cellFromRange => {\r\n            const value = this.dependencyGraph.getCellValue(cellFromRange);\r\n            if (value instanceof SimpleRangeValue) {\r\n                this._hasOnlyNumbers = false;\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n            }\r\n            else if (isExtendedNumber(value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                this._hasOnlyNumbers = false;\r\n                return value;\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { InterpreterState } from './interpreter/InterpreterState';\r\nimport { ArgumentTypes } from './interpreter/plugin/FunctionPlugin';\r\nimport { AstNodeType } from './parser';\r\nexport class ArraySize {\r\n    constructor(width, height, isRef = false) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.isRef = isRef;\r\n        if (width <= 0 || height <= 0) {\r\n            throw Error('Incorrect array size');\r\n        }\r\n    }\r\n    static fromArray(array) {\r\n        return new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\r\n    }\r\n    static error() {\r\n        return new ArraySize(1, 1, true);\r\n    }\r\n    static scalar() {\r\n        return new ArraySize(1, 1, false);\r\n    }\r\n    isScalar() {\r\n        return (this.width <= 1 && this.height <= 1) || this.isRef;\r\n    }\r\n}\r\nfunction arraySizeForBinaryOp(leftArraySize, rightArraySize) {\r\n    return new ArraySize(Math.max(leftArraySize.width, rightArraySize.width), Math.max(leftArraySize.height, rightArraySize.height));\r\n}\r\nfunction arraySizeForUnaryOp(arraySize) {\r\n    return new ArraySize(arraySize.width, arraySize.height);\r\n}\r\nexport class ArraySizePredictor {\r\n    constructor(config, functionRegistry) {\r\n        this.config = config;\r\n        this.functionRegistry = functionRegistry;\r\n    }\r\n    checkArraySize(ast, formulaAddress) {\r\n        return this.checkArraySizeForAst(ast, { formulaAddress, arraysFlag: this.config.useArrayArithmetic });\r\n    }\r\n    checkArraySizeForAst(ast, state) {\r\n        switch (ast.type) {\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                return this.checkArraySizeForFunction(ast, state);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                const range = AbsoluteCellRange.fromAstOrUndef(ast, state.formulaAddress);\r\n                if (range === undefined) {\r\n                    return ArraySize.error();\r\n                }\r\n                else {\r\n                    return new ArraySize(range.width(), range.height(), true);\r\n                }\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const heights = [];\r\n                const widths = [];\r\n                for (const row of ast.args) {\r\n                    const sizes = row.map(ast => this.checkArraySizeForAst(ast, state));\r\n                    const h = Math.min(...sizes.map(size => size.height));\r\n                    const w = sizes.reduce((total, size) => total + size.width, 0);\r\n                    heights.push(h);\r\n                    widths.push(w);\r\n                }\r\n                const height = heights.reduce((total, h) => total + h, 0);\r\n                const width = Math.min(...widths);\r\n                return new ArraySize(width, height);\r\n            }\r\n            case AstNodeType.STRING:\r\n            case AstNodeType.NUMBER:\r\n                return ArraySize.scalar();\r\n            case AstNodeType.CELL_REFERENCE:\r\n                return new ArraySize(1, 1, true);\r\n            case AstNodeType.DIV_OP:\r\n            case AstNodeType.CONCATENATE_OP:\r\n            case AstNodeType.EQUALS_OP:\r\n            case AstNodeType.GREATER_THAN_OP:\r\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.LESS_THAN_OP:\r\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.MINUS_OP:\r\n            case AstNodeType.NOT_EQUAL_OP:\r\n            case AstNodeType.PLUS_OP:\r\n            case AstNodeType.POWER_OP:\r\n            case AstNodeType.TIMES_OP: {\r\n                const left = this.checkArraySizeForAst(ast.left, state);\r\n                const right = this.checkArraySizeForAst(ast.right, state);\r\n                if (!state.arraysFlag && (left.height > 1 || left.width > 1 || right.height > 1 || right.width > 1)) {\r\n                    return ArraySize.error();\r\n                }\r\n                return arraySizeForBinaryOp(left, right);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP:\r\n            case AstNodeType.PLUS_UNARY_OP:\r\n            case AstNodeType.PERCENT_OP: {\r\n                const val = this.checkArraySizeForAst(ast.value, state);\r\n                if (!state.arraysFlag && (val.height > 1 || val.width > 1)) {\r\n                    return ArraySize.error();\r\n                }\r\n                return arraySizeForUnaryOp(val);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return this.checkArraySizeForAst(ast.expression, state);\r\n            }\r\n            case AstNodeType.EMPTY:\r\n                return ArraySize.error();\r\n            default:\r\n                return ArraySize.error();\r\n        }\r\n    }\r\n    checkArraySizeForFunction(ast, state) {\r\n        const metadata = this.functionRegistry.getMetadata(ast.procedureName);\r\n        const pluginArraySizeFunction = this.functionRegistry.getArraySizeFunction(ast.procedureName);\r\n        if (pluginArraySizeFunction !== undefined) {\r\n            return pluginArraySizeFunction(ast, state);\r\n        }\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.checkArraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        if (metadata === undefined || metadata.expandRanges || !state.arraysFlag || metadata.vectorizationForbidden || metadata.parameters === undefined) {\r\n            return new ArraySize(1, 1);\r\n        }\r\n        const argumentDefinitions = [...metadata.parameters];\r\n        if (metadata.repeatLastArgs === undefined && argumentDefinitions.length < subChecks.length) {\r\n            return ArraySize.error();\r\n        }\r\n        if (metadata.repeatLastArgs !== undefined && argumentDefinitions.length < subChecks.length &&\r\n            (subChecks.length - argumentDefinitions.length) % metadata.repeatLastArgs !== 0) {\r\n            return ArraySize.error();\r\n        }\r\n        while (argumentDefinitions.length < subChecks.length) {\r\n            argumentDefinitions.push(...argumentDefinitions.slice(argumentDefinitions.length - metadata.repeatLastArgs));\r\n        }\r\n        let maxWidth = 1;\r\n        let maxHeight = 1;\r\n        for (let i = 0; i < subChecks.length; i++) {\r\n            if (argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\r\n                maxHeight = Math.max(maxHeight, subChecks[i].height);\r\n                maxWidth = Math.max(maxWidth, subChecks[i].width);\r\n            }\r\n        }\r\n        return new ArraySize(maxWidth, maxHeight);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class InterpreterState {\r\n    constructor(formulaAddress, arraysFlag, formulaVertex) {\r\n        this.formulaAddress = formulaAddress;\r\n        this.arraysFlag = arraysFlag;\r\n        this.formulaVertex = formulaVertex;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceRangeToScalar, coerceScalarToBoolean, coerceScalarToString, coerceToRange } from '../ArithmeticHelper';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nexport var ArgumentTypes;\r\n(function (ArgumentTypes) {\r\n    /**\r\n     * String type.\r\n     */\r\n    ArgumentTypes[\"STRING\"] = \"STRING\";\r\n    /**\r\n     * Floating point type.\r\n     */\r\n    ArgumentTypes[\"NUMBER\"] = \"NUMBER\";\r\n    /**\r\n     * Boolean type.\r\n     */\r\n    ArgumentTypes[\"BOOLEAN\"] = \"BOOLEAN\";\r\n    /**\r\n     * Any non-range value.\r\n     */\r\n    ArgumentTypes[\"SCALAR\"] = \"SCALAR\";\r\n    /**\r\n     * Any non-range, no-error type.\r\n     */\r\n    ArgumentTypes[\"NOERROR\"] = \"NOERROR\";\r\n    /**\r\n     * Range type.\r\n     */\r\n    ArgumentTypes[\"RANGE\"] = \"RANGE\";\r\n    /**\r\n     * Integer type.\r\n     */\r\n    ArgumentTypes[\"INTEGER\"] = \"INTEGER\";\r\n    /**\r\n     * String representing complex number.\r\n     */\r\n    ArgumentTypes[\"COMPLEX\"] = \"COMPLEX\";\r\n    /**\r\n     * Range or scalar.\r\n     */\r\n    ArgumentTypes[\"ANY\"] = \"ANY\";\r\n})(ArgumentTypes || (ArgumentTypes = {}));\r\n/**\r\n * Abstract class representing interpreter function plugin.\r\n * Plugin may contain multiple functions. Each function should be of type {@link PluginFunctionType} and needs to be\r\n * included in {@link implementedFunctions}\r\n */\r\nexport class FunctionPlugin {\r\n    constructor(interpreter) {\r\n        this.coerceScalarToNumberOrError = (arg) => this.arithmeticHelper.coerceScalarToNumberOrError(arg);\r\n        this.runFunction = (args, state, metadata, fn) => {\r\n            var _a, _b, _c, _d, _e;\r\n            let argumentDefinitions = metadata.parameters || [];\r\n            let argValues;\r\n            if (metadata.expandRanges) {\r\n                argValues = this.listOfScalarValues(args, state);\r\n            }\r\n            else {\r\n                argValues = args.map((ast) => [this.evaluateAst(ast, state), false]);\r\n            }\r\n            if (metadata.repeatLastArgs === undefined && argumentDefinitions.length < argValues.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            if (metadata.repeatLastArgs !== undefined && argumentDefinitions.length < argValues.length &&\r\n                (argValues.length - argumentDefinitions.length) % metadata.repeatLastArgs !== 0) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            argumentDefinitions = [...argumentDefinitions];\r\n            while (argumentDefinitions.length < argValues.length) {\r\n                argumentDefinitions.push(...argumentDefinitions.slice(argumentDefinitions.length - metadata.repeatLastArgs));\r\n            }\r\n            let maxWidth = 1;\r\n            let maxHeight = 1;\r\n            if (!metadata.vectorizationForbidden && state.arraysFlag) {\r\n                for (let i = 0; i < argValues.length; i++) {\r\n                    const [val] = argValues[i];\r\n                    if (val instanceof SimpleRangeValue && argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\r\n                        maxHeight = Math.max(maxHeight, val.height());\r\n                        maxWidth = Math.max(maxWidth, val.width());\r\n                    }\r\n                }\r\n            }\r\n            for (let i = argValues.length; i < argumentDefinitions.length; i++) {\r\n                if (((_a = argumentDefinitions[i]) === null || _a === void 0 ? void 0 : _a.defaultValue) === undefined) {\r\n                    if (!((_b = argumentDefinitions[i]) === null || _b === void 0 ? void 0 : _b.optionalArg)) {\r\n                        //not enough values passed as arguments, and there was no default value and argument was not optional\r\n                        return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n                    }\r\n                }\r\n            }\r\n            const retArr = [];\r\n            for (let row = 0; row < maxHeight; row++) {\r\n                const rowArr = [];\r\n                for (let col = 0; col < maxWidth; col++) {\r\n                    let argCoerceFailure = undefined;\r\n                    const coercedArguments = [];\r\n                    for (let i = 0; i < argumentDefinitions.length; i++) {\r\n                        // eslint-disable-next-line prefer-const\r\n                        let [val, ignorable] = (_c = argValues[i]) !== null && _c !== void 0 ? _c : [undefined, undefined];\r\n                        if (val instanceof SimpleRangeValue && argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\r\n                            if (!metadata.vectorizationForbidden && state.arraysFlag) {\r\n                                val = (_d = val.data[val.height() !== 1 ? row : 0]) === null || _d === void 0 ? void 0 : _d[val.width() !== 1 ? col : 0];\r\n                            }\r\n                        }\r\n                        const arg = val !== null && val !== void 0 ? val : (_e = argumentDefinitions[i]) === null || _e === void 0 ? void 0 : _e.defaultValue;\r\n                        if (arg === undefined) {\r\n                            coercedArguments.push(undefined); //we verified in previous loop that this arg is optional\r\n                        }\r\n                        else {\r\n                            //we apply coerce only to non-default values\r\n                            const coercedArg = val !== undefined ? this.coerceToType(arg, argumentDefinitions[i], state) : arg;\r\n                            if (coercedArg !== undefined) {\r\n                                if (coercedArg instanceof CellError && argumentDefinitions[i].argumentType !== ArgumentTypes.SCALAR) {\r\n                                    //if this is first error encountered, store it\r\n                                    argCoerceFailure = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : coercedArg;\r\n                                }\r\n                                coercedArguments.push(coercedArg);\r\n                            }\r\n                            else if (!ignorable) {\r\n                                //if this is first error encountered, store it\r\n                                argCoerceFailure = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : (new CellError(ErrorType.VALUE, ErrorMessage.WrongType));\r\n                            }\r\n                        }\r\n                    }\r\n                    const ret = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : this.returnNumberWrapper(fn(...coercedArguments), metadata.returnNumberType);\r\n                    if (maxHeight === 1 && maxWidth === 1) {\r\n                        return ret;\r\n                    }\r\n                    if (ret instanceof SimpleRangeValue) {\r\n                        throw 'Function returning array cannot be vectorized.';\r\n                    }\r\n                    rowArr.push(ret);\r\n                }\r\n                retArr.push(rowArr);\r\n            }\r\n            return SimpleRangeValue.onlyValues(retArr);\r\n        };\r\n        this.runFunctionWithReferenceArgument = (args, state, metadata, noArgCallback, referenceCallback, nonReferenceCallback = () => new CellError(ErrorType.NA, ErrorMessage.CellRefExpected)) => {\r\n            if (args.length === 0) {\r\n                return this.returnNumberWrapper(noArgCallback(), metadata.returnNumberType);\r\n            }\r\n            else if (args.length > 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            let arg = args[0];\r\n            while (arg.type === AstNodeType.PARENTHESIS) {\r\n                arg = arg.expression;\r\n            }\r\n            let cellReference;\r\n            if (arg.type === AstNodeType.CELL_REFERENCE) {\r\n                cellReference = arg.reference.toSimpleCellAddress(state.formulaAddress);\r\n            }\r\n            else if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\r\n                try {\r\n                    cellReference = AbsoluteCellRange.fromAst(arg, state.formulaAddress).start;\r\n                }\r\n                catch (e) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.CellRefExpected);\r\n                }\r\n            }\r\n            if (cellReference !== undefined) {\r\n                return this.returnNumberWrapper(referenceCallback(cellReference), metadata.returnNumberType);\r\n            }\r\n            return this.runFunction(args, state, metadata, nonReferenceCallback);\r\n        };\r\n        this.interpreter = interpreter;\r\n        this.dependencyGraph = interpreter.dependencyGraph;\r\n        this.columnSearch = interpreter.columnSearch;\r\n        this.config = interpreter.config;\r\n        this.serialization = interpreter.serialization;\r\n        this.arraySizePredictor = interpreter.arraySizePredictor;\r\n        this.dateTimeHelper = interpreter.dateTimeHelper;\r\n        this.arithmeticHelper = interpreter.arithmeticHelper;\r\n    }\r\n    evaluateAst(ast, state) {\r\n        return this.interpreter.evaluateAst(ast, state);\r\n    }\r\n    arraySizeForAst(ast, state) {\r\n        return this.arraySizePredictor.checkArraySizeForAst(ast, state);\r\n    }\r\n    listOfScalarValues(asts, state) {\r\n        const ret = [];\r\n        for (const argAst of asts) {\r\n            const value = this.evaluateAst(argAst, state);\r\n            if (value instanceof SimpleRangeValue) {\r\n                for (const scalarValue of value.valuesFromTopLeftCorner()) {\r\n                    ret.push([scalarValue, true]);\r\n                }\r\n            }\r\n            else {\r\n                ret.push([value, false]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    coerceToType(arg, coercedType, state) {\r\n        let ret;\r\n        if (arg instanceof SimpleRangeValue) {\r\n            switch (coercedType.argumentType) {\r\n                case ArgumentTypes.RANGE:\r\n                case ArgumentTypes.ANY:\r\n                    ret = arg;\r\n                    break;\r\n                default: {\r\n                    const coerce = coerceRangeToScalar(arg, state);\r\n                    if (coerce === undefined) {\r\n                        return undefined;\r\n                    }\r\n                    arg = coerce;\r\n                }\r\n            }\r\n        }\r\n        if (!(arg instanceof SimpleRangeValue)) {\r\n            switch (coercedType.argumentType) {\r\n                case ArgumentTypes.INTEGER:\r\n                case ArgumentTypes.NUMBER:\r\n                    // eslint-disable-next-line no-case-declarations\r\n                    const coerced = this.coerceScalarToNumberOrError(arg);\r\n                    if (!isExtendedNumber(coerced)) {\r\n                        ret = coerced;\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line no-case-declarations\r\n                    const value = getRawValue(coerced);\r\n                    if (coercedType.maxValue !== undefined && value > coercedType.maxValue) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n                    }\r\n                    if (coercedType.minValue !== undefined && value < coercedType.minValue) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                    }\r\n                    if (coercedType.lessThan !== undefined && value >= coercedType.lessThan) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n                    }\r\n                    if (coercedType.greaterThan !== undefined && value <= coercedType.greaterThan) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                    }\r\n                    if (coercedType.argumentType === ArgumentTypes.INTEGER && !Number.isInteger(value)) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.IntegerExpected);\r\n                    }\r\n                    ret = coerced;\r\n                    break;\r\n                case ArgumentTypes.STRING:\r\n                    ret = coerceScalarToString(arg);\r\n                    break;\r\n                case ArgumentTypes.BOOLEAN:\r\n                    ret = coerceScalarToBoolean(arg);\r\n                    break;\r\n                case ArgumentTypes.SCALAR:\r\n                case ArgumentTypes.NOERROR:\r\n                case ArgumentTypes.ANY:\r\n                    ret = arg;\r\n                    break;\r\n                case ArgumentTypes.RANGE:\r\n                    if (arg instanceof CellError) {\r\n                        return arg;\r\n                    }\r\n                    ret = coerceToRange(arg);\r\n                    break;\r\n                case ArgumentTypes.COMPLEX:\r\n                    return this.arithmeticHelper.coerceScalarToComplex(getRawValue(arg));\r\n            }\r\n        }\r\n        if (coercedType.passSubtype || ret === undefined) {\r\n            return ret;\r\n        }\r\n        else {\r\n            return getRawValue(ret);\r\n        }\r\n    }\r\n    metadata(name) {\r\n        const params = this.constructor.implementedFunctions[name];\r\n        if (params !== undefined) {\r\n            return params;\r\n        }\r\n        throw new Error(`No metadata for function ${name}.`);\r\n    }\r\n    returnNumberWrapper(val, type, format) {\r\n        if (type !== undefined && isExtendedNumber(val)) {\r\n            return this.arithmeticHelper.ExtendedNumberFactory(getRawValue(val), { type, format });\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport unorm from 'unorm';\r\nimport { CellError, CellValueTypeOrd, ErrorType, getCellValueType } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { collatorFromConfig } from '../StringHelper';\r\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, EmptyValue, getRawValue, getTypeFormatOfExtendedNumber, isExtendedNumber, NumberType, PercentNumber, TimeNumber } from './InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nconst COMPLEX_NUMBER_SYMBOL = 'i';\r\nconst complexParsingRegexp = /^\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij]))\\s*(([+-])\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij])))?$/;\r\nexport class ArithmeticHelper {\r\n    constructor(config, dateTimeHelper, numberLiteralsHelper) {\r\n        this.config = config;\r\n        this.dateTimeHelper = dateTimeHelper;\r\n        this.numberLiteralsHelper = numberLiteralsHelper;\r\n        this.lt = (left, right) => {\r\n            return this.compare(left, right) < 0;\r\n        };\r\n        this.leq = (left, right) => {\r\n            return this.compare(left, right) <= 0;\r\n        };\r\n        this.gt = (left, right) => {\r\n            return this.compare(left, right) > 0;\r\n        };\r\n        this.geq = (left, right) => {\r\n            return this.compare(left, right) >= 0;\r\n        };\r\n        this.eq = (left, right) => {\r\n            return this.compare(left, right) === 0;\r\n        };\r\n        this.neq = (left, right) => {\r\n            return this.compare(left, right) !== 0;\r\n        };\r\n        this.pow = (left, right) => {\r\n            return Math.pow(getRawValue(left), getRawValue(right));\r\n        };\r\n        this.addWithEpsilonRaw = (left, right) => {\r\n            const ret = left + right;\r\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return ret;\r\n            }\r\n        };\r\n        this.addWithEpsilon = (left, right) => {\r\n            const typeOfResult = inferExtendedNumberTypeAdditive(left, right);\r\n            return this.ExtendedNumberFactory(this.addWithEpsilonRaw(getRawValue(left), getRawValue(right)), typeOfResult);\r\n        };\r\n        this.unaryMinus = (arg) => {\r\n            return cloneNumber(arg, -getRawValue(arg));\r\n        };\r\n        this.unaryPlus = (arg) => arg;\r\n        this.unaryPercent = (arg) => {\r\n            return new PercentNumber(getRawValue(arg) / 100);\r\n        };\r\n        this.concat = (left, right) => {\r\n            return left.concat(right);\r\n        };\r\n        this.nonstrictadd = (left, right) => {\r\n            if (left instanceof CellError) {\r\n                return left;\r\n            }\r\n            else if (right instanceof CellError) {\r\n                return right;\r\n            }\r\n            else if (typeof left === 'number') {\r\n                if (typeof right === 'number') {\r\n                    return this.addWithEpsilonRaw(left, right);\r\n                }\r\n                else {\r\n                    return left;\r\n                }\r\n            }\r\n            else if (typeof right === 'number') {\r\n                return right;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        };\r\n        /**\r\n         * Subtracts two numbers\r\n         *\r\n         * Implementation of subtracting which is used in interpreter.\r\n         *\r\n         * @param left - left operand of subtraction\r\n         * @param right - right operand of subtraction\r\n         * @param eps - precision of comparison\r\n         */\r\n        this.subtract = (leftArg, rightArg) => {\r\n            const typeOfResult = inferExtendedNumberTypeAdditive(leftArg, rightArg);\r\n            const left = getRawValue(leftArg);\r\n            const right = getRawValue(rightArg);\r\n            let ret = left - right;\r\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\r\n                ret = 0;\r\n            }\r\n            return this.ExtendedNumberFactory(ret, typeOfResult);\r\n        };\r\n        this.divide = (leftArg, rightArg) => {\r\n            const left = getRawValue(leftArg);\r\n            const right = getRawValue(rightArg);\r\n            if (right === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            else {\r\n                const typeOfResult = inferExtendedNumberTypeMultiplicative(leftArg, rightArg);\r\n                return this.ExtendedNumberFactory(left / right, typeOfResult);\r\n            }\r\n        };\r\n        this.multiply = (left, right) => {\r\n            const typeOfResult = inferExtendedNumberTypeMultiplicative(left, right);\r\n            return this.ExtendedNumberFactory(getRawValue(left) * getRawValue(right), typeOfResult);\r\n        };\r\n        this.manyToExactComplex = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg) || typeof arg === 'string') {\r\n                    const coerced = this.coerceScalarToComplex(arg);\r\n                    if (!(coerced instanceof CellError)) {\r\n                        ret.push(coerced);\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.coerceNumbersExactRanges = (args) => this.manyToNumbers(args, this.manyToExactNumbers);\r\n        this.coerceNumbersCoerceRangesDropNulls = (args) => this.manyToNumbers(args, this.manyToCoercedNumbersDropNulls);\r\n        this.manyToExactNumbers = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg)) {\r\n                    ret.push(getRawValue(arg));\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.manyToOnlyNumbersDropNulls = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg)) {\r\n                    ret.push(getRawValue(arg));\r\n                }\r\n                else if (arg !== EmptyValue) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.manyToCoercedNumbersDropNulls = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                if (arg === EmptyValue) {\r\n                    continue;\r\n                }\r\n                const coerced = this.coerceScalarToNumberOrError(arg);\r\n                if (isExtendedNumber(coerced)) {\r\n                    ret.push(getRawValue(coerced));\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.collator = collatorFromConfig(config);\r\n        this.actualEps = config.smartRounding ? config.precisionEpsilon : 0;\r\n    }\r\n    eqMatcherFunction(pattern) {\r\n        const regexp = this.buildRegex(pattern);\r\n        return (cellValue) => (typeof cellValue === 'string' && regexp.test(this.normalizeString(cellValue)));\r\n    }\r\n    neqMatcherFunction(pattern) {\r\n        const regexp = this.buildRegex(pattern);\r\n        return (cellValue) => {\r\n            return (!(typeof cellValue === 'string') || !regexp.test(this.normalizeString(cellValue)));\r\n        };\r\n    }\r\n    searchString(pattern, text) {\r\n        var _a;\r\n        const regexp = this.buildRegex(pattern, false);\r\n        const result = regexp.exec(text);\r\n        return (_a = result === null || result === void 0 ? void 0 : result.index) !== null && _a !== void 0 ? _a : -1;\r\n    }\r\n    requiresRegex(pattern) {\r\n        if (!this.config.useRegularExpressions && !this.config.useWildcards) {\r\n            return !this.config.matchWholeCell;\r\n        }\r\n        for (let i = 0; i < pattern.length; i++) {\r\n            const c = pattern.charAt(i);\r\n            if (isWildcard(c) || (this.config.useRegularExpressions && needsEscape(c))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    floatCmp(leftArg, rightArg) {\r\n        const left = getRawValue(leftArg);\r\n        const right = getRawValue(rightArg);\r\n        const mod = (1 + this.actualEps);\r\n        if ((right >= 0) && (left * mod >= right) && (left <= right * mod)) {\r\n            return 0;\r\n        }\r\n        else if ((right <= 0) && (left * mod <= right) && (left >= right * mod)) {\r\n            return 0;\r\n        }\r\n        else if (left > right) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    coerceScalarToNumberOrError(arg) {\r\n        var _a;\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        return (_a = this.coerceToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.NumberCoercion);\r\n    }\r\n    coerceToMaybeNumber(arg) {\r\n        var _a;\r\n        return (_a = this.coerceNonDateScalarToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : (typeof arg === 'string' ? this.dateTimeHelper.dateStringToDateNumber(arg) : undefined);\r\n    }\r\n    coerceNonDateScalarToMaybeNumber(arg) {\r\n        if (arg === EmptyValue) {\r\n            return 0;\r\n        }\r\n        else if (typeof arg === 'string') {\r\n            if (arg === '') {\r\n                return 0;\r\n            }\r\n            const maybePercentNumber = this.coerceStringToMaybePercentNumber(arg);\r\n            if (maybePercentNumber !== undefined) {\r\n                return maybePercentNumber;\r\n            }\r\n            const maybeCurrencyNumber = this.coerceStringToMaybeCurrencyNumber(arg);\r\n            if (maybeCurrencyNumber !== undefined) {\r\n                return maybeCurrencyNumber;\r\n            }\r\n            return this.numberLiteralsHelper.numericStringToMaybeNumber(arg.trim());\r\n        }\r\n        else if (isExtendedNumber(arg)) {\r\n            return arg;\r\n        }\r\n        else if (typeof arg === 'boolean') {\r\n            return Number(arg);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    coerceStringToMaybePercentNumber(input) {\r\n        const trimmedInput = input.trim();\r\n        if (trimmedInput.endsWith('%')) {\r\n            const numOfPercents = trimmedInput.slice(0, trimmedInput.length - 1).trim();\r\n            const parsedNumOfPercents = this.numberLiteralsHelper.numericStringToMaybeNumber(numOfPercents);\r\n            if (parsedNumOfPercents !== undefined) {\r\n                return new PercentNumber(parsedNumOfPercents / 100);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    coerceStringToMaybeCurrencyNumber(input) {\r\n        const matchedCurrency = this.currencyMatcher(input.trim());\r\n        if (matchedCurrency !== undefined) {\r\n            const [currencySymbol, currencyValue] = matchedCurrency;\r\n            const parsedCurrencyValue = this.numberLiteralsHelper.numericStringToMaybeNumber(currencyValue);\r\n            if (parsedCurrencyValue !== undefined) {\r\n                return new CurrencyNumber(parsedCurrencyValue, currencySymbol);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    currencyMatcher(token) {\r\n        for (const currency of this.config.currencySymbol) {\r\n            if (token.startsWith(currency)) {\r\n                return [currency, token.slice(currency.length).trim()];\r\n            }\r\n            if (token.endsWith(currency)) {\r\n                return [currency, token.slice(0, token.length - currency.length).trim()];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    coerceComplexExactRanges(args) {\r\n        const vals = [];\r\n        for (const arg of args) {\r\n            if (arg instanceof SimpleRangeValue) {\r\n                vals.push(arg);\r\n            }\r\n            else if (arg !== EmptyValue) {\r\n                const coerced = this.coerceScalarToComplex(arg);\r\n                if (coerced instanceof CellError) {\r\n                    return coerced;\r\n                }\r\n                else {\r\n                    vals.push(coerced);\r\n                }\r\n            }\r\n        }\r\n        const expandedVals = [];\r\n        for (const val of vals) {\r\n            if (val instanceof SimpleRangeValue) {\r\n                const arr = this.manyToExactComplex(val.valuesFromTopLeftCorner());\r\n                if (arr instanceof CellError) {\r\n                    return arr;\r\n                }\r\n                else {\r\n                    expandedVals.push(...arr);\r\n                }\r\n            }\r\n            else {\r\n                expandedVals.push(val);\r\n            }\r\n        }\r\n        return expandedVals;\r\n    }\r\n    coerceScalarToComplex(arg) {\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        else if (arg === EmptyValue) {\r\n            return [0, 0];\r\n        }\r\n        else if (isExtendedNumber(arg)) {\r\n            return [getRawValue(arg), 0];\r\n        }\r\n        else if (typeof arg === 'string') {\r\n            return this.coerceStringToComplex(arg);\r\n        }\r\n        else {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n    }\r\n    ExtendedNumberFactory(value, typeFormat) {\r\n        const { type, format } = typeFormat;\r\n        switch (type) {\r\n            case NumberType.NUMBER_RAW:\r\n                return value;\r\n            case NumberType.NUMBER_CURRENCY: {\r\n                return new CurrencyNumber(value, format !== null && format !== void 0 ? format : this.config.currencySymbol[0]);\r\n            }\r\n            case NumberType.NUMBER_DATE:\r\n                return new DateNumber(value, format);\r\n            case NumberType.NUMBER_DATETIME:\r\n                return new DateTimeNumber(value, format);\r\n            case NumberType.NUMBER_TIME:\r\n                return new TimeNumber(value, format);\r\n            case NumberType.NUMBER_PERCENT:\r\n                return new PercentNumber(value, format);\r\n        }\r\n    }\r\n    buildRegex(pattern, matchWholeCell = true) {\r\n        pattern = this.normalizeString(pattern);\r\n        let regexpStr;\r\n        let useWildcards = this.config.useWildcards;\r\n        let useRegularExpressions = this.config.useRegularExpressions;\r\n        if (useRegularExpressions) {\r\n            try {\r\n                RegExp(pattern);\r\n            }\r\n            catch (e) {\r\n                useRegularExpressions = false;\r\n                useWildcards = false;\r\n            }\r\n        }\r\n        if (useRegularExpressions) {\r\n            regexpStr = escapeNoCharacters(pattern, this.config.caseSensitive);\r\n        }\r\n        else if (useWildcards) {\r\n            regexpStr = escapeNonWildcards(pattern, this.config.caseSensitive);\r\n        }\r\n        else {\r\n            regexpStr = escapeAllCharacters(pattern, this.config.caseSensitive);\r\n        }\r\n        if (this.config.matchWholeCell && matchWholeCell) {\r\n            return RegExp('^(' + regexpStr + ')$');\r\n        }\r\n        else {\r\n            return RegExp(regexpStr);\r\n        }\r\n    }\r\n    normalizeString(str) {\r\n        if (!this.config.caseSensitive) {\r\n            str = str.toLowerCase();\r\n        }\r\n        if (!this.config.accentSensitive) {\r\n            str = normalizeString(str, 'nfd').replace(/[\\u0300-\\u036f]/g, '');\r\n        }\r\n        return str;\r\n    }\r\n    compare(left, right) {\r\n        if (typeof left === 'string' || typeof right === 'string') {\r\n            const leftTmp = typeof left === 'string' ? this.dateTimeHelper.dateStringToDateNumber(left) : left;\r\n            const rightTmp = typeof right === 'string' ? this.dateTimeHelper.dateStringToDateNumber(right) : right;\r\n            if (isExtendedNumber(leftTmp) && isExtendedNumber(rightTmp)) {\r\n                return this.floatCmp(leftTmp, rightTmp);\r\n            }\r\n        }\r\n        if (left === EmptyValue) {\r\n            left = coerceEmptyToValue(right);\r\n        }\r\n        else if (right === EmptyValue) {\r\n            right = coerceEmptyToValue(left);\r\n        }\r\n        if (typeof left === 'string' && typeof right === 'string') {\r\n            return this.stringCmp(left, right);\r\n        }\r\n        else if (typeof left === 'boolean' && typeof right === 'boolean') {\r\n            return numberCmp(coerceBooleanToNumber(left), coerceBooleanToNumber(right));\r\n        }\r\n        else if (isExtendedNumber(left) && isExtendedNumber(right)) {\r\n            return this.floatCmp(left, right);\r\n        }\r\n        else if (left === EmptyValue && right === EmptyValue) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return numberCmp(CellValueTypeOrd(getCellValueType(left)), CellValueTypeOrd(getCellValueType(right)));\r\n        }\r\n    }\r\n    stringCmp(left, right) {\r\n        return this.collator.compare(left, right);\r\n    }\r\n    manyToNumbers(args, rangeFn) {\r\n        const vals = [];\r\n        for (const arg of args) {\r\n            if (arg instanceof SimpleRangeValue) {\r\n                vals.push(arg);\r\n            }\r\n            else {\r\n                const coerced = getRawValue(this.coerceScalarToNumberOrError(arg));\r\n                if (coerced instanceof CellError) {\r\n                    return coerced;\r\n                }\r\n                else {\r\n                    vals.push(coerced);\r\n                }\r\n            }\r\n        }\r\n        const expandedVals = [];\r\n        for (const val of vals) {\r\n            if (val instanceof SimpleRangeValue) {\r\n                const arr = rangeFn(val.valuesFromTopLeftCorner());\r\n                if (arr instanceof CellError) {\r\n                    return arr;\r\n                }\r\n                else {\r\n                    expandedVals.push(...arr);\r\n                }\r\n            }\r\n            else {\r\n                expandedVals.push(val);\r\n            }\r\n        }\r\n        return expandedVals;\r\n    }\r\n    coerceStringToComplex(arg) {\r\n        const match = complexParsingRegexp.exec(arg);\r\n        if (match === null) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        let val1;\r\n        if (match[6] !== undefined) {\r\n            val1 = (match[1] === '-' ? [0, -1] : [0, 1]);\r\n        }\r\n        else {\r\n            val1 = this.parseComplexToken(match[1] + match[3], match[5]);\r\n        }\r\n        if (val1 instanceof CellError) {\r\n            return val1;\r\n        }\r\n        if (match[8] === undefined) {\r\n            return val1;\r\n        }\r\n        let val2;\r\n        if (match[14] !== undefined) {\r\n            val2 = (match[9] === '-' ? [0, -1] : [0, 1]);\r\n        }\r\n        else {\r\n            val2 = this.parseComplexToken(match[9] + match[11], match[13]);\r\n        }\r\n        if (val2 instanceof CellError) {\r\n            return val2;\r\n        }\r\n        if ((match[5] !== '') || (match[13] === '')) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        if (match[8] === '+') {\r\n            return [val1[0] + val2[0], val1[1] + val2[1]];\r\n        }\r\n        else {\r\n            return [val1[0] - val2[0], val1[1] - val2[1]];\r\n        }\r\n    }\r\n    parseComplexToken(arg, mod) {\r\n        const val = getRawValue(this.coerceNonDateScalarToMaybeNumber(arg));\r\n        if (val === undefined) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        if (mod === '') {\r\n            return [val, 0];\r\n        }\r\n        else {\r\n            return [0, val];\r\n        }\r\n    }\r\n}\r\nexport function coerceComplexToString([re, im], symb) {\r\n    if (!isFinite(re) || !isFinite(im)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n    }\r\n    symb = symb !== null && symb !== void 0 ? symb : COMPLEX_NUMBER_SYMBOL;\r\n    if (im === 0) {\r\n        return `${re}`;\r\n    }\r\n    const imStr = `${im === -1 || im === 1 ? '' : Math.abs(im)}${symb}`;\r\n    if (re === 0) {\r\n        return `${im < 0 ? '-' : ''}${imStr}`;\r\n    }\r\n    return `${re}${im < 0 ? '-' : '+'}${imStr}`;\r\n}\r\nexport function coerceToRange(arg) {\r\n    if (arg instanceof SimpleRangeValue) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return SimpleRangeValue.fromScalar(arg);\r\n    }\r\n}\r\nexport function coerceToRangeNumbersOrError(arg) {\r\n    if ((arg instanceof SimpleRangeValue && arg.hasOnlyNumbers()) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return SimpleRangeValue.fromScalar(arg);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexport function coerceBooleanToNumber(arg) {\r\n    return Number(arg);\r\n}\r\nexport function coerceEmptyToValue(arg) {\r\n    if (typeof arg === 'string') {\r\n        return '';\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return 0;\r\n    }\r\n    else if (typeof arg === 'boolean') {\r\n        return false;\r\n    }\r\n    else {\r\n        return EmptyValue;\r\n    }\r\n}\r\n/**\r\n * Coerce scalar value to boolean if possible, or error if value is an error\r\n *\r\n * @param arg\r\n */\r\nexport function coerceScalarToBoolean(arg) {\r\n    if (arg instanceof CellError || typeof arg === 'boolean') {\r\n        return arg;\r\n    }\r\n    else if (arg === EmptyValue) {\r\n        return false;\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg) !== 0;\r\n    }\r\n    else {\r\n        const argUppered = arg.toUpperCase();\r\n        if (argUppered === 'TRUE') {\r\n            return true;\r\n        }\r\n        else if (argUppered === 'FALSE') {\r\n            return false;\r\n        }\r\n        else if (argUppered === '') {\r\n            return false;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nexport function coerceScalarToString(arg) {\r\n    if (arg instanceof CellError || typeof arg === 'string') {\r\n        return arg;\r\n    }\r\n    else if (arg === EmptyValue) {\r\n        return '';\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg).toString();\r\n    }\r\n    else {\r\n        return arg ? 'TRUE' : 'FALSE';\r\n    }\r\n}\r\nexport function zeroIfEmpty(arg) {\r\n    return arg === EmptyValue ? 0 : arg;\r\n}\r\nexport function numberCmp(leftArg, rightArg) {\r\n    const left = getRawValue(leftArg);\r\n    const right = getRawValue(rightArg);\r\n    if (left > right) {\r\n        return 1;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function isNumberOverflow(arg) {\r\n    return (isNaN(arg) || arg === Infinity || arg === -Infinity);\r\n}\r\nexport function fixNegativeZero(arg) {\r\n    if (arg === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return arg;\r\n    }\r\n}\r\nfunction isWildcard(c) {\r\n    return ['*', '?'].includes(c);\r\n}\r\nconst escapedCharacters = ['{', '}', '[', ']', '(', ')', '<', '>', '=', '.', '+', '-', ',', '\\\\', '$', '^', '!'];\r\nfunction needsEscape(c) {\r\n    return escapedCharacters.includes(c);\r\n}\r\nfunction escapeNonWildcards(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (c === '~') {\r\n            if (i == pattern.length - 1) {\r\n                str += '~';\r\n                continue;\r\n            }\r\n            const d = pattern.charAt(i + 1);\r\n            if (isWildcard(d) || needsEscape(d)) {\r\n                str += '\\\\' + d;\r\n                i++;\r\n            }\r\n            else {\r\n                str += d;\r\n                i++;\r\n            }\r\n        }\r\n        else if (isWildcard(c)) {\r\n            str += '.' + c;\r\n        }\r\n        else if (needsEscape(c)) {\r\n            str += '\\\\' + c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction escapeAllCharacters(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (isWildcard(c) || needsEscape(c)) {\r\n            str += '\\\\' + c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction escapeNoCharacters(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (isWildcard(c) || needsEscape(c)) {\r\n            str += c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction inferExtendedNumberTypeAdditive(leftArg, rightArg) {\r\n    const { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\r\n    const { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\r\n    if (leftType === NumberType.NUMBER_RAW) {\r\n        return { type: rightType, format: rightFormat };\r\n    }\r\n    if (rightType === NumberType.NUMBER_RAW) {\r\n        return { type: leftType, format: leftFormat };\r\n    }\r\n    if ((leftType === NumberType.NUMBER_DATETIME || leftType === NumberType.NUMBER_DATE)\r\n        && (rightType === NumberType.NUMBER_DATETIME || rightType === NumberType.NUMBER_DATE)) {\r\n        return { type: NumberType.NUMBER_RAW };\r\n    }\r\n    if (leftType === NumberType.NUMBER_TIME) {\r\n        if (rightType === NumberType.NUMBER_DATE) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: rightFormat + ' ' + leftFormat };\r\n        }\r\n        if (rightType === NumberType.NUMBER_DATETIME) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: rightFormat };\r\n        }\r\n    }\r\n    if (rightType === NumberType.NUMBER_TIME) {\r\n        if (leftType === NumberType.NUMBER_DATE) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: leftFormat + ' ' + rightFormat };\r\n        }\r\n        if (leftType === NumberType.NUMBER_DATETIME) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: leftFormat };\r\n        }\r\n    }\r\n    return { type: leftType, format: leftFormat };\r\n}\r\nfunction inferExtendedNumberTypeMultiplicative(leftArg, rightArg) {\r\n    let { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\r\n    let { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\r\n    if (leftType === NumberType.NUMBER_PERCENT) {\r\n        leftType = NumberType.NUMBER_RAW;\r\n        leftFormat = undefined;\r\n    }\r\n    if (rightType === NumberType.NUMBER_PERCENT) {\r\n        rightType = NumberType.NUMBER_RAW;\r\n        rightFormat = undefined;\r\n    }\r\n    if (leftType === NumberType.NUMBER_RAW) {\r\n        return { type: rightType, format: rightFormat };\r\n    }\r\n    if (rightType === NumberType.NUMBER_RAW) {\r\n        return { type: leftType, format: leftFormat };\r\n    }\r\n    return { type: NumberType.NUMBER_RAW };\r\n}\r\nexport function forceNormalizeString(str) {\r\n    return normalizeString(str.toLowerCase(), 'nfd').replace(/[\\u0300-\\u036f]/g, '');\r\n}\r\nexport function coerceRangeToScalar(arg, state) {\r\n    var _a;\r\n    if (arg.isAdHoc()) {\r\n        return (_a = arg.data[0]) === null || _a === void 0 ? void 0 : _a[0];\r\n    }\r\n    const range = arg.range;\r\n    if (state.formulaAddress.sheet === range.sheet) {\r\n        if (range.width() === 1) {\r\n            const offset = state.formulaAddress.row - range.start.row;\r\n            if (offset >= 0 && offset < range.height()) {\r\n                return arg.data[offset][0];\r\n            }\r\n        }\r\n        else if (range.height() === 1) {\r\n            const offset = state.formulaAddress.col - range.start.col;\r\n            if (offset >= 0 && offset < range.width()) {\r\n                return arg.data[0][offset];\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexport function normalizeString(str, form) {\r\n    return typeof str.normalize === 'function'\r\n        ? str.normalize(form.toUpperCase()) : unorm[form](str);\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__30__;","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function collatorFromConfig(config) {\r\n    const sensitivity = config.caseSensitive ? (config.accentSensitive ? 'variant' : 'case') : (config.accentSensitive ? 'accent' : 'base');\r\n    const caseFirst = config.caseFirst;\r\n    const ignorePunctuation = config.ignorePunctuation;\r\n    return new Intl.Collator(config.localeLang, { sensitivity, caseFirst, ignorePunctuation });\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport const EmptyValue = Symbol('Empty value');\r\nexport function getRawValue(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.val;\r\n    }\r\n    else {\r\n        return num;\r\n    }\r\n}\r\nexport class RichNumber {\r\n    constructor(val, format) {\r\n        this.val = val;\r\n        this.format = format;\r\n    }\r\n    fromNumber(val) {\r\n        return new this.constructor(val);\r\n    }\r\n}\r\nexport function cloneNumber(val, newVal) {\r\n    if (typeof val === 'number') {\r\n        return newVal;\r\n    }\r\n    else {\r\n        const ret = val.fromNumber(newVal);\r\n        ret.format = val.format;\r\n        return ret;\r\n    }\r\n}\r\nexport class DateNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_DATE;\r\n    }\r\n}\r\nexport class CurrencyNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_CURRENCY;\r\n    }\r\n}\r\nexport class TimeNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_TIME;\r\n    }\r\n}\r\nexport class DateTimeNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_DATETIME;\r\n    }\r\n}\r\nexport class PercentNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_PERCENT;\r\n    }\r\n}\r\nexport function isExtendedNumber(val) {\r\n    return (typeof val === 'number') || (val instanceof RichNumber);\r\n}\r\nexport var NumberType;\r\n(function (NumberType) {\r\n    NumberType[\"NUMBER_RAW\"] = \"NUMBER_RAW\";\r\n    NumberType[\"NUMBER_DATE\"] = \"NUMBER_DATE\";\r\n    NumberType[\"NUMBER_TIME\"] = \"NUMBER_TIME\";\r\n    NumberType[\"NUMBER_DATETIME\"] = \"NUMBER_DATETIME\";\r\n    NumberType[\"NUMBER_CURRENCY\"] = \"NUMBER_CURRENCY\";\r\n    NumberType[\"NUMBER_PERCENT\"] = \"NUMBER_PERCENT\";\r\n})(NumberType || (NumberType = {}));\r\nexport function getTypeOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.getDetailedType();\r\n    }\r\n    else {\r\n        return NumberType.NUMBER_RAW;\r\n    }\r\n}\r\nexport function getFormatOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.format;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexport function getTypeFormatOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return { type: num.getDetailedType(), format: num.format };\r\n    }\r\n    else {\r\n        return { type: NumberType.NUMBER_RAW };\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { EmptyStatistics } from './EmptyStatistics';\r\nexport { Statistics } from './Statistics';\r\nexport { StatType } from './StatType';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { Statistics } from './Statistics';\r\n/** Do not store stats in the memory. Stats are not needed on daily basis */\r\nexport class EmptyStatistics extends Statistics {\r\n    /** @inheritDoc */\r\n    incrementCriterionFunctionFullCacheUsed() {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    incrementCriterionFunctionPartialCacheUsed() {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    start(_name) {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    end(_name) {\r\n        // do nothing\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { StatType } from './StatType';\r\n/**\r\n * Provides tracking performance statistics to the engine\r\n */\r\nexport class Statistics {\r\n    constructor() {\r\n        this.stats = new Map([\r\n            [StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0],\r\n            [StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0],\r\n        ]);\r\n        this.startTimes = new Map();\r\n    }\r\n    incrementCriterionFunctionFullCacheUsed() {\r\n        var _a;\r\n        const newValue = ((_a = this.stats.get(StatType.CRITERION_FUNCTION_FULL_CACHE_USED)) !== null && _a !== void 0 ? _a : 0) + 1;\r\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, newValue);\r\n    }\r\n    incrementCriterionFunctionPartialCacheUsed() {\r\n        var _a;\r\n        const newValue = ((_a = this.stats.get(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED)) !== null && _a !== void 0 ? _a : 0) + 1;\r\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, newValue);\r\n    }\r\n    /**\r\n     * Resets statistics\r\n     */\r\n    reset() {\r\n        this.stats.clear();\r\n        this.startTimes.clear();\r\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0);\r\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0);\r\n    }\r\n    /**\r\n     * Starts tracking particular statistic.\r\n     *\r\n     * @param name - statistic to start tracking\r\n     */\r\n    start(name) {\r\n        if (this.startTimes.get(name)) {\r\n            throw Error(`Statistics ${name} already started`);\r\n        }\r\n        else {\r\n            this.startTimes.set(name, Date.now());\r\n        }\r\n    }\r\n    /**\r\n     * Stops tracking particular statistic.\r\n     * Raise error if tracking statistic wasn't started.\r\n     *\r\n     * @param name - statistic to stop tracking\r\n     */\r\n    end(name) {\r\n        var _a;\r\n        const now = Date.now();\r\n        const startTime = this.startTimes.get(name);\r\n        if (startTime) {\r\n            let values = (_a = this.stats.get(name)) !== null && _a !== void 0 ? _a : 0;\r\n            values += (now - startTime);\r\n            this.stats.set(name, values);\r\n            this.startTimes.delete(name);\r\n        }\r\n        else {\r\n            throw Error(`Statistics ${name} not started`);\r\n        }\r\n    }\r\n    /**\r\n     * Measure given statistic as execution of given function.\r\n     *\r\n     * @param name - statistic to track\r\n     * @param func - function to call\r\n     * @returns result of the function call\r\n     */\r\n    measure(name, func) {\r\n        this.start(name);\r\n        const result = func();\r\n        this.end(name);\r\n        return result;\r\n    }\r\n    /**\r\n     * Returns the snapshot of current results\r\n     */\r\n    snapshot() {\r\n        return new Map(this.stats);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport var StatType;\r\n(function (StatType) {\r\n    /* build engine */\r\n    StatType[\"BUILD_ENGINE_TOTAL\"] = \"BUILD_ENGINE_TOTAL\";\r\n    StatType[\"PARSER\"] = \"PARSER\";\r\n    StatType[\"GRAPH_BUILD\"] = \"GRAPH_BUILD\";\r\n    StatType[\"COLLECT_DEPENDENCIES\"] = \"COLLECT_DEPENDENCIES\";\r\n    StatType[\"PROCESS_DEPENDENCIES\"] = \"PROCESS_DEPENDENCIES\";\r\n    StatType[\"TOP_SORT\"] = \"TOP_SORT\";\r\n    StatType[\"BUILD_COLUMN_INDEX\"] = \"BUILD_COLUMN_INDEX\";\r\n    StatType[\"EVALUATION\"] = \"EVALUATION\";\r\n    StatType[\"VLOOKUP\"] = \"VLOOKUP\";\r\n    /* crud adjustments */\r\n    StatType[\"TRANSFORM_ASTS\"] = \"TRANSFORM_ASTS\";\r\n    StatType[\"TRANSFORM_ASTS_POSTPONED\"] = \"TRANSFORM_ASTS_POSTPONED\";\r\n    StatType[\"ADJUSTING_ADDRESS_MAPPING\"] = \"ADJUSTING_ADDRESS_MAPPING\";\r\n    StatType[\"ADJUSTING_ARRAY_MAPPING\"] = \"ADJUSTING_ARRAY_MAPPING\";\r\n    StatType[\"ADJUSTING_RANGES\"] = \"ADJUSTING_RANGES\";\r\n    StatType[\"ADJUSTING_GRAPH\"] = \"ADJUSTING_GRAPH\";\r\n    /* criterion cache */\r\n    StatType[\"CRITERION_FUNCTION_FULL_CACHE_USED\"] = \"CRITERION_FUNCTION_FULL_CACHE_USED\";\r\n    StatType[\"CRITERION_FUNCTION_PARTIAL_CACHE_USED\"] = \"CRITERION_FUNCTION_PARTIAL_CACHE_USED\";\r\n})(StatType || (StatType = {}));\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { NoSheetWithIdError } from '../../errors';\r\nimport { EmptyValue } from '../../interpreter/InterpreterValue';\r\nimport { ArrayVertex, ValueCellVertex } from '../index';\r\nexport class AddressMapping {\r\n    constructor(policy) {\r\n        this.policy = policy;\r\n        this.mapping = new Map();\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n        return sheetMapping.getCell(address);\r\n    }\r\n    fetchCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n        const vertex = sheetMapping.getCell(address);\r\n        if (!vertex) {\r\n            throw Error('Vertex for address missing in AddressMapping');\r\n        }\r\n        return vertex;\r\n    }\r\n    strategyFor(sheetId) {\r\n        const strategy = this.mapping.get(sheetId);\r\n        if (strategy === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return strategy;\r\n    }\r\n    addSheet(sheetId, strategy) {\r\n        if (this.mapping.has(sheetId)) {\r\n            throw Error('Sheet already added');\r\n        }\r\n        this.mapping.set(sheetId, strategy);\r\n    }\r\n    autoAddSheet(sheetId, sheet, sheetBoundaries) {\r\n        const { height, width, fill } = sheetBoundaries;\r\n        const strategyConstructor = this.policy.call(fill);\r\n        this.addSheet(sheetId, new strategyConstructor(width, height));\r\n    }\r\n    getCellValue(address) {\r\n        const vertex = this.getCell(address);\r\n        if (vertex === undefined) {\r\n            return EmptyValue;\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            return vertex.getArrayCellValue(address);\r\n        }\r\n        else {\r\n            return vertex.getCellValue();\r\n        }\r\n    }\r\n    getRawValue(address) {\r\n        const vertex = this.getCell(address);\r\n        if (vertex instanceof ValueCellVertex) {\r\n            return vertex.getValues().rawValue;\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            return vertex.getArrayCellRawValue(address);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized');\r\n        }\r\n        sheetMapping.setCell(address, newVertex);\r\n    }\r\n    moveCell(source, destination) {\r\n        const sheetMapping = this.mapping.get(source.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized.');\r\n        }\r\n        if (source.sheet !== destination.sheet) {\r\n            throw Error('Cannot move cells between sheets.');\r\n        }\r\n        if (sheetMapping.has(destination)) {\r\n            throw new Error('Cannot move cell. Destination already occupied.');\r\n        }\r\n        const vertex = sheetMapping.getCell(source);\r\n        if (vertex === undefined) {\r\n            throw new Error('Cannot move cell. No cell with such address.');\r\n        }\r\n        this.setCell(destination, vertex);\r\n        this.removeCell(source);\r\n    }\r\n    removeCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized');\r\n        }\r\n        sheetMapping.removeCell(address);\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            return false;\r\n        }\r\n        return sheetMapping.has(address);\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight(sheetId) {\r\n        const sheetMapping = this.mapping.get(sheetId);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetMapping.getHeight();\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth(sheetId) {\r\n        const sheetMapping = this.mapping.get(sheetId);\r\n        if (!sheetMapping) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetMapping.getWidth();\r\n    }\r\n    addRows(sheet, row, numberOfRows) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        sheetMapping.addRows(row, numberOfRows);\r\n    }\r\n    removeRows(removedRows) {\r\n        const sheetMapping = this.mapping.get(removedRows.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(removedRows.sheet);\r\n        }\r\n        sheetMapping.removeRows(removedRows);\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.mapping.delete(sheetId);\r\n    }\r\n    addColumns(sheet, column, numberOfColumns) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        sheetMapping.addColumns(column, numberOfColumns);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        const sheetMapping = this.mapping.get(removedColumns.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(removedColumns.sheet);\r\n        }\r\n        sheetMapping.removeColumns(removedColumns);\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        yield* this.mapping.get(rowsSpan.sheet).verticesFromRowsSpan(rowsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        yield* this.mapping.get(columnsSpan.sheet).verticesFromColumnsSpan(columnsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        yield* this.mapping.get(rowsSpan.sheet).entriesFromRowsSpan(rowsSpan);\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        yield* this.mapping.get(columnsSpan.sheet).entriesFromColumnsSpan(columnsSpan);\r\n    }\r\n    *entries() {\r\n        for (const [sheet, mapping] of this.mapping.entries()) {\r\n            yield* mapping.getEntries(sheet);\r\n        }\r\n    }\r\n    *sheetEntries(sheet) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping !== undefined) {\r\n            yield* sheetMapping.getEntries(sheet);\r\n        }\r\n        else {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { addressKey } from '../Cell';\r\nexport class ArrayMapping {\r\n    constructor() {\r\n        this.arrayMapping = new Map();\r\n    }\r\n    getArray(range) {\r\n        const array = this.getArrayByCorner(range.start);\r\n        if (array === null || array === void 0 ? void 0 : array.getRange().sameAs(range)) {\r\n            return array;\r\n        }\r\n        return;\r\n    }\r\n    getArrayByCorner(address) {\r\n        return this.arrayMapping.get(addressKey(address));\r\n    }\r\n    setArray(range, vertex) {\r\n        this.arrayMapping.set(addressKey(range.start), vertex);\r\n    }\r\n    removeArray(range) {\r\n        if (typeof range === 'string') {\r\n            this.arrayMapping.delete(range);\r\n        }\r\n        else {\r\n            this.arrayMapping.delete(addressKey(range.start));\r\n        }\r\n    }\r\n    count() {\r\n        return this.arrayMapping.size;\r\n    }\r\n    *arraysInRows(rowsSpan) {\r\n        for (const [mtxKey, mtx] of this.arrayMapping.entries()) {\r\n            if (mtx.spansThroughSheetRows(rowsSpan.sheet, rowsSpan.rowStart, rowsSpan.rowEnd)) {\r\n                yield [mtxKey, mtx];\r\n            }\r\n        }\r\n    }\r\n    *arraysInCols(col) {\r\n        for (const [mtxKey, mtx] of this.arrayMapping.entries()) {\r\n            if (mtx.spansThroughSheetColumn(col.sheet, col.columnStart, col.columnEnd)) {\r\n                yield [mtxKey, mtx];\r\n            }\r\n        }\r\n    }\r\n    isFormulaArrayInRow(sheet, row) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.spansThroughSheetRows(sheet, row)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayInAllRows(span) {\r\n        let result = true;\r\n        for (const row of span.rows()) {\r\n            if (!this.isFormulaArrayInRow(span.sheet, row)) {\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    isFormulaArrayInColumn(sheet, column) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.spansThroughSheetColumn(sheet, column)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayInAllColumns(span) {\r\n        let result = true;\r\n        for (const col of span.columns()) {\r\n            if (!this.isFormulaArrayInColumn(span.sheet, col)) {\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    isFormulaArrayInRange(range) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.getRange().doesOverlap(range)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayAtAddress(address) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.getRange().addressInRange(address)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    moveArrayVerticesAfterRowByRows(sheet, row, numberOfRows) {\r\n        this.updateArrayVerticesInSheet(sheet, (key, vertex) => {\r\n            const range = vertex.getRange();\r\n            return row <= range.start.row ? [range.shifted(0, numberOfRows), vertex] : undefined;\r\n        });\r\n    }\r\n    moveArrayVerticesAfterColumnByColumns(sheet, column, numberOfColumns) {\r\n        this.updateArrayVerticesInSheet(sheet, (key, vertex) => {\r\n            const range = vertex.getRange();\r\n            return column <= range.start.col ? [range.shifted(numberOfColumns, 0), vertex] : undefined;\r\n        });\r\n    }\r\n    updateArrayVerticesInSheet(sheet, fn) {\r\n        const updated = Array();\r\n        for (const [key, vertex] of this.arrayMapping.entries()) {\r\n            if (vertex.sheet !== sheet) {\r\n                continue;\r\n            }\r\n            const result = fn(key, vertex);\r\n            if (result !== undefined) {\r\n                this.removeArray(key);\r\n                updated.push(result);\r\n            }\r\n        }\r\n        updated.forEach(([range, array]) => {\r\n            this.setArray(range, array);\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AddressDependency, collectDependencies } from '../parser';\r\nimport { FormulaVertex } from './FormulaCellVertex';\r\nimport { RangeVertex } from './RangeVertex';\r\nexport const collectAddressesDependentToRange = (functionRegistry, vertex, range, lazilyTransformingAstService, dependencyGraph) => {\r\n    if (vertex instanceof RangeVertex) {\r\n        const intersection = vertex.range.intersectionWith(range);\r\n        if (intersection !== undefined) {\r\n            return Array.from(intersection.addresses(dependencyGraph));\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    let formula;\r\n    let address;\r\n    if (vertex instanceof FormulaVertex) {\r\n        formula = vertex.getFormula(lazilyTransformingAstService);\r\n        address = vertex.getAddress(lazilyTransformingAstService);\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n    return collectDependencies(formula, functionRegistry)\r\n        .filter((d) => d instanceof AddressDependency)\r\n        .map((d) => d.dependency.toSimpleCellAddress(address))\r\n        .filter((d) => range.addressInRange(d));\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\r\nimport { ArraySize } from '../ArraySize';\r\nimport { ArrayValue, ErroredArray, NotComputedArray } from '../ArrayValue';\r\nimport { CellError, equalSimpleCellAddress, ErrorType } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { ColumnsSpan, RowsSpan } from '../Span';\r\nexport class FormulaVertex {\r\n    constructor(formula, cellAddress, version) {\r\n        this.formula = formula;\r\n        this.cellAddress = cellAddress;\r\n        this.version = version;\r\n    }\r\n    get width() {\r\n        return 1;\r\n    }\r\n    get height() {\r\n        return 1;\r\n    }\r\n    static fromAst(formula, address, size, version) {\r\n        if (size.isScalar()) {\r\n            return new FormulaCellVertex(formula, address, version);\r\n        }\r\n        else {\r\n            return new ArrayVertex(formula, address, size, version);\r\n        }\r\n    }\r\n    /**\r\n     * Returns formula stored in this vertex\r\n     */\r\n    getFormula(updatingService) {\r\n        this.ensureRecentData(updatingService);\r\n        return this.formula;\r\n    }\r\n    ensureRecentData(updatingService) {\r\n        if (this.version != updatingService.version()) {\r\n            const [newAst, newAddress, newVersion] = updatingService.applyTransformations(this.formula, this.cellAddress, this.version);\r\n            this.formula = newAst;\r\n            this.cellAddress = newAddress;\r\n            this.version = newVersion;\r\n        }\r\n    }\r\n    /**\r\n     * Returns address of the cell associated with vertex\r\n     */\r\n    getAddress(updatingService) {\r\n        this.ensureRecentData(updatingService);\r\n        return this.cellAddress;\r\n    }\r\n}\r\nexport class ArrayVertex extends FormulaVertex {\r\n    constructor(formula, cellAddress, size, version = 0) {\r\n        super(formula, cellAddress, version);\r\n        if (size.isRef) {\r\n            this.array = new ErroredArray(new CellError(ErrorType.REF, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\r\n        }\r\n        else {\r\n            this.array = new NotComputedArray(size);\r\n        }\r\n    }\r\n    get width() {\r\n        return this.array.width();\r\n    }\r\n    get height() {\r\n        return this.array.height();\r\n    }\r\n    get sheet() {\r\n        return this.cellAddress.sheet;\r\n    }\r\n    get leftCorner() {\r\n        return this.cellAddress;\r\n    }\r\n    setCellValue(value) {\r\n        if (value instanceof CellError) {\r\n            this.setErrorValue(value);\r\n            return value;\r\n        }\r\n        const array = ArrayValue.fromInterpreterValue(value);\r\n        array.resize(this.array.size);\r\n        this.array = array;\r\n        return value;\r\n    }\r\n    getCellValue() {\r\n        if (this.array instanceof NotComputedArray) {\r\n            throw Error('Array not computed yet.');\r\n        }\r\n        return this.array.simpleRangeValue();\r\n    }\r\n    valueOrUndef() {\r\n        if (this.array instanceof NotComputedArray) {\r\n            return undefined;\r\n        }\r\n        return this.array.simpleRangeValue();\r\n    }\r\n    getArrayCellValue(address) {\r\n        const col = address.col - this.cellAddress.col;\r\n        const row = address.row - this.cellAddress.row;\r\n        try {\r\n            return this.array.get(col, row);\r\n        }\r\n        catch (e) {\r\n            return new CellError(ErrorType.REF);\r\n        }\r\n    }\r\n    getArrayCellRawValue(address) {\r\n        const val = this.getArrayCellValue(address);\r\n        if (val instanceof CellError || val === EmptyValue) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return getRawValue(val);\r\n        }\r\n    }\r\n    setArrayCellValue(address, value) {\r\n        const col = address.col - this.cellAddress.col;\r\n        const row = address.row - this.cellAddress.row;\r\n        if (this.array instanceof ArrayValue) {\r\n            this.array.set(col, row, value);\r\n        }\r\n    }\r\n    setNoSpace() {\r\n        this.array = new ErroredArray(new CellError(ErrorType.SPILL, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\r\n        return this.getCellValue();\r\n    }\r\n    getRange() {\r\n        return AbsoluteCellRange.spanFrom(this.cellAddress, this.width, this.height);\r\n    }\r\n    getRangeOrUndef() {\r\n        return AbsoluteCellRange.spanFromOrUndef(this.cellAddress, this.width, this.height);\r\n    }\r\n    setAddress(address) {\r\n        this.cellAddress = address;\r\n    }\r\n    setFormula(newFormula) {\r\n        this.formula = newFormula;\r\n    }\r\n    spansThroughSheetRows(sheet, startRow, endRow = startRow) {\r\n        return (this.cellAddress.sheet === sheet) &&\r\n            (this.cellAddress.row <= endRow) &&\r\n            (startRow < this.cellAddress.row + this.height);\r\n    }\r\n    spansThroughSheetColumn(sheet, col, columnEnd = col) {\r\n        return (this.cellAddress.sheet === sheet) &&\r\n            (this.cellAddress.col <= columnEnd) &&\r\n            (col < this.cellAddress.col + this.width);\r\n    }\r\n    isComputed() {\r\n        return (!(this.array instanceof NotComputedArray));\r\n    }\r\n    columnsFromArray() {\r\n        return ColumnsSpan.fromNumberOfColumns(this.cellAddress.sheet, this.cellAddress.col, this.width);\r\n    }\r\n    rowsFromArray() {\r\n        return RowsSpan.fromNumberOfRows(this.cellAddress.sheet, this.cellAddress.row, this.height);\r\n    }\r\n    /**\r\n     * No-op as array vertices are transformed eagerly.\r\n     * */\r\n    ensureRecentData(_updatingService) {\r\n    }\r\n    isLeftCorner(address) {\r\n        return equalSimpleCellAddress(this.cellAddress, address);\r\n    }\r\n    setErrorValue(error) {\r\n        this.array = new ErroredArray(error, this.array.size);\r\n    }\r\n}\r\n/**\r\n * Represents vertex which keeps formula\r\n */\r\nexport class FormulaCellVertex extends FormulaVertex {\r\n    constructor(\r\n    /** Formula in AST format */\r\n    formula, \r\n    /** Address which this vertex represents */\r\n    address, version) {\r\n        super(formula, address, version);\r\n    }\r\n    valueOrUndef() {\r\n        return this.cachedCellValue;\r\n    }\r\n    /**\r\n     * Sets computed cell value stored in this vertex\r\n     */\r\n    setCellValue(cellValue) {\r\n        this.cachedCellValue = cellValue;\r\n        return this.cachedCellValue;\r\n    }\r\n    /**\r\n     * Returns cell value stored in vertex\r\n     */\r\n    getCellValue() {\r\n        if (this.cachedCellValue !== undefined) {\r\n            return this.cachedCellValue;\r\n        }\r\n        else {\r\n            throw Error('Value of the formula cell is not computed.');\r\n        }\r\n    }\r\n    isComputed() {\r\n        return (this.cachedCellValue !== undefined);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from './ArraySize';\r\nimport { EmptyValue } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nexport class NotComputedArray {\r\n    constructor(size) {\r\n        this.size = size;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    get(col, row) {\r\n        throw Error('Array not computed yet.');\r\n    }\r\n    simpleRangeValue() {\r\n        throw Error('Array not computed yet.');\r\n    }\r\n}\r\nexport class ArrayValue {\r\n    constructor(array) {\r\n        this.size = new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\r\n        this.array = array;\r\n    }\r\n    static fromInterpreterValue(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new ArrayValue(value.data);\r\n        }\r\n        else {\r\n            return new ArrayValue([[value]]);\r\n        }\r\n    }\r\n    simpleRangeValue() {\r\n        return SimpleRangeValue.onlyValues(this.array);\r\n    }\r\n    addRows(aboveRow, numberOfRows) {\r\n        this.array.splice(aboveRow, 0, ...this.nullArrays(numberOfRows, this.width()));\r\n        this.size.height += numberOfRows;\r\n    }\r\n    addColumns(aboveColumn, numberOfColumns) {\r\n        for (let i = 0; i < this.height(); i++) {\r\n            this.array[i].splice(aboveColumn, 0, ...new Array(numberOfColumns).fill(EmptyValue));\r\n        }\r\n        this.size.width += numberOfColumns;\r\n    }\r\n    removeRows(startRow, endRow) {\r\n        if (this.outOfBound(0, startRow) || this.outOfBound(0, endRow)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        const numberOfRows = endRow - startRow + 1;\r\n        this.array.splice(startRow, numberOfRows);\r\n        this.size.height -= numberOfRows;\r\n    }\r\n    removeColumns(leftmostColumn, rightmostColumn) {\r\n        if (this.outOfBound(leftmostColumn, 0) || this.outOfBound(rightmostColumn, 0)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        const numberOfColumns = rightmostColumn - leftmostColumn + 1;\r\n        for (const row of this.array) {\r\n            row.splice(leftmostColumn, numberOfColumns);\r\n        }\r\n        this.size.width -= numberOfColumns;\r\n    }\r\n    nullArrays(count, size) {\r\n        const result = [];\r\n        for (let i = 0; i < count; ++i) {\r\n            result.push(new Array(size).fill(EmptyValue));\r\n        }\r\n        return result;\r\n    }\r\n    get(col, row) {\r\n        if (this.outOfBound(col, row)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        return this.array[row][col];\r\n    }\r\n    set(col, row, value) {\r\n        if (this.outOfBound(col, row)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        this.array[row][col] = value;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    raw() {\r\n        return this.array;\r\n    }\r\n    resize(newSize) {\r\n        if (this.height() < newSize.height && isFinite(newSize.height)) {\r\n            this.addRows(this.height(), newSize.height - this.height());\r\n        }\r\n        if (this.height() > newSize.height) {\r\n            throw 'Resizing to smaller array';\r\n        }\r\n        if (this.width() < newSize.width && isFinite(newSize.width)) {\r\n            this.addColumns(this.width(), newSize.width - this.width());\r\n        }\r\n        if (this.width() > newSize.width) {\r\n            throw 'Resizing to smaller array';\r\n        }\r\n    }\r\n    outOfBound(col, row) {\r\n        return col < 0 || row < 0 || row > this.size.height - 1 || col > this.size.width - 1;\r\n    }\r\n}\r\nexport class ErroredArray {\r\n    constructor(error, size) {\r\n        this.error = error;\r\n        this.size = size;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    get(col, row) {\r\n        return this.error;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    simpleRangeValue() {\r\n        return this.error;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Represents vertex bound to range\r\n */\r\nexport class RangeVertex {\r\n    constructor(range) {\r\n        this.range = range;\r\n        this.functionCache = new Map();\r\n        this.criterionFunctionCache = new Map();\r\n        this.dependentCacheRanges = new Set();\r\n        this.bruteForce = false;\r\n    }\r\n    get start() {\r\n        return this.range.start;\r\n    }\r\n    get end() {\r\n        return this.range.end;\r\n    }\r\n    get sheet() {\r\n        return this.range.start.sheet;\r\n    }\r\n    /**\r\n     * Returns cached value stored for given function\r\n     *\r\n     * @param functionName - name of the function\r\n     */\r\n    getFunctionValue(functionName) {\r\n        return this.functionCache.get(functionName);\r\n    }\r\n    /**\r\n     * Stores cached value for given function\r\n     *\r\n     * @param functionName - name of the function\r\n     * @param value - cached value\r\n     */\r\n    setFunctionValue(functionName, value) {\r\n        this.functionCache.set(functionName, value);\r\n    }\r\n    /**\r\n     * Returns cached value for given cache key and criterion text representation\r\n     *\r\n     * @param cacheKey - key to retrieve from the cache\r\n     * @param criterionString - criterion text (ex. '<=5')\r\n     */\r\n    getCriterionFunctionValue(cacheKey, criterionString) {\r\n        var _a;\r\n        return (_a = this.getCriterionFunctionValues(cacheKey).get(criterionString)) === null || _a === void 0 ? void 0 : _a[0];\r\n    }\r\n    /**\r\n     * Returns all cached values stored for given criterion function\r\n     *\r\n     * @param cacheKey - key to retrieve from the cache\r\n     */\r\n    getCriterionFunctionValues(cacheKey) {\r\n        var _a;\r\n        return (_a = this.criterionFunctionCache.get(cacheKey)) !== null && _a !== void 0 ? _a : new Map();\r\n    }\r\n    /**\r\n     * Stores all values for given criterion function\r\n     *\r\n     * @param cacheKey - key to store in the cache\r\n     * @param values - map with values\r\n     */\r\n    setCriterionFunctionValues(cacheKey, values) {\r\n        this.criterionFunctionCache.set(cacheKey, values);\r\n    }\r\n    addDependentCacheRange(dependentRange) {\r\n        if (dependentRange !== this) {\r\n            this.dependentCacheRanges.add(dependentRange);\r\n        }\r\n    }\r\n    /**\r\n     * Clears function cache\r\n     */\r\n    clearCache() {\r\n        this.functionCache.clear();\r\n        this.criterionFunctionCache.clear();\r\n        this.dependentCacheRanges.forEach(range => range.criterionFunctionCache.clear());\r\n        this.dependentCacheRanges.clear();\r\n    }\r\n    /**\r\n     * Returns start of the range (it's top-left corner)\r\n     */\r\n    getStart() {\r\n        return this.start;\r\n    }\r\n    /**\r\n     * Returns end of the range (it's bottom-right corner)\r\n     */\r\n    getEnd() {\r\n        return this.end;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nvar NodeVisitStatus;\r\n(function (NodeVisitStatus) {\r\n    NodeVisitStatus[NodeVisitStatus[\"ON_STACK\"] = 0] = \"ON_STACK\";\r\n    NodeVisitStatus[NodeVisitStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\r\n    NodeVisitStatus[NodeVisitStatus[\"POPPED\"] = 2] = \"POPPED\";\r\n})(NodeVisitStatus || (NodeVisitStatus = {}));\r\n/**\r\n * Provides graph directed structure\r\n *\r\n * Invariants:\r\n * - this.edges(node) exists if and only if node is in the graph\r\n * - this.specialNodes* are always subset of this.nodes\r\n * - this.edges(node) is subset of this.nodes (i.e. it does not contain nodes not present in graph) -- this invariant DOES NOT HOLD right now\r\n */\r\nexport class Graph {\r\n    constructor(dependencyQuery) {\r\n        this.dependencyQuery = dependencyQuery;\r\n        /** Set with nodes in graph. */\r\n        this.nodes = new Set();\r\n        this.specialNodes = new Set();\r\n        this.specialNodesStructuralChanges = new Set();\r\n        this.specialNodesRecentlyChanged = new Set();\r\n        this.infiniteRanges = new Set();\r\n        /** Nodes adjacency mapping. */\r\n        this.edges = new Map();\r\n    }\r\n    /**\r\n     * Adds node to a graph\r\n     *\r\n     * @param node - a node to be added\r\n     */\r\n    addNode(node) {\r\n        this.nodes.add(node);\r\n        if (!this.edges.has(node)) {\r\n            this.edges.set(node, new Set());\r\n        }\r\n    }\r\n    /**\r\n     * Adds edge between nodes.\r\n     *\r\n     * The nodes had to be added to the graph before, or the error will be raised\r\n     *\r\n     * @param fromNode - node from which edge is outcoming\r\n     * @param toNode - node to which edge is incoming\r\n     */\r\n    addEdge(fromNode, toNode) {\r\n        if (!this.nodes.has(fromNode)) {\r\n            throw new Error(`Unknown node ${fromNode}`);\r\n        }\r\n        if (!this.nodes.has(toNode)) {\r\n            throw new Error(`Unknown node ${toNode}`);\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        this.edges.get(fromNode).add(toNode);\r\n    }\r\n    removeEdge(fromNode, toNode) {\r\n        if (this.existsEdge(fromNode, toNode)) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            this.edges.get(fromNode).delete(toNode);\r\n        }\r\n        else {\r\n            throw new Error('Edge does not exist');\r\n        }\r\n    }\r\n    softRemoveEdge(fromNode, toNode) {\r\n        var _a;\r\n        (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.delete(toNode);\r\n    }\r\n    removeIncomingEdges(toNode) {\r\n        this.edges.forEach((nodeEdges) => {\r\n            nodeEdges.delete(toNode);\r\n        });\r\n    }\r\n    /**\r\n     * Returns nodes adjacent to given node\r\n     *\r\n     * @param node - node to which adjacent nodes we want to retrieve\r\n     */\r\n    adjacentNodes(node) {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        return this.edges.get(node);\r\n    }\r\n    adjacentNodesCount(node) {\r\n        return this.adjacentNodes(node).size;\r\n    }\r\n    /**\r\n     * Checks whether a node is present in graph\r\n     *\r\n     * @param node - node to check\r\n     */\r\n    hasNode(node) {\r\n        return this.nodes.has(node);\r\n    }\r\n    /**\r\n     * Returns number of nodes in graph\r\n     */\r\n    nodesCount() {\r\n        return this.nodes.size;\r\n    }\r\n    /**\r\n     * Returns number of edges in graph\r\n     */\r\n    edgesCount() {\r\n        let result = 0;\r\n        this.edges.forEach((edgesForNode) => (result += edgesForNode.size));\r\n        return result;\r\n    }\r\n    removeNode(node) {\r\n        for (const adjacentNode of this.adjacentNodes(node).values()) {\r\n            this.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n        }\r\n        this.edges.delete(node);\r\n        this.nodes.delete(node);\r\n        this.specialNodes.delete(node);\r\n        this.specialNodesRecentlyChanged.delete(node);\r\n        this.specialNodesStructuralChanges.delete(node);\r\n        this.infiniteRanges.delete(node);\r\n        return this.removeDependencies(node);\r\n    }\r\n    markNodeAsSpecial(node) {\r\n        this.specialNodes.add(node);\r\n    }\r\n    markNodeAsSpecialRecentlyChanged(node) {\r\n        if (this.nodes.has(node)) {\r\n            this.specialNodesRecentlyChanged.add(node);\r\n        }\r\n    }\r\n    markNodeAsChangingWithStructure(node) {\r\n        this.specialNodesStructuralChanges.add(node);\r\n    }\r\n    clearSpecialNodesRecentlyChanged() {\r\n        this.specialNodesRecentlyChanged.clear();\r\n    }\r\n    markNodeAsInfiniteRange(node) {\r\n        this.infiniteRanges.add(node);\r\n    }\r\n    /**\r\n     * Checks whether exists edge between nodes\r\n     *\r\n     * @param fromNode - node from which edge is outcoming\r\n     * @param toNode - node to which edge is incoming\r\n     */\r\n    existsEdge(fromNode, toNode) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.has(toNode)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    /*\r\n     * return a topological sort order, but separates vertices that exist in some cycle\r\n     */\r\n    topSortWithScc() {\r\n        return this.getTopSortedWithSccSubgraphFrom(Array.from(this.nodes), () => true, () => {\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * an iterative implementation of Tarjan's algorithm for finding strongly connected compontents\r\n     * returns vertices in order of topological sort, but vertices that are on cycles are kept separate\r\n     *\r\n     * @param modifiedNodes - seed for computation. During engine init run, all of the vertices of grap. In recomputation run, changed vertices.\r\n     * @param operatingFunction - recomputes value of a node, and returns whether a change occured\r\n     * @param onCycle - action to be performed when node is on cycle\r\n     */\r\n    getTopSortedWithSccSubgraphFrom(modifiedNodes, operatingFunction, onCycle) {\r\n        const entranceTime = new Map();\r\n        const low = new Map();\r\n        const parent = new Map();\r\n        const inSCC = new Set();\r\n        // node status life cycle:\r\n        // undefined -> ON_STACK -> PROCESSED -> POPPED\r\n        const nodeStatus = new Map();\r\n        const order = [];\r\n        let time = 0;\r\n        const sccNonSingletons = new Set();\r\n        modifiedNodes.reverse();\r\n        modifiedNodes.forEach((v) => {\r\n            if (nodeStatus.get(v) !== undefined) {\r\n                return;\r\n            }\r\n            const DFSstack = [v];\r\n            const SCCstack = [];\r\n            nodeStatus.set(v, NodeVisitStatus.ON_STACK);\r\n            while (DFSstack.length > 0) {\r\n                const u = DFSstack[DFSstack.length - 1];\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                switch (nodeStatus.get(u)) {\r\n                    case NodeVisitStatus.ON_STACK: {\r\n                        entranceTime.set(u, time);\r\n                        low.set(u, time);\r\n                        SCCstack.push(u);\r\n                        time++;\r\n                        this.adjacentNodes(u).forEach((t) => {\r\n                            if (entranceTime.get(t) === undefined) {\r\n                                DFSstack.push(t);\r\n                                parent.set(t, u);\r\n                                nodeStatus.set(t, NodeVisitStatus.ON_STACK);\r\n                            }\r\n                        });\r\n                        nodeStatus.set(u, NodeVisitStatus.PROCESSED);\r\n                        break;\r\n                    }\r\n                    case NodeVisitStatus.PROCESSED: { // leaving this DFS subtree\r\n                        let uLow;\r\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                        uLow = entranceTime.get(u);\r\n                        this.adjacentNodes(u).forEach((t) => {\r\n                            if (!inSCC.has(t)) {\r\n                                if (parent.get(t) === u) {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    uLow = Math.min(uLow, low.get(t));\r\n                                }\r\n                                else {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    uLow = Math.min(uLow, entranceTime.get(t));\r\n                                }\r\n                            }\r\n                        });\r\n                        low.set(u, uLow);\r\n                        if (uLow === entranceTime.get(u)) {\r\n                            const currentSCC = [];\r\n                            do {\r\n                                currentSCC.push(SCCstack[SCCstack.length - 1]);\r\n                                SCCstack.pop();\r\n                            } while (currentSCC[currentSCC.length - 1] !== u);\r\n                            currentSCC.forEach((t) => {\r\n                                inSCC.add(t);\r\n                            });\r\n                            order.push(...currentSCC);\r\n                            if (currentSCC.length > 1) {\r\n                                currentSCC.forEach((t) => {\r\n                                    sccNonSingletons.add(t);\r\n                                });\r\n                            }\r\n                        }\r\n                        DFSstack.pop();\r\n                        nodeStatus.set(u, NodeVisitStatus.POPPED);\r\n                        break;\r\n                    }\r\n                    case NodeVisitStatus.POPPED: { // it's a 'shadow' copy, we already processed this vertex and can ignore it\r\n                        DFSstack.pop();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const shouldBeUpdatedMapping = new Set(modifiedNodes);\r\n        const sorted = [];\r\n        const cycled = [];\r\n        order.reverse();\r\n        order.forEach((t) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            if (sccNonSingletons.has(t) || this.adjacentNodes(t).has(t)) {\r\n                cycled.push(t);\r\n                onCycle(t);\r\n                this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\r\n            }\r\n            else {\r\n                sorted.push(t);\r\n                if (shouldBeUpdatedMapping.has(t) && operatingFunction(t)) {\r\n                    this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\r\n                }\r\n            }\r\n        });\r\n        return { sorted, cycled };\r\n    }\r\n    getDependencies(vertex) {\r\n        const result = [];\r\n        this.edges.forEach((adjacentNodes, sourceNode) => {\r\n            if (adjacentNodes.has(vertex)) {\r\n                result.push(sourceNode);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    removeDependencies(node) {\r\n        const dependencies = this.dependencyQuery(node);\r\n        for (const dependency of dependencies) {\r\n            this.softRemoveEdge(dependency, node);\r\n        }\r\n        return dependencies;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\r\nimport { simpleCellAddress } from '../Cell';\r\n/**\r\n * Mapping from address ranges to range vertices\r\n */\r\nexport class RangeMapping {\r\n    constructor() {\r\n        /** Map in which actual data is stored. */\r\n        this.rangeMapping = new Map();\r\n    }\r\n    getMappingSize(sheet) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0;\r\n    }\r\n    /**\r\n     * Saves range vertex\r\n     *\r\n     * @param vertex - vertex to save\r\n     */\r\n    setRange(vertex) {\r\n        let sheetMap = this.rangeMapping.get(vertex.getStart().sheet);\r\n        if (sheetMap === undefined) {\r\n            sheetMap = new Map();\r\n            this.rangeMapping.set(vertex.getStart().sheet, sheetMap);\r\n        }\r\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\r\n        sheetMap.set(key, vertex);\r\n    }\r\n    removeRange(vertex) {\r\n        const sheet = vertex.getStart().sheet;\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (sheetMap === undefined) {\r\n            return;\r\n        }\r\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\r\n        sheetMap.delete(key);\r\n        if (sheetMap.size === 0) {\r\n            this.rangeMapping.delete(sheet);\r\n        }\r\n    }\r\n    /**\r\n     * Returns associated vertex for given range\r\n     *\r\n     * @param start - top-left corner of the range\r\n     * @param end - bottom-right corner of the range\r\n     */\r\n    getRange(start, end) {\r\n        const sheetMap = this.rangeMapping.get(start.sheet);\r\n        const key = keyFromAddresses(start, end);\r\n        return sheetMap === null || sheetMap === void 0 ? void 0 : sheetMap.get(key);\r\n    }\r\n    fetchRange(start, end) {\r\n        const maybeRange = this.getRange(start, end);\r\n        if (!maybeRange) {\r\n            throw Error('Range does not exist');\r\n        }\r\n        return maybeRange;\r\n    }\r\n    truncateRanges(span, coordinate) {\r\n        const verticesToRemove = Array();\r\n        const updated = Array();\r\n        const verticesWithChangedSize = Array();\r\n        const sheet = span.sheet;\r\n        for (const [key, vertex] of this.entriesFromSheet(span.sheet)) {\r\n            const range = vertex.range;\r\n            if (span.start <= coordinate(vertex.range.end)) {\r\n                range.removeSpan(span);\r\n                if (range.shouldBeRemoved()) {\r\n                    this.removeByKey(sheet, key);\r\n                    verticesToRemove.push(vertex);\r\n                }\r\n                else {\r\n                    updated.push([key, vertex]);\r\n                }\r\n                verticesWithChangedSize.push(vertex);\r\n            }\r\n        }\r\n        const verticesToMerge = [];\r\n        updated.sort((left, right) => compareBy(left[1], right[1], coordinate));\r\n        for (const [oldKey, vertex] of updated) {\r\n            const newKey = keyFromRange(vertex.range);\r\n            if (newKey === oldKey) {\r\n                continue;\r\n            }\r\n            const existingVertex = this.getByKey(sheet, newKey);\r\n            this.removeByKey(sheet, oldKey);\r\n            if (existingVertex !== undefined && vertex != existingVertex) {\r\n                verticesToMerge.push([existingVertex, vertex]);\r\n            }\r\n            else {\r\n                this.setRange(vertex);\r\n            }\r\n        }\r\n        return {\r\n            verticesToRemove,\r\n            verticesToMerge,\r\n            verticesWithChangedSize\r\n        };\r\n    }\r\n    moveAllRangesInSheetAfterRowByRows(sheet, row, numberOfRows) {\r\n        return this.updateVerticesFromSheet(sheet, (key, vertex) => {\r\n            if (row <= vertex.start.row) {\r\n                vertex.range.shiftByRows(numberOfRows);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else if (row > vertex.start.row && row <= vertex.end.row) {\r\n                vertex.range.expandByRows(numberOfRows);\r\n                return {\r\n                    changedSize: true,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    moveAllRangesInSheetAfterColumnByColumns(sheet, column, numberOfColumns) {\r\n        return this.updateVerticesFromSheet(sheet, (key, vertex) => {\r\n            if (column <= vertex.start.col) {\r\n                vertex.range.shiftByColumns(numberOfColumns);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else if (column > vertex.start.col && column <= vertex.end.col) {\r\n                vertex.range.expandByColumns(numberOfColumns);\r\n                return {\r\n                    changedSize: true,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet) {\r\n        this.updateVerticesFromSheet(sourceRange.sheet, (key, vertex) => {\r\n            if (sourceRange.containsRange(vertex.range)) {\r\n                vertex.range.shiftByColumns(toRight);\r\n                vertex.range.shiftByRows(toBottom);\r\n                vertex.range.moveToSheet(toSheet);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    removeRangesInSheet(sheet) {\r\n        if (this.rangeMapping.has(sheet)) {\r\n            const ranges = this.rangeMapping.get(sheet).values();\r\n            this.rangeMapping.delete(sheet);\r\n            return ranges;\r\n        }\r\n        return [][Symbol.iterator]();\r\n    }\r\n    *rangesInSheet(sheet) {\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (!sheetMap) {\r\n            return;\r\n        }\r\n        yield* sheetMap.values();\r\n    }\r\n    *rangeVerticesContainedInRange(sourceRange) {\r\n        for (const rangeVertex of this.rangesInSheet(sourceRange.sheet)) {\r\n            if (sourceRange.containsRange(rangeVertex.range)) {\r\n                yield rangeVertex;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Finds smaller range does have own vertex.\r\n     *\r\n     * @param range\r\n     */\r\n    findSmallerRange(range) {\r\n        if (range.height() > 1 && Number.isFinite(range.height())) {\r\n            const valuesRangeEndRowLess = simpleCellAddress(range.end.sheet, range.end.col, range.end.row - 1);\r\n            const rowLessVertex = this.getRange(range.start, valuesRangeEndRowLess);\r\n            if (rowLessVertex !== undefined) {\r\n                const restRange = new AbsoluteCellRange(simpleCellAddress(range.start.sheet, range.start.col, range.end.row), range.end);\r\n                return {\r\n                    smallerRangeVertex: rowLessVertex,\r\n                    restRange,\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            restRange: range,\r\n        };\r\n    }\r\n    *entriesFromSheet(sheet) {\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (!sheetMap) {\r\n            return;\r\n        }\r\n        yield* sheetMap.entries();\r\n    }\r\n    removeByKey(sheet, key) {\r\n        this.rangeMapping.get(sheet).delete(key);\r\n    }\r\n    getByKey(sheet, key) {\r\n        var _a;\r\n        return (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.get(key);\r\n    }\r\n    updateVerticesFromSheet(sheet, fn) {\r\n        const updated = Array();\r\n        for (const [key, vertex] of this.entriesFromSheet(sheet)) {\r\n            const result = fn(key, vertex);\r\n            if (result !== undefined) {\r\n                this.removeByKey(sheet, key);\r\n                updated.push(result);\r\n            }\r\n        }\r\n        updated.forEach(entry => {\r\n            this.setRange(entry.vertex);\r\n        });\r\n        return {\r\n            verticesWithChangedSize: updated\r\n                .filter(entry => entry.changedSize)\r\n                .map(entry => entry.vertex)\r\n        };\r\n    }\r\n}\r\nfunction keyFromAddresses(start, end) {\r\n    return `${start.col},${start.row},${end.col},${end.row}`;\r\n}\r\nfunction keyFromRange(range) {\r\n    return keyFromAddresses(range.start, range.end);\r\n}\r\nconst compareBy = (left, right, coordinate) => {\r\n    const leftStart = coordinate(left.range.start);\r\n    const rightStart = coordinate(left.range.start);\r\n    if (leftStart === rightStart) {\r\n        const leftEnd = coordinate(left.range.end);\r\n        const rightEnd = coordinate(right.range.end);\r\n        return leftEnd - rightEnd;\r\n    }\r\n    else {\r\n        return leftStart - rightStart;\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { NoSheetWithIdError, NoSheetWithNameError, SheetNameAlreadyTakenError } from '../errors';\r\nimport { UIElement } from '../i18n';\r\nfunction canonicalize(sheetDisplayName) {\r\n    return sheetDisplayName.toLowerCase();\r\n}\r\nclass Sheet {\r\n    constructor(id, displayName) {\r\n        this.id = id;\r\n        this.displayName = displayName;\r\n    }\r\n    get canonicalName() {\r\n        return canonicalize(this.displayName);\r\n    }\r\n}\r\nexport class SheetMapping {\r\n    constructor(languages) {\r\n        this.languages = languages;\r\n        this.mappingFromCanonicalName = new Map();\r\n        this.mappingFromId = new Map();\r\n        this.lastSheetId = -1;\r\n        this.fetch = (sheetName) => {\r\n            const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\r\n            if (sheet === undefined) {\r\n                throw new NoSheetWithNameError(sheetName);\r\n            }\r\n            return sheet.id;\r\n        };\r\n        this.get = (sheetName) => {\r\n            var _a;\r\n            return (_a = this.mappingFromCanonicalName.get(canonicalize(sheetName))) === null || _a === void 0 ? void 0 : _a.id;\r\n        };\r\n        this.fetchDisplayName = (sheetId) => {\r\n            return this.fetchSheetById(sheetId).displayName;\r\n        };\r\n        this.sheetNamePrefix = languages.getUITranslation(UIElement.NEW_SHEET_PREFIX);\r\n    }\r\n    addSheet(newSheetDisplayName = `${this.sheetNamePrefix}${this.lastSheetId + 2}`) {\r\n        const newSheetCanonicalName = canonicalize(newSheetDisplayName);\r\n        if (this.mappingFromCanonicalName.has(newSheetCanonicalName)) {\r\n            throw new SheetNameAlreadyTakenError(newSheetDisplayName);\r\n        }\r\n        this.lastSheetId++;\r\n        const sheet = new Sheet(this.lastSheetId, newSheetDisplayName);\r\n        this.store(sheet);\r\n        return sheet.id;\r\n    }\r\n    removeSheet(sheetId) {\r\n        const sheet = this.fetchSheetById(sheetId);\r\n        if (sheetId == this.lastSheetId) {\r\n            --this.lastSheetId;\r\n        }\r\n        this.mappingFromCanonicalName.delete(sheet.canonicalName);\r\n        this.mappingFromId.delete(sheet.id);\r\n    }\r\n    getDisplayName(sheetId) {\r\n        var _a;\r\n        return (_a = this.mappingFromId.get(sheetId)) === null || _a === void 0 ? void 0 : _a.displayName;\r\n    }\r\n    *displayNames() {\r\n        for (const sheet of this.mappingFromCanonicalName.values()) {\r\n            yield sheet.displayName;\r\n        }\r\n    }\r\n    numberOfSheets() {\r\n        return this.mappingFromCanonicalName.size;\r\n    }\r\n    hasSheetWithId(sheetId) {\r\n        return this.mappingFromId.has(sheetId);\r\n    }\r\n    hasSheetWithName(sheetName) {\r\n        return this.mappingFromCanonicalName.has(canonicalize(sheetName));\r\n    }\r\n    renameSheet(sheetId, newDisplayName) {\r\n        const sheet = this.fetchSheetById(sheetId);\r\n        const currentDisplayName = sheet.displayName;\r\n        if (currentDisplayName === newDisplayName) {\r\n            return undefined;\r\n        }\r\n        const sheetWithThisCanonicalName = this.mappingFromCanonicalName.get(canonicalize(newDisplayName));\r\n        if (sheetWithThisCanonicalName !== undefined && sheetWithThisCanonicalName.id !== sheet.id) {\r\n            throw new SheetNameAlreadyTakenError(newDisplayName);\r\n        }\r\n        const currentCanonicalName = sheet.canonicalName;\r\n        this.mappingFromCanonicalName.delete(currentCanonicalName);\r\n        sheet.displayName = newDisplayName;\r\n        this.store(sheet);\r\n        return currentDisplayName;\r\n    }\r\n    sheetNames() {\r\n        return Array.from(this.mappingFromId.values()).map((s) => s.displayName);\r\n    }\r\n    store(sheet) {\r\n        this.mappingFromId.set(sheet.id, sheet);\r\n        this.mappingFromCanonicalName.set(sheet.canonicalName, sheet);\r\n    }\r\n    fetchSheetById(sheetId) {\r\n        const sheet = this.mappingFromId.get(sheetId);\r\n        if (sheet === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheet;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { buildTranslationPackage, TranslationPackage } from './TranslationPackage';\r\nexport { TranslationPackage, buildTranslationPackage };\r\nexport var UIElement;\r\n(function (UIElement) {\r\n    UIElement[\"NEW_SHEET_PREFIX\"] = \"NEW_SHEET_PREFIX\";\r\n})(UIElement || (UIElement = {}));\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { MissingTranslationError, ProtectedFunctionTranslationError } from '../errors';\r\nimport { UIElement } from './index';\r\nexport class TranslationPackage {\r\n    constructor(functions, errors, ui) {\r\n        this.functions = functions;\r\n        this.errors = errors;\r\n        this.ui = ui;\r\n        this._protectedTranslations = {\r\n            'VERSION': 'VERSION'\r\n        };\r\n        this.checkUI();\r\n        this.checkErrors();\r\n        this.checkFunctionTranslations(this.functions);\r\n        Object.assign(this.functions, this._protectedTranslations);\r\n    }\r\n    extendFunctions(additionalFunctionTranslations) {\r\n        this.checkFunctionTranslations(additionalFunctionTranslations);\r\n        Object.assign(this.functions, additionalFunctionTranslations);\r\n    }\r\n    buildFunctionMapping() {\r\n        return Object.keys(this.functions).reduce((ret, key) => {\r\n            ret[this.functions[key]] = key;\r\n            return ret;\r\n        }, {});\r\n    }\r\n    buildErrorMapping() {\r\n        return Object.keys(this.errors).reduce((ret, key) => {\r\n            ret[this.errors[key]] = key;\r\n            return ret;\r\n        }, {});\r\n    }\r\n    isFunctionTranslated(key) {\r\n        return this.functions[key] !== undefined;\r\n    }\r\n    getFunctionTranslations(functionIds) {\r\n        const translations = [];\r\n        for (const functionId of functionIds) {\r\n            if (this.isFunctionTranslated(functionId)) {\r\n                translations.push(this.functions[functionId]);\r\n            }\r\n        }\r\n        return translations;\r\n    }\r\n    getFunctionTranslation(key) {\r\n        const val = this.functions[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`functions.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    getMaybeFunctionTranslation(key) {\r\n        return this.functions[key];\r\n    }\r\n    getErrorTranslation(key) {\r\n        if (key === ErrorType.LIC) {\r\n            return `#${ErrorType.LIC}!`;\r\n        }\r\n        const val = this.errors[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`errors.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    getUITranslation(key) {\r\n        const val = this.ui[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`ui.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    checkUI() {\r\n        for (const key of Object.values(UIElement)) {\r\n            if (!(key in this.ui)) {\r\n                throw new MissingTranslationError(`ui.${key}`);\r\n            }\r\n        }\r\n    }\r\n    checkErrors() {\r\n        for (const key of Object.values(ErrorType)) {\r\n            if (!(key in this.errors) && (key !== ErrorType.LIC)) {\r\n                throw new MissingTranslationError(`errors.${key}`);\r\n            }\r\n        }\r\n    }\r\n    checkFunctionTranslations(functions) {\r\n        const functionNames = new Set(Object.getOwnPropertyNames(functions));\r\n        for (const protectedTranslation of Object.getOwnPropertyNames(this._protectedTranslations)) {\r\n            if (functionNames.has(protectedTranslation)) {\r\n                throw new ProtectedFunctionTranslationError(protectedTranslation);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function buildTranslationPackage(rawTranslationPackage) {\r\n    return new TranslationPackage(Object.assign({}, rawTranslationPackage.functions), Object.assign({}, rawTranslationPackage.errors), Object.assign({}, rawTranslationPackage.ui));\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue } from '../interpreter/InterpreterValue';\r\n/**\r\n * Represents singleton vertex bound to all empty cells\r\n */\r\nexport class EmptyCellVertex {\r\n    constructor(address //might be outdated!\r\n    ) {\r\n        this.address = address;\r\n    }\r\n    /**\r\n     * Retrieves cell value bound to that singleton\r\n     */\r\n    getCellValue() {\r\n        return EmptyValue;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Represents vertex which keeps static cell value\r\n */\r\nexport class ValueCellVertex {\r\n    /** Static cell value. */\r\n    constructor(parsedValue, rawValue) {\r\n        this.parsedValue = parsedValue;\r\n        this.rawValue = rawValue;\r\n    }\r\n    getValues() {\r\n        return { parsedValue: this.parsedValue, rawValue: this.rawValue };\r\n    }\r\n    setValues(values) {\r\n        this.parsedValue = values.parsedValue;\r\n        this.rawValue = values.rawValue;\r\n    }\r\n    /**\r\n     * Returns cell value stored in vertex\r\n     */\r\n    getCellValue() {\r\n        return this.parsedValue;\r\n    }\r\n    setCellValue(_cellValue) {\r\n        throw 'SetCellValue is deprecated for ValueCellVertex';\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../Cell';\r\nexport class ParsingErrorVertex {\r\n    constructor(errors, rawInput) {\r\n        this.errors = errors;\r\n        this.rawInput = rawInput;\r\n    }\r\n    getCellValue() {\r\n        return CellError.parsingError();\r\n    }\r\n    getFormula() {\r\n        return this.rawInput;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../../Cell';\r\n/**\r\n * Mapping from cell addresses to vertices\r\n *\r\n * Uses Map to store addresses, having minimal memory usage for sparse sheets but not necessarily constant set/lookup.\r\n */\r\nexport class SparseStrategy {\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        /**\r\n         * Map of Maps in which actual data is stored.\r\n         *\r\n         * Key of map in first level is column number.\r\n         * Key of map in second level is row number.\r\n         */\r\n        this.mapping = new Map();\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        var _a;\r\n        return (_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.get(address.row);\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        this.width = Math.max(this.width, address.col + 1);\r\n        this.height = Math.max(this.height, address.row + 1);\r\n        let colMapping = this.mapping.get(address.col);\r\n        if (!colMapping) {\r\n            colMapping = new Map();\r\n            this.mapping.set(address.col, colMapping);\r\n        }\r\n        colMapping.set(address.row, newVertex);\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        var _a;\r\n        return !!((_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.get(address.row));\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    removeCell(address) {\r\n        var _a;\r\n        (_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.delete(address.row);\r\n    }\r\n    addRows(row, numberOfRows) {\r\n        this.mapping.forEach((rowMapping) => {\r\n            const tmpMapping = new Map();\r\n            rowMapping.forEach((vertex, rowNumber) => {\r\n                if (rowNumber >= row) {\r\n                    tmpMapping.set(rowNumber + numberOfRows, vertex);\r\n                    rowMapping.delete(rowNumber);\r\n                }\r\n            });\r\n            tmpMapping.forEach((vertex, rowNumber) => {\r\n                rowMapping.set(rowNumber, vertex);\r\n            });\r\n        });\r\n        this.height += numberOfRows;\r\n    }\r\n    addColumns(column, numberOfColumns) {\r\n        const tmpMapping = new Map();\r\n        this.mapping.forEach((rowMapping, colNumber) => {\r\n            if (colNumber >= column) {\r\n                tmpMapping.set(colNumber + numberOfColumns, rowMapping);\r\n                this.mapping.delete(colNumber);\r\n            }\r\n        });\r\n        tmpMapping.forEach((rowMapping, colNumber) => {\r\n            this.mapping.set(colNumber, rowMapping);\r\n        });\r\n        this.width += numberOfColumns;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.mapping.forEach((rowMapping) => {\r\n            const tmpMapping = new Map();\r\n            rowMapping.forEach((vertex, rowNumber) => {\r\n                if (rowNumber >= removedRows.rowStart) {\r\n                    rowMapping.delete(rowNumber);\r\n                    if (rowNumber > removedRows.rowEnd) {\r\n                        tmpMapping.set(rowNumber - removedRows.numberOfRows, vertex);\r\n                    }\r\n                }\r\n            });\r\n            tmpMapping.forEach((vertex, rowNumber) => {\r\n                rowMapping.set(rowNumber, vertex);\r\n            });\r\n        });\r\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\r\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\r\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        const tmpMapping = new Map();\r\n        this.mapping.forEach((rowMapping, colNumber) => {\r\n            if (colNumber >= removedColumns.columnStart) {\r\n                this.mapping.delete(colNumber);\r\n                if (colNumber > removedColumns.columnEnd) {\r\n                    tmpMapping.set(colNumber - removedColumns.numberOfColumns, rowMapping);\r\n                }\r\n            }\r\n        });\r\n        tmpMapping.forEach((rowMapping, colNumber) => {\r\n            this.mapping.set(colNumber, rowMapping);\r\n        });\r\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\r\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\r\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\r\n    }\r\n    *getEntries(sheet) {\r\n        for (const [colNumber, col] of this.mapping) {\r\n            for (const [rowNumber, value] of col) {\r\n                yield [simpleCellAddress(sheet, colNumber, rowNumber), value];\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumn(column) {\r\n        const colMapping = this.mapping.get(column);\r\n        if (colMapping === undefined) {\r\n            return;\r\n        }\r\n        for (const [_, vertex] of colMapping) {\r\n            yield vertex;\r\n        }\r\n    }\r\n    *verticesFromRow(row) {\r\n        for (const colMapping of this.mapping.values()) {\r\n            const rowVertex = colMapping.get(row);\r\n            if (rowVertex !== undefined) {\r\n                yield rowVertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        for (const column of columnsSpan.columns()) {\r\n            const colMapping = this.mapping.get(column);\r\n            if (colMapping === undefined) {\r\n                continue;\r\n            }\r\n            for (const [_, vertex] of colMapping) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        for (const colMapping of this.mapping.values()) {\r\n            for (const row of rowsSpan.rows()) {\r\n                const rowVertex = colMapping.get(row);\r\n                if (rowVertex !== undefined) {\r\n                    yield rowVertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        for (const [col, colMapping] of this.mapping.entries()) {\r\n            for (const row of rowsSpan.rows()) {\r\n                const rowVertex = colMapping.get(row);\r\n                if (rowVertex !== undefined) {\r\n                    yield [simpleCellAddress(rowsSpan.sheet, col, row), rowVertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        for (const col of columnsSpan.columns()) {\r\n            const colMapping = this.mapping.get(col);\r\n            if (colMapping !== undefined) {\r\n                for (const [row, vertex] of colMapping.entries()) {\r\n                    yield [simpleCellAddress(columnsSpan.sheet, col, row), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *vertices() {\r\n        for (const [_, col] of this.mapping) {\r\n            for (const [_, value] of col) {\r\n                if (value !== undefined) {\r\n                    yield value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../../Cell';\r\n/**\r\n * Mapping from cell addresses to vertices\r\n *\r\n * Uses Array to store addresses, having minimal memory usage for dense sheets and constant set/lookup.\r\n */\r\nexport class DenseStrategy {\r\n    /**\r\n     * @param width - width of the stored sheet\r\n     * @param height - height of the stored sheet\r\n     */\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mapping = new Array(height);\r\n        for (let i = 0; i < height; i++) {\r\n            this.mapping[i] = new Array(width);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        return this.getCellVertex(address.col, address.row);\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        this.width = Math.max(this.width, address.col + 1);\r\n        this.height = Math.max(this.height, address.row + 1);\r\n        const rowMapping = this.mapping[address.row];\r\n        if (!rowMapping) {\r\n            this.mapping[address.row] = new Array(this.width);\r\n        }\r\n        this.mapping[address.row][address.col] = newVertex;\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        const row = this.mapping[address.row];\r\n        if (!row) {\r\n            return false;\r\n        }\r\n        return !!row[address.col];\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    removeCell(address) {\r\n        if (this.mapping[address.row] !== undefined) {\r\n            delete this.mapping[address.row][address.col];\r\n        }\r\n    }\r\n    addRows(row, numberOfRows) {\r\n        const newRows = [];\r\n        for (let i = 0; i < numberOfRows; i++) {\r\n            newRows.push(new Array(this.width));\r\n        }\r\n        this.mapping.splice(row, 0, ...newRows);\r\n        this.height += numberOfRows;\r\n    }\r\n    addColumns(column, numberOfColumns) {\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.mapping[i].splice(column, 0, ...new Array(numberOfColumns));\r\n        }\r\n        this.width += numberOfColumns;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.mapping.splice(removedRows.rowStart, removedRows.numberOfRows);\r\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\r\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\r\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.mapping[i].splice(removedColumns.columnStart, removedColumns.numberOfColumns);\r\n        }\r\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\r\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\r\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\r\n    }\r\n    *getEntries(sheet) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = 0; x < this.width; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumn(column) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            const vertex = this.getCellVertex(column, y);\r\n            if (vertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRow(row) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            const vertex = this.getCellVertex(x, row);\r\n            if (vertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\r\n            for (let y = 0; y < this.height; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(rowsSpan.sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(columnsSpan.sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *vertices() {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = 0; x < this.width; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getCellVertex(x, y) {\r\n        var _a;\r\n        return (_a = this.mapping[y]) === null || _a === void 0 ? void 0 : _a[x];\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class DetailedCellError {\r\n    constructor(error, value, address) {\r\n        var _a;\r\n        this.value = value;\r\n        this.address = address;\r\n        this.type = error.type;\r\n        this.message = (_a = error.message) !== null && _a !== void 0 ? _a : '';\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { configCheckIfParametersNotInConflict, configValueFromParam, configValueFromParamCheck, validateNumberToBeAtLeast, validateNumberToBeAtMost } from './ArgumentSanitization';\r\nimport { defaultParseToDateTime } from './DateTimeDefault';\r\nimport { instanceOfSimpleDate } from './DateTimeHelper';\r\nimport { AlwaysDense } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\r\nimport { ConfigValueEmpty, ExpectedValueOfTypeError } from './errors';\r\nimport { defaultStringifyDateTime, defaultStringifyDuration } from './format/format';\r\nimport { checkLicenseKeyValidity } from './helpers/licenseKeyValidator';\r\nimport { HyperFormula } from './HyperFormula';\r\nconst privatePool = new WeakMap();\r\nexport class Config {\r\n    constructor(options = {}, showDeprecatedWarns = true) {\r\n        const { accentSensitive, binarySearchThreshold, caseSensitive, caseFirst, chooseAddressMappingPolicy, currencySymbol, dateFormats, decimalSeparator, evaluateNullToZero, functionArgSeparator, functionPlugins, ignorePunctuation, leapYear1900, localeLang, language, ignoreWhiteSpace, licenseKey, matchWholeCell, arrayColumnSeparator, arrayRowSeparator, maxRows, maxColumns, nullYear, nullDate, parseDateTime, precisionEpsilon, precisionRounding, stringifyDateTime, stringifyDuration, smartRounding, timeFormats, thousandSeparator, useArrayArithmetic, useStats, undoLimit, useColumnIndex, useRegularExpressions, useWildcards, } = options;\r\n        if (showDeprecatedWarns) {\r\n            Config.warnDeprecatedOptions(options);\r\n        }\r\n        this.useArrayArithmetic = configValueFromParam(useArrayArithmetic, 'boolean', 'useArrayArithmetic');\r\n        this.accentSensitive = configValueFromParam(accentSensitive, 'boolean', 'accentSensitive');\r\n        this.caseSensitive = configValueFromParam(caseSensitive, 'boolean', 'caseSensitive');\r\n        this.caseFirst = configValueFromParam(caseFirst, ['upper', 'lower', 'false'], 'caseFirst');\r\n        this.ignorePunctuation = configValueFromParam(ignorePunctuation, 'boolean', 'ignorePunctuation');\r\n        this.chooseAddressMappingPolicy = chooseAddressMappingPolicy !== null && chooseAddressMappingPolicy !== void 0 ? chooseAddressMappingPolicy : Config.defaultConfig.chooseAddressMappingPolicy;\r\n        this.dateFormats = [...configValueFromParamCheck(dateFormats, Array.isArray, 'array', 'dateFormats')];\r\n        this.timeFormats = [...configValueFromParamCheck(timeFormats, Array.isArray, 'array', 'timeFormats')];\r\n        this.functionArgSeparator = configValueFromParam(functionArgSeparator, 'string', 'functionArgSeparator');\r\n        this.decimalSeparator = configValueFromParam(decimalSeparator, ['.', ','], 'decimalSeparator');\r\n        this.language = configValueFromParam(language, 'string', 'language');\r\n        this.ignoreWhiteSpace = configValueFromParam(ignoreWhiteSpace, ['standard', 'any'], 'ignoreWhiteSpace');\r\n        this.licenseKey = configValueFromParam(licenseKey, 'string', 'licenseKey');\r\n        this.thousandSeparator = configValueFromParam(thousandSeparator, ['', ',', ' ', '.'], 'thousandSeparator');\r\n        this.arrayColumnSeparator = configValueFromParam(arrayColumnSeparator, [',', ';'], 'arrayColumnSeparator');\r\n        this.arrayRowSeparator = configValueFromParam(arrayRowSeparator, [';', '|'], 'arrayRowSeparator');\r\n        this.localeLang = configValueFromParam(localeLang, 'string', 'localeLang');\r\n        this.functionPlugins = [...(functionPlugins !== null && functionPlugins !== void 0 ? functionPlugins : Config.defaultConfig.functionPlugins)];\r\n        this.smartRounding = configValueFromParam(smartRounding, 'boolean', 'smartRounding');\r\n        this.evaluateNullToZero = configValueFromParam(evaluateNullToZero, 'boolean', 'evaluateNullToZero');\r\n        this.nullYear = configValueFromParam(nullYear, 'number', 'nullYear');\r\n        validateNumberToBeAtLeast(this.nullYear, 'nullYear', 0);\r\n        validateNumberToBeAtMost(this.nullYear, 'nullYear', 100);\r\n        this.precisionRounding = configValueFromParam(precisionRounding, 'number', 'precisionRounding');\r\n        validateNumberToBeAtLeast(this.precisionRounding, 'precisionRounding', 0);\r\n        this.precisionEpsilon = configValueFromParam(precisionEpsilon, 'number', 'precisionEpsilon');\r\n        validateNumberToBeAtLeast(this.precisionEpsilon, 'precisionEpsilon', 0);\r\n        this.useColumnIndex = configValueFromParam(useColumnIndex, 'boolean', 'useColumnIndex');\r\n        this.useStats = configValueFromParam(useStats, 'boolean', 'useStats');\r\n        this.binarySearchThreshold = binarySearchThreshold !== null && binarySearchThreshold !== void 0 ? binarySearchThreshold : Config.defaultConfig.binarySearchThreshold;\r\n        this.parseDateTime = configValueFromParam(parseDateTime, 'function', 'parseDateTime');\r\n        this.stringifyDateTime = configValueFromParam(stringifyDateTime, 'function', 'stringifyDateTime');\r\n        this.stringifyDuration = configValueFromParam(stringifyDuration, 'function', 'stringifyDuration');\r\n        this.translationPackage = HyperFormula.getLanguage(this.language);\r\n        this.errorMapping = this.translationPackage.buildErrorMapping();\r\n        this.nullDate = configValueFromParamCheck(nullDate, instanceOfSimpleDate, 'IDate', 'nullDate');\r\n        this.leapYear1900 = configValueFromParam(leapYear1900, 'boolean', 'leapYear1900');\r\n        this.undoLimit = configValueFromParam(undoLimit, 'number', 'undoLimit');\r\n        this.useRegularExpressions = configValueFromParam(useRegularExpressions, 'boolean', 'useRegularExpressions');\r\n        this.useWildcards = configValueFromParam(useWildcards, 'boolean', 'useWildcards');\r\n        this.matchWholeCell = configValueFromParam(matchWholeCell, 'boolean', 'matchWholeCell');\r\n        validateNumberToBeAtLeast(this.undoLimit, 'undoLimit', 0);\r\n        this.maxRows = configValueFromParam(maxRows, 'number', 'maxRows');\r\n        validateNumberToBeAtLeast(this.maxRows, 'maxRows', 1);\r\n        this.maxColumns = configValueFromParam(maxColumns, 'number', 'maxColumns');\r\n        this.currencySymbol = this.setupCurrencySymbol(currencySymbol);\r\n        validateNumberToBeAtLeast(this.maxColumns, 'maxColumns', 1);\r\n        privatePool.set(this, {\r\n            licenseKeyValidityState: checkLicenseKeyValidity(this.licenseKey)\r\n        });\r\n        configCheckIfParametersNotInConflict({ value: this.decimalSeparator, name: 'decimalSeparator' }, { value: this.functionArgSeparator, name: 'functionArgSeparator' }, { value: this.thousandSeparator, name: 'thousandSeparator' });\r\n        configCheckIfParametersNotInConflict({ value: this.arrayRowSeparator, name: 'arrayRowSeparator' }, { value: this.arrayColumnSeparator, name: 'arrayColumnSeparator' });\r\n    }\r\n    setupCurrencySymbol(currencySymbol) {\r\n        const valueAfterCheck = [...configValueFromParamCheck(currencySymbol, Array.isArray, 'array', 'currencySymbol')];\r\n        valueAfterCheck.forEach((val) => {\r\n            if (typeof val !== 'string') {\r\n                throw new ExpectedValueOfTypeError('string[]', 'currencySymbol');\r\n            }\r\n            if (val === '') {\r\n                throw new ConfigValueEmpty('currencySymbol');\r\n            }\r\n        });\r\n        return valueAfterCheck;\r\n    }\r\n    /**\r\n     * Proxied property to its private counterpart. This makes the property\r\n     * as accessible as the other Config options but without ability to change the value.\r\n     *\r\n     * @internal\r\n     */\r\n    get licenseKeyValidityState() {\r\n        return privatePool.get(this).licenseKeyValidityState;\r\n    }\r\n    getConfig() {\r\n        return getFullConfigFromPartial(this);\r\n    }\r\n    mergeConfig(init) {\r\n        const mergedConfig = Object.assign({}, this.getConfig(), init);\r\n        Config.warnDeprecatedOptions(init);\r\n        return new Config(mergedConfig, false);\r\n    }\r\n    static warnDeprecatedOptions(options) {\r\n        Config.warnDeprecatedIfUsed(options.binarySearchThreshold, 'binarySearchThreshold', '1.1');\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    static warnDeprecatedIfUsed(inputValue, paramName, fromVersion, replacementName) {\r\n        if (inputValue !== undefined) {\r\n            if (replacementName === undefined) {\r\n                console.warn(`${paramName} option is deprecated since ${fromVersion}`);\r\n            }\r\n            else {\r\n                console.warn(`${paramName} option is deprecated since ${fromVersion}, please use ${replacementName}`);\r\n            }\r\n        }\r\n    }\r\n}\r\nConfig.defaultConfig = {\r\n    accentSensitive: false,\r\n    binarySearchThreshold: 20,\r\n    currencySymbol: ['$'],\r\n    caseSensitive: false,\r\n    caseFirst: 'lower',\r\n    chooseAddressMappingPolicy: new AlwaysDense(),\r\n    dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\r\n    decimalSeparator: '.',\r\n    evaluateNullToZero: false,\r\n    functionArgSeparator: ',',\r\n    functionPlugins: [],\r\n    ignorePunctuation: false,\r\n    language: 'enGB',\r\n    ignoreWhiteSpace: 'standard',\r\n    licenseKey: '',\r\n    leapYear1900: false,\r\n    localeLang: 'en',\r\n    matchWholeCell: true,\r\n    arrayColumnSeparator: ',',\r\n    arrayRowSeparator: ';',\r\n    maxRows: 40000,\r\n    maxColumns: 18278,\r\n    nullYear: 30,\r\n    nullDate: { year: 1899, month: 12, day: 30 },\r\n    parseDateTime: defaultParseToDateTime,\r\n    precisionEpsilon: 1e-13,\r\n    precisionRounding: 14,\r\n    smartRounding: true,\r\n    stringifyDateTime: defaultStringifyDateTime,\r\n    stringifyDuration: defaultStringifyDuration,\r\n    timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\r\n    thousandSeparator: '',\r\n    undoLimit: 20,\r\n    useRegularExpressions: false,\r\n    useWildcards: true,\r\n    useColumnIndex: false,\r\n    useStats: false,\r\n    useArrayArithmetic: false,\r\n};\r\nfunction getFullConfigFromPartial(partialConfig) {\r\n    var _a;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const ret = {};\r\n    for (const key in Config.defaultConfig) {\r\n        const val = (_a = partialConfig[key]) !== null && _a !== void 0 ? _a : Config.defaultConfig[key];\r\n        if (Array.isArray(val)) {\r\n            ret[key] = [...val];\r\n        }\r\n        else {\r\n            ret[key] = val;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexport function getDefaultConfig() {\r\n    return getFullConfigFromPartial({});\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { Config } from './Config';\r\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, ExpectedOneOfValuesError, ExpectedValueOfTypeError } from './errors';\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function configValueFromParam(inputValue, expectedType, paramName) {\r\n    if (typeof inputValue === 'undefined') {\r\n        return Config.defaultConfig[paramName];\r\n    }\r\n    else if (typeof expectedType === 'string') {\r\n        if (typeof inputValue === expectedType) {\r\n            return inputValue;\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n        }\r\n    }\r\n    else {\r\n        if (expectedType.includes(inputValue)) {\r\n            return inputValue;\r\n        }\r\n        else {\r\n            throw new ExpectedOneOfValuesError(expectedType.map((val) => `'${val}'`).join(' '), paramName);\r\n        }\r\n    }\r\n}\r\nexport function validateNumberToBeAtLeast(value, paramName, minimum) {\r\n    if (value < minimum) {\r\n        throw new ConfigValueTooSmallError(paramName, minimum);\r\n    }\r\n}\r\nexport function validateNumberToBeAtMost(value, paramName, maximum) {\r\n    if (value > maximum) {\r\n        throw new ConfigValueTooBigError(paramName, maximum);\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function configValueFromParamCheck(inputValue, typeCheck, expectedType, paramName) {\r\n    if (typeCheck(inputValue)) {\r\n        return inputValue;\r\n    }\r\n    else if (typeof inputValue === 'undefined') {\r\n        return Config.defaultConfig[paramName];\r\n    }\r\n    else {\r\n        throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n    }\r\n}\r\nexport function configCheckIfParametersNotInConflict(...params) {\r\n    const valuesMap = new Map();\r\n    params.forEach((param) => {\r\n        const names = valuesMap.get(param.value) || [];\r\n        names.push(param.name);\r\n        valuesMap.set(param.value, names);\r\n    });\r\n    const duplicates = [];\r\n    for (const entry of valuesMap.values()) {\r\n        if (entry.length > 1) {\r\n            duplicates.push(entry);\r\n        }\r\n    }\r\n    if (duplicates.length > 0) {\r\n        duplicates.forEach(entry => entry.sort());\r\n        const paramNames = duplicates.map(entry => `[${entry}]`).join('; ');\r\n        throw new Error(`Config initialization failed. Parameters in conflict: ${paramNames}`);\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function validateArgToType(inputValue, expectedType, paramName) {\r\n    if (typeof inputValue !== expectedType) {\r\n        throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function defaultParseToDateTime(dateTimeString, dateFormat, timeFormat) {\r\n    dateTimeString = dateTimeString.replace(/\\s\\s+/g, ' ').trim().toLowerCase();\r\n    let ampmtoken = dateTimeString.substring(dateTimeString.length - 2);\r\n    if (ampmtoken === 'am' || ampmtoken === 'pm') {\r\n        dateTimeString = dateTimeString.substring(0, dateTimeString.length - 2).trim();\r\n    }\r\n    else {\r\n        ampmtoken = dateTimeString.substring(dateTimeString.length - 1);\r\n        if (ampmtoken === 'a' || ampmtoken === 'p') {\r\n            dateTimeString = dateTimeString.substring(0, dateTimeString.length - 1).trim();\r\n        }\r\n        else {\r\n            ampmtoken = undefined;\r\n        }\r\n    }\r\n    const dateItems = dateTimeString.split(/[ /.-]/g);\r\n    if (dateItems.length >= 2 && dateItems[dateItems.length - 2].includes(':')) {\r\n        dateItems[dateItems.length - 2] = dateItems[dateItems.length - 2] + '.' + dateItems[dateItems.length - 1];\r\n        dateItems.pop();\r\n    }\r\n    const timeItems = dateItems[dateItems.length - 1].split(':');\r\n    if (ampmtoken !== undefined) {\r\n        timeItems.push(ampmtoken);\r\n    }\r\n    if (dateItems.length === 1) {\r\n        return defaultParseToTime(timeItems, timeFormat);\r\n    }\r\n    if (timeItems.length === 1) {\r\n        return defaultParseToDate(dateItems, dateFormat);\r\n    }\r\n    const parsedDate = defaultParseToDate(dateItems.slice(0, dateItems.length - 1), dateFormat);\r\n    const parsedTime = defaultParseToTime(timeItems, timeFormat);\r\n    if (parsedDate === undefined) {\r\n        return undefined;\r\n    }\r\n    else if (parsedTime === undefined) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return Object.assign(Object.assign({}, parsedDate), parsedTime);\r\n    }\r\n}\r\nexport const secondsExtendedRegexp = /^ss(\\.(s+|0+))?$/;\r\nfunction defaultParseToTime(timeItems, timeFormat) {\r\n    const precision = 1000;\r\n    if (timeFormat === undefined) {\r\n        return undefined;\r\n    }\r\n    timeFormat = timeFormat.toLowerCase();\r\n    if (timeFormat.endsWith('am/pm')) {\r\n        timeFormat = timeFormat.substring(0, timeFormat.length - 5).trim();\r\n    }\r\n    else if (timeFormat.endsWith('a/p')) {\r\n        timeFormat = timeFormat.substring(0, timeFormat.length - 3).trim();\r\n    }\r\n    const formatItems = timeFormat.split(':');\r\n    let ampm = undefined;\r\n    if (timeItems[timeItems.length - 1] === 'am' || timeItems[timeItems.length - 1] === 'a') {\r\n        ampm = false;\r\n        timeItems.pop();\r\n    }\r\n    else if (timeItems[timeItems.length - 1] === 'pm' || timeItems[timeItems.length - 1] === 'p') {\r\n        ampm = true;\r\n        timeItems.pop();\r\n    }\r\n    if (timeItems.length !== formatItems.length) {\r\n        return undefined;\r\n    }\r\n    const hourIndex = formatItems.indexOf('hh');\r\n    const minuteIndex = formatItems.indexOf('mm');\r\n    const secondIndex = formatItems.findIndex(item => secondsExtendedRegexp.test(item));\r\n    const hourString = hourIndex !== -1 ? timeItems[hourIndex] : '0';\r\n    if (!/^\\d+$/.test(hourString)) {\r\n        return undefined;\r\n    }\r\n    let hours = Number(hourString);\r\n    if (ampm !== undefined) {\r\n        if (hours < 0 || hours > 12) {\r\n            return undefined;\r\n        }\r\n        hours = hours % 12;\r\n        if (ampm) {\r\n            hours = hours + 12;\r\n        }\r\n    }\r\n    const minuteString = minuteIndex !== -1 ? timeItems[minuteIndex] : '0';\r\n    if (!/^\\d+$/.test(minuteString)) {\r\n        return undefined;\r\n    }\r\n    const minutes = Number(minuteString);\r\n    const secondString = secondIndex !== -1 ? timeItems[secondIndex] : '0';\r\n    if (!/^\\d+(\\.\\d+)?$/.test(secondString)) {\r\n        return undefined;\r\n    }\r\n    const seconds = Math.round(Number(secondString) * precision) / precision;\r\n    return { hours, minutes, seconds };\r\n}\r\nfunction defaultParseToDate(dateItems, dateFormat) {\r\n    if (dateFormat === undefined) {\r\n        return undefined;\r\n    }\r\n    const formatItems = dateFormat.toLowerCase().split(/[ /.-]/g);\r\n    if (dateItems.length !== formatItems.length) {\r\n        return undefined;\r\n    }\r\n    const monthIndex = formatItems.indexOf('mm');\r\n    const dayIndex = formatItems.indexOf('dd');\r\n    const yearIndexLong = formatItems.indexOf('yyyy');\r\n    const yearIndexShort = formatItems.indexOf('yy');\r\n    if (!(monthIndex in dateItems) || !(dayIndex in dateItems) ||\r\n        (!(yearIndexLong in dateItems) && !(yearIndexShort in dateItems))) {\r\n        return undefined;\r\n    }\r\n    if (yearIndexLong in dateItems && yearIndexShort in dateItems) {\r\n        return undefined;\r\n    }\r\n    let year;\r\n    if (yearIndexLong in dateItems) {\r\n        const yearString = dateItems[yearIndexLong];\r\n        if (/^\\d+$/.test(yearString)) {\r\n            year = Number(yearString);\r\n            if (year < 1000 || year > 9999) {\r\n                return undefined;\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        const yearString = dateItems[yearIndexShort];\r\n        if (/^\\d+$/.test(yearString)) {\r\n            year = Number(yearString);\r\n            if (year < 0 || year > 99) {\r\n                return undefined;\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    const monthString = dateItems[monthIndex];\r\n    if (!/^\\d+$/.test(monthString)) {\r\n        return undefined;\r\n    }\r\n    const month = Number(monthString);\r\n    const dayString = dateItems[dayIndex];\r\n    if (!/^\\d+$/.test(dayString)) {\r\n        return undefined;\r\n    }\r\n    const day = Number(dayString);\r\n    return { year, month, day };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { DateNumber, DateTimeNumber, TimeNumber } from './interpreter/InterpreterValue';\r\nconst numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst prefSumDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\nconst SECONDS_PER_MINUTE = 60;\r\nconst MINUTES_PER_HOUR = 60;\r\nconst HOURS_PER_DAY = 24;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function instanceOfSimpleDate(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'year' in obj && typeof obj.year === 'number' && 'month' in obj && typeof obj.month === 'number' && 'day' in obj && typeof obj.day === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function instanceOfSimpleTime(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'hours' in obj && typeof obj.hours === 'number' && 'minutes' in obj && typeof obj.minutes === 'number' && 'seconds' in obj && typeof obj.seconds === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const maxDate = { year: 9999, month: 12, day: 31 };\r\nexport class DateTimeHelper {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.minDateAbsoluteValue = this.dateToNumberFromZero(config.nullDate);\r\n        this.maxDateValue = this.dateToNumber(maxDate);\r\n        this.leapYear1900 = config.leapYear1900;\r\n        // code below fixes epochYearStart while being leapYear1900 sensitive\r\n        // if nullDate is earlier than fateful 28 Feb 1900 and 1900 is not supposed to be leap year, then we should\r\n        // add two days (this is the config default)\r\n        // otherwise only one day\r\n        if (!this.leapYear1900 && 0 <= this.dateToNumber({ year: 1900, month: 2, day: 28 })) {\r\n            this.epochYearZero = this.numberToSimpleDate(2).year;\r\n        }\r\n        else {\r\n            this.epochYearZero = this.numberToSimpleDate(1).year;\r\n        }\r\n        this.parseDateTime = config.parseDateTime;\r\n    }\r\n    getWithinBounds(dayNumber) {\r\n        return (dayNumber <= this.maxDateValue) && (dayNumber >= 0) ? dayNumber : undefined;\r\n    }\r\n    dateStringToDateNumber(dateTimeString) {\r\n        const { dateTime, dateFormat = '', timeFormat = '' } = this.parseDateTimeFromConfigFormats(dateTimeString);\r\n        if (dateTime === undefined) {\r\n            return undefined;\r\n        }\r\n        if (instanceOfSimpleTime(dateTime)) {\r\n            if (instanceOfSimpleDate(dateTime)) {\r\n                return new DateTimeNumber(timeToNumber(dateTime) + this.dateToNumber(dateTime), dateFormat + ' ' + timeFormat);\r\n            }\r\n            else {\r\n                return new TimeNumber(timeToNumber(dateTime), timeFormat);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceOfSimpleDate(dateTime)) {\r\n                return new DateNumber(this.dateToNumber(dateTime), dateFormat);\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    parseDateTimeFromConfigFormats(dateTimeString) {\r\n        return this.parseDateTimeFromFormats(dateTimeString, this.config.dateFormats, this.config.timeFormats);\r\n    }\r\n    getNullYear() {\r\n        return this.config.nullYear;\r\n    }\r\n    getEpochYearZero() {\r\n        return this.epochYearZero;\r\n    }\r\n    isValidDate(date) {\r\n        if (isNaN(date.year) || isNaN(date.month) || isNaN(date.day)) {\r\n            return false;\r\n        }\r\n        else if (date.day !== Math.round(date.day) || date.month !== Math.round(date.month) || date.year !== Math.round(date.year)) {\r\n            return false;\r\n        }\r\n        else if (date.year < 1582) { // Gregorian calendar start\r\n            return false;\r\n        }\r\n        else if (date.month < 1 || date.month > 12) {\r\n            return false;\r\n        }\r\n        else if (date.day < 1) {\r\n            return false;\r\n        }\r\n        else if (this.isLeapYear(date.year) && date.month === 2) {\r\n            return date.day <= 29;\r\n        }\r\n        else {\r\n            return date.day <= numDays[date.month - 1];\r\n        }\r\n    }\r\n    dateToNumber(date) {\r\n        return this.dateToNumberFromZero(date) - this.minDateAbsoluteValue;\r\n    }\r\n    relativeNumberToAbsoluteNumber(arg) {\r\n        return arg + this.minDateAbsoluteValue - (this.leapYear1900 ? 1 : 0);\r\n    }\r\n    numberToSimpleDate(arg) {\r\n        const dateNumber = Math.floor(arg) + this.minDateAbsoluteValue;\r\n        let year = Math.floor(dateNumber / 365.2425);\r\n        if (this.dateToNumberFromZero({ year: year + 1, month: 1, day: 1 }) <= dateNumber) {\r\n            year++;\r\n        }\r\n        else if (this.dateToNumberFromZero({ year: year - 1, month: 1, day: 1 }) > dateNumber) {\r\n            year--;\r\n        }\r\n        const dayOfYear = dateNumber - this.dateToNumberFromZero({ year, month: 1, day: 1 });\r\n        const month = dayToMonth(dayOfYear - (this.isLeapYear(year) && dayOfYear >= 59 ? 1 : 0));\r\n        const day = dayOfYear - prefSumDays[month] - (this.isLeapYear(year) && month > 1 ? 1 : 0);\r\n        return { year, month: month + 1, day: day + 1 };\r\n    }\r\n    numberToSimpleDateTime(arg) {\r\n        const time = numberToSimpleTime(arg % 1);\r\n        const carryDays = Math.floor(time.hours / HOURS_PER_DAY);\r\n        time.hours = time.hours % HOURS_PER_DAY;\r\n        const date = this.numberToSimpleDate(Math.floor(arg) + carryDays);\r\n        return Object.assign(Object.assign({}, date), time);\r\n    }\r\n    leapYearsCount(year) {\r\n        return Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400) + (this.config.leapYear1900 && year >= 1900 ? 1 : 0);\r\n    }\r\n    daysInMonth(year, month) {\r\n        if (this.isLeapYear(year) && month === 2) {\r\n            return 29;\r\n        }\r\n        else {\r\n            return numDays[month - 1];\r\n        }\r\n    }\r\n    endOfMonth(date) {\r\n        return { year: date.year, month: date.month, day: this.daysInMonth(date.year, date.month) };\r\n    }\r\n    toBasisUS(start, end) {\r\n        if (start.day === 31) {\r\n            start.day = 30;\r\n        }\r\n        if (start.day === 30 && end.day === 31) {\r\n            end.day = 30;\r\n        }\r\n        if (start.month === 2 && start.day === this.daysInMonth(start.year, start.month)) {\r\n            start.day = 30;\r\n            if (end.month === 2 && end.day === this.daysInMonth(end.year, end.month)) {\r\n                end.day = 30;\r\n            }\r\n        }\r\n        return [start, end];\r\n    }\r\n    yearLengthForBasis(start, end) {\r\n        if (start.year !== end.year) {\r\n            if ((start.year + 1 !== end.year) || (start.month < end.month) || (start.month === end.month && start.day < end.day)) {\r\n                // this is true IFF at least one year of gap between dates\r\n                return (this.leapYearsCount(end.year) - this.leapYearsCount(start.year - 1)) / (end.year - start.year + 1) + 365;\r\n            }\r\n            if (this.countLeapDays(end) !== this.countLeapDays({ year: start.year, month: start.month, day: start.day - 1 })) {\r\n                return 366;\r\n            }\r\n            else {\r\n                return 365;\r\n            }\r\n        }\r\n        if (this.isLeapYear(start.year)) {\r\n            return 366;\r\n        }\r\n        else {\r\n            return 365;\r\n        }\r\n    }\r\n    parseSingleFormat(dateString, dateFormat, timeFormat) {\r\n        const dateTime = this.parseDateTime(dateString, dateFormat, timeFormat);\r\n        if (instanceOfSimpleDate(dateTime)) {\r\n            if (dateTime.year >= 0 && dateTime.year < 100) {\r\n                if (dateTime.year < this.getNullYear()) {\r\n                    dateTime.year += 2000;\r\n                }\r\n                else {\r\n                    dateTime.year += 1900;\r\n                }\r\n            }\r\n            if (!this.isValidDate(dateTime)) {\r\n                return undefined;\r\n            }\r\n        }\r\n        return dateTime;\r\n    }\r\n    parseDateTimeFromFormats(dateTimeString, dateFormats, timeFormats) {\r\n        const dateFormatsIterate = dateFormats.length === 0 ? [undefined] : dateFormats;\r\n        const timeFormatsIterate = timeFormats.length === 0 ? [undefined] : timeFormats;\r\n        for (const dateFormat of dateFormatsIterate) {\r\n            for (const timeFormat of timeFormatsIterate) {\r\n                const dateTime = this.parseSingleFormat(dateTimeString, dateFormat, timeFormat);\r\n                if (dateTime !== undefined) {\r\n                    return { dateTime, timeFormat, dateFormat };\r\n                }\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n    countLeapDays(date) {\r\n        if (date.month > 2 || (date.month === 2 && date.day >= 29)) {\r\n            return this.leapYearsCount(date.year);\r\n        }\r\n        else {\r\n            return this.leapYearsCount(date.year - 1);\r\n        }\r\n    }\r\n    dateToNumberFromZero(date) {\r\n        return 365 * date.year + prefSumDays[date.month - 1] + date.day - 1 + (date.month <= 2 ? this.leapYearsCount(date.year - 1) : this.leapYearsCount(date.year));\r\n    }\r\n    isLeapYear(year) {\r\n        if (year % 4) {\r\n            return false;\r\n        }\r\n        else if (year % 100) {\r\n            return true;\r\n        }\r\n        else if (year % 400) {\r\n            return year === 1900 && this.config.leapYear1900;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\nfunction dayToMonth(dayOfYear) {\r\n    let month = 0;\r\n    if (prefSumDays[month + 6] <= dayOfYear) {\r\n        month += 6;\r\n    }\r\n    if (prefSumDays[month + 3] <= dayOfYear) {\r\n        month += 3;\r\n    }\r\n    if (prefSumDays[month + 2] <= dayOfYear) {\r\n        month += 2;\r\n    }\r\n    else if (prefSumDays[month + 1] <= dayOfYear) {\r\n        month += 1;\r\n    }\r\n    return month;\r\n}\r\nexport function offsetMonth(date, offset) {\r\n    const totalM = 12 * date.year + date.month - 1 + offset;\r\n    return { year: Math.floor(totalM / 12), month: totalM % 12 + 1, day: date.day };\r\n}\r\nexport function truncateDayInMonth(date) {\r\n    return { year: date.year, month: date.month, day: Math.min(date.day, numDays[date.month - 1]) };\r\n}\r\nexport function roundToNearestSecond(arg) {\r\n    return Math.round(arg * 3600 * 24) / (3600 * 24);\r\n}\r\nfunction roundToEpsilon(arg, epsilon = 1) {\r\n    return Math.round(arg * epsilon) / epsilon;\r\n}\r\n// Note: The result of this function might be { hours = 24, minutes = 0, seconds = 0 } if arg < 1 but arg ≈ 1\r\nexport function numberToSimpleTime(arg) {\r\n    const argAsSeconds = arg * HOURS_PER_DAY * MINUTES_PER_HOUR * SECONDS_PER_MINUTE;\r\n    const seconds = roundToEpsilon(argAsSeconds % SECONDS_PER_MINUTE, 100000) % SECONDS_PER_MINUTE;\r\n    const argAsMinutes = (argAsSeconds - seconds) / SECONDS_PER_MINUTE;\r\n    const minutes = Math.round(argAsMinutes % MINUTES_PER_HOUR) % MINUTES_PER_HOUR;\r\n    const argAsHours = (argAsMinutes - minutes) / MINUTES_PER_HOUR;\r\n    const hours = Math.round(argAsHours);\r\n    return { hours, minutes, seconds };\r\n}\r\nexport function timeToNumber(time) {\r\n    return ((time.seconds / 60 + time.minutes) / 60 + time.hours) / 24;\r\n}\r\nexport function toBasisEU(date) {\r\n    return { year: date.year, month: date.month, day: Math.min(30, date.day) };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { DenseStrategy } from './DenseStrategy';\r\nimport { SparseStrategy } from './SparseStrategy';\r\nexport class DenseSparseChooseBasedOnThreshold {\r\n    constructor(threshold) {\r\n        this.threshold = threshold;\r\n    }\r\n    call(fill) {\r\n        if (fill > this.threshold) {\r\n            return DenseStrategy;\r\n        }\r\n        else {\r\n            return SparseStrategy;\r\n        }\r\n    }\r\n}\r\nexport class AlwaysSparse {\r\n    call() {\r\n        return SparseStrategy;\r\n    }\r\n}\r\nexport class AlwaysDense {\r\n    call() {\r\n        return DenseStrategy;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { secondsExtendedRegexp } from '../DateTimeDefault';\r\nimport { numberToSimpleTime } from '../DateTimeHelper';\r\nimport { parseForDateTimeFormat, parseForNumberFormat, TokenType } from './parser';\r\nexport function format(value, formatArg, config, dateHelper) {\r\n    const tryDateTime = config.stringifyDateTime(dateHelper.numberToSimpleDateTime(value), formatArg); // default points to defaultStringifyDateTime()\r\n    if (tryDateTime !== undefined) {\r\n        return tryDateTime;\r\n    }\r\n    const tryDuration = config.stringifyDuration(numberToSimpleTime(value), formatArg);\r\n    if (tryDuration !== undefined) {\r\n        return tryDuration;\r\n    }\r\n    const expression = parseForNumberFormat(formatArg);\r\n    if (expression !== undefined) {\r\n        return numberFormat(expression.tokens, value);\r\n    }\r\n    return formatArg;\r\n}\r\nexport function padLeft(number, size) {\r\n    let result = number + '';\r\n    while (result.length < size) {\r\n        result = '0' + result;\r\n    }\r\n    return result;\r\n}\r\nexport function padRight(number, size) {\r\n    let result = number + '';\r\n    while (result.length < size) {\r\n        result = result + '0';\r\n    }\r\n    return result;\r\n}\r\nfunction countChars(text, char) {\r\n    return text.split(char).length - 1;\r\n}\r\nfunction numberFormat(tokens, value) {\r\n    let result = '';\r\n    for (let i = 0; i < tokens.length; ++i) {\r\n        const token = tokens[i];\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        const tokenParts = token.value.split('.');\r\n        const integerFormat = tokenParts[0];\r\n        const decimalFormat = tokenParts[1] || '';\r\n        const separator = tokenParts[1] ? '.' : '';\r\n        /* get fixed-point number without trailing zeros */\r\n        const valueParts = Number(value.toFixed(decimalFormat.length)).toString().split('.');\r\n        let integerPart = valueParts[0] || '';\r\n        let decimalPart = valueParts[1] || '';\r\n        if (integerFormat.length > integerPart.length) {\r\n            const padSizeInteger = countChars(integerFormat.substr(0, integerFormat.length - integerPart.length), '0');\r\n            integerPart = padLeft(integerPart, padSizeInteger + integerPart.length);\r\n        }\r\n        const padSizeDecimal = countChars(decimalFormat.substr(decimalPart.length, decimalFormat.length - decimalPart.length), '0');\r\n        decimalPart = padRight(decimalPart, padSizeDecimal + decimalPart.length);\r\n        result += integerPart + separator + decimalPart;\r\n    }\r\n    return result;\r\n}\r\nexport function defaultStringifyDuration(time, formatArg) {\r\n    const expression = parseForDateTimeFormat(formatArg);\r\n    if (expression === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokens = expression.tokens;\r\n    let result = '';\r\n    for (const token of tokens) {\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        switch (token.value.toLowerCase()) {\r\n            case 'h':\r\n            case 'hh': {\r\n                result += padLeft(time.hours, token.value.length);\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            case '[hh]': {\r\n                result += padLeft(time.hours, token.value.length - 2);\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            case 'm':\r\n            case 'mm': {\r\n                result += padLeft(time.minutes, token.value.length);\r\n                time.minutes = 0;\r\n                break;\r\n            }\r\n            case '[mm]': {\r\n                result += padLeft(time.minutes + 60 * time.hours, token.value.length - 2);\r\n                time.minutes = 0;\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            /* seconds */\r\n            case 's':\r\n            case 'ss': {\r\n                result += padLeft(Math.floor(time.seconds), token.value.length);\r\n                break;\r\n            }\r\n            default: {\r\n                if (secondsExtendedRegexp.test(token.value)) {\r\n                    const fractionOfSecondPrecision = Math.max(token.value.length - 3, 0);\r\n                    result += (time.seconds < 10 ? '0' : '') + Math.floor(time.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\r\n                    continue;\r\n                }\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function defaultStringifyDateTime(dateTime, formatArg) {\r\n    const expression = parseForDateTimeFormat(formatArg);\r\n    if (expression === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokens = expression.tokens;\r\n    let result = '';\r\n    let minutes = false;\r\n    const ampm = tokens.some((token) => token.type === TokenType.FORMAT &&\r\n        (token.value === 'a/p' || token.value === 'A/P' || token.value === 'am/pm' || token.value === 'AM/PM'));\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        const token = tokens[i];\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        switch (token.value.toLowerCase()) {\r\n            /* hours*/\r\n            case 'h':\r\n            case 'hh': {\r\n                minutes = true;\r\n                result += padLeft(ampm ? (dateTime.hours + 11) % 12 + 1 : dateTime.hours, token.value.length);\r\n                break;\r\n            }\r\n            /* days */\r\n            case 'd':\r\n            case 'dd': {\r\n                result += padLeft(dateTime.day, token.value.length);\r\n                break;\r\n            }\r\n            /* seconds */\r\n            case 's':\r\n            case 'ss': {\r\n                result += padLeft(Math.floor(dateTime.seconds), token.value.length);\r\n                break;\r\n            }\r\n            /* minutes / months */\r\n            case 'm':\r\n            case 'mm': {\r\n                if (i + 1 < tokens.length && tokens[i + 1].value.startsWith(':')) {\r\n                    minutes = true;\r\n                }\r\n                if (minutes) {\r\n                    result += padLeft(dateTime.minutes, token.value.length);\r\n                }\r\n                else {\r\n                    result += padLeft(dateTime.month, token.value.length);\r\n                }\r\n                minutes = true;\r\n                break;\r\n            }\r\n            /* years */\r\n            case 'yy': {\r\n                result += padLeft(dateTime.year % 100, token.value.length);\r\n                break;\r\n            }\r\n            case 'yyyy': {\r\n                result += dateTime.year;\r\n                break;\r\n            }\r\n            /* AM / PM */\r\n            case 'am/pm':\r\n            case 'a/p': {\r\n                const [am, pm] = token.value.split('/');\r\n                result += dateTime.hours < 12 ? am : pm;\r\n                break;\r\n            }\r\n            default: {\r\n                if (secondsExtendedRegexp.test(token.value)) {\r\n                    const fractionOfSecondPrecision = token.value.length - 3;\r\n                    result += (dateTime.seconds < 10 ? '0' : '') + Math.floor(dateTime.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\r\n                    continue;\r\n                }\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nconst dateFormatRegex = /(\\\\.|dd|DD|d|D|mm|MM|m|M|YYYY|YY|yyyy|yy|HH|hh|H|h|ss(\\.(0+|s+))?|s|AM\\/PM|am\\/pm|A\\/P|a\\/p|\\[mm]|\\[MM]|\\[hh]|\\[HH])/g;\r\nconst numberFormatRegex = /(\\\\.|[#0]+(\\.[#0]*)?)/g;\r\nexport var TokenType;\r\n(function (TokenType) {\r\n    TokenType[\"FORMAT\"] = \"FORMAT\";\r\n    TokenType[\"FREE_TEXT\"] = \"FREE_TEXT\";\r\n})(TokenType || (TokenType = {}));\r\nexport function formatToken(type, value) {\r\n    return {\r\n        type,\r\n        value,\r\n    };\r\n}\r\nexport var FormatExpressionType;\r\n(function (FormatExpressionType) {\r\n    FormatExpressionType[\"DATE\"] = \"DATE\";\r\n    FormatExpressionType[\"NUMBER\"] = \"NUMBER\";\r\n    FormatExpressionType[\"STRING\"] = \"STRING\";\r\n})(FormatExpressionType || (FormatExpressionType = {}));\r\nfunction matchDateFormat(str) {\r\n    dateFormatRegex.lastIndex = 0;\r\n    const tokens = [];\r\n    let m;\r\n    do {\r\n        m = dateFormatRegex.exec(str);\r\n        if (m !== null) {\r\n            tokens.push(m);\r\n        }\r\n    } while (m);\r\n    return tokens;\r\n}\r\nfunction matchNumberFormat(str) {\r\n    numberFormatRegex.lastIndex = 0;\r\n    const numberFormatToken = numberFormatRegex.exec(str);\r\n    if (numberFormatToken !== null) {\r\n        return [numberFormatToken];\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction createTokens(regexTokens, str) {\r\n    const tokens = [];\r\n    let start = 0;\r\n    for (let i = 0; i < regexTokens.length; ++i) {\r\n        const token = regexTokens[i];\r\n        if (token.index !== start) {\r\n            const beforeToken = str.substr(start, token.index - start);\r\n            tokens.push(formatToken(TokenType.FREE_TEXT, beforeToken));\r\n        }\r\n        if (token[0].startsWith('\\\\')) {\r\n            tokens.push(formatToken(TokenType.FREE_TEXT, token[0]));\r\n        }\r\n        else {\r\n            tokens.push(formatToken(TokenType.FORMAT, token[0]));\r\n        }\r\n        start = token.index + token[0].length;\r\n    }\r\n    const lastToken = regexTokens[regexTokens.length - 1];\r\n    if (lastToken.index + lastToken[0].length < str.length) {\r\n        const afterLastToken = str.substr(lastToken.index + lastToken[0].length, str.length);\r\n        tokens.push(formatToken(TokenType.FREE_TEXT, afterLastToken));\r\n    }\r\n    return tokens;\r\n}\r\nexport function parseForDateTimeFormat(str) {\r\n    const dateFormatTokens = matchDateFormat(str);\r\n    if (dateFormatTokens.every((elem) => isEscapeToken(elem))) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return {\r\n            type: FormatExpressionType.DATE,\r\n            tokens: createTokens(dateFormatTokens, str),\r\n        };\r\n    }\r\n}\r\nexport function parseForNumberFormat(str) {\r\n    const numberFormatTokens = matchNumberFormat(str);\r\n    if (numberFormatTokens.every((elem) => isEscapeToken(elem))) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return {\r\n            type: FormatExpressionType.NUMBER,\r\n            tokens: createTokens(numberFormatTokens, str),\r\n        };\r\n    }\r\n}\r\nexport function parse(str) {\r\n    var _a, _b;\r\n    return (_b = (_a = parseForDateTimeFormat(str)) !== null && _a !== void 0 ? _a : parseForNumberFormat(str)) !== null && _b !== void 0 ? _b : {\r\n        type: FormatExpressionType.STRING,\r\n        tokens: [{\r\n                type: TokenType.FREE_TEXT,\r\n                value: str,\r\n            }],\r\n    };\r\n}\r\nexport function isEscapeToken(token) {\r\n    return token[0].startsWith('\\\\');\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { checkKeySchema, extractTime } from './licenseKeyHelper';\r\n/**\r\n * List of all not valid messages which may occur.\r\n */\r\nconst consoleMessages = {\r\n    invalid: () => 'The license key for HyperFormula is invalid.',\r\n    expired: ({ keyValidityDate }) => 'The license key for HyperFormula expired' +\r\n        ` on ${keyValidityDate}, and is not valid for the installed version.`,\r\n    missing: () => 'The license key for HyperFormula is missing.',\r\n};\r\nlet _notified = false;\r\n/**\r\n * Checks if the provided license key is grammatically valid or not expired.\r\n *\r\n * @param {string} licenseKey The license key to check.\r\n * @returns {LicenseKeyValidityState} Returns the checking state.\r\n */\r\nexport function checkLicenseKeyValidity(licenseKey) {\r\n    const messageDescriptor = {\r\n        template: \"missing\" /* MISSING */,\r\n        vars: {},\r\n    };\r\n    if (licenseKey === 'gpl-v3' || licenseKey === 'internal-use-in-handsontable') {\r\n        messageDescriptor.template = \"valid\" /* VALID */;\r\n    }\r\n    else if (typeof licenseKey === 'string' && checkKeySchema(licenseKey)) {\r\n        const [day, month, year] = (process.env.HT_RELEASE_DATE || '').split('/');\r\n        const releaseDays = Math.floor(new Date(`${month}/${day}/${year}`).getTime() / 8.64e7);\r\n        const keyValidityDays = extractTime(licenseKey);\r\n        messageDescriptor.vars.keyValidityDate = formatDate(new Date((keyValidityDays + 1) * 8.64e7));\r\n        if (releaseDays > keyValidityDays) {\r\n            messageDescriptor.template = \"expired\" /* EXPIRED */;\r\n        }\r\n        else {\r\n            messageDescriptor.template = \"valid\" /* VALID */;\r\n        }\r\n    }\r\n    else if (licenseKey !== '') {\r\n        messageDescriptor.template = \"invalid\" /* INVALID */;\r\n    }\r\n    if (!_notified && messageDescriptor.template !== \"valid\" /* VALID */) {\r\n        console.warn(consoleMessages[messageDescriptor.template](messageDescriptor.vars));\r\n        _notified = true;\r\n    }\r\n    return messageDescriptor.template;\r\n}\r\n/**\r\n * Formats a Date instance to hard-coded format MMMM DD, YYYY.\r\n *\r\n * @param {Date} date The date to format.\r\n * @returns {string}\r\n */\r\nfunction formatDate(date) {\r\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\r\n        'July', 'August', 'September', 'October', 'November', 'December'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = date.getDate();\r\n    const year = date.getFullYear();\r\n    return `${month} ${day}, ${year}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n// @ts-nocheck\r\n/* eslint-disable */\r\nconst _rl = '\\x6C\\x65\\x6E\\x67\\x74\\x68';\r\nconst _hd = (v) => parseInt(v, 16);\r\nconst _pi = (v) => parseInt(v, 10);\r\nconst _nm = (v) => (v + '').replace(/\\-/g, '');\r\nconst _ss = (v, s, l) => v['\\x73\\x75\\x62\\x73\\x74\\x72'](s, l);\r\nconst _cp = (v) => v['\\x63\\x6F\\x64\\x65\\x50\\x6F\\x69\\x6E\\x74\\x41\\x74'](0) - 65;\r\nexport function extractTime(v) {\r\n    return _nm(v)[_rl] === (50 >> 1) ? _hd(_ss(_nm(v), _hd('12'), _cp('\\x46'))) / (_hd(_ss(_nm(v), _cp('C'), _cp('\\x59') >> 4)) || ((~~![][_rl]) << 3) + 1) : 0;\r\n}\r\nexport function checkKeySchema(v) {\r\n    v = (v + '').replace(/\\-/g, '');\r\n    if (v[_rl] !== _cp('\\x5A')) {\r\n        return false;\r\n    }\r\n    let sp = 0;\r\n    return [[0, _cp('\\x47') + 1], [_cp('\\x48'), _cp('\\x48') - 1], [_cp('G') + _cp('H'), _cp('\\x47')]].reduce((e, [a, b], c) => {\r\n        e |= (_pi(`${_pi(_hd(_ss(v, ...[sp + a - (c === (3 >> 2) ? 0 : 2), b + (!c ? 0 : 2)])) + (_hd(_ss(v, ...[sp + a + b, 2])) + []).padStart(2, '0'))}`) % 97 || 2) >> 1;\r\n        sp += 2;\r\n        return e;\r\n    }, _cp('A')) === ([] + 1 >> 1);\r\n}\r\n/* eslint-enable */\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, isSimpleCellRange } from './AbsoluteCellRange';\r\nimport { validateArgToType } from './ArgumentSanitization';\r\nimport { BuildEngineFactory } from './BuildEngineFactory';\r\nimport { CellType, getCellType, getCellValueDetailedType, getCellValueFormat, getCellValueType, isSimpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { getDefaultConfig } from './Config';\r\nimport { numberToSimpleTime } from './DateTimeHelper';\r\nimport { objectDestroy } from './Destroy';\r\nimport { Emitter, Events } from './Emitter';\r\nimport { EvaluationSuspendedError, ExpectedValueOfTypeError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, NotAFormulaError, } from './errors';\r\nimport { buildTranslationPackage } from './i18n';\r\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\r\nimport { normalizeAddedIndexes, normalizeRemovedIndexes } from './Operations';\r\nimport { AstNodeType, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString, } from './parser';\r\n/**\r\n * This is a class for creating HyperFormula instance, all the following public methods\r\n * ale related to this class.\r\n *\r\n * The instance can be created only by calling one of the static methods\r\n * `buildFromArray`, `buildFromSheets` or `buildEmpty` and should be disposed of with the\r\n * `destroy` method when it's no longer needed to free the resources.\r\n *\r\n * The instance can be seen as a workbook where worksheets can be created and\r\n * manipulated. They are organized within a widely known structure of columns and rows\r\n * which can be manipulated as well. The smallest possible data unit are the cells, which\r\n * may contain simple values or formulas to be calculated.\r\n *\r\n * All CRUD methods are called directly on HyperFormula instance and will trigger\r\n * corresponding lifecycle events. The events are marked accordingly, as well as thrown\r\n * errors, so they can be correctly handled.\r\n */\r\nexport class HyperFormula {\r\n    constructor(_config, _stats, _dependencyGraph, _columnSearch, _parser, _unparser, _cellContentParser, _evaluator, _lazilyTransformingAstService, _crudOperations, _exporter, _namedExpressions, _serialization, _functionRegistry) {\r\n        this._config = _config;\r\n        this._stats = _stats;\r\n        this._dependencyGraph = _dependencyGraph;\r\n        this._columnSearch = _columnSearch;\r\n        this._parser = _parser;\r\n        this._unparser = _unparser;\r\n        this._cellContentParser = _cellContentParser;\r\n        this._evaluator = _evaluator;\r\n        this._lazilyTransformingAstService = _lazilyTransformingAstService;\r\n        this._crudOperations = _crudOperations;\r\n        this._exporter = _exporter;\r\n        this._namedExpressions = _namedExpressions;\r\n        this._serialization = _serialization;\r\n        this._functionRegistry = _functionRegistry;\r\n        this._emitter = new Emitter();\r\n        this._evaluationSuspended = false;\r\n    }\r\n    /**\r\n     * Returns all of HyperFormula's default [configuration options](../../guide/configuration-options.md).\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // returns all default configuration options\r\n     * const defaultConfig = HyperFormula.defaultConfig;\r\n     * ```\r\n     *\r\n     * @category Static Accessors\r\n     */\r\n    static get defaultConfig() {\r\n        return getDefaultConfig();\r\n    }\r\n    /**\r\n     * Calls the `graph` method on the dependency graph.\r\n     * Allows for executing `graph` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get graph() {\r\n        return this.dependencyGraph.graph;\r\n    }\r\n    /**\r\n     * Calls the `rangeMapping` method on the dependency graph.\r\n     * Allows for executing `rangeMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get rangeMapping() {\r\n        return this.dependencyGraph.rangeMapping;\r\n    }\r\n    /**\r\n     * Calls the `arrayMapping` method on the dependency graph.\r\n     * Allows for executing `arrayMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get arrayMapping() {\r\n        return this.dependencyGraph.arrayMapping;\r\n    }\r\n    /**\r\n     * Calls the `sheetMapping` method on the dependency graph.\r\n     * Allows for executing `sheetMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    /**\r\n     * Calls the `addressMapping` method on the dependency graph.\r\n     * Allows for executing `addressMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get addressMapping() {\r\n        return this.dependencyGraph.addressMapping;\r\n    }\r\n    /** @internal */\r\n    get dependencyGraph() {\r\n        return this._dependencyGraph;\r\n    }\r\n    /** @internal */\r\n    get evaluator() {\r\n        return this._evaluator;\r\n    }\r\n    /** @internal */\r\n    get columnSearch() {\r\n        return this._columnSearch;\r\n    }\r\n    /** @internal */\r\n    get lazilyTransformingAstService() {\r\n        return this._lazilyTransformingAstService;\r\n    }\r\n    /**\r\n     * Returns state of the validity of the license key.\r\n     *\r\n     * @internal\r\n     */\r\n    get licenseKeyValidityState() {\r\n        return this._config.licenseKeyValidityState;\r\n    }\r\n    /**\r\n     * Builds the engine for a sheet from a two-dimensional array representation.\r\n     * The engine is created with a single sheet.\r\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\r\n     * If not specified, the engine will be built with the default configuration.\r\n     *\r\n     * @param {Sheet} sheet - two-dimensional array representation of sheet\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\r\n     * @throws [[InvalidArgumentsError]] when sheet is not an array of arrays\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // data represented as an array\r\n     * const sheetData = [\r\n     *  ['0', '=SUM(1,2,3)', '52'],\r\n     *  ['=SUM(A1:C1)', '', '=A1'],\r\n     *  ['2', '=SUM(A1:C1)', '91'],\r\n     * ];\r\n     *\r\n     * // method with optional config parameter maxColumns\r\n     * const hfInstance = HyperFormula.buildFromArray(sheetData, { maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildFromArray(sheet, configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheet(sheet, configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Builds the engine from an object containing multiple sheets with names.\r\n     * The engine is created with one or more sheets.\r\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\r\n     * If not specified the engine will be built with the default configuration.\r\n     *\r\n     * @param {Sheet} sheets - object with sheets definition\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\r\n     * @throws [[InvalidArgumentsError]] when any sheet is not an array of arrays\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // data represented as an object with sheets: Sheet1 and Sheet2\r\n     * const sheetData = {\r\n     *  'Sheet1': [\r\n     *    ['1', '', '=Sheet2!$A1'],\r\n     *    ['', '2', '=SUM(1,2,3)'],\r\n     *    ['=Sheet2!$A2', '2', ''],\r\n     *   ],\r\n     *  'Sheet2': [\r\n     *    ['', '4', '=Sheet1!$B1'],\r\n     *    ['', '8', '=SUM(9,3,3)'],\r\n     *    ['=Sheet1!$B1', '2', ''],\r\n     *   ],\r\n     * };\r\n     *\r\n     * // method with optional config parameter useColumnIndex\r\n     * const hfInstance = HyperFormula.buildFromSheets(sheetData, { useColumnIndex: true });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildFromSheets(sheets, configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheets(sheets, configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Builds an empty engine instance.\r\n     * Can be configured with the optional parameter that represents a [[ConfigParams]].\r\n     * If not specified the engine will be built with the default configuration.\r\n     *\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // build with no initial data and with optional config parameter maxColumns\r\n     * const hfInstance = HyperFormula.buildEmpty({ maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildEmpty(configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildEmpty(configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Returns registered language from its code string.\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[LanguageNotRegisteredError]] when trying to retrieve not registered language\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return registered language\r\n     * const language = HyperFormula.getLanguage('enGB');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getLanguage(languageCode) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        const val = this.registeredLanguages.get(languageCode);\r\n        if (val === undefined) {\r\n            throw new LanguageNotRegisteredError();\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    /**\r\n     * Registers language from under given code string.\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     * @param {RawTranslationPackage} languagePackage - translation package to be registered\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     * @throws [[LanguageAlreadyRegisteredError]] when given language is already registered\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return registered language\r\n     * HyperFormula.registerLanguage('plPL', plPL);\r\n     * const engine = HyperFormula.buildEmpty({language: 'plPL'});\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerLanguage(languageCode, languagePackage) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        if (this.registeredLanguages.has(languageCode)) {\r\n            throw new LanguageAlreadyRegisteredError();\r\n        }\r\n        else {\r\n            this.registeredLanguages.set(languageCode, buildTranslationPackage(languagePackage));\r\n        }\r\n    }\r\n    /**\r\n     * Unregisters language that is registered under given code string.\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[LanguageNotRegisteredError]] when given language is not registered\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // register the language for the instance\r\n     * HyperFormula.registerLanguage('plPL', plPL);\r\n     *\r\n     * // unregister plPL\r\n     * HyperFormula.unregisterLanguage('plPL');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterLanguage(languageCode) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        if (this.registeredLanguages.has(languageCode)) {\r\n            this.registeredLanguages.delete(languageCode);\r\n        }\r\n        else {\r\n            throw new LanguageNotRegisteredError();\r\n        }\r\n    }\r\n    /**\r\n     * Returns all registered languages codes.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // should return all registered language codes: ['enGB', 'plPL']\r\n     * const registeredLanguages = HyperFormula.getRegisteredLanguagesCodes();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getRegisteredLanguagesCodes() {\r\n        return Array.from(this.registeredLanguages.keys());\r\n    }\r\n    /**\r\n     * Registers all functions in a given plugin with optional translations.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     * @param {FunctionTranslationsPackage} translations - optional package of function names translations\r\n     *\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register the plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerFunctionPlugin(plugin, translations) {\r\n        FunctionRegistry.registerFunctionPlugin(plugin, translations);\r\n    }\r\n    /**\r\n     * Unregisters all functions defined in given plugin.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // get the class of a plugin\r\n     * const registeredPluginClass = HyperFormula.getFunctionPlugin('EXAMPLE');\r\n     *\r\n     * // unregister all functions defined in a plugin of ID 'EXAMPLE'\r\n     * HyperFormula.unregisterFunctionPlugin(registeredPluginClass);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterFunctionPlugin(plugin) {\r\n        FunctionRegistry.unregisterFunctionPlugin(plugin);\r\n    }\r\n    /**\r\n     * Registers a function with a given id if such exists in a plugin.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {string} functionId - function id, e.g. 'SUMIF'\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     * @param translations\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[FunctionPluginValidationError]] when function with a given id does not exist in plugin or plugin class definition is not consistent with metadata\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a function\r\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerFunction(functionId, plugin, translations) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        FunctionRegistry.registerFunction(functionId, plugin, translations);\r\n    }\r\n    /**\r\n     * Unregisters a function with a given id.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {string} functionId - function id, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a function\r\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\r\n     *\r\n     * // unregister a function\r\n     * HyperFormula.unregisterFunction('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterFunction(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        FunctionRegistry.unregisterFunction(functionId);\r\n    }\r\n    /**\r\n     * Clears function registry.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * HyperFormula.unregisterAllFunctions();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterAllFunctions() {\r\n        FunctionRegistry.unregisterAll();\r\n    }\r\n    /**\r\n     * Returns translated names of all registered functions for a given language\r\n     *\r\n     * @param {string} code - language code\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return a list of function names registered for enGB\r\n     * const allNames = HyperFormula.getRegisteredFunctionNames('enGB');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getRegisteredFunctionNames(code) {\r\n        validateArgToType(code, 'string', 'code');\r\n        const functionIds = FunctionRegistry.getRegisteredFunctionIds();\r\n        const language = this.getLanguage(code);\r\n        return language.getFunctionTranslations(functionIds);\r\n    }\r\n    /**\r\n     * Returns class of a plugin used by function with given id\r\n     *\r\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     *\r\n     * // return the class of a given plugin\r\n     * const myFunctionClass = HyperFormula.getFunctionPlugin('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getFunctionPlugin(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        return FunctionRegistry.getFunctionPlugin(functionId);\r\n    }\r\n    /**\r\n     * Returns classes of all plugins registered in HyperFormula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return classes of all plugins\r\n     * const allClasses = HyperFormula.getAllFunctionPlugins();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getAllFunctionPlugins() {\r\n        return FunctionRegistry.getPlugins();\r\n    }\r\n    static buildFromEngineState(engine) {\r\n        return new HyperFormula(engine.config, engine.stats, engine.dependencyGraph, engine.columnSearch, engine.parser, engine.unparser, engine.cellContentParser, engine.evaluator, engine.lazilyTransformingAstService, engine.crudOperations, engine.exporter, engine.namedExpressions, engine.serialization, engine.functionRegistry);\r\n    }\r\n    /**\r\n     * Returns the cell value of a given address.\r\n     * Applies rounding and post-processing.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1,2,3)', '2'],\r\n     * ]);\r\n     *\r\n     * // get value of A1 cell, should be '6'\r\n     * const A1Value = hfInstance.getCellValue({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // get value of B1 cell, should be '2'\r\n     * const B1Value = hfInstance.getCellValue({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValue(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getCellValue(cellAddress);\r\n    }\r\n    /**\r\n     * Returns a normalized formula string from the cell of a given address or `undefined` for an address that does not exist and empty values.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1,2,3)', '0'],\r\n     * ]);\r\n     *\r\n     * // should return a normalized A1 cell formula: '=SUM(1,2,3)'\r\n     * const A1Formula = hfInstance.getCellFormula({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return a normalized B1 cell formula: 'undefined'\r\n     * const B1Formula = hfInstance.getCellFormula({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellFormula(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this._serialization.getCellFormula(cellAddress);\r\n    }\r\n    /**\r\n     * Returns [[RawCellContent]] with a serialized content of the cell of a given address: either a cell formula, an explicit value, or an error.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1,2,3)', '0'],\r\n     * ]);\r\n     *\r\n     * // should return serialized content of A1 cell: '=SUM(1,2,3)'\r\n     * const cellA1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return serialized content of B1 cell: '0'\r\n     * const cellB1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellSerialized(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getCellSerialized(cellAddress);\r\n    }\r\n    /**\r\n     * Returns an array of arrays of [[CellValue]] with values of all cells from [[Sheet]].\r\n     * Applies rounding and post-processing.\r\n     *\r\n     * @param {number} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1,2,3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return all values of a sheet: [[0, 6, 0], [1, '1.0%', 0], [2, 6, 0]]\r\n     * const sheetValues = hfInstance.getSheetValues(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetValues(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getSheetValues(sheetId);\r\n    }\r\n    /**\r\n     * Returns an array with normalized formula strings from [[Sheet]] or `undefined` for a cells that have no value.\r\n     *\r\n     * @param {SimpleCellAddress} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1,2,3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return all formulas of a sheet:\r\n     * // [\r\n     * //  [undefined, '=SUM(1,2,3)', '=A1'],\r\n     * //  [undefined, '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     * //  [undefined, '=SUM(A1:C1)', '=C1'],\r\n     * // ];\r\n     * const sheetFormulas = hfInstance.getSheetFormulas(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetFormulas(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return this._serialization.getSheetFormulas(sheetId);\r\n    }\r\n    /**\r\n     * Returns an array of arrays of [[RawCellContent]] with serialized content of cells from [[Sheet]], either a cell formula or an explicit value.\r\n     *\r\n     * @param {SimpleCellAddress} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1,2,3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return:\r\n     * // [\r\n     * //  ['0', '=SUM(1,2,3)', '=A1'],\r\n     * //  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     * //  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * // ];\r\n     * const serializedContent = hfInstance.getSheetSerialized(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetSerialized(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getSheetSerialized(sheetId);\r\n    }\r\n    /**\r\n     * Returns a map containing dimensions of all sheets for the engine instance represented as a key-value pairs where keys are sheet IDs and dimensions are returned as numbers, width and height respectively.\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   Sheet1: [\r\n     *    ['1', '2', '=Sheet2!$A1'],\r\n     *   ],\r\n     *   Sheet2: [\r\n     *    ['3'],\r\n     *    ['4'],\r\n     *   ],\r\n     * });\r\n     *\r\n     * // should return the dimensions of all sheets:\r\n     * // { Sheet1: { width: 3, height: 1 }, Sheet2: { width: 1, height: 2 } }\r\n     * const allSheetsDimensions = hfInstance.getAllSheetsDimensions();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsDimensions() {\r\n        return this._serialization.genericAllSheetsGetter((arg) => this.getSheetDimensions(arg));\r\n    }\r\n    /**\r\n     * Returns dimensions of a specified sheet.\r\n     * The sheet dimensions is represented with numbers: width and height.\r\n     *\r\n     * @param {number} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *    ['1', '2', '=Sheet2!$A1'],\r\n     * ]);\r\n     *\r\n     * // should return provided sheet's dimensions: { width: 3, height: 1 }\r\n     * const sheetDimensions = hfInstance.getSheetDimensions(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetDimensions(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return {\r\n            width: this.dependencyGraph.getSheetWidth(sheetId),\r\n            height: this.dependencyGraph.getSheetHeight(sheetId),\r\n        };\r\n    }\r\n    /**\r\n     * Returns values of all sheets in a form of an object which property keys are strings and values are arrays of arrays of [[CellValue]].\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '=A1+10', '3'],\r\n     * ]);\r\n     *\r\n     * // should return all sheets values: { Sheet1: [ [ 1, 11, 3 ] ] }\r\n     * const allSheetsValues = hfInstance.getAllSheetsValues();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsValues() {\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getAllSheetsValues();\r\n    }\r\n    /**\r\n     * Returns formulas of all sheets in a form of an object which property keys are strings and values are arrays of arrays of strings or possibly `undefined` when the call does not contain a formula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1+10'],\r\n     * ]);\r\n     *\r\n     * // should return only formulas: { Sheet1: [ [ undefined, undefined, '=A1+10' ] ] }\r\n     * const allSheetsFormulas = hfInstance.getAllSheetsFormulas();\r\n     * ```\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsFormulas() {\r\n        return this._serialization.getAllSheetsFormulas();\r\n    }\r\n    /**\r\n     * Returns formulas or values of all sheets in a form of an object which property keys are strings and values are arrays of arrays of [[RawCellContent]].\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1+10'],\r\n     * ]);\r\n     *\r\n     * // should return all sheets serialized content: { Sheet1: [ [ 1, 2, '=A1+10' ] ] }\r\n     * const allSheetsSerialized = hfInstance.getAllSheetsSerialized();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsSerialized() {\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getAllSheetsSerialized();\r\n    }\r\n    /**\r\n     * Updates the config with given new metadata.\r\n     *\r\n     * @param {Partial<ConfigParams>} newParams configuration options to be updated or added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] when some parameters of config are of wrong type (e.g. currencySymbol)\r\n     * @throws [[ConfigValueEmpty]] when some parameters of config are of invalid value (e.g. currencySymbol)\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // add a config param, for example maxColumns,\r\n     * // you can check the configuration with getConfig method\r\n     * hfInstance.updateConfig({ maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    updateConfig(newParams) {\r\n        const newConfig = this._config.mergeConfig(newParams);\r\n        const configNewLanguage = this._config.mergeConfig({ language: newParams.language });\r\n        const serializedSheets = this._serialization.withNewConfig(configNewLanguage, this._namedExpressions).getAllSheetsSerialized();\r\n        const serializedNamedExpressions = this._serialization.getAllNamedExpressionsSerialized();\r\n        const newEngine = BuildEngineFactory.rebuildWithConfig(newConfig, serializedSheets, serializedNamedExpressions, this._stats);\r\n        this._config = newEngine.config;\r\n        this._stats = newEngine.stats;\r\n        this._dependencyGraph = newEngine.dependencyGraph;\r\n        this._columnSearch = newEngine.columnSearch;\r\n        this._parser = newEngine.parser;\r\n        this._unparser = newEngine.unparser;\r\n        this._cellContentParser = newEngine.cellContentParser;\r\n        this._evaluator = newEngine.evaluator;\r\n        this._lazilyTransformingAstService = newEngine.lazilyTransformingAstService;\r\n        this._crudOperations = newEngine.crudOperations;\r\n        this._exporter = newEngine.exporter;\r\n        this._namedExpressions = newEngine.namedExpressions;\r\n        this._serialization = newEngine.serialization;\r\n        this._functionRegistry = newEngine.functionRegistry;\r\n    }\r\n    /**\r\n     * Returns current configuration of the engine instance.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // should return all config metadata including default and those which were added\r\n     * const hfConfig = hfInstance.getConfig();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    getConfig() {\r\n        return this._config.getConfig();\r\n    }\r\n    /**\r\n     * Serializes and deserializes whole engine, effectively reloading it.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * hfInstance.rebuildAndRecalculate();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    rebuildAndRecalculate() {\r\n        this.updateConfig({});\r\n    }\r\n    /**\r\n     * Returns a snapshot of computation time statistics.\r\n     * It returns a map with key-value pairs where keys are enums for stat type and time (number).\r\n     *\r\n     * @internal\r\n     *\r\n     * @category Instance\r\n     */\r\n    getStats() {\r\n        return this._stats.snapshot();\r\n    }\r\n    /**\r\n     * Undo the previous operation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoOperationToUndoError]] when there is no operation running that can be undone\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     *  ['3', ''],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // undo the operation, it should return the changes\r\n     * const changes = hfInstance.undo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    undo() {\r\n        this._crudOperations.undo();\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Re-do recently undone operation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoOperationToRedoError]] when there is no operation running that can be re-done\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     *  ['3'],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // undo the operation, it should return previous values: [['1'], ['2'], ['3']]\r\n     * hfInstance.undo();\r\n     *\r\n     * // do a redo, it should return the values after removing the second row: [['1'], ['3']]\r\n     * const changes = hfInstance.redo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    redo() {\r\n        this._crudOperations.redo();\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if there is at least one operation that can be undone.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     *  ['3'],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // should return 'true', it is possible to undo last operation\r\n     * // which is removing rows in this example\r\n     * const isSomethingToUndo = hfInstance.isThereSomethingToUndo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    isThereSomethingToUndo() {\r\n        return this._crudOperations.isThereSomethingToUndo();\r\n    }\r\n    /**\r\n     * Checks if there is at least one operation that can be re-done.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * hfInstance.undo();\r\n     *\r\n     * // when there is an action to redo, this returns 'true'\r\n     * const isSomethingToRedo = hfInstance.isThereSomethingToRedo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    isThereSomethingToRedo() {\r\n        return this._crudOperations.isThereSomethingToRedo();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to change the content in a rectangular area bounded by the box.\r\n     * If returns `true`, doing [[setCellContents]] operation won't throw any errors.\r\n     * Returns `false` if the address is invalid or the sheet does not exist.\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - single cell or block of cells to check\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // top left corner\r\n     * const address1 = { col: 0, row: 0, sheet: 0 };\r\n     * // bottom right corner\r\n     * const address2 = { col: 1, row: 0, sheet: 0 };\r\n     *\r\n     * // should return 'true' for this example, it is possible to set content of\r\n     * // width 2, height 1 in the first row and column of sheet 0\r\n     * const isSettable = hfInstance.isItPossibleToSetCellContents({ start: address1, end: address2 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isItPossibleToSetCellContents(address) {\r\n        let range;\r\n        if (isSimpleCellAddress(address)) {\r\n            range = new AbsoluteCellRange(address, address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            range = new AbsoluteCellRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', 'address');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureRangeInSizeLimits(range);\r\n            for (const it of range.addresses(this._dependencyGraph)) {\r\n                this._crudOperations.ensureItIsPossibleToChangeContent(it);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Sets the content for a block of cells of a given coordinates.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellAddress} topLeftCornerAddress - top left corner of block of cells\r\n     * @param {(RawCellContent[][]|RawCellContent)} cellContents - array with content\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the value is not an array of arrays or a raw cell value\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[ExpectedValueOfTypeError]] if topLeftCornerAddress argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1'],\r\n     * ]);\r\n     *\r\n     * // should set the content, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 3, row: 0 },\r\n     * //   newValue: 2,\r\n     * // }]\r\n     * const changes = hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    setCellContents(topLeftCornerAddress, cellContents) {\r\n        this._crudOperations.setCellContents(topLeftCornerAddress, cellContents);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Reorders rows of a sheet according to a source-target mapping.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // should set swap rows 0 and 2 in place, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 2 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 2 },\r\n     * //   newValue: null,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 5,\r\n     * // }]\r\n     * const changes = hfInstance.swapRowIndexes(0, [[0,2],[2,0]]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    swapRowIndexes(sheetId, rowMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setRowOrder(sheetId, rowMapping);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder rows of a sheet according to a source-target mapping.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0,2],[2,0]]);\r\n     *\r\n     * // returns false\r\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0,1]]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToSwapRowIndexes(sheetId, rowMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\r\n            this._crudOperations.testRowOrderForArrays(sheetId, rowMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders rows of a sheet according to a permutation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newRowOrder - permutation of rows\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     * // rows 0 and 2 swap places\r\n     *\r\n     * // returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 2 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 2 },\r\n     * //   newValue: null,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 5,\r\n     * // }]\r\n     * const changes = hfInstance.setRowOrder(0, [2, 1, 0]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    setRowOrder(sheetId, newRowOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\r\n        return this.swapRowIndexes(sheetId, mapping);\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder rows of a sheet according to a permutation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newRowOrder - permutation of rows\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSetRowOrder(0, [2, 1, 0]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSetRowOrder(0, [2]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToSetRowOrder(sheetId, newRowOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            const rowMapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\r\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\r\n            this._crudOperations.testRowOrderForArrays(sheetId, rowMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders columns of a sheet according to a source-target mapping.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} columnMapping - array mapping original positions to final positions of columns\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // should set swap columns 0 and 2 in place, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 2, row: 0 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 2, row: 1 },\r\n     * //   newValue: 5,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 1 },\r\n     * //   newValue: null,\r\n     * // }]\r\n     * const changes = hfInstance.swapColumnIndexes(0, [[0,2],[2,0]]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    swapColumnIndexes(sheetId, columnMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setColumnOrder(sheetId, columnMapping);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder columns of a sheet according to a source-target mapping.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0,2],[2,0]]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0,1]]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToSwapColumnIndexes(sheetId, columnMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\r\n            this._crudOperations.testColumnOrderForArrays(sheetId, columnMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders columns of a sheet according to a permutation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newColumnOrder - permutation of columns\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     * // columns 0 and 2 swap places\r\n     *\r\n     * // returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 2, row: 0 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 2, row: 1 },\r\n     * //   newValue: 5,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 1 },\r\n     * //   newValue: null,\r\n     * // }]\r\n     * const changes = hfInstance.setColumnOrder(0, [2, 1, 0]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    setColumnOrder(sheetId, newColumnOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newColumnOrder, 'column');\r\n        return this.swapColumnIndexes(sheetId, mapping);\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder columns of a sheet according to a permutation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newColumnOrder - permutation of columns\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSetColumnOrder(0, [2, 1, 0]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSetColumnOrder(0, [1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToSetColumnOrder(sheetId, newColumnOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            const columnMapping = this._crudOperations.mappingFromOrder(sheetId, newColumnOrder, 'column');\r\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\r\n            this._crudOperations.testColumnOrderForArrays(sheetId, columnMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add rows into a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that addRows can be called.\r\n     * If returns `true`, doing [[addRows]] operation won't throw any errors.\r\n     * Returns `false` if adding rows would exceed the sheet size limit or given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which rows will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add one row in the second row of sheet 0\r\n     * const isAddable = hfInstance.isItPossibleToAddRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToAddRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddRows(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds multiple rows into a specified position in a given sheet.\r\n     * Does nothing if rows are outside of effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which rows will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.addRows(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    addRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.addRows(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove rows from a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that removeRows can be called.\r\n     * If returns `true`, doing [[removeRows]] operation won't throw any errors.\r\n     * Returns `false` if given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which rows will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to remove one row from row 1 of sheet 0\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToRemoveRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRemoveRows(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes multiple rows from a specified position in a given sheet.\r\n     * Does nothing if rows are outside of the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which rows will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return: [{ sheet: 0, col: 1, row: 2, value: null }] for this example\r\n     * const changes = hfInstance.removeRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    removeRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.removeRows(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add columns into a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that addColumns can be called.\r\n     * If returns `true`, doing [[addColumns]] operation won't throw any errors.\r\n     * Returns `false` if adding columns would exceed the sheet size limit or given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which columns will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add 1 column in sheet 0, at column 1\r\n     * const isAddable = hfInstance.isItPossibleToAddColumns(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToAddColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddColumns(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds multiple columns into a specified position in a given sheet.\r\n     * Does nothing if the columns are outside of the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which columns will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=RAND()', '42'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 0.92754862796338,\r\n     * // }]\r\n     * const changes = hfInstance.addColumns(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    addColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.addColumns(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove columns from a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that removeColumns can be called.\r\n     * If returns `true`, doing [[removeColumns]] operation won't throw any errors.\r\n     * Returns `false` if given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which columns will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [column, amount]\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to remove one column, in place of the second column of sheet 0\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveColumns(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToRemoveColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRemoveColumns(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes multiple columns from a specified position in a given sheet.\r\n     * Does nothing if columns are outside of the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which columns will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount]\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1,2,3)', '=A1'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: { error: [CellError], value: '#REF!' },\r\n     * // }]\r\n     * const changes = hfInstance.removeColumns(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    removeColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.removeColumns(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move cells to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveCells can be called.\r\n     * If returns `true`, doing [[moveCells]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected columns, the target location has array or the provided address is invalid.\r\n     *\r\n     * @param {SimpleCellRange} source - range for a moved block\r\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if destinationLeftCorner, source, or any of basic type arguments are of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // choose the coordinates and assign them to variables\r\n     * const source = { sheet: 0, col: 1, row: 0 };\r\n     * const destination = { sheet: 0, col: 3, row: 0 };\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move a block of width 1 and height 1\r\n     * // from the corner: column 1 and row 0 of sheet 0\r\n     * // into destination corner: column 3, row 0 of sheet 0\r\n     * const isMovable = hfInstance.isItPossibleToMoveCells({ start: source, end: source }, destination);\r\n     * ```\r\n     * @category Cells\r\n     */\r\n    isItPossibleToMoveCells(source, destinationLeftCorner) {\r\n        if (!isSimpleCellAddress(destinationLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'destinationLeftCorner');\r\n        }\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        try {\r\n            const range = new AbsoluteCellRange(source.start, source.end);\r\n            this._crudOperations.operations.ensureItIsPossibleToMoveCells(range.start, range.width(), range.height(), destinationLeftCorner);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves the content of a cell block from source to the target location.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellRange} source - range for a moved block\r\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if destinationLeftCorner or source are of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=RAND()', '42'],\r\n     * ]);\r\n     *\r\n     * // choose the coordinates and assign them to variables\r\n     * const source = { sheet: 0, col: 1, row: 0 };\r\n     * const destination = { sheet: 0, col: 3, row: 0 };\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 0.93524248002062,\r\n     * // }]\r\n     * const changes = hfInstance.moveCells({ start: source, end: source }, destination);\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    moveCells(source, destinationLeftCorner) {\r\n        if (!isSimpleCellAddress(destinationLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'destinationLeftCorner');\r\n        }\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.moveCells(range.start, range.width(), range.height(), destinationLeftCorner);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move a particular number of rows to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveRows can be called.\r\n     * If returns `true`, doing [[moveRows]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected rows, the target location has array or the provided address is invalid.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startRow - number of the first row to move\r\n     * @param {number} numberOfRows - number of rows to move\r\n     * @param {number} targetRow - row number before which rows will be moved\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move one row from row 0 into row 2\r\n     * const isMovable = hfInstance.isItPossibleToMoveRows(0, 0, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startRow, 'number', 'startRow');\r\n        validateArgToType(numberOfRows, 'number', 'numberOfRows');\r\n        validateArgToType(targetRow, 'number', 'targetRow');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves a particular number of rows to a specified position in a given sheet.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startRow - number of the first row to move\r\n     * @param {number} numberOfRows - number of rows to move\r\n     * @param {number} targetRow - row number before which rows will be moved\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.moveRows(0, 0, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    moveRows(sheetId, startRow, numberOfRows, targetRow) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startRow, 'number', 'startRow');\r\n        validateArgToType(numberOfRows, 'number', 'numberOfRows');\r\n        validateArgToType(targetRow, 'number', 'targetRow');\r\n        this._crudOperations.moveRows(sheetId, startRow, numberOfRows, targetRow);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move a particular number of columns to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveColumns can be called.\r\n     * If returns `true`, doing [[moveColumns]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected columns, the target location has array or the provided address is invalid.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startColumn - number of the first column to move\r\n     * @param {number} numberOfColumns - number of columns to move\r\n     * @param {number} targetColumn - column number before which columns will be moved\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move one column from column 1 into column 2 of sheet 0\r\n     * const isMovable = hfInstance.isItPossibleToMoveColumns(0, 1, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startColumn, 'number', 'startColumn');\r\n        validateArgToType(numberOfColumns, 'number', 'numberOfColumns');\r\n        validateArgToType(targetColumn, 'number', 'targetColumn');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves a particular number of columns to a specified position in a given sheet.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startColumn - number of the first column to move\r\n     * @param {number} numberOfColumns - number of columns to move\r\n     * @param {number} targetColumn - column number before which columns will be moved\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '3', '=RAND()', '=SUM(A1:C1)'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 0.16210054671639,\r\n     * //  }, {\r\n     * //   address: { sheet: 0, col: 4, row: 0 },\r\n     * //   newValue: 6.16210054671639,\r\n     * // }]\r\n     * const changes = hfInstance.moveColumns(0, 1, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    moveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startColumn, 'number', 'startColumn');\r\n        validateArgToType(numberOfColumns, 'number', 'numberOfColumns');\r\n        validateArgToType(targetColumn, 'number', 'targetColumn');\r\n        this._crudOperations.moveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Stores a copy of the cell block in internal clipboard for the further paste.\r\n     * Returns the copied values for use in external clipboard.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangle range to copy\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // it copies [ [ 2 ] ]\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    copy(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.copy(range.start, range.width(), range.height());\r\n        return this.getRangeValues(source);\r\n    }\r\n    /**\r\n     * Stores information of the cell block in internal clipboard for further paste.\r\n     * Calling [[paste]] right after this method is equivalent to call [[moveCells]].\r\n     * Almost any CRUD operation called after this method will abort the cut operation.\r\n     * Returns the cut values for use in external clipboard.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangle range to cut\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // returns the values that were cut: [ [ 1 ] ]\r\n     * const clipboardContent = hfInstance.cut({\r\n     *   start: { sheet: 0, col: 0, row: 0 },\r\n     *   end: { sheet: 0, col: 0, row: 0 },\r\n     * });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    cut(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.cut(range.start, range.width(), range.height());\r\n        return this.getRangeValues(source);\r\n    }\r\n    /**\r\n     * When called after [[copy]] it pastes copied values and formulas into a cell block.\r\n     * When called after [[cut]] it performs [[moveCells]] operation into the cell block.\r\n     * Does nothing if the clipboard is empty.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellAddress} targetLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[NothingToPasteError]] when clipboard is empty\r\n     * @throws [[TargetLocationHasArrayError]] when the selected target area has array inside\r\n     * @throws [[ExpectedValueOfTypeError]] if targetLeftCorner is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // [ [ 2 ] ] was copied\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     *\r\n     * // returns a list of modified cells: their absolute addresses and new values\r\n     * const changes = hfInstance.paste({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    paste(targetLeftCorner) {\r\n        if (!isSimpleCellAddress(targetLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'targetLeftCorner');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        this._crudOperations.paste(targetLeftCorner);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether there is something in the clipboard.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // copy desired content\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     *\r\n     * // returns 'false', there is content in the clipboard\r\n     * const isClipboardEmpty = hfInstance.isClipboardEmpty();\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    isClipboardEmpty() {\r\n        return this._crudOperations.isClipboardEmpty();\r\n    }\r\n    /**\r\n     * Clears the clipboard content.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // clears the clipboard, isClipboardEmpty() should return true if called afterwards\r\n     * hfInstance.clearClipboard();\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    clearClipboard() {\r\n        this._crudOperations.clearClipboard();\r\n    }\r\n    /**\r\n     * Clears the redo stack in undoRedo history.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // do an operation, for example remove columns\r\n     * hfInstance.removeColumns(0, [0, 1]);\r\n     *\r\n     * // undo the operation\r\n     * hfInstance.undo();\r\n     *\r\n     * // redo the operation\r\n     * hfInstance.redo();\r\n     *\r\n     * // clear the redo stack\r\n     * hfInstance.clearRedoStack();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    clearRedoStack() {\r\n        this._crudOperations.undoRedo.clearRedoStack();\r\n    }\r\n    /**\r\n     * Clears the undo stack in undoRedo history.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // do an operation, for example remove columns\r\n     * hfInstance.removeColumns(0, [0, 1]);\r\n     *\r\n     * // undo the operation\r\n     * hfInstance.undo();\r\n     *\r\n     * // clear the undo stack\r\n     * hfInstance.clearUndoStack();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    clearUndoStack() {\r\n        this._crudOperations.undoRedo.clearUndoStack();\r\n    }\r\n    /**\r\n     * Returns the cell content of a given range in a [[CellValue]][][] format.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1,2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     *\r\n     * // returns calculated cells content: [ [ 3, 2 ], [ 5, 6 ] ]\r\n     * const rangeValues = hfInstance.getRangeValues({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeValues(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellValue(address)));\r\n    }\r\n    /**\r\n     * Returns cell formulas in given range.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1,2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     * // returns cell formulas of a given range only:\r\n     * // [ [ '=SUM(1,2)', undefined ], [ undefined, undefined ] ]\r\n     * const rangeFormulas = hfInstance.getRangeFormulas({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeFormulas(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellFormula(address)));\r\n    }\r\n    /**\r\n     * Returns serialized cells in given range.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1,2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     * // should return serialized cell content for the given range:\r\n     * // [ [ '=SUM(1,2)', 2 ], [ 5, 6 ] ]\r\n     * const rangeSerialized = hfInstance.getRangeSerialized({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeSerialized(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellSerialized(address)));\r\n    }\r\n    /**\r\n     * Returns values to fill target range using source range, with properly extending the range using wrap-around heuristic.\r\n     *\r\n     * @param {SimpleCellRange} source of data\r\n     * @param {SimpleCellRange} target range where data is intended to be put\r\n     * @param {boolean} offsetsFromTarget if true, offsets are computed from target corner, otherwise from source corner\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if source or target are of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([[1, '=A1'], ['=$A$1', '2']]);\r\n     *\r\n     * // should return [['2', '=$A$1', '2'], ['=A3', 1, '=C3'], ['2', '=$A$1', '2']]\r\n     * hfInstance.getFillRangeData( {start: {sheet: 0, row: 0, col: 0}, end: {sheet: 0, row: 1, col: 1}},\r\n     * {start: {sheet: 0, row: 1, col: 1}, end: {sheet: 0, row: 3, col: 3}});\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getFillRangeData(source, target, offsetsFromTarget = false) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        if (!isSimpleCellRange(target)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'target');\r\n        }\r\n        const sourceRange = new AbsoluteCellRange(source.start, source.end);\r\n        const targetRange = new AbsoluteCellRange(target.start, target.end);\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return targetRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => {\r\n            const row = ((address.row - (offsetsFromTarget ? target : source).start.row) % sourceRange.height() + sourceRange.height()) % sourceRange.height() + source.start.row;\r\n            const col = ((address.col - (offsetsFromTarget ? target : source).start.col) % sourceRange.width() + sourceRange.width()) % sourceRange.width() + source.start.col;\r\n            return this._serialization.getCellSerialized({ row, col, sheet: sourceRange.sheet }, address);\r\n        }));\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add a sheet to the engine.\r\n     * Checks against particular rules to ascertain that addSheet can be called.\r\n     * If returns `true`, doing [[addSheet]] operation won't throw any errors, and it is possible to add sheet with provided name.\r\n     * Returns `false` if the chosen name is already used.\r\n     *\r\n     * @param {string} sheetName - sheet name, case-insensitive\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'false' because 'MySheet2' already exists\r\n     * const isAddable = hfInstance.isItPossibleToAddSheet('MySheet2');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToAddSheet(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddSheet(sheetName);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a new sheet to the HyperFormula instance. Returns given or autogenerated name of a new sheet.\r\n     *\r\n     * @param {string} [sheetName] - if not specified, name is autogenerated\r\n     *\r\n     * @fires [[sheetAdded]] after the sheet was added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[SheetNameAlreadyTakenError]] when sheet with a given name already exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'MySheet3'\r\n     * const nameProvided = hfInstance.addSheet('MySheet3');\r\n     *\r\n     * // should return autogenerated 'Sheet4'\r\n     * // because no name was provided and 3 other ones already exist\r\n     * const generatedName = hfInstance.addSheet();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    addSheet(sheetName) {\r\n        if (sheetName !== undefined) {\r\n            validateArgToType(sheetName, 'string', 'sheetName');\r\n        }\r\n        const addedSheetName = this._crudOperations.addSheet(sheetName);\r\n        this._emitter.emit(Events.SheetAdded, addedSheetName);\r\n        return addedSheetName;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove sheet for the engine.\r\n     * Returns `true` if the provided sheet exists, and therefore it can be removed, doing [[removeSheet]] operation won't throw any errors.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because sheet with ID 1 exists and is removable\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToRemoveSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes a sheet\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @fires [[sheetRemoved]] after the sheet was removed\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: { error: [CellError], value: '#REF!' },\r\n     * // }]\r\n     * const changes = hfInstance.removeSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    removeSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const displayName = this.sheetMapping.getDisplayName(sheetId);\r\n        this._crudOperations.removeSheet(sheetId);\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.SheetRemoved, displayName, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to clear a specified sheet.\r\n     * If returns `true`, doing [[clearSheet]] operation won't throw any errors, provided sheet exists and its content can be cleared.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because 'MySheet2' exists and can be cleared\r\n     * const isClearable = hfInstance.isItPossibleToClearSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToClearSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Clears the sheet content. Double-checks if the sheet exists.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 0,\r\n     * // }]\r\n     * const changes = hfInstance.clearSheet(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    clearSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.clearSheet(sheetId);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to replace the sheet content.\r\n     * If returns `true`, doing [[setSheetContent]] operation won't throw any errors, the provided sheet exists and then its content can be replaced.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     * @param {RawCellContent[][]} values - array of new values\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because sheet of ID 0 exists\r\n     * // and the provided content can be placed in this sheet\r\n     * const isReplaceable = hfInstance.isItPossibleToReplaceSheetContent(0, [['50'], ['60']]);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToReplaceSheetContent(sheetId, values) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            this._crudOperations.ensureItIsPossibleToChangeSheetContents(sheetId, values);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Replaces the sheet content with new values.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     * @param {RawCellContent[][]} values - array of new values\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when values is not an array of arrays\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.setSheetContent(0, [['50'], ['60']]);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    setSheetContent(sheetId, values) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setSheetContent(sheetId, values);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Computes simple (absolute) address of a cell address based on its string representation.\r\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\r\n     *\r\n     * @param {string} cellAddress - string representation of cell address in A1 notation\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 0 }\r\n     * const simpleCellAddress = hfInstance.simpleCellAddressFromString('A1', 0);\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 5 }\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet1!A6');\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 5 }\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet1!$A$6');\r\n     *\r\n     * // returns 'undefined', as there's no 'Sheet 2' in the HyperFormula instance\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet2!A6');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellAddressFromString(cellAddress, sheetId) {\r\n        validateArgToType(cellAddress, 'string', 'cellAddress');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellAddressFromString(this.sheetMapping.get, cellAddress, sheetId);\r\n    }\r\n    /**\r\n     * Computes simple (absolute) address of a cell range based on its string representation.\r\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\r\n     *\r\n     * @param {string} cellRange - string representation of cell range in A1 notation\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // should return { start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 0 } }\r\n     * const simpleCellAddress = hfInstance.simpleCellRangeFromString('A1:A2', 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellRangeFromString(cellRange, sheetId) {\r\n        validateArgToType(cellRange, 'string', 'cellRange');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellRangeFromString(this.sheetMapping.get, cellRange, sheetId);\r\n    }\r\n    /**\r\n     * Returns string representation of an absolute address in A1 notation or `undefined` if the sheet index is not present in the engine.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - object representation of an absolute address\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if its arguments are of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // should return 'B2'\r\n     * const A1Notation = hfInstance.simpleCellAddressToString({ sheet: 0, col: 1, row: 1 }, 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellAddressToString(cellAddress, sheetId) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellAddressToString(this.sheetMapping.fetchDisplayName, cellAddress, sheetId);\r\n    }\r\n    /**\r\n     * Returns string representation of an absolute range in A1 notation or `undefined` if the sheet index is not present in the engine.\r\n     *\r\n     * @param {SimpleCellRange} cellRange - object representation of an absolute range\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if its arguments are of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     * hfInstance.addSheet('Sheet1'); //sheetId = 1\r\n     *\r\n     * // should return 'B2:C2'\r\n     * const A1Notation = hfInstance.simpleCellRangeToString({ start: { sheet: 0, col: 1, row: 1 }, end: { sheet: 0, col: 2, row: 1 } }, 0);\r\n     *\r\n     *  // should return 'Sheet1!B2:C2'\r\n     * const another = hfInstance.simpleCellRangeToString({ start: { sheet: 1, col: 1, row: 1 }, end: { sheet: 1, col: 2, row: 1 } }, 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellRangeToString(cellRange, sheetId) {\r\n        if (!isSimpleCellRange(cellRange)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'cellRange');\r\n        }\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellRangeToString(this.sheetMapping.fetchDisplayName, cellRange, sheetId);\r\n    }\r\n    /**\r\n     * Returns all the out-neighbors in the [dependency graph](../../guide/dependency-graph.md) for a given cell address or range. Including:\r\n     * - All cells with formulas that contain the given cell address or range\r\n     * - Some of the ranges that contain the given cell address or range\r\n     *\r\n     * The exact result depends on the optimizations applied by the HyperFormula to the dependency graph, some of which are described in the section [\"Optimizations for large ranges\"](../../guide/dependency-graph.md#optimizations-for-large-ranges).\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - object representation of an absolute address or range of addresses\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if address is not [[SimpleCellAddress]] or [[SimpleCellRange]]\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\r\n     *\r\n     * hfInstance.getCellDependents({ sheet: 0, col: 0, row: 0});\r\n     * // returns [{ sheet: 0, col: 1, row: 0}, { sheet: 0, col: 2, row: 0}]\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    getCellDependents(address) {\r\n        let vertex;\r\n        if (isSimpleCellAddress(address)) {\r\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', address);\r\n        }\r\n        if (vertex === undefined) {\r\n            return [];\r\n        }\r\n        return this._dependencyGraph.getAdjacentNodesAddresses(vertex);\r\n    }\r\n    /**\r\n     * Returns all the in-neighbors in the [dependency graph](../../guide/dependency-graph.md) for a given cell address or range. In particular:\r\n     * - If the argument is a single cell, `getCellPrecedents()` returns all cells and ranges contained in that cell's formula.\r\n     * - If the argument is a range of cells, `getCellPrecedents()` returns some of the cell addresses and smaller ranges contained in that range (but not all of them). The exact result depends on the optimizations applied by the HyperFormula to the dependency graph, some of which are described in the section [\"Optimizations for large ranges\"](../../guide/dependency-graph.md#optimizations-for-large-ranges).\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - object representation of an absolute address or range of addresses\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if address is of wrong type\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\r\n     *\r\n     * hfInstance.getCellPrecedents({ sheet: 0, col: 2, row: 0});\r\n     * // returns [{ sheet: 0, col: 0, row: 0}, { sheet: 0, col: 1, row: 0}]\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    getCellPrecedents(address) {\r\n        let vertex;\r\n        if (isSimpleCellAddress(address)) {\r\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', address);\r\n        }\r\n        if (vertex === undefined) {\r\n            return [];\r\n        }\r\n        return this._dependencyGraph.dependencyQueryAddresses(vertex);\r\n    }\r\n    /**\r\n     * Returns a unique sheet name assigned to the sheet of a given ID or `undefined` if the there is no sheet with a given ID.\r\n     *\r\n     * @param {number} sheetId - ID of the sheet, for which we want to retrieve name\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'MySheet2' as this sheet is the second one\r\n     * const sheetName = hfInstance.getSheetName(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetName(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return this.sheetMapping.getDisplayName(sheetId);\r\n    }\r\n    /**\r\n     * List all sheet names.\r\n     * Returns an array of sheet names as strings.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return all sheets names: ['MySheet1', 'MySheet2']\r\n     * const sheetNames = hfInstance.getSheetNames();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetNames() {\r\n        return this.sheetMapping.sheetNames();\r\n    }\r\n    /**\r\n     * Returns a unique sheet ID assigned to the sheet with a given name or `undefined` if the sheet does not exist.\r\n     *\r\n     * @param {string} sheetName - name of the sheet, for which we want to retrieve ID, case-insensitive.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return '0' because 'MySheet1' is of ID '0'\r\n     * const sheetID = hfInstance.getSheetId('MySheet1');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetId(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        return this.sheetMapping.get(sheetName);\r\n    }\r\n    /**\r\n     * Returns `true` whether sheet with a given name exists. The method accepts sheet name to be checked.\r\n     *\r\n     * @param {string} sheetName - name of the sheet, case-insensitive.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' since 'MySheet1' exists\r\n     * const sheetExist = hfInstance.doesSheetExist('MySheet1');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    doesSheetExist(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        return this.sheetMapping.hasSheetWithName(sheetName);\r\n    }\r\n    /**\r\n     * Returns the type of a cell at a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'FORMULA', the cell of given coordinates is of this type\r\n     * const cellA1Type = hfInstance.getCellType({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'VALUE', the cell of given coordinates is of this type\r\n     * const cellB1Type = hfInstance.getCellType({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const vertex = this.dependencyGraph.getCell(cellAddress);\r\n        return getCellType(vertex, cellAddress);\r\n    }\r\n    /**\r\n     * Returns `true` if the specified cell contains a simple value.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' since the selected cell contains a simple value\r\n     * const isA1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false' since the selected cell does not contain a simple value\r\n     * const isB1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    doesCellHaveSimpleValue(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this.getCellType(cellAddress) === CellType.VALUE;\r\n    }\r\n    /**\r\n     * Returns `true` if the specified cell contains a formula.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' since the A1 cell contains a formula\r\n     * const A1Formula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false' since the B1 cell does not contain a formula\r\n     * const B1NoFormula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    doesCellHaveFormula(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const cellType = this.getCellType(cellAddress);\r\n        return cellType === CellType.FORMULA || cellType === CellType.ARRAYFORMULA;\r\n    }\r\n    /**\r\n     * Returns`true` if the specified cell is empty.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   [null, '1'],\r\n     * ]);\r\n     *\r\n     * // should return 'true', cell of provided coordinates is empty\r\n     * const isEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false', cell of provided coordinates is not empty\r\n     * const isNotEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isCellEmpty(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this.getCellType(cellAddress) === CellType.EMPTY;\r\n    }\r\n    /**\r\n     * Returns `true` if a given cell is a part of an array.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *    ['{=TRANSPOSE(B1:B1)}'],\r\n     * ]);\r\n     *\r\n     * // should return 'true', cell of provided coordinates is a part of an array\r\n     * const isPartOfArray = hfInstance.isCellPartOfArray({ sheet: 0, col: 0, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isCellPartOfArray(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const cellType = this.getCellType(cellAddress);\r\n        return cellType === CellType.ARRAY || cellType === CellType.ARRAYFORMULA;\r\n    }\r\n    /**\r\n     * Returns type of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1,2,3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\r\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 1, row: 0 });\r\n     *\r\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\r\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 0, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueType(value);\r\n    }\r\n    /**\r\n     * Returns detailed type of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1%', '1$'],\r\n     * ]);\r\n     *\r\n     * // should return 'NUMBER_PERCENT', cell value type of provided coordinates is a number with a format inference percent.\r\n     * const cellType = hfInstance.getCellValueDetailedType({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'NUMBER_CURRENCY', cell value type of provided coordinates is a number with a format inference currency.\r\n     * const cellType = hfInstance.getCellValueDetailedType({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueDetailedType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueDetailedType(value);\r\n    }\r\n    /**\r\n     * Returns auxiliary format information of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1$', '1'],\r\n     * ]);\r\n     *\r\n     * // should return '$', cell value type of provided coordinates is a number with a format inference currency, parsed as using '$' as currency.\r\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return undefined, cell value type of provided coordinates is a number with no format information.\r\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueFormat(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueFormat(value);\r\n    }\r\n    /**\r\n     * Returns the number of existing sheets.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return the number of sheets which is '1'\r\n     * const sheetsCount = hfInstance.countSheets();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    countSheets() {\r\n        return this.sheetMapping.numberOfSheets();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to rename sheet.\r\n     * Returns `true` if the sheet with provided id exists and new name is available\r\n     * Returns `false` if sheet cannot be renamed\r\n     *\r\n     * @param {number} sheetId - a sheet number\r\n     * @param {string} newName - a name of the sheet to be given\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToRenameSheet(0, 'MySheet0');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToRenameSheet(sheetId, newName) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(newName, 'string', 'newName');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRenameSheet(sheetId, newName);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Renames a specified sheet.\r\n     *\r\n     * @param {number} sheetId - a sheet ID\r\n     * @param {string} newName - a name of the sheet to be given, if is the same as the old one the method does nothing\r\n     *\r\n     * @fires [[sheetRenamed]] after the sheet was renamed\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[SheetNameAlreadyTakenError]] when the provided sheet name already exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // renames the sheet 'MySheet1'\r\n     * hfInstance.renameSheet(0, 'MySheet0');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    renameSheet(sheetId, newName) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(newName, 'string', 'newName');\r\n        const oldName = this._crudOperations.renameSheet(sheetId, newName);\r\n        if (oldName !== undefined) {\r\n            this._emitter.emit(Events.SheetRenamed, oldName, newName);\r\n        }\r\n    }\r\n    /**\r\n     * Runs multiple operations and recomputes formulas at the end.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {() => void} batchOperations\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     * @fires [[evaluationSuspended]] always\r\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // multiple operations in a single callback will trigger evaluation only once\r\n     * // and only one set of changes is returned as a combined result of all\r\n     * // the operations that were triggered within the callback\r\n     * const changes = hfInstance.batch(() => {\r\n     *  hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     *  hfInstance.setCellContents({ col: 4, row: 0, sheet: 0 }, [['=A1']]);\r\n     * });\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    batch(batchOperations) {\r\n        this.suspendEvaluation();\r\n        this._crudOperations.beginUndoRedoBatchMode();\r\n        try {\r\n            batchOperations();\r\n        }\r\n        catch (e) {\r\n            this._crudOperations.commitUndoRedoBatchMode();\r\n            this.resumeEvaluation();\r\n            throw (e);\r\n        }\r\n        this._crudOperations.commitUndoRedoBatchMode();\r\n        return this.resumeEvaluation();\r\n    }\r\n    /**\r\n     * Suspends the dependency graph recalculation.\r\n     * It allows optimizing the performance.\r\n     * With this method, multiple CRUD operations can be done without triggering recalculation after every operation.\r\n     * Suspending evaluation should result in an overall faster calculation compared to recalculating after each operation separately.\r\n     * To resume the evaluation use [[resumeEvaluation]].\r\n     *\r\n     * @fires [[evaluationSuspended]] always\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // similar to batch() but operations are not within a callback,\r\n     * // one method suspends the recalculation\r\n     * // the second will resume calculations and return the changes\r\n     *\r\n     * // suspend the evaluation with this method\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // perform operations\r\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * hfInstance.setSheetContent(1, [['50'], ['60']]);\r\n     *\r\n     * // use resumeEvaluation to resume\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    suspendEvaluation() {\r\n        this._evaluationSuspended = true;\r\n        this._emitter.emit(Events.EvaluationSuspended);\r\n    }\r\n    /**\r\n     * Resumes the dependency graph recalculation that was suspended with [[suspendEvaluation]].\r\n     * It also triggers the recalculation and returns changes that are a result of all batched operations.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // similar to batch() but operations are not within a callback,\r\n     * // one method suspends the recalculation\r\n     * // the second will resume calculations and return the changes\r\n     *\r\n     * // first, suspend the evaluation\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // perform operations\r\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * hfInstance.setSheetContent(1, [['50'], ['60']]);\r\n     *\r\n     * // resume the evaluation\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    resumeEvaluation() {\r\n        this._evaluationSuspended = false;\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.EvaluationResumed, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Checks if the dependency graph recalculation process is suspended or not.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // suspend the evaluation\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // between suspendEvaluation() and resumeEvaluation()\r\n     * // or inside batch() callback it will return 'true', otherwise 'false'\r\n     * const isEvaluationSuspended = hfInstance.isEvaluationSuspended();\r\n     *\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    isEvaluationSuspended() {\r\n        return this._evaluationSuspended;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add named expression into a specific scope.\r\n     * Checks against particular rules to ascertain that addNamedExpression can be called.\r\n     * If returns `true`, doing [[addNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - a name of the expression to be added\r\n     * @param {RawCellContent} expression - the expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add named expression to global scope\r\n     * const isAddable = hfInstance.isItPossibleToAddNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToAddNamedExpression(expressionName, expression, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddNamedExpression(expressionName, expression, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a specified named expression.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - a name of the expression to be added\r\n     * @param {RawCellContent} expression - the expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\r\n     *\r\n     * @fires [[namedExpressionAdded]] always, unless [[batch]] mode is used\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionNameIsAlreadyTakenError]] when the named expression name is not available.\r\n     * @throws [[NamedExpressionNameIsInvalidError]] when the named expression name is not valid\r\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add own expression, scope limited to 'Sheet1' (sheetId=0), the method should return a list of cells which values\r\n     * // changed after the operation, their absolute addresses and new values\r\n     * // for this example:\r\n     * // [{\r\n     * //   name: 'prettyName',\r\n     * //   newValue: 142,\r\n     * // }]\r\n     * const changes = hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    addNamedExpression(expressionName, expression, scope, options) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.addNamedExpression(expressionName, expression, scope, options);\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.NamedExpressionAdded, expressionName, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Gets specified named expression value.\r\n     * Returns a [[CellValue]] or undefined if the given named expression does not exist.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression, only 'Sheet1' (sheetId=0) considered as it is the scope\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\r\n     *\r\n     * // returns the calculated value of a passed named expression, '142' for this example\r\n     * const myFormula = hfInstance.getNamedExpressionValue('prettyName', 'Sheet1');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpressionValue(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression) {\r\n            return this._serialization.getCellValue(namedExpression.address);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a normalized formula string for given named expression, or `undefined` for a named expression that does not exist or does not hold a formula.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression in 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // returns a normalized formula string corresponding to the passed name from 'Sheet1' (sheetId=0),\r\n     * // '=Sheet1!A1+100' for this example\r\n     * const myFormula = hfInstance.getNamedExpressionFormula('prettyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpressionFormula(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression === undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this._serialization.getCellFormula(namedExpression.address);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a named expression, or `undefined` for a named expression that does not exist or does not hold a formula.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression in 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // returns a named expression that corresponds to the passed name from 'Sheet1' (sheetId=0)\r\n     * // for this example, returns:\r\n     * // {name: 'prettyName', expression: '=Sheet1!$A$1+100', options: undefined, scope: 0}\r\n     * const myFormula = hfInstance.getNamedExpression('prettyName', 0);\r\n     *\r\n     * // for a named expression that doesn't exist, returns 'undefined':\r\n     * const myFormulaTwo = hfInstance.getNamedExpression('uglyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression === undefined) {\r\n            return undefined;\r\n        }\r\n        const expression = this._serialization.getCellFormula(namedExpression.address);\r\n        return {\r\n            name: expressionName,\r\n            scope: scope,\r\n            expression: expression,\r\n            options: namedExpression.options\r\n        };\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to change named expression in a specific scope.\r\n     * Checks against particular rules to ascertain that changeNamedExpression can be called.\r\n     * If returns `true`, doing [[changeNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {RawCellContent} newExpression - a new expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to change named expression\r\n     * const isAddable = hfInstance.isItPossibleToChangeNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToChangeNamedExpression(expressionName, newExpression, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Changes a given named expression to a specified formula.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {RawCellContent} newExpression - a new expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     * @throws [[ArrayFormulasNotSupportedError]] when the named expression formula is an array formula\r\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression, scope limited to 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // change the named expression\r\n     * const changes = hfInstance.changeNamedExpression('prettyName', '=Sheet1!$A$1+200');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    changeNamedExpression(expressionName, newExpression, scope, options) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.changeNamedExpressionExpression(expressionName, scope, newExpression, options);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove named expression from a specific scope.\r\n     * Checks against particular rules to ascertain that removeNamedExpression can be called.\r\n     * If returns `true`, doing [[removeNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to change named expression\r\n     * const isAddable = hfInstance.isItPossibleToRemoveNamedExpression('prettyName');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToRemoveNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.isItPossibleToRemoveNamedExpression(expressionName, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes a named expression.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @fires [[namedExpressionRemoved]] after the expression was removed\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // remove the named expression\r\n     * const changes = hfInstance.removeNamedExpression('prettyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    removeNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        const removedNamedExpression = this._crudOperations.removeNamedExpression(expressionName, scope);\r\n        if (removedNamedExpression) {\r\n            const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n            this._emitter.emit(Events.NamedExpressionRemoved, removedNamedExpression.displayName, changes);\r\n            return changes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    /**\r\n     * Lists all named expressions.\r\n     * Returns an array of expression names defined in a scope, as strings.\r\n     *\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     *  ['60'],\r\n     * ]);\r\n     *\r\n     * // add two named expressions and one scoped\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * hfInstance.addNamedExpression('anotherPrettyName', '=Sheet1!$A$2+100');\r\n     * hfInstance.addNamedExpression('alsoPrettyName', '=Sheet1!$A$3+100', 0);\r\n     *\r\n     * // list the expressions, should return: ['prettyName', 'anotherPrettyName'] for this example\r\n     * const listOfExpressions = hfInstance.listNamedExpressions();\r\n     *\r\n     *  // list the expressions, should return: ['alsoPrettyName'] for this example\r\n     * const listOfExpressions = hfInstance.listNamedExpressions(0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    listNamedExpressions(scope) {\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        return this._namedExpressions.getAllNamedExpressionsNamesInScope(scope);\r\n    }\r\n    /**\r\n     * Returns all named expressions serialized.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     *  ['60'],\r\n     * ]);\r\n     *\r\n     * // add two named expressions and one scoped\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * hfInstance.addNamedExpression('anotherPrettyName', '=Sheet1!$A$2+100');\r\n     * hfInstance.addNamedExpression('prettyName3', '=Sheet1!$A$3+100', 0);\r\n     *\r\n     * // get all expressions serialized\r\n     * // should return:\r\n     * // [\r\n     * // {name: 'prettyName', expression: '=Sheet1!$A$1+100', options: undefined, scope: undefined},\r\n     * // {name: 'anotherPrettyName', expression: '=Sheet1!$A$2+100', options: undefined, scope: undefined},\r\n     * // {name: 'alsoPrettyName', expression: '=Sheet1!$A$3+100', options: undefined, scope: 0}\r\n     * // ]\r\n     * const allExpressions = hfInstance.getAllNamedExpressionsSerialized();\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getAllNamedExpressionsSerialized() {\r\n        return this._serialization.getAllNamedExpressionsSerialized();\r\n    }\r\n    /**\r\n     * Parses and then unparses a formula.\r\n     * Returns a normalized formula (e.g. restores the original capitalization of sheet names, function names, cell addresses, and named expressions).\r\n     *\r\n     * @param {string} formulaString - a formula in a proper format - it must start with \"=\"\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula, i.e. does not start with \"=\"\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     * ]);\r\n     *\r\n     * // returns '=Sheet1!$A$1+10'\r\n     * const normalizedFormula = hfInstance.normalizeFormula('=SHEET1!$A$1+10');\r\n     *\r\n     * // returns '=3*$A$1'\r\n     * const normalizedFormula = hfInstance.normalizeFormula('=3*$a$1');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    normalizeFormula(formulaString) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        const { ast, address } = this.extractTemporaryFormula(formulaString);\r\n        if (ast === undefined) {\r\n            throw new NotAFormulaError();\r\n        }\r\n        return this._unparser.unparse(ast, address);\r\n    }\r\n    /**\r\n     * Calculates fire-and-forget formula, returns the calculated value.\r\n     *\r\n     * @param {string} formulaString - A formula in a proper format, starting with `=`.\r\n     * @param {number} sheetId - The ID of a sheet in context of which the formula gets evaluated.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type arguments is of wrong type.\r\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula (i.e. doesn't start with `=`).\r\n     * @throws [[NoSheetWithIdError]] when the provided `sheetID` doesn't exist.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  Sheet1: [['58']],\r\n     *  Sheet2: [['1', '2', '3'], ['4', '5', '6']]\r\n     * });\r\n     *\r\n     * // returns the calculated formula's value\r\n     * // for this example, returns `68`\r\n     * const calculatedFormula = hfInstance.calculateFormula('=A1+10', 0);\r\n     *\r\n     * // for this example, returns [['11', '12', '13'], ['14', '15', '16']]\r\n     * const calculatedFormula = hfInstance.calculateFormula('=A1:B3+10', 1);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    calculateFormula(formulaString, sheetId) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n        const { ast, address, dependencies } = this.extractTemporaryFormula(formulaString, sheetId);\r\n        if (ast === undefined) {\r\n            throw new NotAFormulaError();\r\n        }\r\n        const internalCellValue = this.evaluator.runAndForget(ast, address, dependencies);\r\n        return this._exporter.exportScalarOrRange(internalCellValue);\r\n    }\r\n    /**\r\n     * Validates the formula.\r\n     * If the provided string starts with \"=\" and is a parsable formula, the method returns `true`.\r\n     * The validation is purely grammatical: the method doesn't verify if the formula can be calculated or not.\r\n     *\r\n     * @param {string} formulaString -  a formula in a proper format - it must start with \"=\"\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // checks if the given string is a valid formula, should return 'true' for this example\r\n     * const isFormula = hfInstance.validateFormula('=SUM(1,2)');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    validateFormula(formulaString) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        const { ast } = this.extractTemporaryFormula(formulaString);\r\n        if (ast === undefined) {\r\n            return false;\r\n        }\r\n        if (ast.type === AstNodeType.ERROR && !ast.error) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns translated names of all functions registered in this instance of HyperFormula\r\n     * according to the language set in the configuration\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // return translated names of all functions, assign to a variable\r\n     * const allNames = hfInstance.getRegisteredFunctionNames();\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getRegisteredFunctionNames() {\r\n        const language = HyperFormula.getLanguage(this._config.language);\r\n        return language.getFunctionTranslations(this._functionRegistry.getRegisteredFunctionIds());\r\n    }\r\n    /**\r\n     * Returns class of a plugin used by function with given id\r\n     *\r\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // register a plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     *\r\n     * // get the plugin\r\n     * const myPlugin = hfInstance.getFunctionPlugin('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getFunctionPlugin(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        return this._functionRegistry.getFunctionPlugin(functionId);\r\n    }\r\n    /**\r\n     * Returns classes of all plugins registered in this instance of HyperFormula\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // return classes of all plugins registered, assign to a variable\r\n     * const allNames = hfInstance.getAllFunctionPlugins();\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getAllFunctionPlugins() {\r\n        return this._functionRegistry.getPlugins();\r\n    }\r\n    /**\r\n     * Interprets number as a date + time.\r\n     *\r\n     * @param {number} inputNumber - number of days since nullDate, should be non-negative, fractions are interpreted as hours/minutes/seconds.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass the number of days since nullDate\r\n     * // the method should return formatted date and time, for this example:\r\n     * // {year: 2020, month: 1, day: 15, hours: 2, minutes: 24, seconds: 0}\r\n     * const dateTimeFromNumber = hfInstance.numberToDateTime(43845.1);\r\n     *\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToDateTime(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return this._evaluator.interpreter.dateTimeHelper.numberToSimpleDateTime(inputNumber);\r\n    }\r\n    /**\r\n     * Interprets number as a date.\r\n     *\r\n     * @param {number} inputNumber - number of days since nullDate, should be non-negative, fractions are ignored.\r\n  \r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n  \r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass the number of days since nullDate\r\n     * // the method should return formatted date, for this example:\r\n     * // {year: 2020, month: 1, day: 15}\r\n     * const dateFromNumber = hfInstance.numberToDate(43845);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToDate(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return this._evaluator.interpreter.dateTimeHelper.numberToSimpleDate(inputNumber);\r\n    }\r\n    /**\r\n     * Interprets number as a time (hours/minutes/seconds).\r\n     *\r\n     * @param {number} inputNumber - time in 24h units.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass a number to be interpreted as a time\r\n     * // should return {hours: 26, minutes: 24} for this example\r\n     * const timeFromNumber = hfInstance.numberToTime(1.1);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToTime(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return numberToSimpleTime(inputNumber);\r\n    }\r\n    /**\r\n     * Subscribes to an event.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass a simple handler\r\n     * hfInstance.on('sheetAdded', ( ) => { console.log('foo') });\r\n     *\r\n     * // add a sheet to trigger an event,\r\n     * // console should print 'foo' after each time sheet is added in this example\r\n     * hfInstance.addSheet('FooBar');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    on(event, listener) {\r\n        this._emitter.on(event, listener);\r\n    }\r\n    /**\r\n     * Subscribes to an event once.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass a simple handler\r\n     * hfInstance.once('sheetAdded', ( ) => { console.log('foo') });\r\n     *\r\n     * // call addSheet twice,\r\n     * // console should print 'foo' only once when the sheet is added in this example\r\n     * hfInstance.addSheet('FooBar');\r\n     * hfInstance.addSheet('FooBaz');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    once(event, listener) {\r\n        this._emitter.once(event, listener);\r\n    }\r\n    /**\r\n     * Unsubscribes from an event or from all events.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // define a simple function to be called upon emitting an event\r\n     * const handler = ( ) => { console.log('baz') }\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass the handler\r\n     * hfInstance.on('sheetAdded', handler);\r\n     *\r\n     * // add a sheet to trigger an event,\r\n     * // console should print 'baz' each time a sheet is added\r\n     * hfInstance.addSheet('FooBar');\r\n     *\r\n     * // unsubscribe from a 'sheetAdded'\r\n     * hfInstance.off('sheetAdded', handler);\r\n     *\r\n     * // add a sheet, the console should not print anything\r\n     * hfInstance.addSheet('FooBaz');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    off(event, listener) {\r\n        this._emitter.off(event, listener);\r\n    }\r\n    /**\r\n     * Destroys instance of HyperFormula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // destroys the instance\r\n     * hfInstance.destroy();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    destroy() {\r\n        objectDestroy(this);\r\n    }\r\n    ensureEvaluationIsNotSuspended() {\r\n        if (this._evaluationSuspended) {\r\n            throw new EvaluationSuspendedError();\r\n        }\r\n    }\r\n    extractTemporaryFormula(formulaString, sheetId = 1) {\r\n        const parsedCellContent = this._cellContentParser.parse(formulaString);\r\n        const address = { sheet: sheetId, col: 0, row: 0 };\r\n        if (!(parsedCellContent instanceof CellContent.Formula)) {\r\n            return { address, dependencies: [] };\r\n        }\r\n        const { ast, errors, dependencies } = this._parser.parse(parsedCellContent.formula, address);\r\n        if (errors.length > 0) {\r\n            return { address, dependencies: [] };\r\n        }\r\n        return { ast, address, dependencies };\r\n    }\r\n    /**\r\n     * Runs a recomputation starting from recently changed vertices.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     */\r\n    recomputeIfDependencyGraphNeedsIt() {\r\n        if (!this._evaluationSuspended) {\r\n            const changes = this._crudOperations.getAndClearContentChanges();\r\n            const verticesToRecomputeFrom = Array.from(this.dependencyGraph.verticesToRecompute());\r\n            this.dependencyGraph.clearRecentlyChangedVertices();\r\n            if (verticesToRecomputeFrom.length > 0) {\r\n                changes.addAll(this.evaluator.partialRun(verticesToRecomputeFrom));\r\n            }\r\n            const exportedChanges = changes.exportChanges(this._exporter);\r\n            if (!changes.isEmpty()) {\r\n                this._emitter.emit(Events.ValuesUpdated, exportedChanges);\r\n            }\r\n            return exportedChanges;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\n/**\r\n * Version of the HyperFormula.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.version = process.env.HT_VERSION;\r\n/**\r\n * Latest build date.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.buildDate = process.env.HT_BUILD_DATE;\r\n/**\r\n * A release date.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.releaseDate = process.env.HT_RELEASE_DATE;\r\n/**\r\n * Contains all available languages to use in registerLanguage.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.languages = {};\r\nHyperFormula.registeredLanguages = new Map();\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySizePredictor } from './ArraySize';\r\nimport { CellContentParser } from './CellContentParser';\r\nimport { ClipboardOperations } from './ClipboardOperations';\r\nimport { Config } from './Config';\r\nimport { CrudOperations } from './CrudOperations';\r\nimport { DateTimeHelper } from './DateTimeHelper';\r\nimport { DependencyGraph } from './DependencyGraph';\r\nimport { SheetSizeLimitExceededError } from './errors';\r\nimport { Evaluator } from './Evaluator';\r\nimport { Exporter } from './Exporter';\r\nimport { GraphBuilder } from './GraphBuilder';\r\nimport { UIElement } from './i18n';\r\nimport { ArithmeticHelper } from './interpreter/ArithmeticHelper';\r\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\r\nimport { Interpreter } from './interpreter/Interpreter';\r\nimport { LazilyTransformingAstService } from './LazilyTransformingAstService';\r\nimport { buildColumnSearchStrategy } from './Lookup/SearchStrategy';\r\nimport { NamedExpressions } from './NamedExpressions';\r\nimport { NumberLiteralHelper } from './NumberLiteralHelper';\r\nimport { Operations } from './Operations';\r\nimport { buildLexerConfig, ParserWithCaching, Unparser } from './parser';\r\nimport { Serialization } from './Serialization';\r\nimport { findBoundaries, validateAsSheet } from './Sheet';\r\nimport { EmptyStatistics, Statistics, StatType } from './statistics';\r\nimport { UndoRedo } from './UndoRedo';\r\nexport class BuildEngineFactory {\r\n    static buildFromSheets(sheets, configInput = {}, namedExpressions = []) {\r\n        const config = new Config(configInput);\r\n        return this.buildEngine(config, sheets, namedExpressions);\r\n    }\r\n    static buildFromSheet(sheet, configInput = {}, namedExpressions = []) {\r\n        const config = new Config(configInput);\r\n        const newsheetprefix = config.translationPackage.getUITranslation(UIElement.NEW_SHEET_PREFIX) + '1';\r\n        return this.buildEngine(config, { [newsheetprefix]: sheet }, namedExpressions);\r\n    }\r\n    static buildEmpty(configInput = {}, namedExpressions = []) {\r\n        return this.buildEngine(new Config(configInput), {}, namedExpressions);\r\n    }\r\n    static rebuildWithConfig(config, sheets, namedExpressions, stats) {\r\n        return this.buildEngine(config, sheets, namedExpressions, stats);\r\n    }\r\n    static buildEngine(config, sheets = {}, inputNamedExpressions = [], stats = config.useStats ? new Statistics() : new EmptyStatistics()) {\r\n        stats.start(StatType.BUILD_ENGINE_TOTAL);\r\n        const namedExpressions = new NamedExpressions();\r\n        const functionRegistry = new FunctionRegistry(config);\r\n        const lazilyTransformingAstService = new LazilyTransformingAstService(stats);\r\n        const dependencyGraph = DependencyGraph.buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats);\r\n        const columnSearch = buildColumnSearchStrategy(dependencyGraph, config, stats);\r\n        const sheetMapping = dependencyGraph.sheetMapping;\r\n        const addressMapping = dependencyGraph.addressMapping;\r\n        for (const sheetName in sheets) {\r\n            if (Object.prototype.hasOwnProperty.call(sheets, sheetName)) {\r\n                const sheet = sheets[sheetName];\r\n                validateAsSheet(sheet);\r\n                const boundaries = findBoundaries(sheet);\r\n                if (boundaries.height > config.maxRows || boundaries.width > config.maxColumns) {\r\n                    throw new SheetSizeLimitExceededError();\r\n                }\r\n                const sheetId = sheetMapping.addSheet(sheetName);\r\n                addressMapping.autoAddSheet(sheetId, sheet, boundaries);\r\n            }\r\n        }\r\n        const parser = new ParserWithCaching(config, functionRegistry, sheetMapping.get);\r\n        lazilyTransformingAstService.parser = parser;\r\n        const unparser = new Unparser(config, buildLexerConfig(config), sheetMapping.fetchDisplayName, namedExpressions);\r\n        const dateTimeHelper = new DateTimeHelper(config);\r\n        const numberLiteralHelper = new NumberLiteralHelper(config);\r\n        const arithmeticHelper = new ArithmeticHelper(config, dateTimeHelper, numberLiteralHelper);\r\n        const cellContentParser = new CellContentParser(config, dateTimeHelper, numberLiteralHelper);\r\n        const arraySizePredictor = new ArraySizePredictor(config, functionRegistry);\r\n        const operations = new Operations(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor);\r\n        const undoRedo = new UndoRedo(config, operations);\r\n        lazilyTransformingAstService.undoRedo = undoRedo;\r\n        const clipboardOperations = new ClipboardOperations(config, dependencyGraph, operations);\r\n        const crudOperations = new CrudOperations(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions);\r\n        inputNamedExpressions.forEach((entry) => {\r\n            crudOperations.ensureItIsPossibleToAddNamedExpression(entry.name, entry.expression, entry.scope);\r\n            crudOperations.operations.addNamedExpression(entry.name, entry.expression, entry.scope, entry.options);\r\n        });\r\n        const exporter = new Exporter(config, namedExpressions, sheetMapping.fetchDisplayName, lazilyTransformingAstService);\r\n        const serialization = new Serialization(dependencyGraph, unparser, exporter);\r\n        const interpreter = new Interpreter(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper);\r\n        stats.measure(StatType.GRAPH_BUILD, () => {\r\n            const graphBuilder = new GraphBuilder(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor);\r\n            graphBuilder.buildGraph(sheets, stats);\r\n        });\r\n        const evaluator = new Evaluator(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch);\r\n        evaluator.run();\r\n        stats.end(StatType.BUILD_ENGINE_TOTAL);\r\n        return {\r\n            config,\r\n            stats,\r\n            dependencyGraph,\r\n            columnSearch,\r\n            parser,\r\n            unparser,\r\n            cellContentParser,\r\n            evaluator,\r\n            lazilyTransformingAstService,\r\n            crudOperations,\r\n            exporter,\r\n            namedExpressions,\r\n            serialization,\r\n            functionRegistry,\r\n        };\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { timeToNumber } from './DateTimeHelper';\r\nimport { ErrorMessage } from './error-message';\r\nimport { UnableToParseError } from './errors';\r\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\r\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, getRawValue, PercentNumber, TimeNumber } from './interpreter/InterpreterValue';\r\nexport var CellContent;\r\n(function (CellContent) {\r\n    class Number {\r\n        constructor(value) {\r\n            this.value = value;\r\n            this.value = cloneNumber(this.value, fixNegativeZero(getRawValue(this.value)));\r\n        }\r\n    }\r\n    CellContent.Number = Number;\r\n    class String {\r\n        constructor(value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    CellContent.String = String;\r\n    class Boolean {\r\n        constructor(value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    CellContent.Boolean = Boolean;\r\n    class Empty {\r\n        static getSingletonInstance() {\r\n            if (!Empty.instance) {\r\n                Empty.instance = new Empty();\r\n            }\r\n            return Empty.instance;\r\n        }\r\n    }\r\n    CellContent.Empty = Empty;\r\n    class Formula {\r\n        constructor(formula) {\r\n            this.formula = formula;\r\n        }\r\n    }\r\n    CellContent.Formula = Formula;\r\n    class Error {\r\n        constructor(errorType, message) {\r\n            this.value = new CellError(errorType, message);\r\n        }\r\n    }\r\n    CellContent.Error = Error;\r\n})(CellContent || (CellContent = {}));\r\n/**\r\n * Checks whether string looks like formula or not.\r\n *\r\n * @param text - formula\r\n */\r\nexport function isFormula(text) {\r\n    return text.startsWith('=');\r\n}\r\nexport function isBoolean(text) {\r\n    const tl = text.toLowerCase();\r\n    return tl === 'true' || tl === 'false';\r\n}\r\nexport function isError(text, errorMapping) {\r\n    const upperCased = text.toUpperCase();\r\n    const errorRegex = /#[A-Za-z0-9\\/]+[?!]?/;\r\n    return errorRegex.test(upperCased) && Object.prototype.hasOwnProperty.call(errorMapping, upperCased);\r\n}\r\nexport class CellContentParser {\r\n    constructor(config, dateHelper, numberLiteralsHelper) {\r\n        this.config = config;\r\n        this.dateHelper = dateHelper;\r\n        this.numberLiteralsHelper = numberLiteralsHelper;\r\n    }\r\n    parse(content) {\r\n        if (content === undefined || content === null) {\r\n            return CellContent.Empty.getSingletonInstance();\r\n        }\r\n        else if (typeof content === 'number') {\r\n            if (isNumberOverflow(content)) {\r\n                return new CellContent.Error(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            else {\r\n                return new CellContent.Number(content);\r\n            }\r\n        }\r\n        else if (typeof content === 'boolean') {\r\n            return new CellContent.Boolean(content);\r\n        }\r\n        else if (content instanceof Date) {\r\n            const dateVal = this.dateHelper.dateToNumber({\r\n                day: content.getDate(),\r\n                month: content.getMonth() + 1,\r\n                year: content.getFullYear()\r\n            });\r\n            const timeVal = timeToNumber({\r\n                hours: content.getHours(),\r\n                minutes: content.getMinutes(),\r\n                seconds: content.getSeconds() + content.getMilliseconds() / 1000\r\n            });\r\n            const val = dateVal + timeVal;\r\n            if (val < 0) {\r\n                return new CellContent.Error(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            if (val % 1 === 0) {\r\n                return new CellContent.Number(new DateNumber(val, 'Date()'));\r\n            }\r\n            else if (val < 1) {\r\n                return new CellContent.Number(new TimeNumber(val, 'Date()'));\r\n            }\r\n            else {\r\n                return new CellContent.Number(new DateTimeNumber(val, 'Date()'));\r\n            }\r\n        }\r\n        else if (typeof content === 'string') {\r\n            if (isBoolean(content)) {\r\n                return new CellContent.Boolean(content.toLowerCase() === 'true');\r\n            }\r\n            else if (isFormula(content)) {\r\n                return new CellContent.Formula(content);\r\n            }\r\n            else if (isError(content, this.config.errorMapping)) {\r\n                return new CellContent.Error(this.config.errorMapping[content.toUpperCase()]);\r\n            }\r\n            else {\r\n                let trimmedContent = content.trim();\r\n                let mode = 0;\r\n                let currency;\r\n                if (trimmedContent.endsWith('%')) {\r\n                    mode = 1;\r\n                    trimmedContent = trimmedContent.slice(0, trimmedContent.length - 1);\r\n                }\r\n                else {\r\n                    const res = this.currencyMatcher(trimmedContent);\r\n                    if (res !== undefined) {\r\n                        mode = 2;\r\n                        [currency, trimmedContent] = res;\r\n                    }\r\n                }\r\n                const val = this.numberLiteralsHelper.numericStringToMaybeNumber(trimmedContent);\r\n                if (val !== undefined) {\r\n                    let parseAsNum;\r\n                    if (mode === 1) {\r\n                        parseAsNum = new PercentNumber(val / 100);\r\n                    }\r\n                    else if (mode === 2) {\r\n                        parseAsNum = new CurrencyNumber(val, currency);\r\n                    }\r\n                    else {\r\n                        parseAsNum = val;\r\n                    }\r\n                    return new CellContent.Number(parseAsNum);\r\n                }\r\n                const parsedDateNumber = this.dateHelper.dateStringToDateNumber(trimmedContent);\r\n                if (parsedDateNumber !== undefined) {\r\n                    return new CellContent.Number(parsedDateNumber);\r\n                }\r\n                else {\r\n                    return new CellContent.String(content.startsWith('\\'') ? content.slice(1) : content);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new UnableToParseError(content);\r\n        }\r\n    }\r\n    currencyMatcher(token) {\r\n        for (const currency of this.config.currencySymbol) {\r\n            if (token.startsWith(currency)) {\r\n                return [currency, token.slice(currency.length)];\r\n            }\r\n            if (token.endsWith(currency)) {\r\n                return [currency, token.slice(0, token.length - currency.length)];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { InvalidArgumentsError, SheetSizeLimitExceededError } from './errors';\r\nvar ClipboardOperationType;\r\n(function (ClipboardOperationType) {\r\n    ClipboardOperationType[ClipboardOperationType[\"COPY\"] = 0] = \"COPY\";\r\n    ClipboardOperationType[ClipboardOperationType[\"CUT\"] = 1] = \"CUT\";\r\n})(ClipboardOperationType || (ClipboardOperationType = {}));\r\nexport var ClipboardCellType;\r\n(function (ClipboardCellType) {\r\n    ClipboardCellType[ClipboardCellType[\"VALUE\"] = 0] = \"VALUE\";\r\n    ClipboardCellType[ClipboardCellType[\"EMPTY\"] = 1] = \"EMPTY\";\r\n    ClipboardCellType[ClipboardCellType[\"FORMULA\"] = 2] = \"FORMULA\";\r\n    ClipboardCellType[ClipboardCellType[\"PARSING_ERROR\"] = 3] = \"PARSING_ERROR\";\r\n})(ClipboardCellType || (ClipboardCellType = {}));\r\nclass Clipboard {\r\n    constructor(sourceLeftCorner, width, height, type, content) {\r\n        this.sourceLeftCorner = sourceLeftCorner;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.type = type;\r\n        this.content = content;\r\n    }\r\n    *getContent(leftCorner) {\r\n        if (this.content === undefined) {\r\n            return;\r\n        }\r\n        else {\r\n            for (let y = 0; y < this.height; ++y) {\r\n                for (let x = 0; x < this.width; ++x) {\r\n                    yield [simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y), this.content[y][x]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class ClipboardOperations {\r\n    constructor(config, dependencyGraph, operations) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.operations = operations;\r\n        this.maxRows = config.maxRows;\r\n        this.maxColumns = config.maxColumns;\r\n    }\r\n    cut(leftCorner, width, height) {\r\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.CUT);\r\n    }\r\n    copy(leftCorner, width, height) {\r\n        const content = [];\r\n        for (let y = 0; y < height; ++y) {\r\n            content[y] = [];\r\n            for (let x = 0; x < width; ++x) {\r\n                const clipboardCell = this.operations.getClipboardCell(simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y));\r\n                content[y].push(clipboardCell);\r\n            }\r\n        }\r\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.COPY, content);\r\n    }\r\n    abortCut() {\r\n        if (this.clipboard && this.clipboard.type === ClipboardOperationType.CUT) {\r\n            this.clear();\r\n        }\r\n    }\r\n    clear() {\r\n        this.clipboard = undefined;\r\n    }\r\n    ensureItIsPossibleToCopyPaste(destinationLeftCorner) {\r\n        if (this.clipboard === undefined) {\r\n            return;\r\n        }\r\n        if (invalidSimpleCellAddress(destinationLeftCorner) ||\r\n            !this.dependencyGraph.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\r\n            throw new InvalidArgumentsError('a valid target address.');\r\n        }\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, this.clipboard.width, this.clipboard.height);\r\n        if (targetRange.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(targetRange)) {\r\n            throw new Error('It is not possible to paste onto an array');\r\n        }\r\n    }\r\n    isCutClipboard() {\r\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.CUT;\r\n    }\r\n    isCopyClipboard() {\r\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.COPY;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { InvalidAddressError, InvalidArgumentsError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NothingToPasteError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError } from './errors';\r\nimport { doesContainRelativeReferences } from './NamedExpressions';\r\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\r\nimport { findBoundaries, validateAsSheet } from './Sheet';\r\nimport { ColumnsSpan, RowsSpan } from './Span';\r\nimport { AddColumnsUndoEntry, AddNamedExpressionUndoEntry, AddRowsUndoEntry, AddSheetUndoEntry, ChangeNamedExpressionUndoEntry, ClearSheetUndoEntry, MoveCellsUndoEntry, MoveColumnsUndoEntry, MoveRowsUndoEntry, PasteUndoEntry, RemoveColumnsUndoEntry, RemoveNamedExpressionUndoEntry, RemoveRowsUndoEntry, RemoveSheetUndoEntry, RenameSheetUndoEntry, SetCellContentsUndoEntry, SetColumnOrderUndoEntry, SetRowOrderUndoEntry, SetSheetContentUndoEntry } from './UndoRedo';\r\nexport class CrudOperations {\r\n    constructor(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions) {\r\n        this.operations = operations;\r\n        this.undoRedo = undoRedo;\r\n        this.clipboardOperations = clipboardOperations;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.parser = parser;\r\n        this.cellContentParser = cellContentParser;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.namedExpressions = namedExpressions;\r\n        this.maxRows = config.maxRows;\r\n        this.maxColumns = config.maxColumns;\r\n    }\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    addRows(sheet, ...indexes) {\r\n        const addRowsCommand = new AddRowsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToAddRows(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.operations.addRows(addRowsCommand);\r\n        this.undoRedo.saveOperation(new AddRowsUndoEntry(addRowsCommand));\r\n    }\r\n    removeRows(sheet, ...indexes) {\r\n        const removeRowsCommand = new RemoveRowsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToRemoveRows(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const rowsRemovals = this.operations.removeRows(removeRowsCommand);\r\n        this.undoRedo.saveOperation(new RemoveRowsUndoEntry(removeRowsCommand, rowsRemovals));\r\n    }\r\n    addColumns(sheet, ...indexes) {\r\n        const addColumnsCommand = new AddColumnsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToAddColumns(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.operations.addColumns(addColumnsCommand);\r\n        this.undoRedo.saveOperation(new AddColumnsUndoEntry(addColumnsCommand));\r\n    }\r\n    removeColumns(sheet, ...indexes) {\r\n        const removeColumnsCommand = new RemoveColumnsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToRemoveColumns(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const columnsRemovals = this.operations.removeColumns(removeColumnsCommand);\r\n        this.undoRedo.saveOperation(new RemoveColumnsUndoEntry(removeColumnsCommand, columnsRemovals));\r\n    }\r\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const { version, overwrittenCellsData, addedGlobalNamedExpressions } = this.operations.moveCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        this.undoRedo.saveOperation(new MoveCellsUndoEntry(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version));\r\n    }\r\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        this.ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const version = this.operations.moveRows(sheet, startRow, numberOfRows, targetRow);\r\n        this.undoRedo.saveOperation(new MoveRowsUndoEntry(sheet, startRow, numberOfRows, targetRow, version));\r\n    }\r\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        this.ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn);\r\n        this.undoRedo.clearRedoStack();\r\n        const version = this.operations.moveColumns(sheet, startColumn, numberOfColumns, targetColumn);\r\n        this.undoRedo.saveOperation(new MoveColumnsUndoEntry(sheet, startColumn, numberOfColumns, targetColumn, version));\r\n    }\r\n    cut(sourceLeftCorner, width, height) {\r\n        this.clipboardOperations.cut(sourceLeftCorner, width, height);\r\n    }\r\n    ensureItIsPossibleToCopy(sourceLeftCorner, width, height) {\r\n        if (!isPositiveInteger(width)) {\r\n            throw new InvalidArgumentsError('width to be positive integer.');\r\n        }\r\n        if (!isPositiveInteger(height)) {\r\n            throw new InvalidArgumentsError('height to be positive integer.');\r\n        }\r\n    }\r\n    copy(sourceLeftCorner, width, height) {\r\n        this.ensureItIsPossibleToCopy(sourceLeftCorner, width, height);\r\n        this.clipboardOperations.copy(sourceLeftCorner, width, height);\r\n    }\r\n    paste(targetLeftCorner) {\r\n        const clipboard = this.clipboardOperations.clipboard;\r\n        if (clipboard === undefined) {\r\n            throw new NothingToPasteError();\r\n        }\r\n        else if (this.clipboardOperations.isCutClipboard()) {\r\n            this.moveCells(clipboard.sourceLeftCorner, clipboard.width, clipboard.height, targetLeftCorner);\r\n        }\r\n        else if (this.clipboardOperations.isCopyClipboard()) {\r\n            this.clipboardOperations.ensureItIsPossibleToCopyPaste(targetLeftCorner);\r\n            const targetRange = AbsoluteCellRange.spanFrom(targetLeftCorner, clipboard.width, clipboard.height);\r\n            const oldContent = this.operations.getRangeClipboardCells(targetRange);\r\n            this.undoRedo.clearRedoStack();\r\n            const addedGlobalNamedExpressions = this.operations.restoreClipboardCells(clipboard.sourceLeftCorner.sheet, clipboard.getContent(targetLeftCorner));\r\n            this.undoRedo.saveOperation(new PasteUndoEntry(targetLeftCorner, oldContent, clipboard.content, addedGlobalNamedExpressions));\r\n        }\r\n    }\r\n    beginUndoRedoBatchMode() {\r\n        this.undoRedo.beginBatchMode();\r\n    }\r\n    commitUndoRedoBatchMode() {\r\n        this.undoRedo.commitBatchMode();\r\n    }\r\n    isClipboardEmpty() {\r\n        return this.clipboardOperations.clipboard === undefined;\r\n    }\r\n    clearClipboard() {\r\n        this.clipboardOperations.clear();\r\n    }\r\n    addSheet(name) {\r\n        if (name !== undefined) {\r\n            this.ensureItIsPossibleToAddSheet(name);\r\n        }\r\n        this.undoRedo.clearRedoStack();\r\n        const addedSheetName = this.operations.addSheet(name);\r\n        this.undoRedo.saveOperation(new AddSheetUndoEntry(addedSheetName));\r\n        return addedSheetName;\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const originalName = this.sheetMapping.fetchDisplayName(sheetId);\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        const { version, scopedNamedExpressions } = this.operations.removeSheet(sheetId);\r\n        this.undoRedo.saveOperation(new RemoveSheetUndoEntry(originalName, sheetId, oldSheetContent, scopedNamedExpressions, version));\r\n    }\r\n    renameSheet(sheetId, newName) {\r\n        this.ensureItIsPossibleToRenameSheet(sheetId, newName);\r\n        const oldName = this.operations.renameSheet(sheetId, newName);\r\n        if (oldName !== undefined) {\r\n            this.undoRedo.clearRedoStack();\r\n            this.undoRedo.saveOperation(new RenameSheetUndoEntry(sheetId, oldName, newName));\r\n        }\r\n        return oldName;\r\n    }\r\n    clearSheet(sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        this.operations.clearSheet(sheetId);\r\n        this.undoRedo.saveOperation(new ClearSheetUndoEntry(sheetId, oldSheetContent));\r\n    }\r\n    setCellContents(topLeftCornerAddress, cellContents) {\r\n        if (!(cellContents instanceof Array)) {\r\n            cellContents = [[cellContents]];\r\n        }\r\n        else {\r\n            for (let i = 0; i < cellContents.length; i++) {\r\n                if (!(cellContents[i] instanceof Array)) {\r\n                    throw new InvalidArgumentsError('an array of arrays or a raw cell value.');\r\n                }\r\n            }\r\n        }\r\n        this.ensureItIsPossibleToChangeCellContents(topLeftCornerAddress, cellContents);\r\n        this.undoRedo.clearRedoStack();\r\n        const oldContents = [];\r\n        for (let i = 0; i < cellContents.length; i++) {\r\n            for (let j = 0; j < cellContents[i].length; j++) {\r\n                const address = {\r\n                    sheet: topLeftCornerAddress.sheet,\r\n                    row: topLeftCornerAddress.row + i,\r\n                    col: topLeftCornerAddress.col + j,\r\n                };\r\n                const newContent = cellContents[i][j];\r\n                this.clipboardOperations.abortCut();\r\n                const oldContent = this.operations.setCellContent(address, newContent);\r\n                oldContents.push({ address, newContent, oldContent });\r\n            }\r\n        }\r\n        this.undoRedo.saveOperation(new SetCellContentsUndoEntry(oldContents));\r\n    }\r\n    setSheetContent(sheetId, values) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.ensureItIsPossibleToChangeSheetContents(sheetId, values);\r\n        validateAsSheet(values);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        this.operations.setSheetContent(sheetId, values);\r\n        this.undoRedo.saveOperation(new SetSheetContentUndoEntry(sheetId, oldSheetContent, values));\r\n    }\r\n    setRowOrder(sheetId, rowMapping) {\r\n        this.validateSwapRowIndexes(sheetId, rowMapping);\r\n        this.testRowOrderForArrays(sheetId, rowMapping);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldContent = this.operations.setRowOrder(sheetId, rowMapping);\r\n        this.undoRedo.saveOperation(new SetRowOrderUndoEntry(sheetId, rowMapping, oldContent));\r\n    }\r\n    validateSwapRowIndexes(sheetId, rowMapping) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        this.validateRowOrColumnMapping(sheetId, rowMapping, 'row');\r\n    }\r\n    testColumnOrderForArrays(sheetId, columnMapping) {\r\n        for (const [source, target] of columnMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\r\n                if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(rowRange)) {\r\n                    throw new SourceLocationHasArrayError();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setColumnOrder(sheetId, columnMapping) {\r\n        this.validateSwapColumnIndexes(sheetId, columnMapping);\r\n        this.testColumnOrderForArrays(sheetId, columnMapping);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldContent = this.operations.setColumnOrder(sheetId, columnMapping);\r\n        this.undoRedo.saveOperation(new SetColumnOrderUndoEntry(sheetId, columnMapping, oldContent));\r\n    }\r\n    validateSwapColumnIndexes(sheetId, columnMapping) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        this.validateRowOrColumnMapping(sheetId, columnMapping, 'column');\r\n    }\r\n    testRowOrderForArrays(sheetId, rowMapping) {\r\n        for (const [source, target] of rowMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\r\n                if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(rowRange)) {\r\n                    throw new SourceLocationHasArrayError();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    mappingFromOrder(sheetId, newOrder, rowOrColumn) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\r\n        if (newOrder.length !== limit) {\r\n            throw new InvalidArgumentsError(`number of ${rowOrColumn}s provided to be sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\r\n        }\r\n        const ret = [];\r\n        for (let i = 0; i < limit; i++) {\r\n            if (newOrder[i] !== i) {\r\n                ret.push([i, newOrder[i]]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    undo() {\r\n        if (this.undoRedo.isUndoStackEmpty()) {\r\n            throw new NoOperationToUndoError();\r\n        }\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.undo();\r\n    }\r\n    redo() {\r\n        if (this.undoRedo.isRedoStackEmpty()) {\r\n            throw new NoOperationToRedoError();\r\n        }\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.redo();\r\n    }\r\n    addNamedExpression(expressionName, expression, sheetId, options) {\r\n        this.ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetId);\r\n        this.operations.addNamedExpression(expressionName, expression, sheetId, options);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new AddNamedExpressionUndoEntry(expressionName, expression, sheetId, options));\r\n    }\r\n    changeNamedExpressionExpression(expressionName, sheetId, newExpression, options) {\r\n        this.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, sheetId);\r\n        const [oldNamedExpression, content] = this.operations.changeNamedExpressionExpression(expressionName, newExpression, sheetId, options);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new ChangeNamedExpressionUndoEntry(oldNamedExpression, newExpression, content, sheetId, options));\r\n    }\r\n    removeNamedExpression(expressionName, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        const [namedExpression, content] = this.operations.removeNamedExpression(expressionName, sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new RemoveNamedExpressionUndoEntry(namedExpression, content, sheetId));\r\n        return namedExpression;\r\n    }\r\n    ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.ensureNamedExpressionNameIsValid(expressionName, sheetId);\r\n        this.ensureNamedExpressionIsValid(expression);\r\n    }\r\n    ensureItIsPossibleToChangeNamedExpression(expressionName, expression, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        if (this.namedExpressions.namedExpressionForScope(expressionName, sheetId) === undefined) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        this.ensureNamedExpressionIsValid(expression);\r\n    }\r\n    isItPossibleToRemoveNamedExpression(expressionName, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        if (this.namedExpressions.namedExpressionForScope(expressionName, sheetId) === undefined) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddRows(sheet, ...indexes) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const newRowsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\r\n        if (sheetHeight + newRowsCount > this.maxRows) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        for (const [row, numberOfRowsToAdd] of indexes) {\r\n            if (!isNonnegativeInteger(row) || !isPositiveInteger(numberOfRowsToAdd)) {\r\n                throw new InvalidArgumentsError('row number to be nonnegative and number of rows to add to be positive.');\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToRemoveRows(sheet, ...indexes) {\r\n        for (const [rowStart, numberOfRows] of indexes) {\r\n            const rowEnd = rowStart + numberOfRows - 1;\r\n            if (!isNonnegativeInteger(rowStart) || !isNonnegativeInteger(rowEnd)) {\r\n                throw new InvalidArgumentsError('starting and ending row to be nonnegative.');\r\n            }\r\n            if (rowEnd < rowStart) {\r\n                throw new InvalidArgumentsError('starting row to be smaller than the ending row.');\r\n            }\r\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n                throw new NoSheetWithIdError(sheet);\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddColumns(sheet, ...indexes) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const newColumnsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\r\n        if (sheetWidth + newColumnsCount > this.maxColumns) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        for (const [column, numberOfColumnsToAdd] of indexes) {\r\n            if (!isNonnegativeInteger(column) || !isPositiveInteger(numberOfColumnsToAdd)) {\r\n                throw new InvalidArgumentsError('column number to be nonnegative and number of columns to add to be positive.');\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToRemoveColumns(sheet, ...indexes) {\r\n        for (const [columnStart, numberOfColumns] of indexes) {\r\n            const columnEnd = columnStart + numberOfColumns - 1;\r\n            if (!isNonnegativeInteger(columnStart) || !isNonnegativeInteger(columnEnd)) {\r\n                throw new InvalidArgumentsError('starting and ending column to be nonnegative.');\r\n            }\r\n            if (columnEnd < columnStart) {\r\n                throw new InvalidArgumentsError('starting column to be smaller than the ending column.');\r\n            }\r\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n                throw new NoSheetWithIdError(sheet);\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        this.ensureItIsPossibleToAddRows(sheet, [targetRow, numberOfRows]);\r\n        const sourceStart = simpleCellAddress(sheet, 0, startRow);\r\n        const targetStart = simpleCellAddress(sheet, 0, targetRow);\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)\r\n            || invalidSimpleCellAddress(sourceStart)\r\n            || invalidSimpleCellAddress(targetStart)\r\n            || !isPositiveInteger(numberOfRows)\r\n            || (targetRow <= startRow + numberOfRows && targetRow >= startRow)) {\r\n            throw new InvalidArgumentsError('a valid range of rows to move.');\r\n        }\r\n        const width = this.dependencyGraph.getSheetWidth(sheet);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, width, numberOfRows);\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (targetRow > 0 && this.dependencyGraph.arrayMapping.isFormulaArrayInAllRows(RowsSpan.fromNumberOfRows(sheet, targetRow - 1, 2))) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        this.ensureItIsPossibleToAddColumns(sheet, [targetColumn, numberOfColumns]);\r\n        const sourceStart = simpleCellAddress(sheet, startColumn, 0);\r\n        const targetStart = simpleCellAddress(sheet, targetColumn, 0);\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)\r\n            || invalidSimpleCellAddress(sourceStart)\r\n            || invalidSimpleCellAddress(targetStart)\r\n            || !isPositiveInteger(numberOfColumns)\r\n            || (targetColumn <= startColumn + numberOfColumns && targetColumn >= startColumn)) {\r\n            throw new InvalidArgumentsError('a valid range of columns to move.');\r\n        }\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, numberOfColumns, sheetHeight);\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (targetColumn > 0 && this.dependencyGraph.arrayMapping.isFormulaArrayInAllColumns(ColumnsSpan.fromNumberOfColumns(sheet, targetColumn - 1, 2))) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddSheet(name) {\r\n        if (this.sheetMapping.hasSheetWithName(name)) {\r\n            throw new SheetNameAlreadyTakenError(name);\r\n        }\r\n    }\r\n    ensureItIsPossibleToRenameSheet(sheetId, name) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        const existingSheetId = this.sheetMapping.get(name);\r\n        if (existingSheetId !== undefined && existingSheetId !== sheetId) {\r\n            throw new SheetNameAlreadyTakenError(name);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeContent(address) {\r\n        if (invalidSimpleCellAddress(address)) {\r\n            throw new InvalidAddressError(address);\r\n        }\r\n        if (!this.sheetMapping.hasSheetWithId(address.sheet)) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeCellContents(inputAddress, content) {\r\n        const boundaries = findBoundaries(content);\r\n        const targetRange = AbsoluteCellRange.spanFrom(inputAddress, boundaries.width, boundaries.height);\r\n        this.ensureRangeInSizeLimits(targetRange);\r\n        for (const address of targetRange.addresses(this.dependencyGraph)) {\r\n            this.ensureItIsPossibleToChangeContent(address);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeSheetContents(sheetId, content) {\r\n        const boundaries = findBoundaries(content);\r\n        const targetRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheetId, 0, 0), boundaries.width, boundaries.height);\r\n        this.ensureRangeInSizeLimits(targetRange);\r\n    }\r\n    ensureRangeInSizeLimits(range) {\r\n        if (range.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n    }\r\n    isThereSomethingToUndo() {\r\n        return !this.undoRedo.isUndoStackEmpty();\r\n    }\r\n    isThereSomethingToRedo() {\r\n        return !this.undoRedo.isRedoStackEmpty();\r\n    }\r\n    getAndClearContentChanges() {\r\n        return this.operations.getAndClearContentChanges();\r\n    }\r\n    ensureScopeIdIsValid(scopeId) {\r\n        if (scopeId !== undefined && !this.sheetMapping.hasSheetWithId(scopeId)) {\r\n            throw new NoSheetWithIdError(scopeId);\r\n        }\r\n    }\r\n    validateRowOrColumnMapping(sheetId, rowMapping, rowOrColumn) {\r\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\r\n        const sources = rowMapping.map(([a, _]) => a).sort((a, b) => a - b);\r\n        const targets = rowMapping.map(([_, b]) => b).sort((a, b) => a - b);\r\n        for (let i = 0; i < sources.length; i++) {\r\n            if (!isNonnegativeInteger(sources[i]) || sources[i] >= limit) {\r\n                throw new InvalidArgumentsError(`${rowOrColumn} numbers to be nonnegative integers and less than sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\r\n            }\r\n            if (sources[i] === sources[i + 1]) {\r\n                throw new InvalidArgumentsError(`source ${rowOrColumn} numbers to be unique.`);\r\n            }\r\n            if (sources[i] !== targets[i]) {\r\n                throw new InvalidArgumentsError(`target ${rowOrColumn} numbers to be permutation of source ${rowOrColumn} numbers.`);\r\n            }\r\n        }\r\n    }\r\n    ensureNamedExpressionNameIsValid(expressionName, sheetId) {\r\n        if (!this.namedExpressions.isNameValid(expressionName)) {\r\n            throw new NamedExpressionNameIsInvalidError(expressionName);\r\n        }\r\n        if (!this.namedExpressions.isNameAvailable(expressionName, sheetId)) {\r\n            throw new NamedExpressionNameIsAlreadyTakenError(expressionName);\r\n        }\r\n    }\r\n    ensureNamedExpressionIsValid(expression) {\r\n        const parsedExpression = this.cellContentParser.parse(expression);\r\n        if (parsedExpression instanceof CellContent.Formula) {\r\n            const parsingResult = this.parser.parse(parsedExpression.formula, simpleCellAddress(-1, 0, 0));\r\n            if (doesContainRelativeReferences(parsingResult.ast)) {\r\n                throw new NoRelativeAddressesAllowedError();\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction isPositiveInteger(x) {\r\n    return Number.isInteger(x) && x > 0;\r\n}\r\nfunction isNonnegativeInteger(x) {\r\n    return Number.isInteger(x) && x >= 0;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from './Cell';\r\nimport { AstNodeType } from './parser';\r\nexport class InternalNamedExpression {\r\n    constructor(displayName, address, added, options) {\r\n        this.displayName = displayName;\r\n        this.address = address;\r\n        this.added = added;\r\n        this.options = options;\r\n    }\r\n    normalizeExpressionName() {\r\n        return this.displayName.toLowerCase();\r\n    }\r\n    copy() {\r\n        return new InternalNamedExpression(this.displayName, this.address, this.added, this.options);\r\n    }\r\n}\r\nclass WorkbookStore {\r\n    constructor() {\r\n        this.mapping = new Map();\r\n    }\r\n    has(expressionName) {\r\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\r\n    }\r\n    isNameAvailable(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        return !(namedExpression && namedExpression.added);\r\n    }\r\n    add(namedExpression) {\r\n        this.mapping.set(namedExpression.normalizeExpressionName(), namedExpression);\r\n    }\r\n    get(expressionName) {\r\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\r\n    }\r\n    getExisting(expressionName) {\r\n        const namedExpression = this.mapping.get(this.normalizeExpressionName(expressionName));\r\n        if (namedExpression && namedExpression.added) {\r\n            return namedExpression;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    remove(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        if (namedExpression) {\r\n            namedExpression.added = false;\r\n        }\r\n    }\r\n    getAllNamedExpressions() {\r\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\r\n    }\r\n    normalizeExpressionName(expressionName) {\r\n        return expressionName.toLowerCase();\r\n    }\r\n}\r\nclass WorksheetStore {\r\n    constructor() {\r\n        this.mapping = new Map();\r\n    }\r\n    add(namedExpression) {\r\n        this.mapping.set(this.normalizeExpressionName(namedExpression.displayName), namedExpression);\r\n    }\r\n    get(expressionName) {\r\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\r\n    }\r\n    has(expressionName) {\r\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\r\n    }\r\n    getAllNamedExpressions() {\r\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\r\n    }\r\n    isNameAvailable(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        return !this.mapping.has(normalizedExpressionName);\r\n    }\r\n    remove(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        if (namedExpression) {\r\n            this.mapping.delete(normalizedExpressionName);\r\n        }\r\n    }\r\n    normalizeExpressionName(expressionName) {\r\n        return expressionName.toLowerCase();\r\n    }\r\n}\r\nexport class NamedExpressions {\r\n    constructor() {\r\n        this.nextNamedExpressionRow = 0;\r\n        this.workbookStore = new WorkbookStore();\r\n        this.worksheetStores = new Map();\r\n        this.addressCache = new Map();\r\n    }\r\n    isNameAvailable(expressionName, sheetId) {\r\n        var _a, _b;\r\n        if (sheetId === undefined) {\r\n            return this.workbookStore.isNameAvailable(expressionName);\r\n        }\r\n        else {\r\n            return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.isNameAvailable(expressionName)) !== null && _b !== void 0 ? _b : true;\r\n        }\r\n    }\r\n    namedExpressionInAddress(row) {\r\n        const namedExpression = this.addressCache.get(row);\r\n        if (namedExpression && namedExpression.added) {\r\n            return namedExpression;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    namedExpressionForScope(expressionName, sheetId) {\r\n        var _a;\r\n        if (sheetId === undefined) {\r\n            return this.workbookStore.getExisting(expressionName);\r\n        }\r\n        else {\r\n            return (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName);\r\n        }\r\n    }\r\n    nearestNamedExpression(expressionName, sheetId) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName)) !== null && _b !== void 0 ? _b : this.workbookStore.getExisting(expressionName);\r\n    }\r\n    isExpressionInScope(expressionName, sheetId) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.has(expressionName)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    isNameValid(expressionName) {\r\n        if (/^[A-Za-z]+[0-9]+$/.test(expressionName)) {\r\n            return false;\r\n        }\r\n        return /^[A-Za-z\\u00C0-\\u02AF_][A-Za-z0-9\\u00C0-\\u02AF._]*$/.test(expressionName);\r\n    }\r\n    addNamedExpression(expressionName, sheetId, options) {\r\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\r\n        let namedExpression = store.get(expressionName);\r\n        if (namedExpression !== undefined) {\r\n            namedExpression.added = true;\r\n            namedExpression.displayName = expressionName;\r\n            namedExpression.options = options;\r\n        }\r\n        else {\r\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), true, options);\r\n            store.add(namedExpression);\r\n        }\r\n        this.addressCache.set(namedExpression.address.row, namedExpression);\r\n        return namedExpression;\r\n    }\r\n    restoreNamedExpression(namedExpression, sheetId) {\r\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\r\n        namedExpression.added = true;\r\n        store.add(namedExpression);\r\n        this.addressCache.set(namedExpression.address.row, namedExpression);\r\n        return namedExpression;\r\n    }\r\n    namedExpressionOrPlaceholder(expressionName, sheetId) {\r\n        var _a;\r\n        return (_a = this.worksheetStoreOrCreate(sheetId).get(expressionName)) !== null && _a !== void 0 ? _a : this.workbookNamedExpressionOrPlaceholder(expressionName);\r\n    }\r\n    workbookNamedExpressionOrPlaceholder(expressionName) {\r\n        let namedExpression = this.workbookStore.get(expressionName);\r\n        if (namedExpression === undefined) {\r\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), false);\r\n            this.workbookStore.add(namedExpression);\r\n        }\r\n        return namedExpression;\r\n    }\r\n    remove(expressionName, sheetId) {\r\n        let store;\r\n        if (sheetId === undefined) {\r\n            store = this.workbookStore;\r\n        }\r\n        else {\r\n            store = this.worksheetStore(sheetId);\r\n        }\r\n        const namedExpression = store === null || store === void 0 ? void 0 : store.get(expressionName);\r\n        if (store === undefined || namedExpression === undefined || !namedExpression.added) {\r\n            throw 'Named expression does not exist';\r\n        }\r\n        store.remove(expressionName);\r\n        if (store instanceof WorksheetStore && store.mapping.size === 0) {\r\n            this.worksheetStores.delete(sheetId);\r\n        }\r\n        this.addressCache.delete(namedExpression.address.row);\r\n    }\r\n    getAllNamedExpressionsNamesInScope(sheetId) {\r\n        return this.getAllNamedExpressions().filter(({ scope }) => scope === sheetId).map((ne) => ne.expression.displayName);\r\n    }\r\n    getAllNamedExpressionsNames() {\r\n        return this.getAllNamedExpressions().map((ne) => ne.expression.displayName);\r\n    }\r\n    getAllNamedExpressions() {\r\n        const storedNamedExpressions = [];\r\n        this.workbookStore.getAllNamedExpressions().forEach(expr => {\r\n            storedNamedExpressions.push({\r\n                expression: expr,\r\n                scope: undefined\r\n            });\r\n        });\r\n        this.worksheetStores.forEach((store, sheetNum) => {\r\n            store.getAllNamedExpressions().forEach(expr => {\r\n                storedNamedExpressions.push({\r\n                    expression: expr,\r\n                    scope: sheetNum\r\n                });\r\n            });\r\n        });\r\n        return storedNamedExpressions;\r\n    }\r\n    getAllNamedExpressionsForScope(scope) {\r\n        var _a, _b;\r\n        if (scope === undefined) {\r\n            return this.workbookStore.getAllNamedExpressions();\r\n        }\r\n        else {\r\n            return (_b = (_a = this.worksheetStores.get(scope)) === null || _a === void 0 ? void 0 : _a.getAllNamedExpressions()) !== null && _b !== void 0 ? _b : [];\r\n        }\r\n    }\r\n    worksheetStoreOrCreate(sheetId) {\r\n        let store = this.worksheetStores.get(sheetId);\r\n        if (!store) {\r\n            store = new WorksheetStore();\r\n            this.worksheetStores.set(sheetId, store);\r\n        }\r\n        return store;\r\n    }\r\n    worksheetStore(sheetId) {\r\n        return this.worksheetStores.get(sheetId);\r\n    }\r\n    nextAddress() {\r\n        return simpleCellAddress(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, 0, this.nextNamedExpressionRow++);\r\n    }\r\n}\r\nNamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS = -1;\r\nexport const doesContainRelativeReferences = (ast) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            return false;\r\n        case AstNodeType.CELL_REFERENCE:\r\n            return !ast.reference.isAbsolute();\r\n        case AstNodeType.CELL_RANGE:\r\n        case AstNodeType.COLUMN_RANGE:\r\n        case AstNodeType.ROW_RANGE:\r\n            return !ast.start.isAbsolute();\r\n        case AstNodeType.NAMED_EXPRESSION:\r\n            return false;\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            return doesContainRelativeReferences(ast.value);\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            return doesContainRelativeReferences(ast.left) || doesContainRelativeReferences(ast.right);\r\n        case AstNodeType.PARENTHESIS:\r\n            return doesContainRelativeReferences(ast.expression);\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            return ast.args.some((arg) => doesContainRelativeReferences(arg));\r\n        }\r\n        case AstNodeType.ARRAY: {\r\n            return ast.args.some(row => row.some(arg => doesContainRelativeReferences(arg)));\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { absolutizeDependencies, filterDependenciesOutOfScope } from './absolutizeDependencies';\r\nimport { ArraySize } from './ArraySize';\r\nimport { equalSimpleCellAddress, invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { ClipboardCellType } from './ClipboardOperations';\r\nimport { ContentChanges } from './ContentChanges';\r\nimport { ArrayVertex, EmptyCellVertex, FormulaCellVertex, ParsingErrorVertex, SparseStrategy, ValueCellVertex } from './DependencyGraph';\r\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\r\nimport { AddColumnsTransformer } from './dependencyTransformers/AddColumnsTransformer';\r\nimport { AddRowsTransformer } from './dependencyTransformers/AddRowsTransformer';\r\nimport { CleanOutOfScopeDependenciesTransformer } from './dependencyTransformers/CleanOutOfScopeDependenciesTransformer';\r\nimport { MoveCellsTransformer } from './dependencyTransformers/MoveCellsTransformer';\r\nimport { RemoveColumnsTransformer } from './dependencyTransformers/RemoveColumnsTransformer';\r\nimport { RemoveRowsTransformer } from './dependencyTransformers/RemoveRowsTransformer';\r\nimport { RemoveSheetTransformer } from './dependencyTransformers/RemoveSheetTransformer';\r\nimport { InvalidArgumentsError, NamedExpressionDoesNotExistError, NoRelativeAddressesAllowedError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError } from './errors';\r\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\r\nimport { doesContainRelativeReferences } from './NamedExpressions';\r\nimport { NamedExpressionDependency } from './parser';\r\nimport { findBoundaries } from './Sheet';\r\nimport { ColumnsSpan, RowsSpan } from './Span';\r\nimport { StatType } from './statistics';\r\nexport class RemoveRowsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeRemovedIndexes(this.indexes);\r\n    }\r\n    rowsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class AddRowsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeAddedIndexes(this.indexes);\r\n    }\r\n    rowsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class AddColumnsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeAddedIndexes(this.indexes);\r\n    }\r\n    columnsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class RemoveColumnsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeRemovedIndexes(this.indexes);\r\n    }\r\n    columnsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class Operations {\r\n    constructor(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.cellContentParser = cellContentParser;\r\n        this.parser = parser;\r\n        this.stats = stats;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.namedExpressions = namedExpressions;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.changes = ContentChanges.empty();\r\n        this.allocateNamedExpressionAddressSpace();\r\n        this.maxColumns = config.maxColumns;\r\n        this.maxRows = config.maxRows;\r\n    }\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    get addressMapping() {\r\n        return this.dependencyGraph.addressMapping;\r\n    }\r\n    removeRows(cmd) {\r\n        const rowsRemovals = [];\r\n        for (const rowsToRemove of cmd.rowsSpans()) {\r\n            const rowsRemoval = this.doRemoveRows(rowsToRemove);\r\n            if (rowsRemoval) {\r\n                rowsRemovals.push(rowsRemoval);\r\n            }\r\n        }\r\n        return rowsRemovals;\r\n    }\r\n    addRows(cmd) {\r\n        for (const addedRows of cmd.rowsSpans()) {\r\n            this.doAddRows(addedRows);\r\n        }\r\n    }\r\n    addColumns(cmd) {\r\n        for (const addedColumns of cmd.columnsSpans()) {\r\n            this.doAddColumns(addedColumns);\r\n        }\r\n    }\r\n    removeColumns(cmd) {\r\n        const columnsRemovals = [];\r\n        for (const columnsToRemove of cmd.columnsSpans()) {\r\n            const columnsRemoval = this.doRemoveColumns(columnsToRemove);\r\n            if (columnsRemoval) {\r\n                columnsRemovals.push(columnsRemoval);\r\n            }\r\n        }\r\n        return columnsRemovals;\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.dependencyGraph.removeSheet(sheetId);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveSheetTransformer(sheetId);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.sheetMapping.removeSheet(sheetId);\r\n        this.columnSearch.removeSheet(sheetId);\r\n        const scopedNamedExpressions = this.namedExpressions.getAllNamedExpressionsForScope(sheetId).map((namedexpression) => this.removeNamedExpression(namedexpression.normalizeExpressionName(), sheetId));\r\n        return { version: version, scopedNamedExpressions };\r\n    }\r\n    removeSheetByName(sheetName) {\r\n        const sheetId = this.sheetMapping.fetch(sheetName);\r\n        return this.removeSheet(sheetId);\r\n    }\r\n    clearSheet(sheetId) {\r\n        this.dependencyGraph.clearSheet(sheetId);\r\n        this.columnSearch.removeSheet(sheetId);\r\n    }\r\n    addSheet(name) {\r\n        const sheetId = this.sheetMapping.addSheet(name);\r\n        const sheet = [];\r\n        this.dependencyGraph.addressMapping.autoAddSheet(sheetId, sheet, findBoundaries(sheet));\r\n        return this.sheetMapping.fetchDisplayName(sheetId);\r\n    }\r\n    renameSheet(sheetId, newName) {\r\n        return this.sheetMapping.renameSheet(sheetId, newName);\r\n    }\r\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        const rowsToAdd = RowsSpan.fromNumberOfRows(sheet, targetRow, numberOfRows);\r\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\r\n        this.doAddRows(rowsToAdd);\r\n        if (targetRow < startRow) {\r\n            startRow += numberOfRows;\r\n        }\r\n        const startAddress = simpleCellAddress(sheet, 0, startRow);\r\n        const targetAddress = simpleCellAddress(sheet, 0, targetRow);\r\n        this.moveCells(startAddress, Number.POSITIVE_INFINITY, numberOfRows, targetAddress);\r\n        const rowsToRemove = RowsSpan.fromNumberOfRows(sheet, startRow, numberOfRows);\r\n        this.doRemoveRows(rowsToRemove);\r\n        return this.lazilyTransformingAstService.commitCombinedMode();\r\n    }\r\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        const columnsToAdd = ColumnsSpan.fromNumberOfColumns(sheet, targetColumn, numberOfColumns);\r\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\r\n        this.doAddColumns(columnsToAdd);\r\n        if (targetColumn < startColumn) {\r\n            startColumn += numberOfColumns;\r\n        }\r\n        const startAddress = simpleCellAddress(sheet, startColumn, 0);\r\n        const targetAddress = simpleCellAddress(sheet, targetColumn, 0);\r\n        this.moveCells(startAddress, numberOfColumns, Number.POSITIVE_INFINITY, targetAddress);\r\n        const columnsToRemove = ColumnsSpan.fromNumberOfColumns(sheet, startColumn, numberOfColumns);\r\n        this.doRemoveColumns(columnsToRemove);\r\n        return this.lazilyTransformingAstService.commitCombinedMode();\r\n    }\r\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        this.ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        const toRight = destinationLeftCorner.col - sourceLeftCorner.col;\r\n        const toBottom = destinationLeftCorner.row - sourceLeftCorner.row;\r\n        const toSheet = destinationLeftCorner.sheet;\r\n        const currentDataAtTarget = this.getRangeClipboardCells(targetRange);\r\n        const valuesToRemove = this.dependencyGraph.rawValuesFromRange(targetRange);\r\n        this.columnSearch.removeValues(valuesToRemove);\r\n        const valuesToMove = this.dependencyGraph.rawValuesFromRange(sourceRange);\r\n        this.columnSearch.moveValues(valuesToMove, toRight, toBottom, toSheet);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new MoveCellsTransformer(sourceRange, toRight, toBottom, toSheet);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.dependencyGraph.moveCells(sourceRange, toRight, toBottom, toSheet);\r\n        const addedGlobalNamedExpressions = this.updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        return {\r\n            version: version,\r\n            overwrittenCellsData: currentDataAtTarget,\r\n            addedGlobalNamedExpressions: addedGlobalNamedExpressions\r\n        };\r\n    }\r\n    setRowOrder(sheetId, rowMapping) {\r\n        const buffer = [];\r\n        let oldContent = [];\r\n        for (const [source, target] of rowMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\r\n                const row = this.getRangeClipboardCells(rowRange);\r\n                oldContent = oldContent.concat(row);\r\n                buffer.push(row.map(([{ sheet, col }, cell]) => [{ sheet, col, row: target }, cell]));\r\n            }\r\n        }\r\n        buffer.forEach(row => this.restoreClipboardCells(sheetId, row.values()));\r\n        return oldContent;\r\n    }\r\n    setColumnOrder(sheetId, columnMapping) {\r\n        const buffer = [];\r\n        let oldContent = [];\r\n        for (const [source, target] of columnMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\r\n                const column = this.getRangeClipboardCells(rowRange);\r\n                oldContent = oldContent.concat(column);\r\n                buffer.push(column.map(([{ sheet, col: _col, row }, cell]) => [{ sheet, col: target, row }, cell]));\r\n            }\r\n        }\r\n        buffer.forEach(column => this.restoreClipboardCells(sheetId, column.values()));\r\n        return oldContent;\r\n    }\r\n    addNamedExpression(expressionName, expression, sheetId, options) {\r\n        const namedExpression = this.namedExpressions.addNamedExpression(expressionName, sheetId, options);\r\n        this.storeNamedExpressionInCell(namedExpression.address, expression);\r\n        this.adjustNamedExpressionEdges(namedExpression, expressionName, sheetId);\r\n    }\r\n    restoreNamedExpression(namedExpression, content, sheetId) {\r\n        const expressionName = namedExpression.displayName;\r\n        this.restoreCell(namedExpression.address, content);\r\n        const restoredNamedExpression = this.namedExpressions.restoreNamedExpression(namedExpression, sheetId);\r\n        this.adjustNamedExpressionEdges(restoredNamedExpression, expressionName, sheetId);\r\n    }\r\n    changeNamedExpressionExpression(expressionName, newExpression, sheetId, options) {\r\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\r\n        if (!namedExpression) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        const oldNamedExpression = namedExpression.copy();\r\n        namedExpression.options = options;\r\n        const content = this.getClipboardCell(namedExpression.address);\r\n        this.storeNamedExpressionInCell(namedExpression.address, newExpression);\r\n        return [oldNamedExpression, content];\r\n    }\r\n    removeNamedExpression(expressionName, sheetId) {\r\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\r\n        if (!namedExpression) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        this.namedExpressions.remove(namedExpression.displayName, sheetId);\r\n        const content = this.getClipboardCell(namedExpression.address);\r\n        if (sheetId !== undefined) {\r\n            const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\r\n            this.dependencyGraph.exchangeNode(namedExpression.address, globalNamedExpression.address);\r\n        }\r\n        else {\r\n            this.dependencyGraph.setCellEmpty(namedExpression.address);\r\n        }\r\n        return [\r\n            namedExpression,\r\n            content\r\n        ];\r\n    }\r\n    ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        if (invalidSimpleCellAddress(sourceLeftCorner) ||\r\n            !((isPositiveInteger(width) && isPositiveInteger(height)) || isRowOrColumnRange(sourceLeftCorner, width, height)) ||\r\n            invalidSimpleCellAddress(destinationLeftCorner) ||\r\n            !this.sheetMapping.hasSheetWithId(sourceLeftCorner.sheet) ||\r\n            !this.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\r\n            throw new InvalidArgumentsError('a valid range of cells to move.');\r\n        }\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        if (targetRange.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(targetRange)) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    restoreClipboardCells(sourceSheetId, cells) {\r\n        const addedNamedExpressions = [];\r\n        for (const [address, clipboardCell] of cells) {\r\n            this.restoreCell(address, clipboardCell);\r\n            if (clipboardCell.type === ClipboardCellType.FORMULA) {\r\n                const { dependencies } = this.parser.fetchCachedResult(clipboardCell.hash);\r\n                addedNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceSheetId, address, dependencies));\r\n            }\r\n        }\r\n        return addedNamedExpressions;\r\n    }\r\n    restoreCell(address, clipboardCell) {\r\n        switch (clipboardCell.type) {\r\n            case ClipboardCellType.VALUE: {\r\n                this.setValueToCell(clipboardCell, address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.FORMULA: {\r\n                this.setFormulaToCellFromCache(clipboardCell.hash, address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.EMPTY: {\r\n                this.setCellEmpty(address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.PARSING_ERROR: {\r\n                this.setParsingErrorToCell(clipboardCell.rawInput, clipboardCell.errors, address);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    getOldContent(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex === undefined || vertex instanceof EmptyCellVertex) {\r\n            return [address, { type: ClipboardCellType.EMPTY }];\r\n        }\r\n        else if (vertex instanceof ValueCellVertex) {\r\n            return [address, Object.assign({ type: ClipboardCellType.VALUE }, vertex.getValues())];\r\n        }\r\n        else if (vertex instanceof FormulaVertex) {\r\n            return [vertex.getAddress(this.lazilyTransformingAstService), {\r\n                    type: ClipboardCellType.FORMULA,\r\n                    hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\r\n                }];\r\n        }\r\n        else if (vertex instanceof ParsingErrorVertex) {\r\n            return [address, { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors }];\r\n        }\r\n        throw Error('Trying to copy unsupported type');\r\n    }\r\n    getClipboardCell(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex === undefined || vertex instanceof EmptyCellVertex) {\r\n            return { type: ClipboardCellType.EMPTY };\r\n        }\r\n        else if (vertex instanceof ValueCellVertex) {\r\n            return Object.assign({ type: ClipboardCellType.VALUE }, vertex.getValues());\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            const val = vertex.getArrayCellValue(address);\r\n            if (val === EmptyValue) {\r\n                return { type: ClipboardCellType.EMPTY };\r\n            }\r\n            return { type: ClipboardCellType.VALUE, parsedValue: val, rawValue: vertex.getArrayCellRawValue(address) };\r\n        }\r\n        else if (vertex instanceof FormulaCellVertex) {\r\n            return {\r\n                type: ClipboardCellType.FORMULA,\r\n                hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\r\n            };\r\n        }\r\n        else if (vertex instanceof ParsingErrorVertex) {\r\n            return { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors };\r\n        }\r\n        throw Error('Trying to copy unsupported type');\r\n    }\r\n    getSheetClipboardCells(sheet) {\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const arr = new Array(sheetHeight);\r\n        for (let i = 0; i < sheetHeight; i++) {\r\n            arr[i] = new Array(sheetWidth);\r\n            for (let j = 0; j < sheetWidth; j++) {\r\n                const address = simpleCellAddress(sheet, j, i);\r\n                arr[i][j] = this.getClipboardCell(address);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    getRangeClipboardCells(range) {\r\n        const result = [];\r\n        for (const address of range.addresses(this.dependencyGraph)) {\r\n            result.push([address, this.getClipboardCell(address)]);\r\n        }\r\n        return result;\r\n    }\r\n    setCellContent(address, newCellContent) {\r\n        const parsedCellContent = this.cellContentParser.parse(newCellContent);\r\n        const oldContent = this.getOldContent(address);\r\n        if (parsedCellContent instanceof CellContent.Formula) {\r\n            const parserResult = this.parser.parse(parsedCellContent.formula, address);\r\n            const { ast, errors } = parserResult;\r\n            if (errors.length > 0) {\r\n                this.setParsingErrorToCell(parsedCellContent.formula, errors, address);\r\n            }\r\n            else {\r\n                const size = this.arraySizePredictor.checkArraySize(ast, address);\r\n                this.setFormulaToCell(address, size, parserResult);\r\n            }\r\n        }\r\n        else if (parsedCellContent instanceof CellContent.Empty) {\r\n            this.setCellEmpty(address);\r\n        }\r\n        else {\r\n            this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: newCellContent }, address);\r\n        }\r\n        return oldContent;\r\n    }\r\n    setSheetContent(sheetId, newSheetContent) {\r\n        this.clearSheet(sheetId);\r\n        for (let i = 0; i < newSheetContent.length; i++) {\r\n            for (let j = 0; j < newSheetContent[i].length; j++) {\r\n                const address = simpleCellAddress(sheetId, j, i);\r\n                this.setCellContent(address, newSheetContent[i][j]);\r\n            }\r\n        }\r\n    }\r\n    setParsingErrorToCell(rawInput, errors, address) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const vertex = new ParsingErrorVertex(errors, rawInput);\r\n        const arrayChanges = this.dependencyGraph.setParsingErrorToCell(address, vertex);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(vertex.getCellValue(), address);\r\n    }\r\n    setFormulaToCell(address, size, { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies }) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), size, hasVolatileFunction, hasStructuralChangeFunction);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n    }\r\n    setValueToCell(value, address) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setValueToCell(address, value);\r\n        this.columnSearch.change(getRawValue(oldValue), getRawValue(value.parsedValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges().filter(change => !equalSimpleCellAddress(change.address, address)));\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(value.parsedValue, address);\r\n    }\r\n    setCellEmpty(address) {\r\n        if (this.dependencyGraph.isArrayInternalCell(address)) {\r\n            return;\r\n        }\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setCellEmpty(address);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(EmptyValue, address);\r\n    }\r\n    setFormulaToCellFromCache(formulaHash, address) {\r\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = this.parser.fetchCachedResult(formulaHash);\r\n        const absoluteDependencies = absolutizeDependencies(dependencies, address);\r\n        const [cleanedAst] = new CleanOutOfScopeDependenciesTransformer(address.sheet).transformSingleAst(ast, address);\r\n        this.parser.rememberNewAst(cleanedAst);\r\n        const cleanedDependencies = filterDependenciesOutOfScope(absoluteDependencies);\r\n        const size = this.arraySizePredictor.checkArraySize(ast, address);\r\n        this.dependencyGraph.setFormulaToCell(address, cleanedAst, cleanedDependencies, size, hasVolatileFunction, hasStructuralChangeFunction);\r\n    }\r\n    /**\r\n     * Returns true if row number is outside of given sheet.\r\n     *\r\n     * @param row - row number\r\n     * @param sheet - sheet id number\r\n     */\r\n    rowEffectivelyNotInSheet(row, sheet) {\r\n        const height = this.dependencyGraph.addressMapping.getHeight(sheet);\r\n        return row >= height;\r\n    }\r\n    getAndClearContentChanges() {\r\n        const changes = this.changes;\r\n        this.changes = ContentChanges.empty();\r\n        return changes;\r\n    }\r\n    forceApplyPostponedTransformations() {\r\n        this.dependencyGraph.forceApplyPostponedTransformations();\r\n    }\r\n    /**\r\n     * Removes multiple rows from sheet. </br>\r\n     * Does nothing if rows are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id from which rows will be removed\r\n     * @param rowStart - number of the first row to be deleted\r\n     * @param rowEnd - number of the last row to be deleted\r\n     * */\r\n    doRemoveRows(rowsToRemove) {\r\n        if (this.rowEffectivelyNotInSheet(rowsToRemove.rowStart, rowsToRemove.sheet)) {\r\n            return;\r\n        }\r\n        const removedCells = [];\r\n        for (const [address] of this.dependencyGraph.entriesFromRowsSpan(rowsToRemove)) {\r\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.removeRows(rowsToRemove);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveRowsTransformer(rowsToRemove);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n        return { version: version, removedCells, rowFrom: rowsToRemove.rowStart, rowCount: rowsToRemove.numberOfRows };\r\n    }\r\n    /**\r\n     * Removes multiple columns from sheet. </br>\r\n     * Does nothing if columns are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id from which columns will be removed\r\n     * @param columnStart - number of the first column to be deleted\r\n     * @param columnEnd - number of the last row to be deleted\r\n     */\r\n    doRemoveColumns(columnsToRemove) {\r\n        if (this.columnEffectivelyNotInSheet(columnsToRemove.columnStart, columnsToRemove.sheet)) {\r\n            return;\r\n        }\r\n        const removedCells = [];\r\n        for (const [address] of this.dependencyGraph.entriesFromColumnsSpan(columnsToRemove)) {\r\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.removeColumns(columnsToRemove);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        this.columnSearch.removeColumns(columnsToRemove);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveColumnsTransformer(columnsToRemove);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n        return {\r\n            version: version,\r\n            removedCells,\r\n            columnFrom: columnsToRemove.columnStart,\r\n            columnCount: columnsToRemove.numberOfColumns\r\n        };\r\n    }\r\n    /**\r\n     * Add multiple rows to sheet. </br>\r\n     * Does nothing if rows are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id in which rows will be added\r\n     * @param row - row number above which the rows will be added\r\n     * @param numberOfRowsToAdd - number of rows to add\r\n     */\r\n    doAddRows(addedRows) {\r\n        if (this.rowEffectivelyNotInSheet(addedRows.rowStart, addedRows.sheet)) {\r\n            return;\r\n        }\r\n        const { affectedArrays } = this.dependencyGraph.addRows(addedRows);\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new AddRowsTransformer(addedRows);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n    }\r\n    rewriteAffectedArrays(affectedArrays) {\r\n        for (const arrayVertex of affectedArrays.values()) {\r\n            if (arrayVertex.array.size.isRef) {\r\n                continue;\r\n            }\r\n            const ast = arrayVertex.getFormula(this.lazilyTransformingAstService);\r\n            const address = arrayVertex.getAddress(this.lazilyTransformingAstService);\r\n            const hash = this.parser.computeHashFromAst(ast);\r\n            this.setFormulaToCellFromCache(hash, address);\r\n        }\r\n    }\r\n    /**\r\n     * Add multiple columns to sheet </br>\r\n     * Does nothing if columns are outside of effective sheet size\r\n     *\r\n     * @param sheet - sheet id in which columns will be added\r\n     * @param column - column number above which the columns will be added\r\n     * @param numberOfColumns - number of columns to add\r\n     */\r\n    doAddColumns(addedColumns) {\r\n        if (this.columnEffectivelyNotInSheet(addedColumns.columnStart, addedColumns.sheet)) {\r\n            return;\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.addColumns(addedColumns);\r\n        this.columnSearch.addColumns(addedColumns);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new AddColumnsTransformer(addedColumns);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n    }\r\n    /**\r\n     * Returns true if row number is outside of given sheet.\r\n     *\r\n     * @param column - row number\r\n     * @param sheet - sheet id number\r\n     */\r\n    columnEffectivelyNotInSheet(column, sheet) {\r\n        const width = this.dependencyGraph.addressMapping.getWidth(sheet);\r\n        return column >= width;\r\n    }\r\n    adjustNamedExpressionEdges(namedExpression, expressionName, sheetId) {\r\n        if (sheetId === undefined) {\r\n            return;\r\n        }\r\n        const localVertex = this.dependencyGraph.fetchCellOrCreateEmpty(namedExpression.address);\r\n        const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\r\n        const globalVertex = this.dependencyGraph.fetchCellOrCreateEmpty(globalNamedExpression.address);\r\n        for (const adjacentNode of this.dependencyGraph.graph.adjacentNodes(globalVertex)) {\r\n            if (adjacentNode instanceof FormulaCellVertex && adjacentNode.getAddress(this.lazilyTransformingAstService).sheet === sheetId) {\r\n                const ast = adjacentNode.getFormula(this.lazilyTransformingAstService);\r\n                const formulaAddress = adjacentNode.getAddress(this.lazilyTransformingAstService);\r\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\r\n                for (const dependency of absolutizeDependencies(dependencies, formulaAddress)) {\r\n                    if (dependency instanceof NamedExpressionDependency && dependency.name.toLowerCase() === namedExpression.displayName.toLowerCase()) {\r\n                        this.dependencyGraph.graph.removeEdge(globalVertex, adjacentNode);\r\n                        this.dependencyGraph.graph.addEdge(localVertex, adjacentNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    storeNamedExpressionInCell(address, expression) {\r\n        const parsedCellContent = this.cellContentParser.parse(expression);\r\n        if (parsedCellContent instanceof CellContent.Formula) {\r\n            const parsingResult = this.parser.parse(parsedCellContent.formula, simpleCellAddress(-1, 0, 0));\r\n            if (doesContainRelativeReferences(parsingResult.ast)) {\r\n                throw new NoRelativeAddressesAllowedError();\r\n            }\r\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\r\n            this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), ArraySize.scalar(), hasVolatileFunction, hasStructuralChangeFunction);\r\n        }\r\n        else if (parsedCellContent instanceof CellContent.Empty) {\r\n            this.setCellEmpty(address);\r\n        }\r\n        else {\r\n            this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: expression }, address);\r\n        }\r\n    }\r\n    updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        if (sourceLeftCorner.sheet === destinationLeftCorner.sheet) {\r\n            return [];\r\n        }\r\n        const addedGlobalNamedExpressions = [];\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        for (const formulaAddress of targetRange.addresses(this.dependencyGraph)) {\r\n            const vertex = this.addressMapping.fetchCell(formulaAddress);\r\n            if (vertex instanceof FormulaCellVertex && formulaAddress.sheet !== sourceLeftCorner.sheet) {\r\n                const ast = vertex.getFormula(this.lazilyTransformingAstService);\r\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\r\n                addedGlobalNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceLeftCorner.sheet, formulaAddress, dependencies));\r\n            }\r\n        }\r\n        return addedGlobalNamedExpressions;\r\n    }\r\n    updateNamedExpressionsForTargetAddress(sourceSheet, targetAddress, dependencies) {\r\n        if (sourceSheet === targetAddress.sheet) {\r\n            return [];\r\n        }\r\n        const addedGlobalNamedExpressions = [];\r\n        const vertex = this.addressMapping.fetchCell(targetAddress);\r\n        for (const namedExpressionDependency of absolutizeDependencies(dependencies, targetAddress)) {\r\n            if (!(namedExpressionDependency instanceof NamedExpressionDependency)) {\r\n                continue;\r\n            }\r\n            const expressionName = namedExpressionDependency.name;\r\n            const sourceVertex = this.dependencyGraph.fetchNamedExpressionVertex(expressionName, sourceSheet);\r\n            const namedExpressionInTargetScope = this.namedExpressions.isExpressionInScope(expressionName, targetAddress.sheet);\r\n            const targetScopeExpressionVertex = namedExpressionInTargetScope\r\n                ? this.dependencyGraph.fetchNamedExpressionVertex(expressionName, targetAddress.sheet)\r\n                : this.copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedGlobalNamedExpressions);\r\n            if (targetScopeExpressionVertex !== sourceVertex) {\r\n                this.dependencyGraph.graph.softRemoveEdge(sourceVertex, vertex);\r\n                this.dependencyGraph.graph.addEdge(targetScopeExpressionVertex, vertex);\r\n            }\r\n        }\r\n        return addedGlobalNamedExpressions;\r\n    }\r\n    allocateNamedExpressionAddressSpace() {\r\n        this.dependencyGraph.addressMapping.addSheet(-1, new SparseStrategy(0, 0));\r\n    }\r\n    copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedNamedExpressions) {\r\n        let expression = this.namedExpressions.namedExpressionForScope(expressionName);\r\n        if (expression === undefined) {\r\n            expression = this.namedExpressions.addNamedExpression(expressionName);\r\n            addedNamedExpressions.push(expression.normalizeExpressionName());\r\n            if (sourceVertex instanceof FormulaCellVertex) {\r\n                const parsingResult = this.parser.fetchCachedResultForAst(sourceVertex.getFormula(this.lazilyTransformingAstService));\r\n                const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\r\n                this.dependencyGraph.setFormulaToCell(expression.address, ast, absolutizeDependencies(dependencies, expression.address), ArraySize.scalar(), hasVolatileFunction, hasStructuralChangeFunction);\r\n            }\r\n            else if (sourceVertex instanceof EmptyCellVertex) {\r\n                this.setCellEmpty(expression.address);\r\n            }\r\n            else if (sourceVertex instanceof ValueCellVertex) {\r\n                this.setValueToCell(sourceVertex.getValues(), expression.address);\r\n            }\r\n        }\r\n        return this.dependencyGraph.fetchCellOrCreateEmpty(expression.address);\r\n    }\r\n}\r\nexport function normalizeRemovedIndexes(indexes) {\r\n    if (indexes.length <= 1) {\r\n        return indexes;\r\n    }\r\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\r\n    /* merge overlapping and adjacent indexes */\r\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\r\n        const previous = acc[acc.length - 1];\r\n        const lastIndex = previous[0] + previous[1];\r\n        if (startIndex <= lastIndex) {\r\n            previous[1] += Math.max(0, amount - (lastIndex - startIndex));\r\n        }\r\n        else {\r\n            acc.push([startIndex, amount]);\r\n        }\r\n        return acc;\r\n    }, [sorted[0]]);\r\n    /* shift further indexes */\r\n    let shift = 0;\r\n    for (let i = 0; i < merged.length; ++i) {\r\n        merged[i][0] -= shift;\r\n        shift += merged[i][1];\r\n    }\r\n    return merged;\r\n}\r\nexport function normalizeAddedIndexes(indexes) {\r\n    if (indexes.length <= 1) {\r\n        return indexes;\r\n    }\r\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\r\n    /* merge indexes with same start */\r\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\r\n        const previous = acc[acc.length - 1];\r\n        if (startIndex === previous[0]) {\r\n            previous[1] = Math.max(previous[1], amount);\r\n        }\r\n        else {\r\n            acc.push([startIndex, amount]);\r\n        }\r\n        return acc;\r\n    }, [sorted[0]]);\r\n    /* shift further indexes */\r\n    let shift = 0;\r\n    for (let i = 0; i < merged.length; ++i) {\r\n        merged[i][0] += shift;\r\n        shift += merged[i][1];\r\n    }\r\n    return merged;\r\n}\r\nfunction isPositiveInteger(x) {\r\n    return Number.isInteger(x) && x > 0;\r\n}\r\nfunction isRowOrColumnRange(leftCorner, width, height) {\r\n    return (leftCorner.row === 0 && isPositiveInteger(width) && height === Number.POSITIVE_INFINITY)\r\n        || (leftCorner.col === 0 && isPositiveInteger(height) && width === Number.POSITIVE_INFINITY);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class AddColumnsTransformer extends Transformer {\r\n    constructor(columnsSpan) {\r\n        super();\r\n        this.columnsSpan = columnsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.columnsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return false;\r\n    }\r\n    transformRowRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4 and 5\r\n        if ((absoluteDependencySheet !== this.columnsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\r\n            return false;\r\n        }\r\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n        // Case 3\r\n        if ((absoluteDependencySheet === this.columnsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\r\n            if (this.columnsSpan.columnStart <= absolutizedDependencyAddress.col) {\r\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        // Case 2\r\n        if ((formulaAddress.sheet === this.columnsSpan.sheet)\r\n            && (absoluteDependencySheet !== this.columnsSpan.sheet)) {\r\n            if (dependencyAddress.isColumnAbsolute()) {\r\n                return false;\r\n            }\r\n            if (formulaAddress.col < this.columnsSpan.columnStart) {\r\n                return false;\r\n            }\r\n            return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n        }\r\n        // Case 1\r\n        if (dependencyAddress.isColumnAbsolute()) {\r\n            if (dependencyAddress.col < this.columnsSpan.columnStart) { // Case Aa\r\n                return false;\r\n            }\r\n            else { // Case Ab\r\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n            }\r\n        }\r\n        else {\r\n            const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n            if (absolutizedDependencyAddress.col < this.columnsSpan.columnStart) {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Raa\r\n                    return false;\r\n                }\r\n                else { // Case Rab\r\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n            else {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Rba\r\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                }\r\n                else { // Case Rbb\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\r\n            return Object.assign(Object.assign({}, address), { col: address.col + this.columnsSpan.numberOfColumns });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else if (newStart || newEnd) {\r\n            return [newStart || start, newEnd || end];\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../Cell';\r\nimport { AstNodeType, buildCellErrorAst, CellAddress, } from '../parser';\r\nexport class Transformer {\r\n    performEagerTransformations(graph, parser) {\r\n        for (const node of graph.arrayFormulaNodes()) {\r\n            const [newAst, newAddress] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\r\n            const cachedAst = parser.rememberNewAst(newAst);\r\n            node.setFormula(cachedAst);\r\n            node.setAddress(newAddress);\r\n        }\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        const newAst = this.transformAst(ast, address);\r\n        const newAddress = this.fixNodeAddress(address);\r\n        return [newAst, newAddress];\r\n    }\r\n    transformAst(ast, address) {\r\n        switch (ast.type) {\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                return this.transformCellReferenceAst(ast, address);\r\n            }\r\n            case AstNodeType.CELL_RANGE: {\r\n                return this.transformCellRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE: {\r\n                return this.transformColumnRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.ROW_RANGE: {\r\n                return this.transformRowRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.EMPTY:\r\n            case AstNodeType.ERROR:\r\n            case AstNodeType.NUMBER:\r\n            case AstNodeType.NAMED_EXPRESSION:\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            case AstNodeType.STRING: {\r\n                return ast;\r\n            }\r\n            case AstNodeType.PERCENT_OP:\r\n            case AstNodeType.MINUS_UNARY_OP:\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                return Object.assign(Object.assign({}, ast), { value: this.transformAst(ast.value, address) });\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                return Object.assign(Object.assign({}, ast), { procedureName: ast.procedureName, args: ast.args.map((arg) => this.transformAst(arg, address)) });\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return Object.assign(Object.assign({}, ast), { expression: this.transformAst(ast.expression, address) });\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                return Object.assign(Object.assign({}, ast), { args: ast.args.map((row) => row.map(val => this.transformAst(val, address))) });\r\n            }\r\n            default: {\r\n                return Object.assign(Object.assign({}, ast), { left: this.transformAst(ast.left, address), right: this.transformAst(ast.right, address) });\r\n            }\r\n        }\r\n    }\r\n    transformCellReferenceAst(ast, formulaAddress) {\r\n        const newCellAddress = this.transformCellAddress(ast.reference, formulaAddress);\r\n        if (newCellAddress instanceof CellAddress) {\r\n            return Object.assign(Object.assign({}, ast), { reference: newCellAddress });\r\n        }\r\n        else if (newCellAddress === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformCellRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformCellRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformColumnRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformColumnRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformRowRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformRowRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class AddRowsTransformer extends Transformer {\r\n    constructor(rowsSpan) {\r\n        super();\r\n        this.rowsSpan = rowsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.rowsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return false;\r\n    }\r\n    transformColumnRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4 and 5\r\n        if ((absoluteDependencySheet !== this.rowsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\r\n            return false;\r\n        }\r\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n        // Case 3\r\n        if ((absoluteDependencySheet === this.rowsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\r\n            if (this.rowsSpan.rowStart <= absolutizedDependencyAddress.row) {\r\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        // Case 2\r\n        if ((formulaAddress.sheet === this.rowsSpan.sheet)\r\n            && (absoluteDependencySheet !== this.rowsSpan.sheet)) {\r\n            if (dependencyAddress.isRowAbsolute()) {\r\n                return false;\r\n            }\r\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\r\n                return false;\r\n            }\r\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n        }\r\n        // Case 1\r\n        if (dependencyAddress.isRowAbsolute()) {\r\n            if (dependencyAddress.row < this.rowsSpan.rowStart) { // Case Aa\r\n                return false;\r\n            }\r\n            else { // Case Ab\r\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n            }\r\n        }\r\n        else {\r\n            if (absolutizedDependencyAddress.row < this.rowsSpan.rowStart) {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Raa\r\n                    return false;\r\n                }\r\n                else { // Case Rab\r\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n            else {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Rba\r\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                }\r\n                else { // Case Rbb\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\r\n            return Object.assign(Object.assign({}, address), { row: address.row + this.rowsSpan.numberOfRows });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else if (newStart || newEnd) {\r\n            return [newStart || start, newEnd || end];\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class CleanOutOfScopeDependenciesTransformer extends Transformer {\r\n    constructor(sheet) {\r\n        super();\r\n        this.sheet = sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        return dependencyAddress.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../Cell';\r\nimport { CellAddress } from '../parser';\r\nimport { RowAddress } from '../parser/RowAddress';\r\nimport { Transformer } from './Transformer';\r\nexport class MoveCellsTransformer extends Transformer {\r\n    constructor(sourceRange, toRight, toBottom, toSheet) {\r\n        super();\r\n        this.sourceRange = sourceRange;\r\n        this.toRight = toRight;\r\n        this.toBottom = toBottom;\r\n        this.toSheet = toSheet;\r\n        this.dependentFormulaTransformer = new DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet);\r\n    }\r\n    get sheet() {\r\n        return this.sourceRange.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        if (this.sourceRange.addressInRange(address)) {\r\n            const newAst = this.transformAst(ast, address);\r\n            return [newAst, this.fixNodeAddress(address)];\r\n        }\r\n        else {\r\n            return this.dependentFormulaTransformer.transformSingleAst(ast, address);\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        return simpleCellAddress(this.toSheet, address.col + this.toRight, address.row + this.toBottom);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        return this.transformAddress(dependencyAddress, formulaAddress);\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformAddress(dependencyAddress, formulaAddress) {\r\n        const sourceRange = this.sourceRange;\r\n        if (dependencyAddress instanceof CellAddress) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleCellAddress(formulaAddress);\r\n            if (sourceRange.addressInRange(absoluteDependencyAddress)) { // If dependency is internal, move only absolute dimensions\r\n                return dependencyAddress.shiftAbsoluteDimensions(this.toRight, this.toBottom);\r\n            }\r\n        }\r\n        return dependencyAddress.shiftRelativeDimensions(-this.toRight, -this.toBottom);\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const sourceRange = this.sourceRange;\r\n        if (start instanceof CellAddress && end instanceof CellAddress) {\r\n            const absoluteStart = start.toSimpleCellAddress(formulaAddress);\r\n            const absoluteEnd = end.toSimpleCellAddress(formulaAddress);\r\n            if (sourceRange.addressInRange(absoluteStart) && sourceRange.addressInRange(absoluteEnd)) {\r\n                return [\r\n                    start.shiftAbsoluteDimensions(this.toRight, this.toBottom),\r\n                    end.shiftAbsoluteDimensions(this.toRight, this.toBottom)\r\n                ];\r\n            }\r\n        }\r\n        return [\r\n            start.shiftRelativeDimensions(-this.toRight, -this.toBottom),\r\n            end.shiftRelativeDimensions(-this.toRight, -this.toBottom)\r\n        ];\r\n    }\r\n}\r\nclass DependentFormulaTransformer extends Transformer {\r\n    constructor(sourceRange, toRight, toBottom, toSheet) {\r\n        super();\r\n        this.sourceRange = sourceRange;\r\n        this.toRight = toRight;\r\n        this.toBottom = toBottom;\r\n        this.toSheet = toSheet;\r\n    }\r\n    get sheet() {\r\n        return this.sourceRange.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        if (this.shouldMove(dependencyAddress, formulaAddress)) {\r\n            return dependencyAddress.moved(this.toSheet, this.toRight, this.toBottom);\r\n        }\r\n        return false;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    shouldMove(dependencyAddress, formulaAddress) {\r\n        if (dependencyAddress instanceof CellAddress) {\r\n            return this.sourceRange.addressInRange(dependencyAddress.toSimpleCellAddress(formulaAddress));\r\n        }\r\n        else if (dependencyAddress instanceof RowAddress) {\r\n            return this.sourceRange.rowInRange(dependencyAddress.toSimpleRowAddress(formulaAddress)) && !this.sourceRange.isFinite();\r\n        }\r\n        else {\r\n            return this.sourceRange.columnInRange(dependencyAddress.toSimpleColumnAddress(formulaAddress)) && !this.sourceRange.isFinite();\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart && newEnd) {\r\n            return [newStart, newEnd];\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveColumnsTransformer extends Transformer {\r\n    constructor(columnsSpan) {\r\n        super();\r\n        this.columnsSpan = columnsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.columnsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformRowRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4\r\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\r\n            return false;\r\n        }\r\n        // Case 3 -- removed column in same sheet where dependency is but formula in different\r\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n            if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) { // 3.ARa\r\n                return false;\r\n            }\r\n            else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) { // 3.ARb\r\n                return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n            }\r\n        }\r\n        // Case 2 -- removed column in same sheet where formula but dependency in different sheet\r\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\r\n            if (dependencyAddress.isColumnAbsolute()) { // 2.A\r\n                return false;\r\n            }\r\n            else {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // 2.Ra\r\n                    return false;\r\n                }\r\n                else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 2.Rb\r\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n        }\r\n        // Case 1 -- same sheet\r\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\r\n            if (dependencyAddress.isColumnAbsolute()) {\r\n                if (dependencyAddress.col < this.columnsSpan.columnStart) { // 1.Aa\r\n                    return false;\r\n                }\r\n                else if (dependencyAddress.col > this.columnsSpan.columnEnd) { // 1.Ab\r\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n            else {\r\n                const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n                if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) {\r\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Raa\r\n                        return false;\r\n                    }\r\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rab\r\n                        return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                    }\r\n                }\r\n                else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) {\r\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Rba\r\n                        return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                    }\r\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rbb\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\r\n        return ErrorType.REF;\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\r\n            return Object.assign(Object.assign({}, address), { col: address.col - this.columnsSpan.numberOfColumns });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const startSheet = absoluteSheetReference(start, formulaAddress);\r\n        let actualStart = start;\r\n        let actualEnd = end;\r\n        if (this.columnsSpan.sheet === startSheet) {\r\n            const startSCA = start.toSimpleColumnAddress(formulaAddress);\r\n            const endSCA = end.toSimpleColumnAddress(formulaAddress);\r\n            if (this.columnsSpan.columnStart <= startSCA.col && this.columnsSpan.columnEnd >= endSCA.col) {\r\n                return ErrorType.REF;\r\n            }\r\n            if (startSCA.col >= this.columnsSpan.columnStart && startSCA.col <= this.columnsSpan.columnEnd) {\r\n                actualStart = start.shiftedByColumns(this.columnsSpan.columnEnd - startSCA.col + 1);\r\n            }\r\n            if (endSCA.col >= this.columnsSpan.columnStart && endSCA.col <= this.columnsSpan.columnEnd) {\r\n                actualEnd = end.shiftedByColumns(-(endSCA.col - this.columnsSpan.columnStart + 1));\r\n            }\r\n        }\r\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\r\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\r\n        if (newStart === false && newEnd === false) {\r\n            return [actualStart, actualEnd];\r\n        }\r\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            throw Error('Cannot happen');\r\n        }\r\n        else {\r\n            return [newStart || actualStart, newEnd || actualEnd];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveRowsTransformer extends Transformer {\r\n    constructor(rowsSpan) {\r\n        super();\r\n        this.rowsSpan = rowsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.rowsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformColumnRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4\r\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\r\n            return false;\r\n        }\r\n        // Case 3 -- removed row in same sheet where dependency is but formula in different\r\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n            if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) { // 3.ARa\r\n                return false;\r\n            }\r\n            else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) { // 3.ARb\r\n                return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n            }\r\n        }\r\n        // Case 2 -- removed row in same sheet where formula but dependency in different sheet\r\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\r\n            if (dependencyAddress.isRowAbsolute()) { // 2.A\r\n                return false;\r\n            }\r\n            else {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // 2.Ra\r\n                    return false;\r\n                }\r\n                else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 2.Rb\r\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n        }\r\n        // Case 1 -- same sheet\r\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\r\n            if (dependencyAddress.isRowAbsolute()) {\r\n                if (dependencyAddress.row < this.rowsSpan.rowStart) { // 1.Aa\r\n                    return false;\r\n                }\r\n                else if (dependencyAddress.row > this.rowsSpan.rowEnd) { // 1.Ab\r\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n            else {\r\n                const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n                if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\r\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Raa\r\n                        return false;\r\n                    }\r\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rab\r\n                        return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                    }\r\n                }\r\n                else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\r\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Rba\r\n                        return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                    }\r\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rbb\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\r\n        return ErrorType.REF;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\r\n            return Object.assign(Object.assign({}, address), { row: address.row - this.rowsSpan.numberOfRows });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const startSheet = absoluteSheetReference(start, formulaAddress);\r\n        let actualStart = start;\r\n        let actualEnd = end;\r\n        if (this.rowsSpan.sheet === startSheet) {\r\n            const startSCA = start.toSimpleRowAddress(formulaAddress);\r\n            const endSCA = end.toSimpleRowAddress(formulaAddress);\r\n            if (this.rowsSpan.rowStart <= startSCA.row && this.rowsSpan.rowEnd >= endSCA.row) {\r\n                return ErrorType.REF;\r\n            }\r\n            if (startSCA.row >= this.rowsSpan.rowStart && startSCA.row <= this.rowsSpan.rowEnd) {\r\n                actualStart = start.shiftedByRows(this.rowsSpan.rowEnd - startSCA.row + 1);\r\n            }\r\n            if (endSCA.row >= this.rowsSpan.rowStart && endSCA.row <= this.rowsSpan.rowEnd) {\r\n                actualEnd = end.shiftedByRows(-(endSCA.row - this.rowsSpan.rowStart + 1));\r\n            }\r\n        }\r\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\r\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\r\n        if (newStart === false && newEnd === false) {\r\n            return [actualStart, actualEnd];\r\n        }\r\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else {\r\n            return [newStart || actualStart, newEnd || actualEnd];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveSheetTransformer extends Transformer {\r\n    constructor(sheet) {\r\n        super();\r\n        this.sheet = sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    performEagerTransformations(graph, _parser) {\r\n        for (const node of graph.arrayFormulaNodes()) {\r\n            const [newAst] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\r\n            node.setFormula(newAst);\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, _formulaAddress) {\r\n        return this.transformAddress(dependencyAddress);\r\n    }\r\n    transformCellRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformColumnRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformRowRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformAddress(address) {\r\n        if (address.sheet === this.sheet) {\r\n            return ErrorType.REF;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { InvalidArgumentsError } from './errors';\r\nexport function validateAsSheet(sheet) {\r\n    if (!Array.isArray(sheet)) {\r\n        throw new InvalidArgumentsError('an array of arrays.');\r\n    }\r\n    for (let i = 0; i < sheet.length; i++) {\r\n        if (!Array.isArray(sheet[i])) {\r\n            throw new InvalidArgumentsError('an array of arrays.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns actual width, height and fill ratio of a sheet\r\n *\r\n * @param sheet - two-dimmensional array sheet representation\r\n */\r\nexport function findBoundaries(sheet) {\r\n    let width = 0;\r\n    let height = 0;\r\n    let cellsCount = 0;\r\n    for (let currentRow = 0; currentRow < sheet.length; currentRow++) {\r\n        let currentRowWidth = 0;\r\n        for (let currentCol = 0; currentCol < sheet[currentRow].length; currentCol++) {\r\n            const currentValue = sheet[currentRow][currentCol];\r\n            if (currentValue === undefined || currentValue === null) {\r\n                continue;\r\n            }\r\n            currentRowWidth = currentCol + 1;\r\n            ++cellsCount;\r\n        }\r\n        width = Math.max(width, currentRowWidth);\r\n        if (currentRowWidth > 0) {\r\n            height = currentRow + 1;\r\n        }\r\n    }\r\n    const sheetSize = width * height;\r\n    return {\r\n        height: height,\r\n        width: width,\r\n        fill: sheetSize === 0 ? 0 : cellsCount / sheetSize,\r\n    };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { equalSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\r\nexport class BaseUndoEntry {\r\n}\r\nexport class RemoveRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(command, rowsRemovals) {\r\n        super();\r\n        this.command = command;\r\n        this.rowsRemovals = rowsRemovals;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveRows(this);\r\n    }\r\n}\r\nexport class MoveCellsUndoEntry extends BaseUndoEntry {\r\n    constructor(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version) {\r\n        super();\r\n        this.sourceLeftCorner = sourceLeftCorner;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.destinationLeftCorner = destinationLeftCorner;\r\n        this.overwrittenCellsData = overwrittenCellsData;\r\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\r\n        this.version = version;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveCells(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveCells(this);\r\n    }\r\n}\r\nexport class AddRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(command) {\r\n        super();\r\n        this.command = command;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddRows(this);\r\n    }\r\n}\r\nexport class SetRowOrderUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, rowMapping, oldContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.rowMapping = rowMapping;\r\n        this.oldContent = oldContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetRowOrder(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetRowOrder(this);\r\n    }\r\n}\r\nexport class SetColumnOrderUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, columnMapping, oldContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.columnMapping = columnMapping;\r\n        this.oldContent = oldContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetColumnOrder(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetColumnOrder(this);\r\n    }\r\n}\r\nexport class SetSheetContentUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldSheetContent, newSheetContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n        this.newSheetContent = newSheetContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetSheetContent(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetSheetContent(this);\r\n    }\r\n}\r\nexport class MoveRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(sheet, startRow, numberOfRows, targetRow, version) {\r\n        super();\r\n        this.sheet = sheet;\r\n        this.startRow = startRow;\r\n        this.numberOfRows = numberOfRows;\r\n        this.targetRow = targetRow;\r\n        this.version = version;\r\n        this.undoStart = this.startRow < this.targetRow ? this.targetRow - this.numberOfRows : this.targetRow;\r\n        this.undoEnd = this.startRow > this.targetRow ? this.startRow + this.numberOfRows : this.startRow;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveRows(this);\r\n    }\r\n}\r\nexport class MoveColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(sheet, startColumn, numberOfColumns, targetColumn, version) {\r\n        super();\r\n        this.sheet = sheet;\r\n        this.startColumn = startColumn;\r\n        this.numberOfColumns = numberOfColumns;\r\n        this.targetColumn = targetColumn;\r\n        this.version = version;\r\n        this.undoStart = this.startColumn < this.targetColumn ? this.targetColumn - this.numberOfColumns : this.targetColumn;\r\n        this.undoEnd = this.startColumn > this.targetColumn ? this.startColumn + this.numberOfColumns : this.startColumn;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveColumns(this);\r\n    }\r\n}\r\nexport class AddColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(command) {\r\n        super();\r\n        this.command = command;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddColumns(this);\r\n    }\r\n}\r\nexport class RemoveColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(command, columnsRemovals) {\r\n        super();\r\n        this.command = command;\r\n        this.columnsRemovals = columnsRemovals;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveColumns(this);\r\n    }\r\n}\r\nexport class AddSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetName) {\r\n        super();\r\n        this.sheetName = sheetName;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddSheet(this);\r\n    }\r\n}\r\nexport class RemoveSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetName, sheetId, oldSheetContent, scopedNamedExpressions, version) {\r\n        super();\r\n        this.sheetName = sheetName;\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n        this.scopedNamedExpressions = scopedNamedExpressions;\r\n        this.version = version;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveSheet(this);\r\n    }\r\n}\r\nexport class RenameSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldName, newName) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldName = oldName;\r\n        this.newName = newName;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRenameSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRenameSheet(this);\r\n    }\r\n}\r\nexport class ClearSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldSheetContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoClearSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoClearSheet(this);\r\n    }\r\n}\r\nexport class SetCellContentsUndoEntry extends BaseUndoEntry {\r\n    constructor(cellContents) {\r\n        super();\r\n        this.cellContents = cellContents;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetCellContents(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetCellContents(this);\r\n    }\r\n}\r\nexport class PasteUndoEntry extends BaseUndoEntry {\r\n    constructor(targetLeftCorner, oldContent, newContent, addedGlobalNamedExpressions) {\r\n        super();\r\n        this.targetLeftCorner = targetLeftCorner;\r\n        this.oldContent = oldContent;\r\n        this.newContent = newContent;\r\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoPaste(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoPaste(this);\r\n    }\r\n}\r\nexport class AddNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(name, newContent, scope, options) {\r\n        super();\r\n        this.name = name;\r\n        this.newContent = newContent;\r\n        this.scope = scope;\r\n        this.options = options;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddNamedExpression(this);\r\n    }\r\n}\r\nexport class RemoveNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(namedExpression, content, scope) {\r\n        super();\r\n        this.namedExpression = namedExpression;\r\n        this.content = content;\r\n        this.scope = scope;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveNamedExpression(this);\r\n    }\r\n}\r\nexport class ChangeNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(namedExpression, newContent, oldContent, scope, options) {\r\n        super();\r\n        this.namedExpression = namedExpression;\r\n        this.newContent = newContent;\r\n        this.oldContent = oldContent;\r\n        this.scope = scope;\r\n        this.options = options;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoChangeNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoChangeNamedExpression(this);\r\n    }\r\n}\r\nexport class BatchUndoEntry extends BaseUndoEntry {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.operations = [];\r\n    }\r\n    add(operation) {\r\n        this.operations.push(operation);\r\n    }\r\n    *reversedOperations() {\r\n        for (let i = this.operations.length - 1; i >= 0; i--) {\r\n            yield this.operations[i];\r\n        }\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoBatch(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoBatch(this);\r\n    }\r\n}\r\nexport class UndoRedo {\r\n    constructor(config, operations) {\r\n        this.operations = operations;\r\n        this.oldData = new Map();\r\n        this.undoStack = [];\r\n        this.redoStack = [];\r\n        this.undoLimit = config.undoLimit;\r\n    }\r\n    saveOperation(operation) {\r\n        if (this.batchUndoEntry !== undefined) {\r\n            this.batchUndoEntry.add(operation);\r\n        }\r\n        else {\r\n            this.addUndoEntry(operation);\r\n        }\r\n    }\r\n    beginBatchMode() {\r\n        this.batchUndoEntry = new BatchUndoEntry();\r\n    }\r\n    commitBatchMode() {\r\n        if (this.batchUndoEntry === undefined) {\r\n            throw 'Batch mode wasn\\'t started';\r\n        }\r\n        this.addUndoEntry(this.batchUndoEntry);\r\n        this.batchUndoEntry = undefined;\r\n    }\r\n    storeDataForVersion(version, address, astHash) {\r\n        if (!this.oldData.has(version)) {\r\n            this.oldData.set(version, []);\r\n        }\r\n        const currentOldData = this.oldData.get(version);\r\n        currentOldData.push([address, astHash]);\r\n    }\r\n    clearRedoStack() {\r\n        this.redoStack = [];\r\n    }\r\n    clearUndoStack() {\r\n        this.undoStack = [];\r\n    }\r\n    isUndoStackEmpty() {\r\n        return this.undoStack.length === 0;\r\n    }\r\n    isRedoStackEmpty() {\r\n        return this.redoStack.length === 0;\r\n    }\r\n    undo() {\r\n        const operation = this.undoStack.pop();\r\n        if (!operation) {\r\n            throw 'Attempted to undo without operation on stack';\r\n        }\r\n        this.undoEntry(operation);\r\n        this.redoStack.push(operation);\r\n    }\r\n    undoBatch(batchOperation) {\r\n        for (const operation of batchOperation.reversedOperations()) {\r\n            this.undoEntry(operation);\r\n        }\r\n    }\r\n    undoRemoveRows(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { command: { sheet }, rowsRemovals } = operation;\r\n        for (let i = rowsRemovals.length - 1; i >= 0; --i) {\r\n            const rowsRemoval = rowsRemovals[i];\r\n            this.operations.addRows(new AddRowsCommand(sheet, [[rowsRemoval.rowFrom, rowsRemoval.rowCount]]));\r\n            for (const { address, cellType } of rowsRemoval.removedCells) {\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n            this.restoreOldDataFromVersion(rowsRemoval.version - 1);\r\n        }\r\n    }\r\n    undoRemoveColumns(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { command: { sheet }, columnsRemovals } = operation;\r\n        for (let i = columnsRemovals.length - 1; i >= 0; --i) {\r\n            const columnsRemoval = columnsRemovals[i];\r\n            this.operations.addColumns(new AddColumnsCommand(sheet, [[columnsRemoval.columnFrom, columnsRemoval.columnCount]]));\r\n            for (const { address, cellType } of columnsRemoval.removedCells) {\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n            this.restoreOldDataFromVersion(columnsRemoval.version - 1);\r\n        }\r\n    }\r\n    undoAddRows(operation) {\r\n        const addedRowsSpans = operation.command.rowsSpans();\r\n        for (let i = addedRowsSpans.length - 1; i >= 0; --i) {\r\n            const addedRows = addedRowsSpans[i];\r\n            this.operations.removeRows(new RemoveRowsCommand(operation.command.sheet, [[addedRows.rowStart, addedRows.numberOfRows]]));\r\n        }\r\n    }\r\n    undoAddColumns(operation) {\r\n        const addedColumnsSpans = operation.command.columnsSpans();\r\n        for (let i = addedColumnsSpans.length - 1; i >= 0; --i) {\r\n            const addedColumns = addedColumnsSpans[i];\r\n            this.operations.removeColumns(new RemoveColumnsCommand(operation.command.sheet, [[addedColumns.columnStart, addedColumns.numberOfColumns]]));\r\n        }\r\n    }\r\n    undoSetCellContents(operation) {\r\n        for (const cellContentData of operation.cellContents) {\r\n            const address = cellContentData.address;\r\n            const [oldContentAddress, oldContent] = cellContentData.oldContent;\r\n            if (!equalSimpleCellAddress(address, oldContentAddress)) {\r\n                this.operations.setCellEmpty(address);\r\n            }\r\n            this.operations.restoreCell(oldContentAddress, oldContent);\r\n        }\r\n    }\r\n    undoPaste(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\r\n            this.operations.removeNamedExpression(namedExpression);\r\n        }\r\n    }\r\n    undoMoveRows(operation) {\r\n        const { sheet } = operation;\r\n        this.operations.moveRows(sheet, operation.undoStart, operation.numberOfRows, operation.undoEnd);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoMoveColumns(operation) {\r\n        const { sheet } = operation;\r\n        this.operations.moveColumns(sheet, operation.undoStart, operation.numberOfColumns, operation.undoEnd);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoMoveCells(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        this.operations.moveCells(operation.destinationLeftCorner, operation.width, operation.height, operation.sourceLeftCorner);\r\n        this.restoreOperationOldContent(operation.overwrittenCellsData);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\r\n            this.operations.removeNamedExpression(namedExpression);\r\n        }\r\n    }\r\n    undoAddSheet(operation) {\r\n        const { sheetName } = operation;\r\n        this.operations.removeSheetByName(sheetName);\r\n    }\r\n    undoRemoveSheet(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { oldSheetContent, sheetId } = operation;\r\n        this.operations.addSheet(operation.sheetName);\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n        for (const [namedexpression, content] of operation.scopedNamedExpressions) {\r\n            this.operations.restoreNamedExpression(namedexpression, content, sheetId);\r\n        }\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoRenameSheet(operation) {\r\n        this.operations.renameSheet(operation.sheetId, operation.oldName);\r\n    }\r\n    undoClearSheet(operation) {\r\n        const { oldSheetContent, sheetId } = operation;\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n    }\r\n    undoSetSheetContent(operation) {\r\n        const { oldSheetContent, sheetId } = operation;\r\n        this.operations.clearSheet(sheetId);\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n    }\r\n    undoAddNamedExpression(operation) {\r\n        this.operations.removeNamedExpression(operation.name, operation.scope);\r\n    }\r\n    undoRemoveNamedExpression(operation) {\r\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.content, operation.scope);\r\n    }\r\n    undoChangeNamedExpression(operation) {\r\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.oldContent, operation.scope);\r\n    }\r\n    undoSetRowOrder(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n    }\r\n    undoSetColumnOrder(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n    }\r\n    redo() {\r\n        const operation = this.redoStack.pop();\r\n        if (!operation) {\r\n            throw 'Attempted to redo without operation on stack';\r\n        }\r\n        this.redoEntry(operation);\r\n        this.undoStack.push(operation);\r\n    }\r\n    redoBatch(batchOperation) {\r\n        for (const operation of batchOperation.operations) {\r\n            this.redoEntry(operation);\r\n        }\r\n    }\r\n    redoRemoveRows(operation) {\r\n        this.operations.removeRows(operation.command);\r\n    }\r\n    redoMoveCells(operation) {\r\n        this.operations.moveCells(operation.sourceLeftCorner, operation.width, operation.height, operation.destinationLeftCorner);\r\n    }\r\n    redoRemoveColumns(operation) {\r\n        this.operations.removeColumns(operation.command);\r\n    }\r\n    redoPaste(operation) {\r\n        const { targetLeftCorner, newContent } = operation;\r\n        const height = newContent.length;\r\n        const width = newContent[0].length;\r\n        for (let y = 0; y < height; ++y) {\r\n            for (let x = 0; x < width; ++x) {\r\n                const address = simpleCellAddress(targetLeftCorner.sheet, targetLeftCorner.col + x, targetLeftCorner.row + y);\r\n                this.operations.restoreCell(address, newContent[y][x]);\r\n            }\r\n        }\r\n    }\r\n    redoSetCellContents(operation) {\r\n        for (const cellContentData of operation.cellContents) {\r\n            this.operations.setCellContent(cellContentData.address, cellContentData.newContent);\r\n        }\r\n    }\r\n    redoAddRows(operation) {\r\n        this.operations.addRows(operation.command);\r\n    }\r\n    redoAddColumns(operation) {\r\n        this.operations.addColumns(operation.command);\r\n    }\r\n    redoRemoveSheet(operation) {\r\n        this.operations.removeSheetByName(operation.sheetName);\r\n    }\r\n    redoAddSheet(operation) {\r\n        this.operations.addSheet(operation.sheetName);\r\n    }\r\n    redoRenameSheet(operation) {\r\n        this.operations.renameSheet(operation.sheetId, operation.newName);\r\n    }\r\n    redoMoveRows(operation) {\r\n        this.operations.moveRows(operation.sheet, operation.startRow, operation.numberOfRows, operation.targetRow);\r\n    }\r\n    redoMoveColumns(operation) {\r\n        this.operations.moveColumns(operation.sheet, operation.startColumn, operation.numberOfColumns, operation.targetColumn);\r\n    }\r\n    redoClearSheet(operation) {\r\n        this.operations.clearSheet(operation.sheetId);\r\n    }\r\n    redoSetSheetContent(operation) {\r\n        const { sheetId, newSheetContent } = operation;\r\n        this.operations.setSheetContent(sheetId, newSheetContent);\r\n    }\r\n    redoAddNamedExpression(operation) {\r\n        this.operations.addNamedExpression(operation.name, operation.newContent, operation.scope, operation.options);\r\n    }\r\n    redoRemoveNamedExpression(operation) {\r\n        this.operations.removeNamedExpression(operation.namedExpression.displayName, operation.scope);\r\n    }\r\n    redoChangeNamedExpression(operation) {\r\n        this.operations.changeNamedExpressionExpression(operation.namedExpression.displayName, operation.newContent, operation.scope, operation.options);\r\n    }\r\n    redoSetRowOrder(operation) {\r\n        this.operations.setRowOrder(operation.sheetId, operation.rowMapping);\r\n    }\r\n    redoSetColumnOrder(operation) {\r\n        this.operations.setColumnOrder(operation.sheetId, operation.columnMapping);\r\n    }\r\n    addUndoEntry(operation) {\r\n        this.undoStack.push(operation);\r\n        this.undoStack.splice(0, Math.max(0, this.undoStack.length - this.undoLimit));\r\n    }\r\n    undoEntry(operation) {\r\n        operation.doUndo(this);\r\n    }\r\n    restoreOperationOldContent(oldContent) {\r\n        for (const [address, clipboardCell] of oldContent) {\r\n            this.operations.restoreCell(address, clipboardCell);\r\n        }\r\n    }\r\n    redoEntry(operation) {\r\n        operation.doRedo(this);\r\n    }\r\n    restoreOldDataFromVersion(version) {\r\n        const oldDataToRestore = this.oldData.get(version) || [];\r\n        for (const entryToRestore of oldDataToRestore) {\r\n            const [address, hash] = entryToRestore;\r\n            this.operations.setFormulaToCellFromCache(hash, address);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { absolutizeDependencies } from './absolutizeDependencies';\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { ContentChanges } from './ContentChanges';\r\nimport { ArrayVertex, RangeVertex } from './DependencyGraph';\r\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\r\nimport { InterpreterState } from './interpreter/InterpreterState';\r\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nimport { StatType } from './statistics';\r\nexport class Evaluator {\r\n    constructor(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch) {\r\n        this.config = config;\r\n        this.stats = stats;\r\n        this.interpreter = interpreter;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n    }\r\n    run() {\r\n        this.stats.start(StatType.TOP_SORT);\r\n        const { sorted, cycled } = this.dependencyGraph.topSortWithScc();\r\n        this.stats.end(StatType.TOP_SORT);\r\n        this.stats.measure(StatType.EVALUATION, () => {\r\n            this.recomputeFormulas(cycled, sorted);\r\n        });\r\n    }\r\n    partialRun(vertices) {\r\n        const changes = ContentChanges.empty();\r\n        this.stats.measure(StatType.EVALUATION, () => {\r\n            this.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, (vertex) => {\r\n                if (vertex instanceof FormulaVertex) {\r\n                    const currentValue = vertex.isComputed() ? vertex.getCellValue() : undefined;\r\n                    const newCellValue = this.recomputeFormulaVertexValue(vertex);\r\n                    if (newCellValue !== currentValue) {\r\n                        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                        changes.addChange(newCellValue, address);\r\n                        this.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n                else if (vertex instanceof RangeVertex) {\r\n                    vertex.clearCache();\r\n                    return true;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }, (vertex) => {\r\n                if (vertex instanceof RangeVertex) {\r\n                    vertex.clearCache();\r\n                }\r\n                else if (vertex instanceof FormulaVertex) {\r\n                    const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                    this.columnSearch.remove(getRawValue(vertex.valueOrUndef()), address);\r\n                    const error = new CellError(ErrorType.CYCLE, undefined, vertex);\r\n                    vertex.setCellValue(error);\r\n                    changes.addChange(error, address);\r\n                }\r\n            });\r\n        });\r\n        return changes;\r\n    }\r\n    runAndForget(ast, address, dependencies) {\r\n        const tmpRanges = [];\r\n        for (const dep of absolutizeDependencies(dependencies, address)) {\r\n            if (dep instanceof AbsoluteCellRange) {\r\n                const range = dep;\r\n                if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\r\n                    const rangeVertex = new RangeVertex(range);\r\n                    this.dependencyGraph.rangeMapping.setRange(rangeVertex);\r\n                    tmpRanges.push(rangeVertex);\r\n                }\r\n            }\r\n        }\r\n        const ret = this.evaluateAstToCellValue(ast, new InterpreterState(address, this.config.useArrayArithmetic));\r\n        tmpRanges.forEach((rangeVertex) => {\r\n            this.dependencyGraph.rangeMapping.removeRange(rangeVertex);\r\n        });\r\n        return ret;\r\n    }\r\n    /**\r\n     * Recalculates formulas in the topological sort order\r\n     */\r\n    recomputeFormulas(cycled, sorted) {\r\n        cycled.forEach((vertex) => {\r\n            if (vertex instanceof FormulaVertex) {\r\n                vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex));\r\n            }\r\n        });\r\n        sorted.forEach((vertex) => {\r\n            if (vertex instanceof FormulaVertex) {\r\n                const newCellValue = this.recomputeFormulaVertexValue(vertex);\r\n                const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                this.columnSearch.add(getRawValue(newCellValue), address);\r\n            }\r\n            else if (vertex instanceof RangeVertex) {\r\n                vertex.clearCache();\r\n            }\r\n        });\r\n    }\r\n    recomputeFormulaVertexValue(vertex) {\r\n        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n        if (vertex instanceof ArrayVertex && (vertex.array.size.isRef || !this.dependencyGraph.isThereSpaceForArray(vertex))) {\r\n            return vertex.setNoSpace();\r\n        }\r\n        else {\r\n            const formula = vertex.getFormula(this.lazilyTransformingAstService);\r\n            const newCellValue = this.evaluateAstToCellValue(formula, new InterpreterState(address, this.config.useArrayArithmetic, vertex));\r\n            return vertex.setCellValue(newCellValue);\r\n        }\r\n    }\r\n    evaluateAstToCellValue(ast, state) {\r\n        const interpreterValue = this.interpreter.evaluateAst(ast, state);\r\n        if (interpreterValue instanceof SimpleRangeValue) {\r\n            return interpreterValue;\r\n        }\r\n        else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return interpreterValue;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { DetailedCellError } from './CellValue';\r\nimport { ErrorMessage } from './error-message';\r\nimport { EmptyValue, getRawValue, isExtendedNumber } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nimport { NamedExpressions } from './NamedExpressions';\r\nimport { simpleCellAddressToString } from './parser/addressRepresentationConverters';\r\n/**\r\n * A list of cells which values changed after the operation, their absolute addresses and new values.\r\n */\r\nexport class ExportedCellChange {\r\n    constructor(address, newValue) {\r\n        this.address = address;\r\n        this.newValue = newValue;\r\n    }\r\n    get col() {\r\n        return this.address.col;\r\n    }\r\n    get row() {\r\n        return this.address.row;\r\n    }\r\n    get sheet() {\r\n        return this.address.sheet;\r\n    }\r\n    get value() {\r\n        return this.newValue;\r\n    }\r\n}\r\nexport class ExportedNamedExpressionChange {\r\n    constructor(name, newValue) {\r\n        this.name = name;\r\n        this.newValue = newValue;\r\n    }\r\n}\r\nexport class Exporter {\r\n    constructor(config, namedExpressions, sheetIndexMapping, lazilyTransformingService) {\r\n        this.config = config;\r\n        this.namedExpressions = namedExpressions;\r\n        this.sheetIndexMapping = sheetIndexMapping;\r\n        this.lazilyTransformingService = lazilyTransformingService;\r\n    }\r\n    exportChange(change) {\r\n        const value = change.value;\r\n        const address = change.address;\r\n        if (address.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\r\n            const namedExpression = this.namedExpressions.namedExpressionInAddress(address.row);\r\n            if (!namedExpression) {\r\n                throw new Error('Missing named expression');\r\n            }\r\n            return new ExportedNamedExpressionChange(namedExpression.displayName, this.exportScalarOrRange(value));\r\n        }\r\n        else if (value instanceof SimpleRangeValue) {\r\n            const result = [];\r\n            for (const [cellValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                result.push(new ExportedCellChange(cellAddress, this.exportValue(cellValue)));\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            return new ExportedCellChange(address, this.exportValue(value));\r\n        }\r\n    }\r\n    exportValue(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return this.detailedError(new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected));\r\n        }\r\n        else if (this.config.smartRounding && isExtendedNumber(value)) {\r\n            return this.cellValueRounding(getRawValue(value));\r\n        }\r\n        else if (value instanceof CellError) {\r\n            return this.detailedError(value);\r\n        }\r\n        else if (value === EmptyValue) {\r\n            return null;\r\n        }\r\n        else {\r\n            return getRawValue(value);\r\n        }\r\n    }\r\n    exportScalarOrRange(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return value.rawData().map(row => row.map(v => this.exportValue(v)));\r\n        }\r\n        else {\r\n            return this.exportValue(value);\r\n        }\r\n    }\r\n    detailedError(error) {\r\n        var _a, _b;\r\n        let address = undefined;\r\n        const originAddress = (_a = error.root) === null || _a === void 0 ? void 0 : _a.getAddress(this.lazilyTransformingService);\r\n        if (originAddress !== undefined) {\r\n            if (originAddress.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\r\n                address = (_b = this.namedExpressions.namedExpressionInAddress(originAddress.row)) === null || _b === void 0 ? void 0 : _b.displayName;\r\n            }\r\n            else {\r\n                address = simpleCellAddressToString(this.sheetIndexMapping, originAddress, -1);\r\n            }\r\n        }\r\n        return new DetailedCellError(error, this.config.translationPackage.getErrorTranslation(error.type), address);\r\n    }\r\n    cellValueRounding(value) {\r\n        if (value === 0) {\r\n            return value;\r\n        }\r\n        const magnitudeMultiplierExponent = Math.floor(Math.log10(Math.abs(value)));\r\n        const placesMultiplier = Math.pow(10, this.config.precisionRounding - magnitudeMultiplierExponent);\r\n        if (value < 0) {\r\n            return -Math.round(-value * placesMultiplier) / placesMultiplier;\r\n        }\r\n        else {\r\n            return Math.round(value * placesMultiplier) / placesMultiplier;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absolutizeDependencies } from './absolutizeDependencies';\r\nimport { ArraySize } from './ArraySize';\r\nimport { simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\r\nimport { getRawValue } from './interpreter/InterpreterValue';\r\nimport { StatType } from './statistics';\r\n/**\r\n * Service building the graph and mappings.\r\n */\r\nexport class GraphBuilder {\r\n    /**\r\n     * Configures the building service.\r\n     */\r\n    constructor(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.parser = parser;\r\n        this.cellContentParser = cellContentParser;\r\n        this.stats = stats;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.buildStrategy = new SimpleStrategy(dependencyGraph, columnSearch, parser, stats, cellContentParser, arraySizePredictor);\r\n    }\r\n    /**\r\n     * Builds graph.\r\n     */\r\n    buildGraph(sheets, stats) {\r\n        const dependencies = stats.measure(StatType.COLLECT_DEPENDENCIES, () => this.buildStrategy.run(sheets));\r\n        this.dependencyGraph.getAndClearContentChanges();\r\n        stats.measure(StatType.PROCESS_DEPENDENCIES, () => this.processDependencies(dependencies));\r\n    }\r\n    processDependencies(dependencies) {\r\n        dependencies.forEach((cellDependencies, endVertex) => {\r\n            this.dependencyGraph.processCellDependencies(cellDependencies, endVertex);\r\n        });\r\n    }\r\n}\r\nexport class SimpleStrategy {\r\n    constructor(dependencyGraph, columnIndex, parser, stats, cellContentParser, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnIndex = columnIndex;\r\n        this.parser = parser;\r\n        this.stats = stats;\r\n        this.cellContentParser = cellContentParser;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n    }\r\n    run(sheets) {\r\n        const dependencies = new Map();\r\n        for (const sheetName in sheets) {\r\n            const sheetId = this.dependencyGraph.getSheetId(sheetName);\r\n            const sheet = sheets[sheetName];\r\n            for (let i = 0; i < sheet.length; ++i) {\r\n                const row = sheet[i];\r\n                for (let j = 0; j < row.length; ++j) {\r\n                    const cellContent = row[j];\r\n                    const address = simpleCellAddress(sheetId, j, i);\r\n                    const parsedCellContent = this.cellContentParser.parse(cellContent);\r\n                    if (parsedCellContent instanceof CellContent.Formula) {\r\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\r\n                        if (parseResult.errors.length > 0) {\r\n                            this.shrinkArrayIfNeeded(address);\r\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formula);\r\n                            this.dependencyGraph.addVertex(address, vertex);\r\n                        }\r\n                        else {\r\n                            this.shrinkArrayIfNeeded(address);\r\n                            const size = this.arraySizePredictor.checkArraySize(parseResult.ast, address);\r\n                            if (size.isScalar()) {\r\n                                const vertex = new FormulaCellVertex(parseResult.ast, address, 0);\r\n                                dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\r\n                                this.dependencyGraph.addVertex(address, vertex);\r\n                                if (parseResult.hasVolatileFunction) {\r\n                                    this.dependencyGraph.markAsVolatile(vertex);\r\n                                }\r\n                                if (parseResult.hasStructuralChangeFunction) {\r\n                                    this.dependencyGraph.markAsDependentOnStructureChange(vertex);\r\n                                }\r\n                            }\r\n                            else {\r\n                                const vertex = new ArrayVertex(parseResult.ast, address, new ArraySize(size.width, size.height));\r\n                                dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\r\n                                this.dependencyGraph.addArrayVertex(address, vertex);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (parsedCellContent instanceof CellContent.Empty) {\r\n                        /* we don't care about empty cells here */\r\n                    }\r\n                    else {\r\n                        this.shrinkArrayIfNeeded(address);\r\n                        const vertex = new ValueCellVertex(parsedCellContent.value, cellContent);\r\n                        this.columnIndex.add(getRawValue(parsedCellContent.value), address);\r\n                        this.dependencyGraph.addVertex(address, vertex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dependencies;\r\n    }\r\n    shrinkArrayIfNeeded(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.dependencyGraph.shrinkArrayToCorner(vertex);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AliasAlreadyExisting, FunctionPluginValidationError, ProtectedFunctionError } from '../errors';\r\nimport { HyperFormula } from '../HyperFormula';\r\nimport { VersionPlugin } from './plugin/VersionPlugin';\r\nfunction validateAndReturnMetadataFromName(functionId, plugin) {\r\n    var _a;\r\n    let entry = plugin.implementedFunctions[functionId];\r\n    const key = (_a = plugin.aliases) === null || _a === void 0 ? void 0 : _a[functionId];\r\n    if (key !== undefined) {\r\n        if (entry !== undefined) {\r\n            throw new AliasAlreadyExisting(functionId, plugin.name);\r\n        }\r\n        entry = plugin.implementedFunctions[key];\r\n    }\r\n    if (entry === undefined) {\r\n        throw FunctionPluginValidationError.functionNotDeclaredInPlugin(functionId, plugin.name);\r\n    }\r\n    return entry;\r\n}\r\nexport class FunctionRegistry {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.functions = new Map();\r\n        this.arraySizeFunctions = new Map();\r\n        this.volatileFunctions = new Set();\r\n        this.arrayFunctions = new Set();\r\n        this.structuralChangeFunctions = new Set();\r\n        this.functionsWhichDoesNotNeedArgumentsToBeComputed = new Set();\r\n        this.functionsMetadata = new Map();\r\n        this.doesFunctionNeedArgumentToBeComputed = (functionId) => this.functionsWhichDoesNotNeedArgumentsToBeComputed.has(functionId);\r\n        this.isFunctionVolatile = (functionId) => this.volatileFunctions.has(functionId);\r\n        this.isArrayFunction = (functionId) => this.arrayFunctions.has(functionId);\r\n        this.isFunctionDependentOnSheetStructureChange = (functionId) => this.structuralChangeFunctions.has(functionId);\r\n        if (config.functionPlugins.length > 0) {\r\n            this.instancePlugins = new Map();\r\n            for (const plugin of config.functionPlugins) {\r\n                FunctionRegistry.loadPluginFunctions(plugin, this.instancePlugins);\r\n            }\r\n        }\r\n        else {\r\n            this.instancePlugins = new Map(FunctionRegistry.plugins);\r\n        }\r\n        for (const [functionId, plugin] of FunctionRegistry.protectedFunctions()) {\r\n            FunctionRegistry.loadFunctionUnprotected(plugin, functionId, this.instancePlugins);\r\n        }\r\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\r\n            this.categorizeFunction(functionId, validateAndReturnMetadataFromName(functionId, plugin));\r\n        }\r\n    }\r\n    static registerFunctionPlugin(plugin, translations) {\r\n        this.loadPluginFunctions(plugin, this.plugins);\r\n        if (translations !== undefined) {\r\n            this.loadTranslations(translations);\r\n        }\r\n    }\r\n    static registerFunction(functionId, plugin, translations) {\r\n        this.loadPluginFunction(plugin, functionId, this.plugins);\r\n        if (translations !== undefined) {\r\n            this.loadTranslations(translations);\r\n        }\r\n    }\r\n    static unregisterFunction(functionId) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            throw ProtectedFunctionError.cannotUnregisterFunctionWithId(functionId);\r\n        }\r\n        this.plugins.delete(functionId);\r\n    }\r\n    static unregisterFunctionPlugin(plugin) {\r\n        for (const protectedPlugin of this.protectedPlugins()) {\r\n            if (protectedPlugin === plugin) {\r\n                throw ProtectedFunctionError.cannotUnregisterProtectedPlugin();\r\n            }\r\n        }\r\n        for (const [functionId, registeredPlugin] of this.plugins.entries()) {\r\n            if (registeredPlugin === plugin) {\r\n                this.plugins.delete(functionId);\r\n            }\r\n        }\r\n    }\r\n    static unregisterAll() {\r\n        this.plugins.clear();\r\n    }\r\n    static getRegisteredFunctionIds() {\r\n        return [\r\n            ...Array.from(this.plugins.keys()),\r\n            ...Array.from(this._protectedPlugins.keys())\r\n        ];\r\n    }\r\n    static getPlugins() {\r\n        return Array.from(new Set(this.plugins.values()).values());\r\n    }\r\n    static getFunctionPlugin(functionId) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this.plugins.get(functionId);\r\n        }\r\n    }\r\n    static functionIsProtected(functionId) {\r\n        return this._protectedPlugins.has(functionId);\r\n    }\r\n    static loadTranslations(translations) {\r\n        const registeredLanguages = new Set(HyperFormula.getRegisteredLanguagesCodes());\r\n        Object.keys(translations).forEach(code => {\r\n            if (registeredLanguages.has(code)) {\r\n                HyperFormula.getLanguage(code).extendFunctions(translations[code]);\r\n            }\r\n        });\r\n    }\r\n    static loadPluginFunctions(plugin, registry) {\r\n        Object.keys(plugin.implementedFunctions).forEach((functionName) => {\r\n            this.loadPluginFunction(plugin, functionName, registry);\r\n        });\r\n        if (plugin.aliases !== undefined) {\r\n            Object.keys(plugin.aliases).forEach((functionName) => {\r\n                this.loadPluginFunction(plugin, functionName, registry);\r\n            });\r\n        }\r\n    }\r\n    static loadPluginFunction(plugin, functionId, registry) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            throw ProtectedFunctionError.cannotRegisterFunctionWithId(functionId);\r\n        }\r\n        else {\r\n            this.loadFunctionUnprotected(plugin, functionId, registry);\r\n        }\r\n    }\r\n    static loadFunctionUnprotected(plugin, functionId, registry) {\r\n        const methodName = validateAndReturnMetadataFromName(functionId, plugin).method;\r\n        if (Object.prototype.hasOwnProperty.call(plugin.prototype, methodName)) {\r\n            registry.set(functionId, plugin);\r\n        }\r\n        else {\r\n            throw FunctionPluginValidationError.functionMethodNotFound(methodName, plugin.name);\r\n        }\r\n    }\r\n    static *protectedFunctions() {\r\n        for (const [functionId, plugin] of this._protectedPlugins) {\r\n            if (plugin !== undefined) {\r\n                yield [functionId, plugin];\r\n            }\r\n        }\r\n    }\r\n    static *protectedPlugins() {\r\n        for (const [, plugin] of this._protectedPlugins) {\r\n            if (plugin !== undefined) {\r\n                yield plugin;\r\n            }\r\n        }\r\n    }\r\n    initializePlugins(interpreter) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const instances = [];\r\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\r\n            let foundPluginInstance = instances.find(pluginInstance => pluginInstance instanceof plugin);\r\n            if (foundPluginInstance === undefined) {\r\n                foundPluginInstance = new plugin(interpreter);\r\n                instances.push(foundPluginInstance);\r\n            }\r\n            const metadata = validateAndReturnMetadataFromName(functionId, plugin);\r\n            const methodName = metadata.method;\r\n            this.functions.set(functionId, [methodName, foundPluginInstance]);\r\n            const arraySizeMethodName = metadata.arraySizeMethod;\r\n            if (arraySizeMethodName !== undefined) {\r\n                this.arraySizeFunctions.set(functionId, [arraySizeMethodName, foundPluginInstance]);\r\n            }\r\n        }\r\n    }\r\n    getFunctionPlugin(functionId) {\r\n        if (FunctionRegistry.functionIsProtected(functionId)) {\r\n            return undefined;\r\n        }\r\n        return this.instancePlugins.get(functionId);\r\n    }\r\n    getFunction(functionId) {\r\n        const pluginEntry = this.functions.get(functionId);\r\n        if (pluginEntry !== undefined && this.config.translationPackage.isFunctionTranslated(functionId)) {\r\n            const [pluginFunction, pluginInstance] = pluginEntry;\r\n            return (ast, state) => pluginInstance[pluginFunction](ast, state);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    getArraySizeFunction(functionId) {\r\n        const pluginEntry = this.arraySizeFunctions.get(functionId);\r\n        if (pluginEntry !== undefined && this.config.translationPackage.isFunctionTranslated(functionId)) {\r\n            const [pluginArraySizeFunction, pluginInstance] = pluginEntry;\r\n            return (ast, state) => pluginInstance[pluginArraySizeFunction](ast, state);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    getMetadata(functionId) {\r\n        return this.functionsMetadata.get(functionId);\r\n    }\r\n    getPlugins() {\r\n        const plugins = new Set();\r\n        for (const [functionId, plugin] of this.instancePlugins) {\r\n            if (!FunctionRegistry.functionIsProtected(functionId)) {\r\n                plugins.add(plugin);\r\n            }\r\n        }\r\n        return Array.from(plugins);\r\n    }\r\n    getRegisteredFunctionIds() {\r\n        return Array.from(this.functions.keys());\r\n    }\r\n    categorizeFunction(functionId, functionMetadata) {\r\n        if (functionMetadata.isVolatile) {\r\n            this.volatileFunctions.add(functionId);\r\n        }\r\n        if (functionMetadata.arrayFunction) {\r\n            this.arrayFunctions.add(functionId);\r\n        }\r\n        if (functionMetadata.doesNotNeedArgumentsToBeComputed) {\r\n            this.functionsWhichDoesNotNeedArgumentsToBeComputed.add(functionId);\r\n        }\r\n        if (functionMetadata.isDependentOnSheetStructureChange) {\r\n            this.structuralChangeFunctions.add(functionId);\r\n        }\r\n        this.functionsMetadata.set(functionId, functionMetadata);\r\n    }\r\n}\r\nFunctionRegistry.plugins = new Map();\r\nFunctionRegistry._protectedPlugins = new Map([\r\n    ['VERSION', VersionPlugin],\r\n    ['OFFSET', undefined],\r\n]);\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { HyperFormula } from '../../HyperFormula';\r\nimport { FunctionPlugin } from './FunctionPlugin';\r\nconst LICENSE_STATUS_MAP = new Map([\r\n    ['gpl-v3', 1],\r\n    [\"missing\" /* MISSING */, 2],\r\n    [\"invalid\" /* INVALID */, 3],\r\n    [\"expired\" /* EXPIRED */, 4],\r\n]);\r\nexport class VersionPlugin extends FunctionPlugin {\r\n    version(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('VERSION'), () => {\r\n            const { licenseKeyValidityState: validityState, licenseKey, } = this.config;\r\n            let status;\r\n            if (LICENSE_STATUS_MAP.has(licenseKey)) {\r\n                status = LICENSE_STATUS_MAP.get(licenseKey);\r\n            }\r\n            else if (LICENSE_STATUS_MAP.has(validityState)) {\r\n                status = LICENSE_STATUS_MAP.get(validityState);\r\n            }\r\n            else if (validityState === \"valid\" /* VALID */) {\r\n                status = licenseKey.slice(-5);\r\n            }\r\n            return `HyperFormula v${HyperFormula.version}, ${status}`;\r\n        });\r\n    }\r\n}\r\nVersionPlugin.implementedFunctions = {\r\n    'VERSION': {\r\n        method: 'version',\r\n        parameters: [],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\r\nimport { ArrayValue, NotComputedArray } from '../ArrayValue';\r\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\n// noinspection TypeScriptPreferShortImport\r\nimport { AstNodeType } from '../parser/Ast';\r\nimport { coerceRangeToScalar, coerceScalarToString, coerceToRange, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\r\nimport { CriterionBuilder } from './Criterion';\r\nimport { FunctionRegistry } from './FunctionRegistry';\r\nimport { InterpreterState } from './InterpreterState';\r\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber, } from './InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nexport class Interpreter {\r\n    constructor(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper) {\r\n        this.config = config;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.stats = stats;\r\n        this.arithmeticHelper = arithmeticHelper;\r\n        this.functionRegistry = functionRegistry;\r\n        this.namedExpressions = namedExpressions;\r\n        this.serialization = serialization;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.dateTimeHelper = dateTimeHelper;\r\n        this.equalOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.eq, arg1, arg2);\r\n        this.notEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.neq, arg1, arg2);\r\n        this.greaterThanOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.gt, arg1, arg2);\r\n        this.lessThanOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.lt, arg1, arg2);\r\n        this.greaterThanOrEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.geq, arg1, arg2);\r\n        this.lessThanOrEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.leq, arg1, arg2);\r\n        this.concatOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.concat, coerceScalarToString(arg1), coerceScalarToString(arg2));\r\n        this.plusOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.addWithEpsilon, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.minusOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.subtract, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.timesOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.multiply, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.powerOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.pow, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.divOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.divide, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.unaryMinusOp = (arg) => unaryErrorWrapper(this.arithmeticHelper.unaryMinus, this.arithmeticHelper.coerceScalarToNumberOrError(arg));\r\n        this.percentOp = (arg) => unaryErrorWrapper(this.arithmeticHelper.unaryPercent, this.arithmeticHelper.coerceScalarToNumberOrError(arg));\r\n        this.unaryPlusOp = (arg) => this.arithmeticHelper.unaryPlus(arg);\r\n        this.functionRegistry.initializePlugins(this);\r\n        this.criterionBuilder = new CriterionBuilder(config);\r\n    }\r\n    evaluateAst(ast, state) {\r\n        let val = this.evaluateAstWithoutPostprocessing(ast, state);\r\n        if (isExtendedNumber(val)) {\r\n            if (isNumberOverflow(getRawValue(val))) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n            }\r\n            else {\r\n                val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\r\n            }\r\n        }\r\n        if (val instanceof SimpleRangeValue && val.height() === 1 && val.width() === 1) {\r\n            [[val]] = val.data;\r\n        }\r\n        return wrapperForRootVertex(val, state.formulaVertex);\r\n    }\r\n    /**\r\n     * Calculates cell value from formula abstract syntax tree\r\n     *\r\n     * @param formula - abstract syntax tree of formula\r\n     * @param formulaAddress - address of the cell in which formula is located\r\n     */\r\n    evaluateAstWithoutPostprocessing(ast, state) {\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return EmptyValue;\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                const address = ast.reference.toSimpleCellAddress(state.formulaAddress);\r\n                if (invalidSimpleCellAddress(address)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.BadRef);\r\n                }\r\n                return this.dependencyGraph.getCellValue(address);\r\n            }\r\n            case AstNodeType.NUMBER:\r\n            case AstNodeType.STRING: {\r\n                return ast.value;\r\n            }\r\n            case AstNodeType.CONCATENATE_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.concatOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.EQUALS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.equalOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.NOT_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.notEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.GREATER_THAN_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.greaterThanOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.LESS_THAN_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.lessThanOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.greaterThanOrEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.lessThanOrEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.PLUS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.plusOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.MINUS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.minusOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.TIMES_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.timesOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.POWER_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.powerOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.DIV_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.divOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.unaryPlusOp, result, state);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.unaryMinusOp, result, state);\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.percentOp, result, state);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                if (this.config.licenseKeyValidityState !== \"valid\" /* VALID */ && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\r\n                    return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\r\n                }\r\n                const pluginFunction = this.functionRegistry.getFunction(ast.procedureName);\r\n                if (pluginFunction !== undefined) {\r\n                    return pluginFunction(ast, new InterpreterState(state.formulaAddress, state.arraysFlag || this.functionRegistry.isArrayFunction(ast.procedureName), state.formulaVertex));\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\r\n                }\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                const namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, state.formulaAddress.sheet);\r\n                if (namedExpression) {\r\n                    return this.dependencyGraph.getCellValue(namedExpression.address);\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\r\n                }\r\n            }\r\n            case AstNodeType.CELL_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteCellRange.fromCellRange(ast, state.formulaAddress);\r\n                const arrayVertex = this.dependencyGraph.getArray(range);\r\n                if (arrayVertex) {\r\n                    const array = arrayVertex.array;\r\n                    if (array instanceof NotComputedArray) {\r\n                        throw new Error('Array should be already computed');\r\n                    }\r\n                    else if (array instanceof CellError) {\r\n                        return array;\r\n                    }\r\n                    else if (array instanceof ArrayValue) {\r\n                        return SimpleRangeValue.fromRange(array.raw(), range, this.dependencyGraph);\r\n                    }\r\n                    else {\r\n                        throw new Error('Unknown array');\r\n                    }\r\n                }\r\n                else {\r\n                    return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n                }\r\n            }\r\n            case AstNodeType.COLUMN_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteColumnRange.fromColumnRange(ast, state.formulaAddress);\r\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n            }\r\n            case AstNodeType.ROW_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteRowRange.fromRowRangeAst(ast, state.formulaAddress);\r\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return this.evaluateAst(ast.expression, state);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                let totalWidth = undefined;\r\n                const ret = [];\r\n                for (const astRow of ast.args) {\r\n                    let rowHeight = undefined;\r\n                    const rowRet = [];\r\n                    for (const astIt of astRow) {\r\n                        const arr = coerceToRange(this.evaluateAst(astIt, state));\r\n                        const height = arr.height();\r\n                        if (rowHeight === undefined) {\r\n                            rowHeight = height;\r\n                            rowRet.push(...arr.data);\r\n                        }\r\n                        else if (rowHeight === height) {\r\n                            for (let i = 0; i < height; i++) {\r\n                                rowRet[i].push(...arr.data[i]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\r\n                        }\r\n                    }\r\n                    const width = rowRet[0].length;\r\n                    if (totalWidth === undefined) {\r\n                        totalWidth = width;\r\n                        ret.push(...rowRet);\r\n                    }\r\n                    else if (totalWidth === width) {\r\n                        ret.push(...rowRet);\r\n                    }\r\n                    else {\r\n                        return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\r\n                    }\r\n                }\r\n                return SimpleRangeValue.onlyValues(ret);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            case AstNodeType.ERROR: {\r\n                return ast.error;\r\n            }\r\n        }\r\n    }\r\n    rangeSpansOneSheet(ast) {\r\n        return ast.start.sheet === ast.end.sheet;\r\n    }\r\n    unaryRangeWrapper(op, arg, state) {\r\n        var _a;\r\n        if (arg instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg = (_a = coerceRangeToScalar(arg, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        if (arg instanceof SimpleRangeValue) {\r\n            const newRaw = arg.data.map((row) => row.map(op));\r\n            return SimpleRangeValue.onlyValues(newRaw);\r\n        }\r\n        return op(arg);\r\n    }\r\n    binaryRangeWrapper(op, arg1, arg2, state) {\r\n        var _a, _b;\r\n        if (arg1 instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg1 = (_a = coerceRangeToScalar(arg1, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg1 instanceof CellError) {\r\n            return arg1;\r\n        }\r\n        if (arg2 instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg2 = (_b = coerceRangeToScalar(arg2, state)) !== null && _b !== void 0 ? _b : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg2 instanceof CellError) {\r\n            return arg2;\r\n        }\r\n        if (arg1 instanceof SimpleRangeValue || arg2 instanceof SimpleRangeValue) {\r\n            if (!(arg1 instanceof SimpleRangeValue)) {\r\n                if (arg2.isAdHoc()) {\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw2.length; i++) {\r\n                        for (let j = 0; j < raw2[0].length; j++) {\r\n                            raw2[i][j] = op(arg1, raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw2);\r\n                }\r\n                else {\r\n                    arg1 = SimpleRangeValue.fromScalar(arg1);\r\n                }\r\n            }\r\n            if (!(arg2 instanceof SimpleRangeValue)) {\r\n                if (arg1.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw1[i][j] = op(raw1[i][j], arg2);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw1);\r\n                }\r\n                else {\r\n                    arg2 = SimpleRangeValue.fromScalar(arg2);\r\n                }\r\n            }\r\n            if (arg1.width() === arg2.width() && arg1.height() === arg2.height()) {\r\n                if (arg1.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw1[i][j] = op(raw1[i][j], raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw1);\r\n                }\r\n                if (arg2.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw2[i][j] = op(raw1[i][j], raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw2);\r\n                }\r\n            }\r\n            const width = Math.max(arg1.width(), arg2.width());\r\n            const height = Math.max(arg1.height(), arg2.height());\r\n            const ret = Array(height);\r\n            for (let i = 0; i < height; i++) {\r\n                ret[i] = Array(width);\r\n            }\r\n            for (let i = 0; i < height; i++) {\r\n                const i1 = (arg1.height() !== 1) ? i : 0;\r\n                const i2 = (arg2.height() !== 1) ? i : 0;\r\n                for (let j = 0; j < width; j++) {\r\n                    const j1 = (arg1.width() !== 1) ? j : 0;\r\n                    const j2 = (arg2.width() !== 1) ? j : 0;\r\n                    if (i1 < arg1.height() && i2 < arg2.height() && j1 < arg1.width() && j2 < arg2.width()) {\r\n                        ret[i][j] = op(arg1.data[i1][j1], arg2.data[i2][j2]);\r\n                    }\r\n                    else {\r\n                        ret[i][j] = new CellError(ErrorType.NA);\r\n                    }\r\n                }\r\n            }\r\n            return SimpleRangeValue.onlyValues(ret);\r\n        }\r\n        return op(arg1, arg2);\r\n    }\r\n}\r\nfunction unaryErrorWrapper(op, arg) {\r\n    if (arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return op(arg);\r\n    }\r\n}\r\nfunction binaryErrorWrapper(op, arg1, arg2) {\r\n    if (arg1 instanceof CellError) {\r\n        return arg1;\r\n    }\r\n    else if (arg2 instanceof CellError) {\r\n        return arg2;\r\n    }\r\n    else {\r\n        return op(arg1, arg2);\r\n    }\r\n}\r\nfunction wrapperForRootVertex(val, vertex) {\r\n    if (val instanceof CellError && vertex !== undefined) {\r\n        return val.attachRootVertex(vertex);\r\n    }\r\n    return val;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue, getRawValue } from './InterpreterValue';\r\nexport var CriterionType;\r\n(function (CriterionType) {\r\n    CriterionType[\"GREATER_THAN\"] = \"GREATER_THAN\";\r\n    CriterionType[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\r\n    CriterionType[\"LESS_THAN\"] = \"LESS_THAN\";\r\n    CriterionType[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\r\n    CriterionType[\"NOT_EQUAL\"] = \"NOT_EQUAL\";\r\n    CriterionType[\"EQUAL\"] = \"EQUAL\";\r\n})(CriterionType || (CriterionType = {}));\r\nexport const buildCriterion = (operator, value) => ({ operator, value });\r\nexport class CriterionBuilder {\r\n    constructor(config) {\r\n        var _a, _b, _c, _d;\r\n        this.trueString = (_b = (_a = config.translationPackage.getMaybeFunctionTranslation('TRUE')) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : 'true';\r\n        this.falseString = (_d = (_c = config.translationPackage.getMaybeFunctionTranslation('FALSE')) === null || _c === void 0 ? void 0 : _c.toLowerCase()) !== null && _d !== void 0 ? _d : 'false';\r\n    }\r\n    fromCellValue(raw, arithmeticHelper) {\r\n        if (typeof raw !== 'string' && typeof raw !== 'boolean' && typeof raw !== 'number') {\r\n            return undefined;\r\n        }\r\n        const criterion = this.parseCriterion(raw, arithmeticHelper);\r\n        if (criterion === undefined) {\r\n            return undefined;\r\n        }\r\n        return { raw, lambda: buildCriterionLambda(criterion, arithmeticHelper) };\r\n    }\r\n    parseCriterion(criterion, arithmeticHelper) {\r\n        if (typeof criterion === 'number' || typeof criterion === 'boolean') {\r\n            return buildCriterion(CriterionType.EQUAL, criterion);\r\n        }\r\n        else if (typeof criterion === 'string') {\r\n            const regexResult = ANY_CRITERION_REGEX.exec(criterion);\r\n            let criterionValue;\r\n            let criterionType;\r\n            if (regexResult) {\r\n                criterionType = StrToCriterionType(regexResult[1]);\r\n                criterionValue = regexResult[2];\r\n            }\r\n            else {\r\n                criterionType = CriterionType.EQUAL;\r\n                criterionValue = criterion;\r\n            }\r\n            const value = arithmeticHelper.coerceToMaybeNumber(criterionValue);\r\n            const boolvalue = criterionValue.toLowerCase() === this.trueString ? true : criterionValue.toLowerCase() === this.falseString ? false : undefined;\r\n            if (criterionType === undefined) {\r\n                return undefined;\r\n            }\r\n            if (criterionValue === '') {\r\n                return buildCriterion(criterionType, null);\r\n            }\r\n            else if (value === undefined) {\r\n                if (criterionType === CriterionType.EQUAL || criterionType === CriterionType.NOT_EQUAL) {\r\n                    return buildCriterion(criterionType, boolvalue !== null && boolvalue !== void 0 ? boolvalue : criterionValue);\r\n                }\r\n            }\r\n            else {\r\n                return buildCriterion(criterionType, getRawValue(value));\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nconst ANY_CRITERION_REGEX = /([<>=]+)(.*)/;\r\nfunction StrToCriterionType(str) {\r\n    switch (str) {\r\n        case '>':\r\n            return CriterionType.GREATER_THAN;\r\n        case '>=':\r\n            return CriterionType.GREATER_THAN_OR_EQUAL;\r\n        case '<':\r\n            return CriterionType.LESS_THAN;\r\n        case '<=':\r\n            return CriterionType.LESS_THAN_OR_EQUAL;\r\n        case '<>':\r\n            return CriterionType.NOT_EQUAL;\r\n        case '=':\r\n            return CriterionType.EQUAL;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexport const buildCriterionLambda = (criterion, arithmeticHelper) => {\r\n    switch (criterion.operator) {\r\n        case CriterionType.GREATER_THAN: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) > 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.GREATER_THAN_OR_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) >= 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.LESS_THAN: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) < 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.LESS_THAN_OR_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) <= 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => {\r\n                    if (typeof cellValue === 'number') {\r\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) === 0;\r\n                    }\r\n                    else if (typeof cellValue === 'string') {\r\n                        if (cellValue === '') {\r\n                            return false;\r\n                        }\r\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\r\n                        if (val === undefined) {\r\n                            return false;\r\n                        }\r\n                        return arithmeticHelper.floatCmp(val, criterion.value) === 0;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                };\r\n            }\r\n            else if (typeof criterion.value === 'string') {\r\n                return arithmeticHelper.eqMatcherFunction(criterion.value);\r\n            }\r\n            else if (typeof criterion.value === 'boolean') {\r\n                return (cellValue) => (typeof cellValue === 'boolean' && cellValue === criterion.value);\r\n            }\r\n            else {\r\n                return (cellValue) => (cellValue === EmptyValue);\r\n            }\r\n        }\r\n        case CriterionType.NOT_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => {\r\n                    if (typeof cellValue === 'number') {\r\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) !== 0;\r\n                    }\r\n                    else if (typeof cellValue === 'string') {\r\n                        if (cellValue === '') {\r\n                            return true;\r\n                        }\r\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\r\n                        if (val === undefined) {\r\n                            return true;\r\n                        }\r\n                        return arithmeticHelper.floatCmp(val, criterion.value) !== 0;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                };\r\n            }\r\n            else if (typeof criterion.value === 'string') {\r\n                return arithmeticHelper.neqMatcherFunction(criterion.value);\r\n            }\r\n            else if (typeof criterion.value === 'boolean') {\r\n                return (cellValue) => (typeof cellValue !== 'boolean' || cellValue !== criterion.value);\r\n            }\r\n            else {\r\n                return (cellValue) => (cellValue !== EmptyValue);\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CombinedTransformer } from './dependencyTransformers/CombinedTransformer';\r\nimport { StatType } from './statistics';\r\nexport class LazilyTransformingAstService {\r\n    constructor(stats) {\r\n        this.stats = stats;\r\n        this.transformations = [];\r\n    }\r\n    version() {\r\n        return this.transformations.length;\r\n    }\r\n    addTransformation(transformation) {\r\n        if (this.combinedTransformer !== undefined) {\r\n            this.combinedTransformer.add(transformation);\r\n        }\r\n        else {\r\n            this.transformations.push(transformation);\r\n        }\r\n        return this.version();\r\n    }\r\n    beginCombinedMode(sheet) {\r\n        this.combinedTransformer = new CombinedTransformer(sheet);\r\n    }\r\n    commitCombinedMode() {\r\n        if (this.combinedTransformer === undefined) {\r\n            throw 'Combined mode wasn\\'t started';\r\n        }\r\n        this.transformations.push(this.combinedTransformer);\r\n        this.combinedTransformer = undefined;\r\n        return this.version();\r\n    }\r\n    applyTransformations(ast, address, version) {\r\n        this.stats.start(StatType.TRANSFORM_ASTS_POSTPONED);\r\n        for (let v = version; v < this.transformations.length; v++) {\r\n            const transformation = this.transformations[v];\r\n            if (transformation.isIrreversible()) {\r\n                this.undoRedo.storeDataForVersion(v, address, this.parser.computeHashFromAst(ast));\r\n                this.parser.rememberNewAst(ast);\r\n            }\r\n            const [newAst, newAddress] = transformation.transformSingleAst(ast, address);\r\n            ast = newAst;\r\n            address = newAddress;\r\n        }\r\n        const cachedAst = this.parser.rememberNewAst(ast);\r\n        this.stats.end(StatType.TRANSFORM_ASTS_POSTPONED);\r\n        return [cachedAst, address, this.transformations.length];\r\n    }\r\n    *getTransformationsFrom(version, filter) {\r\n        for (let v = version; v < this.transformations.length; v++) {\r\n            const transformation = this.transformations[v];\r\n            if (!filter || filter(transformation)) {\r\n                yield transformation;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class CombinedTransformer {\r\n    constructor(sheet) {\r\n        this.sheet = sheet;\r\n        this.transformations = [];\r\n    }\r\n    add(transformation) {\r\n        this.transformations.push(transformation);\r\n    }\r\n    performEagerTransformations(graph, parser) {\r\n        this.transformations.forEach(transformation => transformation.performEagerTransformations(graph, parser));\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        let [transformedAst, transformedAddress] = [ast, address];\r\n        this.transformations.forEach(transformation => {\r\n            [transformedAst, transformedAddress] = transformation.transformSingleAst(transformedAst, transformedAddress);\r\n        });\r\n        return [transformedAst, transformedAddress];\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\r\nimport { ColumnIndex } from './ColumnIndex';\r\nexport function buildColumnSearchStrategy(dependencyGraph, config, statistics) {\r\n    if (config.useColumnIndex) {\r\n        return new ColumnIndex(dependencyGraph, config, statistics);\r\n    }\r\n    else {\r\n        return new ColumnBinarySearch(dependencyGraph, config);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\r\nimport { rangeLowerBound } from '../interpreter/binarySearch';\r\nimport { getRawValue } from '../interpreter/InterpreterValue';\r\nimport { AdvancedFind } from './AdvancedFind';\r\nexport class ColumnBinarySearch extends AdvancedFind {\r\n    constructor(dependencyGraph, config) {\r\n        super(dependencyGraph);\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.config = config;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars \r\n    add(value, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    remove(value, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    change(oldValue, newValue, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    applyChanges(contentChanges) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    addColumns(columnsSpan) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeColumns(columnsSpan) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeSheet(sheetId) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeValues(range) {\r\n    }\r\n    find(key, rangeValue, sorted) {\r\n        if (typeof key === 'string') {\r\n            key = forceNormalizeString(key);\r\n        }\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            return rangeValue.valuesFromTopLeftCorner().map(getRawValue).map(arg => (typeof arg === 'string') ? forceNormalizeString(arg) : arg).indexOf(key);\r\n        }\r\n        else if (!sorted) {\r\n            return this.dependencyGraph.computeListOfValuesInRange(range).findIndex(arg => {\r\n                arg = getRawValue(arg);\r\n                arg = (typeof arg === 'string') ? forceNormalizeString(arg) : arg;\r\n                return arg === key;\r\n            });\r\n        }\r\n        else {\r\n            return rangeLowerBound(range, key, this.dependencyGraph, 'row');\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, simpleCellAddress } from '../Cell';\r\nimport { EmptyValue, getRawValue } from './InterpreterValue';\r\n/*\r\n* If key exists returns first index of key element in range of sorted values\r\n* Otherwise returns first index of greatest element smaller than key\r\n* assuming sorted values in range\r\n* */\r\nexport function rangeLowerBound(range, key, dependencyGraph, coordinate) {\r\n    //IMPORTANT: this function does not normalize input strings\r\n    let end;\r\n    if (coordinate === 'col') {\r\n        end = range.effectiveEndColumn(dependencyGraph);\r\n    }\r\n    else {\r\n        end = range.effectiveEndRow(dependencyGraph);\r\n    }\r\n    const start = range.start[coordinate];\r\n    let centerValueFn;\r\n    if (coordinate === 'row') {\r\n        centerValueFn = (center) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, range.start.col, center)));\r\n    }\r\n    else {\r\n        centerValueFn = (center) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, center, range.start.row)));\r\n    }\r\n    const pos = lowerBound(centerValueFn, key, start, end);\r\n    if (typeof centerValueFn(pos) !== typeof key) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return pos - start;\r\n    }\r\n}\r\n/*\r\n* If key exists returns first index of key element\r\n* Otherwise returns first index of greatest element smaller than key\r\n* assuming sorted values\r\n* */\r\nexport function lowerBound(value, key, start, end) {\r\n    while (start <= end) {\r\n        const center = Math.floor((start + end) / 2);\r\n        const cmp = compare(key, value(center));\r\n        if (cmp > 0) {\r\n            start = center + 1;\r\n        }\r\n        else if (cmp < 0) {\r\n            end = center - 1;\r\n        }\r\n        else if (start != center) {\r\n            end = center;\r\n        }\r\n        else {\r\n            return center;\r\n        }\r\n    }\r\n    return end;\r\n}\r\n/*\r\n* numbers < strings < false < true\r\n* */\r\nexport function compare(left, right) {\r\n    if (typeof left === typeof right) {\r\n        if (left === EmptyValue) {\r\n            return 0;\r\n        }\r\n        return (left < right ? -1 : (left > right ? 1 : 0));\r\n    }\r\n    if (left === EmptyValue) {\r\n        return -1;\r\n    }\r\n    if (right === EmptyValue) {\r\n        return 1;\r\n    }\r\n    if (right instanceof CellError) {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'number' && typeof right === 'string') {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'number' && typeof right === 'boolean') {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'string' && typeof right === 'number') {\r\n        return 1;\r\n    }\r\n    if (typeof left === 'string' && typeof right === 'boolean') {\r\n        return -1;\r\n    }\r\n    return 1;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { getRawValue } from '../interpreter/InterpreterValue';\r\nexport class AdvancedFind {\r\n    constructor(dependencyGraph) {\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    advancedFind(keyMatcher, rangeValue) {\r\n        let values;\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            values = rangeValue.valuesFromTopLeftCorner();\r\n        }\r\n        else {\r\n            values = this.dependencyGraph.computeListOfValuesInRange(range);\r\n        }\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (keyMatcher(getRawValue(values[i]))) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, movedSimpleCellAddress } from '../Cell';\r\nimport { AddRowsTransformer } from '../dependencyTransformers/AddRowsTransformer';\r\nimport { RemoveRowsTransformer } from '../dependencyTransformers/RemoveRowsTransformer';\r\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from '../interpreter/SimpleRangeValue';\r\nimport { StatType } from '../statistics';\r\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\r\nexport class ColumnIndex {\r\n    constructor(dependencyGraph, config, stats) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.config = config;\r\n        this.stats = stats;\r\n        this.index = new Map();\r\n        this.transformingService = this.dependencyGraph.lazilyTransformingAstService;\r\n        this.binarySearchStrategy = new ColumnBinarySearch(dependencyGraph, config);\r\n    }\r\n    add(value, address) {\r\n        if (value === EmptyValue || value instanceof CellError) {\r\n            return;\r\n        }\r\n        else if (value instanceof SimpleRangeValue) {\r\n            for (const [arrayValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                this.addSingleCellValue(getRawValue(arrayValue), cellAddress);\r\n            }\r\n        }\r\n        else {\r\n            this.addSingleCellValue(value, address);\r\n        }\r\n    }\r\n    remove(value, address) {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            for (const [arrayValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                this.removeSingleValue(getRawValue(arrayValue), cellAddress);\r\n            }\r\n        }\r\n        else {\r\n            this.removeSingleValue(value, address);\r\n        }\r\n    }\r\n    change(oldValue, newValue, address) {\r\n        if (oldValue === newValue) {\r\n            return;\r\n        }\r\n        this.remove(oldValue, address);\r\n        this.add(newValue, address);\r\n    }\r\n    applyChanges(contentChanges) {\r\n        for (const change of contentChanges) {\r\n            if (change.oldValue !== undefined) {\r\n                this.change(getRawValue(change.oldValue), getRawValue(change.value), change.address);\r\n            }\r\n        }\r\n    }\r\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\r\n        for (const [value, address] of sourceRange) {\r\n            const targetAddress = movedSimpleCellAddress(address, toSheet, toRight, toBottom);\r\n            this.remove(value, address);\r\n            this.add(value, targetAddress);\r\n        }\r\n    }\r\n    removeValues(range) {\r\n        for (const [value, address] of range) {\r\n            this.remove(value, address);\r\n        }\r\n    }\r\n    find(key, rangeValue, sorted) {\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            return this.binarySearchStrategy.find(key, rangeValue, sorted);\r\n        }\r\n        this.ensureRecentData(range.sheet, range.start.col, key);\r\n        const columnMap = this.getColumnMap(range.sheet, range.start.col);\r\n        if (!columnMap) {\r\n            return -1;\r\n        }\r\n        if (typeof key === 'string') {\r\n            key = forceNormalizeString(key);\r\n        }\r\n        const valueIndex = columnMap.get(key);\r\n        if (!valueIndex) {\r\n            return this.binarySearchStrategy.find(key, rangeValue, sorted);\r\n        }\r\n        const index = upperBound(valueIndex.index, range.start.row);\r\n        const rowNumber = valueIndex.index[index];\r\n        return rowNumber <= range.end.row ? rowNumber - range.start.row : this.binarySearchStrategy.find(key, rangeValue, sorted);\r\n    }\r\n    advancedFind(keyMatcher, range) {\r\n        return this.binarySearchStrategy.advancedFind(keyMatcher, range);\r\n    }\r\n    addColumns(columnsSpan) {\r\n        const sheetIndex = this.index.get(columnsSpan.sheet);\r\n        if (!sheetIndex) {\r\n            return;\r\n        }\r\n        sheetIndex.splice(columnsSpan.columnStart, 0, ...Array(columnsSpan.numberOfColumns));\r\n    }\r\n    removeColumns(columnsSpan) {\r\n        const sheetIndex = this.index.get(columnsSpan.sheet);\r\n        if (!sheetIndex) {\r\n            return;\r\n        }\r\n        sheetIndex.splice(columnsSpan.columnStart, columnsSpan.numberOfColumns);\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.index.delete(sheetId);\r\n    }\r\n    getColumnMap(sheet, col) {\r\n        if (!this.index.has(sheet)) {\r\n            this.index.set(sheet, []);\r\n        }\r\n        const sheetMap = this.index.get(sheet); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n        let columnMap = sheetMap[col];\r\n        if (!columnMap) {\r\n            columnMap = new Map();\r\n            sheetMap[col] = columnMap;\r\n        }\r\n        return columnMap;\r\n    }\r\n    getValueIndex(sheet, col, value) {\r\n        const columnMap = this.getColumnMap(sheet, col);\r\n        let index = this.getColumnMap(sheet, col).get(value);\r\n        if (!index) {\r\n            index = {\r\n                version: this.transformingService.version(),\r\n                index: [],\r\n            };\r\n            columnMap.set(value, index);\r\n        }\r\n        return index;\r\n    }\r\n    ensureRecentData(sheet, col, value) {\r\n        const valueIndex = this.getValueIndex(sheet, col, value);\r\n        const actualVersion = this.transformingService.version();\r\n        if (valueIndex.version === actualVersion) {\r\n            return;\r\n        }\r\n        const relevantTransformations = this.transformingService.getTransformationsFrom(valueIndex.version, (transformation) => {\r\n            return transformation.sheet === sheet && (transformation instanceof AddRowsTransformer || transformation instanceof RemoveRowsTransformer);\r\n        });\r\n        for (const transformation of relevantTransformations) {\r\n            if (transformation instanceof AddRowsTransformer) {\r\n                this.addRows(col, transformation.rowsSpan, value);\r\n            }\r\n            else if (transformation instanceof RemoveRowsTransformer) {\r\n                this.removeRows(col, transformation.rowsSpan, value);\r\n            }\r\n        }\r\n        valueIndex.version = actualVersion;\r\n    }\r\n    addSingleCellValue(value, address) {\r\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\r\n            this.ensureRecentData(address.sheet, address.col, value);\r\n            if (typeof value === 'string') {\r\n                value = forceNormalizeString(value);\r\n            }\r\n            const valueIndex = this.getValueIndex(address.sheet, address.col, value);\r\n            this.addValue(valueIndex, address.row);\r\n        });\r\n    }\r\n    removeSingleValue(value, address) {\r\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\r\n            this.ensureRecentData(address.sheet, address.col, value);\r\n            const columnMap = this.getColumnMap(address.sheet, address.col);\r\n            if (typeof value === 'string') {\r\n                value = forceNormalizeString(value);\r\n            }\r\n            const valueIndex = columnMap.get(value);\r\n            if (!valueIndex) {\r\n                return;\r\n            }\r\n            const index = upperBound(valueIndex.index, address.row);\r\n            valueIndex.index.splice(index, 1);\r\n            if (valueIndex.index.length === 0) {\r\n                columnMap.delete(value);\r\n            }\r\n            if (columnMap.size === 0) {\r\n                delete this.index.get(address.sheet)[address.col]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n            }\r\n        });\r\n    }\r\n    addRows(col, rowsSpan, value) {\r\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\r\n        this.shiftRows(valueIndex, rowsSpan.rowStart, rowsSpan.numberOfRows);\r\n    }\r\n    removeRows(col, rowsSpan, value) {\r\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\r\n        this.removeRowsFromValues(valueIndex, rowsSpan);\r\n        this.shiftRows(valueIndex, rowsSpan.rowEnd + 1, -rowsSpan.numberOfRows);\r\n    }\r\n    addValue(valueIndex, rowNumber) {\r\n        const rowIndex = lowerBound(valueIndex.index, rowNumber);\r\n        const value = valueIndex.index[rowIndex];\r\n        if (value === rowNumber) {\r\n            /* do not add same row twice */\r\n            return;\r\n        }\r\n        if (rowIndex === valueIndex.index.length - 1) {\r\n            valueIndex.index.push(rowNumber);\r\n        }\r\n        else {\r\n            valueIndex.index.splice(rowIndex + 1, 0, rowNumber);\r\n        }\r\n    }\r\n    removeRowsFromValues(rows, rowsSpan) {\r\n        const start = upperBound(rows.index, rowsSpan.rowStart);\r\n        const end = lowerBound(rows.index, rowsSpan.rowEnd);\r\n        if (rows.index[start] <= rowsSpan.rowEnd) {\r\n            rows.index.splice(start, end - start + 1);\r\n        }\r\n    }\r\n    shiftRows(rows, afterRow, numberOfRows) {\r\n        const index = upperBound(rows.index, afterRow);\r\n        for (let i = index; i < rows.index.length; ++i) {\r\n            rows.index[i] += numberOfRows;\r\n        }\r\n    }\r\n}\r\n/*\r\n* If key exists returns index of key\r\n* Otherwise returns index of smallest element greater than key\r\n* assuming sorted array and no repetitions\r\n* */\r\nexport function upperBound(values, key) {\r\n    let start = 0;\r\n    let end = values.length - 1;\r\n    while (start <= end) {\r\n        const center = Math.floor((start + end) / 2);\r\n        if (key > values[center]) {\r\n            start = center + 1;\r\n        }\r\n        else if (key < values[center]) {\r\n            end = center - 1;\r\n        }\r\n        else {\r\n            return center;\r\n        }\r\n    }\r\n    return start;\r\n}\r\n/*\r\n* If key exists returns index of key\r\n* Otherwise returns index of greatest element smaller than key\r\n* assuming sorted array and no repetitions\r\n* */\r\nexport function lowerBound(values, key) {\r\n    let start = 0;\r\n    let end = values.length - 1;\r\n    while (start <= end) {\r\n        const center = Math.floor((start + end) / 2);\r\n        if (key > values[center]) {\r\n            start = center + 1;\r\n        }\r\n        else if (key < values[center]) {\r\n            end = center - 1;\r\n        }\r\n        else {\r\n            return center;\r\n        }\r\n    }\r\n    return end;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class NumberLiteralHelper {\r\n    constructor(config) {\r\n        this.config = config;\r\n        const thousandSeparator = this.config.thousandSeparator === '.' ? `\\\\${this.config.thousandSeparator}` : this.config.thousandSeparator;\r\n        const decimalSeparator = this.config.decimalSeparator === '.' ? `\\\\${this.config.decimalSeparator}` : this.config.decimalSeparator;\r\n        this.numberPattern = new RegExp(`^([+-]?((${decimalSeparator}\\\\d+)|(\\\\d+(${thousandSeparator}\\\\d{3,})*(${decimalSeparator}\\\\d*)?)))(e[+-]?\\\\d+)?$`);\r\n        this.allThousandSeparatorsRegex = new RegExp(`${thousandSeparator}`, 'g');\r\n    }\r\n    numericStringToMaybeNumber(input) {\r\n        if (this.numberPattern.test(input)) {\r\n            const num = this.numericStringToNumber(input);\r\n            if (isNaN(num)) {\r\n                return undefined;\r\n            }\r\n            return num;\r\n        }\r\n        return undefined;\r\n    }\r\n    numericStringToNumber(input) {\r\n        const normalized = input\r\n            .replace(this.allThousandSeparatorsRegex, '')\r\n            .replace(this.config.decimalSeparator, '.');\r\n        return Number(normalized);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from './Cell';\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex } from './DependencyGraph';\r\nimport { buildLexerConfig, Unparser } from './parser';\r\nexport class Serialization {\r\n    constructor(dependencyGraph, unparser, exporter) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.unparser = unparser;\r\n        this.exporter = exporter;\r\n    }\r\n    getCellFormula(address, targetAddress) {\r\n        const formulaVertex = this.dependencyGraph.getCell(address);\r\n        if (formulaVertex instanceof FormulaCellVertex) {\r\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\r\n            targetAddress = targetAddress !== null && targetAddress !== void 0 ? targetAddress : address;\r\n            return this.unparser.unparse(formula, targetAddress);\r\n        }\r\n        else if (formulaVertex instanceof ArrayVertex) {\r\n            const arrayVertexAddress = formulaVertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\r\n            if (arrayVertexAddress.row !== address.row || arrayVertexAddress.col !== address.col || arrayVertexAddress.sheet !== address.sheet) {\r\n                return undefined;\r\n            }\r\n            targetAddress = targetAddress !== null && targetAddress !== void 0 ? targetAddress : address;\r\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\r\n            if (formula !== undefined) {\r\n                return this.unparser.unparse(formula, targetAddress);\r\n            }\r\n        }\r\n        else if (formulaVertex instanceof ParsingErrorVertex) {\r\n            return formulaVertex.getFormula();\r\n        }\r\n        return undefined;\r\n    }\r\n    getCellSerialized(address, targetAddress) {\r\n        var _a;\r\n        return (_a = this.getCellFormula(address, targetAddress)) !== null && _a !== void 0 ? _a : this.getRawValue(address);\r\n    }\r\n    getCellValue(address) {\r\n        return this.exporter.exportValue(this.dependencyGraph.getScalarValue(address));\r\n    }\r\n    getRawValue(address) {\r\n        return this.dependencyGraph.getRawValue(address);\r\n    }\r\n    getSheetValues(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellValue(arg));\r\n    }\r\n    getSheetFormulas(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellFormula(arg));\r\n    }\r\n    genericSheetGetter(sheet, getter) {\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const arr = new Array(sheetHeight);\r\n        for (let i = 0; i < sheetHeight; i++) {\r\n            arr[i] = new Array(sheetWidth);\r\n            for (let j = 0; j < sheetWidth; j++) {\r\n                const address = simpleCellAddress(sheet, j, i);\r\n                arr[i][j] = getter(address);\r\n            }\r\n            for (let j = sheetWidth - 1; j >= 0; j--) {\r\n                if (arr[i][j] === null || arr[i][j] === undefined) {\r\n                    arr[i].pop();\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (let i = sheetHeight - 1; i >= 0; i--) {\r\n            if (arr[i].length === 0) {\r\n                arr.pop();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    genericAllSheetsGetter(sheetGetter) {\r\n        const result = {};\r\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\r\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\r\n            result[sheetName] = sheetGetter(sheetId);\r\n        }\r\n        return result;\r\n    }\r\n    getSheetSerialized(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellSerialized(arg));\r\n    }\r\n    getAllSheetsValues() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetValues(arg));\r\n    }\r\n    getAllSheetsFormulas() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetFormulas(arg));\r\n    }\r\n    getAllSheetsSerialized() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetSerialized(arg));\r\n    }\r\n    getAllNamedExpressionsSerialized() {\r\n        const idMap = [];\r\n        let id = 0;\r\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\r\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\r\n            idMap[sheetId] = id;\r\n            id++;\r\n        }\r\n        return this.dependencyGraph.namedExpressions.getAllNamedExpressions().map((entry) => {\r\n            return {\r\n                name: entry.expression.displayName,\r\n                expression: this.getCellSerialized(entry.expression.address),\r\n                scope: entry.scope !== undefined ? idMap[entry.scope] : undefined,\r\n                options: entry.expression.options\r\n            };\r\n        });\r\n    }\r\n    withNewConfig(newConfig, namedExpressions) {\r\n        const newUnparser = new Unparser(newConfig, buildLexerConfig(newConfig), this.dependencyGraph.sheetMapping.fetchDisplayName, namedExpressions);\r\n        return new Serialization(this.dependencyGraph, newUnparser, this.exporter);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function objectDestroy(object) {\r\n    for (const [key, value] of Object.entries(object)) {\r\n        if (value instanceof Function) {\r\n            object[key] = postMortem(value);\r\n        }\r\n        else {\r\n            delete object[key];\r\n        }\r\n    }\r\n}\r\nfunction postMortem(method) {\r\n    return () => {\r\n        throw new Error(`The \"${method}\" method cannot be called because this HyperFormula instance has been destroyed`);\r\n    };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { TinyEmitter } from 'tiny-emitter';\r\nexport var Events;\r\n(function (Events) {\r\n    Events[\"SheetAdded\"] = \"sheetAdded\";\r\n    Events[\"SheetRemoved\"] = \"sheetRemoved\";\r\n    Events[\"SheetRenamed\"] = \"sheetRenamed\";\r\n    Events[\"NamedExpressionAdded\"] = \"namedExpressionAdded\";\r\n    Events[\"NamedExpressionRemoved\"] = \"namedExpressionRemoved\";\r\n    Events[\"ValuesUpdated\"] = \"valuesUpdated\";\r\n    Events[\"EvaluationSuspended\"] = \"evaluationSuspended\";\r\n    Events[\"EvaluationResumed\"] = \"evaluationResumed\";\r\n})(Events || (Events = {}));\r\nexport class Emitter extends TinyEmitter {\r\n    emit(event, ...args) {\r\n        super.emit(event, ...args);\r\n        return this;\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__98__;","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n// import\r\nconst dictionary = {\r\n    errors: {\r\n        CYCLE: '#CYCLE!',\r\n        DIV_BY_ZERO: '#DIV/0!',\r\n        ERROR: '#ERROR!',\r\n        NA: '#N/A',\r\n        NAME: '#NAME?',\r\n        NUM: '#NUM!',\r\n        REF: '#REF!',\r\n        SPILL: '#SPILL!',\r\n        VALUE: '#VALUE!',\r\n    },\r\n    functions: {\r\n        FILTER: 'FILTER',\r\n        'ARRAY_CONSTRAIN': 'ARRAY_CONSTRAIN',\r\n        ARRAYFORMULA: 'ARRAYFORMULA',\r\n        ABS: 'ABS',\r\n        ACOS: 'ACOS',\r\n        ACOSH: 'ACOSH',\r\n        ACOT: 'ACOT',\r\n        ACOTH: 'ACOTH',\r\n        AND: 'AND',\r\n        ARABIC: 'ARABIC',\r\n        ASIN: 'ASIN',\r\n        ASINH: 'ASINH',\r\n        ATAN2: 'ATAN2',\r\n        ATAN: 'ATAN',\r\n        ATANH: 'ATANH',\r\n        AVERAGE: 'AVERAGE',\r\n        AVERAGEA: 'AVERAGEA',\r\n        AVERAGEIF: 'AVERAGEIF',\r\n        BASE: 'BASE',\r\n        BIN2DEC: 'BIN2DEC',\r\n        BIN2HEX: 'BIN2HEX',\r\n        BIN2OCT: 'BIN2OCT',\r\n        BITAND: 'BITAND',\r\n        BITLSHIFT: 'BITLSHIFT',\r\n        BITOR: 'BITOR',\r\n        BITRSHIFT: 'BITRSHIFT',\r\n        BITXOR: 'BITXOR',\r\n        CEILING: 'CEILING',\r\n        CHAR: 'CHAR',\r\n        CHOOSE: 'CHOOSE',\r\n        CLEAN: 'CLEAN',\r\n        CODE: 'CODE',\r\n        COLUMN: 'COLUMN',\r\n        COLUMNS: 'COLUMNS',\r\n        CONCATENATE: 'CONCATENATE',\r\n        CORREL: 'CORREL',\r\n        COS: 'COS',\r\n        COSH: 'COSH',\r\n        COT: 'COT',\r\n        COTH: 'COTH',\r\n        COUNT: 'COUNT',\r\n        COUNTA: 'COUNTA',\r\n        COUNTBLANK: 'COUNTBLANK',\r\n        COUNTIF: 'COUNTIF',\r\n        COUNTIFS: 'COUNTIFS',\r\n        COUNTUNIQUE: 'COUNTUNIQUE',\r\n        CSC: 'CSC',\r\n        CSCH: 'CSCH',\r\n        CUMIPMT: 'CUMIPMT',\r\n        CUMPRINC: 'CUMPRINC',\r\n        DATE: 'DATE',\r\n        DATEDIF: 'DATEDIF',\r\n        DATEVALUE: 'DATEVALUE',\r\n        DAY: 'DAY',\r\n        DAYS360: 'DAYS360',\r\n        DAYS: 'DAYS',\r\n        DB: 'DB',\r\n        DDB: 'DDB',\r\n        DEC2BIN: 'DEC2BIN',\r\n        DEC2HEX: 'DEC2HEX',\r\n        DEC2OCT: 'DEC2OCT',\r\n        DECIMAL: 'DECIMAL',\r\n        DEGREES: 'DEGREES',\r\n        DELTA: 'DELTA',\r\n        DOLLARDE: 'DOLLARDE',\r\n        DOLLARFR: 'DOLLARFR',\r\n        EDATE: 'EDATE',\r\n        EFFECT: 'EFFECT',\r\n        EOMONTH: 'EOMONTH',\r\n        ERF: 'ERF',\r\n        ERFC: 'ERFC',\r\n        EVEN: 'EVEN',\r\n        EXACT: 'EXACT',\r\n        EXP: 'EXP',\r\n        FALSE: 'FALSE',\r\n        FIND: 'FIND',\r\n        FORMULATEXT: 'FORMULATEXT',\r\n        FV: 'FV',\r\n        FVSCHEDULE: 'FVSCHEDULE',\r\n        HEX2BIN: 'HEX2BIN',\r\n        HEX2DEC: 'HEX2DEC',\r\n        HEX2OCT: 'HEX2OCT',\r\n        HLOOKUP: 'HLOOKUP',\r\n        HOUR: 'HOUR',\r\n        IF: 'IF',\r\n        IFERROR: 'IFERROR',\r\n        IFNA: 'IFNA',\r\n        INDEX: 'INDEX',\r\n        INT: 'INT',\r\n        INTERVAL: 'INTERVAL',\r\n        IPMT: 'IPMT',\r\n        ISBINARY: 'ISBINARY',\r\n        ISBLANK: 'ISBLANK',\r\n        ISERR: 'ISERR',\r\n        ISERROR: 'ISERROR',\r\n        ISEVEN: 'ISEVEN',\r\n        ISFORMULA: 'ISFORMULA',\r\n        ISLOGICAL: 'ISLOGICAL',\r\n        ISNA: 'ISNA',\r\n        ISNONTEXT: 'ISNONTEXT',\r\n        ISNUMBER: 'ISNUMBER',\r\n        ISODD: 'ISODD',\r\n        ISOWEEKNUM: 'ISOWEEKNUM',\r\n        ISPMT: 'ISPMT',\r\n        ISREF: 'ISREF',\r\n        ISTEXT: 'ISTEXT',\r\n        LEFT: 'LEFT',\r\n        LEN: 'LEN',\r\n        LN: 'LN',\r\n        LOG10: 'LOG10',\r\n        LOG: 'LOG',\r\n        LOWER: 'LOWER',\r\n        MATCH: 'MATCH',\r\n        MAX: 'MAX',\r\n        MAXA: 'MAXA',\r\n        MAXIFS: 'MAXIFS',\r\n        MAXPOOL: 'MAXPOOL',\r\n        MEDIAN: 'MEDIAN',\r\n        MEDIANPOOL: 'MEDIANPOOL',\r\n        MID: 'MID',\r\n        MIN: 'MIN',\r\n        MINA: 'MINA',\r\n        MINIFS: 'MINIFS',\r\n        MINUTE: 'MINUTE',\r\n        MIRR: 'MIRR',\r\n        MMULT: 'MMULT',\r\n        MOD: 'MOD',\r\n        MONTH: 'MONTH',\r\n        NA: 'NA',\r\n        NETWORKDAYS: 'NETWORKDAYS',\r\n        'NETWORKDAYS.INTL': 'NETWORKDAYS.INTL',\r\n        NOMINAL: 'NOMINAL',\r\n        NOT: 'NOT',\r\n        NOW: 'NOW',\r\n        NPER: 'NPER',\r\n        NPV: 'NPV',\r\n        OCT2BIN: 'OCT2BIN',\r\n        OCT2DEC: 'OCT2DEC',\r\n        OCT2HEX: 'OCT2HEX',\r\n        ODD: 'ODD',\r\n        OFFSET: 'OFFSET',\r\n        OR: 'OR',\r\n        PI: 'PI',\r\n        PMT: 'PMT',\r\n        PDURATION: 'PDURATION',\r\n        PRODUCT: 'PRODUCT',\r\n        POWER: 'POWER',\r\n        PPMT: 'PPMT',\r\n        PROPER: 'PROPER',\r\n        PV: 'PV',\r\n        RADIANS: 'RADIANS',\r\n        RAND: 'RAND',\r\n        RATE: 'RATE',\r\n        REPLACE: 'REPLACE',\r\n        REPT: 'REPT',\r\n        RIGHT: 'RIGHT',\r\n        ROMAN: 'ROMAN',\r\n        ROUND: 'ROUND',\r\n        ROUNDDOWN: 'ROUNDDOWN',\r\n        ROUNDUP: 'ROUNDUP',\r\n        ROW: 'ROW',\r\n        ROWS: 'ROWS',\r\n        RRI: 'RRI',\r\n        SEARCH: 'SEARCH',\r\n        SEC: 'SEC',\r\n        SECH: 'SECH',\r\n        SECOND: 'SECOND',\r\n        SHEET: 'SHEET',\r\n        SHEETS: 'SHEETS',\r\n        SIN: 'SIN',\r\n        SINH: 'SINH',\r\n        SLN: 'SLN',\r\n        SPLIT: 'SPLIT',\r\n        SQRT: 'SQRT',\r\n        STDEVA: 'STDEVA',\r\n        'STDEV.P': 'STDEV.P',\r\n        STDEVPA: 'STDEVPA',\r\n        'STDEV.S': 'STDEV.S',\r\n        SUBSTITUTE: 'SUBSTITUTE',\r\n        SUBTOTAL: 'SUBTOTAL',\r\n        SUM: 'SUM',\r\n        SUMIF: 'SUMIF',\r\n        SUMIFS: 'SUMIFS',\r\n        SUMPRODUCT: 'SUMPRODUCT',\r\n        SUMSQ: 'SUMSQ',\r\n        SWITCH: 'SWITCH',\r\n        SYD: 'SYD',\r\n        T: 'T',\r\n        TAN: 'TAN',\r\n        TANH: 'TANH',\r\n        TBILLEQ: 'TBILLEQ',\r\n        TBILLPRICE: 'TBILLPRICE',\r\n        TBILLYIELD: 'TBILLYIELD',\r\n        TEXT: 'TEXT',\r\n        TIME: 'TIME',\r\n        TIMEVALUE: 'TIMEVALUE',\r\n        TODAY: 'TODAY',\r\n        TRANSPOSE: 'TRANSPOSE',\r\n        TRIM: 'TRIM',\r\n        TRUE: 'TRUE',\r\n        TRUNC: 'TRUNC',\r\n        UNICHAR: 'UNICHAR',\r\n        UNICODE: 'UNICODE',\r\n        UPPER: 'UPPER',\r\n        VARA: 'VARA',\r\n        'VAR.P': 'VAR.P',\r\n        VARPA: 'VARPA',\r\n        'VAR.S': 'VAR.S',\r\n        VLOOKUP: 'VLOOKUP',\r\n        WEEKDAY: 'WEEKDAY',\r\n        WEEKNUM: 'WEEKNUM',\r\n        WORKDAY: 'WORKDAY',\r\n        'WORKDAY.INTL': 'WORKDAY.INTL',\r\n        XNPV: 'XNPV',\r\n        XOR: 'XOR',\r\n        YEAR: 'YEAR',\r\n        YEARFRAC: 'YEARFRAC',\r\n        'HF.ADD': 'HF.ADD',\r\n        'HF.CONCAT': 'HF.CONCAT',\r\n        'HF.DIVIDE': 'HF.DIVIDE',\r\n        'HF.EQ': 'HF.EQ',\r\n        'HF.GT': 'HF.GT',\r\n        'HF.GTE': 'HF.GTE',\r\n        'HF.LT': 'HF.LT',\r\n        'HF.LTE': 'HF.LTE',\r\n        'HF.MINUS': 'HF.MINUS',\r\n        'HF.MULTIPLY': 'HF.MULTIPLY',\r\n        'HF.NE': 'HF.NE',\r\n        'HF.POW': 'HF.POW',\r\n        'HF.UMINUS': 'HF.UMINUS',\r\n        'HF.UNARY_PERCENT': 'HF.UNARY_PERCENT',\r\n        'HF.UPLUS': 'HF.UPLUS',\r\n        VARP: 'VARP',\r\n        VAR: 'VAR',\r\n        STDEVP: 'STDEVP',\r\n        STDEV: 'STDEV',\r\n        'EXPON.DIST': 'EXPON.DIST',\r\n        FISHER: 'FISHER',\r\n        FISHERINV: 'FISHERINV',\r\n        GAMMA: 'GAMMA',\r\n        'GAMMA.DIST': 'GAMMA.DIST',\r\n        GAMMALN: 'GAMMALN',\r\n        'GAMMALN.PRECISE': 'GAMMALN.PRECISE',\r\n        'GAMMA.INV': 'GAMMA.INV',\r\n        GAUSS: 'GAUSS',\r\n        FACT: 'FACT',\r\n        FACTDOUBLE: 'FACTDOUBLE',\r\n        COMBIN: 'COMBIN',\r\n        COMBINA: 'COMBINA',\r\n        GCD: 'GCD',\r\n        LCM: 'LCM',\r\n        MROUND: 'MROUND',\r\n        MULTINOMIAL: 'MULTINOMIAL',\r\n        QUOTIENT: 'QUOTIENT',\r\n        RANDBETWEEN: 'RANDBETWEEN',\r\n        SERIESSUM: 'SERIESSUM',\r\n        SIGN: 'SIGN',\r\n        SQRTPI: 'SQRTPI',\r\n        SUMX2MY2: 'SUMX2MY2',\r\n        SUMX2PY2: 'SUMX2PY2',\r\n        SUMXMY2: 'SUMXMY2',\r\n        'EXPONDIST': 'EXPONDIST',\r\n        GAMMADIST: 'GAMMADIST',\r\n        GAMMAINV: 'GAMMAINV',\r\n        'BETA.DIST': 'BETA.DIST',\r\n        BETADIST: 'BETADIST',\r\n        'BETA.INV': 'BETA.INV',\r\n        BETAINV: 'BETAINV',\r\n        'BINOM.DIST': 'BINOM.DIST',\r\n        BINOMDIST: 'BINOMDIST',\r\n        'BINOM.INV': 'BINOM.INV',\r\n        BESSELI: 'BESSELI',\r\n        BESSELJ: 'BESSELJ',\r\n        BESSELK: 'BESSELK',\r\n        BESSELY: 'BESSELY',\r\n        'CHISQ.DIST': 'CHISQ.DIST',\r\n        'CHISQ.DIST.RT': 'CHISQ.DIST.RT',\r\n        'CHISQ.INV': 'CHISQ.INV',\r\n        'CHISQ.INV.RT': 'CHISQ.INV.RT',\r\n        CHIDIST: 'CHIDIST',\r\n        CHIINV: 'CHIINV',\r\n        'F.DIST': 'F.DIST',\r\n        'F.DIST.RT': 'F.DIST.RT',\r\n        'F.INV': 'F.INV',\r\n        'F.INV.RT': 'F.INV.RT',\r\n        FDIST: 'FDIST',\r\n        FINV: 'FINV',\r\n        WEIBULL: 'WEIBULL',\r\n        'WEIBULL.DIST': 'WEIBULL.DIST',\r\n        POISSON: 'POISSON',\r\n        'POISSON.DIST': 'POISSON.DIST',\r\n        'HYPGEOM.DIST': 'HYPGEOM.DIST',\r\n        HYPGEOMDIST: 'HYPGEOMDIST',\r\n        'T.DIST': 'T.DIST',\r\n        'T.DIST.2T': 'T.DIST.2T',\r\n        'T.DIST.RT': 'T.DIST.RT',\r\n        'T.INV': 'T.INV',\r\n        'T.INV.2T': 'T.INV.2T',\r\n        TDIST: 'TDIST',\r\n        TINV: 'TINV',\r\n        LOGINV: 'LOGINV',\r\n        'LOGNORM.DIST': 'LOGNORM.DIST',\r\n        'LOGNORM.INV': 'LOGNORM.INV',\r\n        LOGNORMDIST: 'LOGNORMDIST',\r\n        'NORM.DIST': 'NORM.DIST',\r\n        'NORM.INV': 'NORM.INV',\r\n        'NORM.S.DIST': 'NORM.S.DIST',\r\n        'NORM.S.INV': 'NORM.S.INV',\r\n        NORMDIST: 'NORMDIST',\r\n        NORMINV: 'NORMINV',\r\n        NORMSDIST: 'NORMSDIST',\r\n        NORMSINV: 'NORMSINV',\r\n        PHI: 'PHI',\r\n        'NEGBINOM.DIST': 'NEGBINOM.DIST',\r\n        'NEGBINOMDIST': 'NEGBINOMDIST',\r\n        COMPLEX: 'COMPLEX',\r\n        IMABS: 'IMABS',\r\n        IMAGINARY: 'IMAGINARY',\r\n        IMARGUMENT: 'IMARGUMENT',\r\n        IMCONJUGATE: 'IMCONJUGATE',\r\n        IMCOS: 'IMCOS',\r\n        IMCOSH: 'IMCOSH',\r\n        IMCOT: 'IMCOT',\r\n        IMCSC: 'IMCSC',\r\n        IMCSCH: 'IMCSCH',\r\n        IMDIV: 'IMDIV',\r\n        IMEXP: 'IMEXP',\r\n        IMLN: 'IMLN',\r\n        IMLOG10: 'IMLOG10',\r\n        IMLOG2: 'IMLOG2',\r\n        IMPOWER: 'IMPOWER',\r\n        IMPRODUCT: 'IMPRODUCT',\r\n        IMREAL: 'IMREAL',\r\n        IMSEC: 'IMSEC',\r\n        IMSECH: 'IMSECH',\r\n        IMSIN: 'IMSIN',\r\n        IMSINH: 'IMSINH',\r\n        IMSQRT: 'IMSQRT',\r\n        IMSUB: 'IMSUB',\r\n        IMSUM: 'IMSUM',\r\n        IMTAN: 'IMTAN',\r\n        LARGE: 'LARGE',\r\n        SMALL: 'SMALL',\r\n        AVEDEV: 'AVEDEV',\r\n        CONFIDENCE: 'CONFIDENCE',\r\n        'CONFIDENCE.NORM': 'CONFIDENCE.NORM',\r\n        'CONFIDENCE.T': 'CONFIDENCE.T',\r\n        DEVSQ: 'DEVSQ',\r\n        GEOMEAN: 'GEOMEAN',\r\n        HARMEAN: 'HARMEAN',\r\n        CRITBINOM: 'CRITBINOM',\r\n        'COVARIANCE.P': 'COVARIANCE.P',\r\n        'COVARIANCE.S': 'COVARIANCE.S',\r\n        'COVAR': 'COVAR',\r\n        PEARSON: 'PEARSON',\r\n        RSQ: 'RSQ',\r\n        STANDARDIZE: 'STANDARDIZE',\r\n        'Z.TEST': 'Z.TEST',\r\n        ZTEST: 'ZTEST',\r\n        'F.TEST': 'F.TEST',\r\n        FTEST: 'FTEST',\r\n        STEYX: 'STEYX',\r\n        SLOPE: 'SLOPE',\r\n        'CHISQ.TEST': 'CHISQ.TEST',\r\n        CHITEST: 'CHITEST',\r\n        'T.TEST': 'T.TEST',\r\n        TTEST: 'TTEST',\r\n        SKEW: 'SKEW',\r\n        'SKEW.P': 'SKEW.P',\r\n        WEIBULLDIST: 'WEIBULLDIST',\r\n        VARS: 'VARS',\r\n        TINV2T: 'TINV2T',\r\n        TDISTRT: 'TDISTRT',\r\n        TDIST2T: 'TDIST2T',\r\n        STDEVS: 'STDEVS',\r\n        FINVRT: 'FINVRT',\r\n        FDISTRT: 'FDISTRT',\r\n        CHIDISTRT: 'CHIDISTRT',\r\n        CHIINVRT: 'CHIINVRT',\r\n        COVARIANCEP: 'COVARIANCEP',\r\n        COVARIANCES: 'COVARIANCES',\r\n        LOGNORMINV: 'LOGNORMINV',\r\n        POISSONDIST: 'POISSONDIST',\r\n        SKEWP: 'SKEWP',\r\n        'CEILING.MATH': 'CEILING.MATH',\r\n        FLOOR: 'FLOOR',\r\n        'FLOOR.MATH': 'FLOOR.MATH',\r\n        'CEILING.PRECISE': 'CEILING.PRECISE',\r\n        'FLOOR.PRECISE': 'FLOOR.PRECISE',\r\n        'ISO.CEILING': 'ISO.CEILING',\r\n    },\r\n    langCode: 'enGB',\r\n    ui: {\r\n        NEW_SHEET_PREFIX: 'Sheet',\r\n    },\r\n};\r\nexport default dictionary;\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionPlugin } from './plugin/FunctionPlugin';\r\nexport { FunctionPlugin };\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { ArrayPlugin } from './ArrayPlugin';\r\nexport { AbsPlugin } from './AbsPlugin';\r\nexport { BitShiftPlugin } from './BitShiftPlugin';\r\nexport { BitwiseLogicOperationsPlugin } from './BitwiseLogicOperationsPlugin';\r\nexport { BooleanPlugin } from './BooleanPlugin';\r\nexport { CharPlugin } from './CharPlugin';\r\nexport { CodePlugin } from './CodePlugin';\r\nexport { CountBlankPlugin } from './CountBlankPlugin';\r\nexport { CountUniquePlugin } from './CountUniquePlugin';\r\nexport { DateTimePlugin } from './DateTimePlugin';\r\nexport { DegreesPlugin } from './DegreesPlugin';\r\nexport { DeltaPlugin } from './DeltaPlugin';\r\nexport { ExpPlugin } from './ExpPlugin';\r\nexport { FinancialPlugin } from './FinancialPlugin';\r\nexport { FormulaTextPlugin } from './FormulaTextPlugin';\r\nexport { InformationPlugin } from './InformationPlugin';\r\nexport { IsEvenPlugin } from './IsEvenPlugin';\r\nexport { IsOddPlugin } from './IsOddPlugin';\r\nexport { LogarithmPlugin } from './LogarithmPlugin';\r\nexport { MathConstantsPlugin } from './MathConstantsPlugin';\r\nexport { MatrixPlugin } from './MatrixPlugin';\r\nexport { MedianPlugin } from './MedianPlugin';\r\nexport { ModuloPlugin } from './ModuloPlugin';\r\nexport { NumericAggregationPlugin } from './NumericAggregationPlugin';\r\nexport { PowerPlugin } from './PowerPlugin';\r\nexport { RadiansPlugin } from './RadiansPlugin';\r\nexport { RadixConversionPlugin } from './RadixConversionPlugin';\r\nexport { RandomPlugin } from './RandomPlugin';\r\nexport { RoundingPlugin } from './RoundingPlugin';\r\nexport { SqrtPlugin } from './SqrtPlugin';\r\nexport { ConditionalAggregationPlugin } from './ConditionalAggregationPlugin';\r\nexport { SumprodPlugin } from './SumprodPlugin';\r\nexport { TextPlugin } from './TextPlugin';\r\nexport { TrigonometryPlugin } from './TrigonometryPlugin';\r\nexport { LookupPlugin } from './LookupPlugin';\r\nexport { RomanPlugin } from './RomanPlugin';\r\nexport { SimpleArithmerticPlugin } from './SimpleArithmertic';\r\nexport { StatisticalPlugin } from './StatisticalPlugin';\r\nexport { MathPlugin } from './MathPlugin';\r\nexport { ComplexPlugin } from './ComplexPlugin';\r\nexport { StatisticalAggregationPlugin } from './StatisticalAggregationPlugin';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../../ArraySize';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceScalarToBoolean } from '../ArithmeticHelper';\r\nimport { InterpreterState } from '../InterpreterState';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ArrayPlugin extends FunctionPlugin {\r\n    arrayformula(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARRAYFORMULA'), (value) => value);\r\n    }\r\n    arrayformulaArraySize(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('ARRAYFORMULA');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        return subChecks[0];\r\n    }\r\n    arrayconstrain(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARRAY_CONSTRAIN'), (range, numRows, numCols) => {\r\n            numRows = Math.min(numRows, range.height());\r\n            numCols = Math.min(numCols, range.width());\r\n            const data = range.data;\r\n            const ret = [];\r\n            for (let i = 0; i < numRows; i++) {\r\n                ret.push(data[i].slice(0, numCols));\r\n            }\r\n            return SimpleRangeValue.onlyValues(ret);\r\n        });\r\n    }\r\n    arrayconstrainArraySize(ast, state) {\r\n        if (ast.args.length !== 3) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('ARRAY_CONSTRAIN');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        let { height, width } = subChecks[0];\r\n        if (ast.args[1].type === AstNodeType.NUMBER) {\r\n            height = Math.min(height, ast.args[1].value);\r\n        }\r\n        if (ast.args[2].type === AstNodeType.NUMBER) {\r\n            width = Math.min(width, ast.args[2].value);\r\n        }\r\n        if (height < 1 || width < 1 || !Number.isInteger(height) || !Number.isInteger(width)) {\r\n            return ArraySize.error();\r\n        }\r\n        return new ArraySize(width, height);\r\n    }\r\n    filter(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FILTER'), (rangeVals, ...rangeFilters) => {\r\n            for (const filter of rangeFilters) {\r\n                if (rangeVals.width() !== filter.width() || rangeVals.height() !== filter.height()) {\r\n                    return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n                }\r\n            }\r\n            if (rangeVals.width() > 1 && rangeVals.height() > 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongDimension);\r\n            }\r\n            const vals = rangeVals.data;\r\n            const ret = [];\r\n            for (let i = 0; i < rangeVals.height(); i++) {\r\n                const row = [];\r\n                for (let j = 0; j < rangeVals.width(); j++) {\r\n                    let ok = true;\r\n                    for (const filter of rangeFilters) {\r\n                        const val = coerceScalarToBoolean(filter.data[i][j]);\r\n                        if (val !== true) {\r\n                            ok = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (ok) {\r\n                        row.push(vals[i][j]);\r\n                    }\r\n                }\r\n                if (row.length > 0) {\r\n                    ret.push(row);\r\n                }\r\n            }\r\n            if (ret.length > 0) {\r\n                return SimpleRangeValue.onlyValues(ret);\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EmptyRange);\r\n            }\r\n        });\r\n    }\r\n    filterArraySize(ast, state) {\r\n        if (ast.args.length <= 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('FILTER');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const width = Math.max(...(subChecks).map(val => val.width));\r\n        const height = Math.max(...(subChecks).map(val => val.height));\r\n        return new ArraySize(width, height);\r\n    }\r\n}\r\nArrayPlugin.implementedFunctions = {\r\n    'ARRAYFORMULA': {\r\n        method: 'arrayformula',\r\n        arraySizeMethod: 'arrayformulaArraySize',\r\n        arrayFunction: true,\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n    },\r\n    'ARRAY_CONSTRAIN': {\r\n        method: 'arrayconstrain',\r\n        arraySizeMethod: 'arrayconstrainArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'FILTER': {\r\n        method: 'filter',\r\n        arraySizeMethod: 'filterArraySize',\r\n        arrayFunction: true,\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class AbsPlugin extends FunctionPlugin {\r\n    abs(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ABS'), Math.abs);\r\n    }\r\n}\r\nAbsPlugin.implementedFunctions = {\r\n    'ABS': {\r\n        method: 'abs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nconst MAX_48BIT_INTEGER = 281474976710655;\r\nconst SHIFT_MIN_POSITIONS = -53;\r\nconst SHIFT_MAX_POSITIONS = 53;\r\nexport class BitShiftPlugin extends FunctionPlugin {\r\n    bitlshift(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITLSHIFT'), shiftLeft);\r\n    }\r\n    bitrshift(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITRSHIFT'), shiftRight);\r\n    }\r\n}\r\nBitShiftPlugin.implementedFunctions = {\r\n    'BITLSHIFT': {\r\n        method: 'bitlshift',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\r\n        ]\r\n    },\r\n    'BITRSHIFT': {\r\n        method: 'bitrshift',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\r\n        ]\r\n    },\r\n};\r\nfunction shiftLeft(value, positions) {\r\n    if (positions < 0) {\r\n        return shiftRight(value, -positions);\r\n    }\r\n    else {\r\n        return validate(value * Math.pow(2, positions));\r\n    }\r\n}\r\nfunction shiftRight(value, positions) {\r\n    if (positions < 0) {\r\n        return shiftLeft(value, -positions);\r\n    }\r\n    else {\r\n        return validate(Math.floor(value / Math.pow(2, positions)));\r\n    }\r\n}\r\nfunction validate(result) {\r\n    if (result > MAX_48BIT_INTEGER) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.BitshiftLong);\r\n    }\r\n    else {\r\n        return result;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class BitwiseLogicOperationsPlugin extends FunctionPlugin {\r\n    bitand(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITAND'), (left, right) => left & right);\r\n    }\r\n    bitor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITOR'), (left, right) => left | right);\r\n    }\r\n    bitxor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITXOR'), (left, right) => left ^ right);\r\n    }\r\n}\r\nBitwiseLogicOperationsPlugin.implementedFunctions = {\r\n    'BITAND': {\r\n        method: 'bitand',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BITOR': {\r\n        method: 'bitor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BITXOR': {\r\n        method: 'bitxor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing boolean functions\r\n */\r\nexport class BooleanPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to TRUE()\r\n     *\r\n     * Returns the logical true\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    literalTrue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRUE'), () => true);\r\n    }\r\n    /**\r\n     * Corresponds to FALSE()\r\n     *\r\n     * Returns the logical false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    literalFalse(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FALSE'), () => false);\r\n    }\r\n    /**\r\n     * Corresponds to IF(expression, value_if_true, value_if_false)\r\n     *\r\n     * Returns value specified as second argument if expression is true and third argument if expression is false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    conditionalIf(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IF'), (condition, arg2, arg3) => {\r\n            return condition ? arg2 : arg3;\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to AND(expression1, [expression2, ...])\r\n     *\r\n     * Returns true if all of the provided arguments are logically true, and false if any of it is logically false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    and(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('AND'), (...args) => !args.some((arg) => !arg));\r\n    }\r\n    /**\r\n     * Corresponds to OR(expression1, [expression2, ...])\r\n     *\r\n     * Returns true if any of the provided arguments are logically true, and false otherwise\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    or(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OR'), (...args) => args.some((arg) => arg));\r\n    }\r\n    not(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOT'), (arg) => !arg);\r\n    }\r\n    xor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('XOR'), (...args) => {\r\n            let cnt = 0;\r\n            args.forEach((arg) => {\r\n                if (arg) {\r\n                    cnt++;\r\n                }\r\n            });\r\n            return (cnt % 2) === 1;\r\n        });\r\n    }\r\n    switch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SWITCH'), (selector, ...args) => {\r\n            const n = args.length;\r\n            let i = 0;\r\n            for (; i + 1 < n; i += 2) {\r\n                if (args[i] instanceof CellError) {\r\n                    continue;\r\n                }\r\n                if (this.arithmeticHelper.eq(selector, args[i])) {\r\n                    return args[i + 1];\r\n                }\r\n            }\r\n            if (i < n) {\r\n                return args[i];\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.NoDefault);\r\n            }\r\n        });\r\n    }\r\n    iferror(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IFERROR'), (arg1, arg2) => {\r\n            if (arg1 instanceof CellError) {\r\n                return arg2;\r\n            }\r\n            else {\r\n                return arg1;\r\n            }\r\n        });\r\n    }\r\n    ifna(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IFNA'), (arg1, arg2) => {\r\n            if (arg1 instanceof CellError && arg1.type === ErrorType.NA) {\r\n                return arg2;\r\n            }\r\n            else {\r\n                return arg1;\r\n            }\r\n        });\r\n    }\r\n    choose(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHOOSE'), (selector, ...args) => {\r\n            if (selector > args.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.Selector);\r\n            }\r\n            return args[selector - 1];\r\n        });\r\n    }\r\n}\r\nBooleanPlugin.implementedFunctions = {\r\n    'TRUE': {\r\n        method: 'literalTrue',\r\n        parameters: [],\r\n    },\r\n    'FALSE': {\r\n        method: 'literalFalse',\r\n        parameters: [],\r\n    },\r\n    'IF': {\r\n        method: 'conditionalIf',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, defaultValue: false, passSubtype: true },\r\n        ],\r\n    },\r\n    'AND': {\r\n        method: 'and',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'OR': {\r\n        method: 'or',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'XOR': {\r\n        method: 'xor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'NOT': {\r\n        method: 'not',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'SWITCH': {\r\n        method: 'switch',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IFERROR': {\r\n        method: 'iferror',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ]\r\n    },\r\n    'IFNA': {\r\n        method: 'ifna',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ]\r\n    },\r\n    'CHOOSE': {\r\n        method: 'choose',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class CharPlugin extends FunctionPlugin {\r\n    char(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHAR'), (value) => {\r\n            if (value < 1 || value >= 256) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\r\n            }\r\n            return String.fromCharCode(Math.trunc(value));\r\n        });\r\n    }\r\n    unichar(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHAR'), (value) => {\r\n            if (value < 1 || value >= 1114112) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\r\n            }\r\n            return String.fromCodePoint(Math.trunc(value));\r\n        });\r\n    }\r\n}\r\nCharPlugin.implementedFunctions = {\r\n    'CHAR': {\r\n        method: 'char',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'UNICHAR': {\r\n        method: 'unichar',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class CodePlugin extends FunctionPlugin {\r\n    code(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CODE'), (value) => {\r\n            if (value.length === 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\r\n            }\r\n            return value.charCodeAt(0);\r\n        });\r\n    }\r\n    unicode(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('UNICODE'), (value) => {\r\n            var _a;\r\n            return (_a = value.codePointAt(0)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\r\n        });\r\n    }\r\n}\r\nCodePlugin.implementedFunctions = {\r\n    'CODE': {\r\n        method: 'code',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'UNICODE': {\r\n        method: 'unicode',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\r\nexport class CountBlankPlugin extends FunctionPlugin {\r\n    countblank(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COUNTBLANK'), (...args) => {\r\n            let counter = 0;\r\n            args.forEach((arg) => {\r\n                if (arg === EmptyValue) {\r\n                    counter++;\r\n                }\r\n            });\r\n            return counter;\r\n        });\r\n    }\r\n}\r\nCountBlankPlugin.implementedFunctions = {\r\n    'COUNTBLANK': {\r\n        method: 'countblank',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../../Cell';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing COUNTUNIQUE function\r\n */\r\nexport class CountUniquePlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to COUNTUNIQUE(Number1, Number2, ...).\r\n     *\r\n     * Returns number of unique numbers from arguments\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    countunique(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COUNTUNIQUE'), (...args) => {\r\n            const valuesSet = new Set();\r\n            const errorsSet = new Set();\r\n            for (const scalarValue of args) {\r\n                if (scalarValue instanceof CellError) {\r\n                    errorsSet.add(scalarValue.type);\r\n                }\r\n                else if (scalarValue !== '') {\r\n                    valuesSet.add(scalarValue);\r\n                }\r\n            }\r\n            return valuesSet.size + errorsSet.size;\r\n        });\r\n    }\r\n}\r\nCountUniquePlugin.implementedFunctions = {\r\n    'COUNTUNIQUE': {\r\n        method: 'countunique',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { instanceOfSimpleDate, instanceOfSimpleTime, numberToSimpleTime, offsetMonth, roundToNearestSecond, timeToNumber, toBasisEU, truncateDayInMonth } from '../../DateTimeHelper';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { format } from '../../format/format';\r\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType, } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing date-specific functions\r\n */\r\nexport class DateTimePlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isoweeknumCore = (day) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            const date = this.dateTimeHelper.numberToSimpleDate(day);\r\n            const yearStart = this.dateTimeHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\r\n            const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\r\n            const firstThursdayAbs = yearStartAbsolute + ((4 - yearStartAbsolute) % 7 + 7) % 7;\r\n            const ret = Math.floor((absoluteDay - 1) / 7) - Math.floor((firstThursdayAbs - 1) / 7) + 1;\r\n            if (ret === 0) {\r\n                return this.isoweeknumCore(day - 7) + 1;\r\n            }\r\n            return ret;\r\n        };\r\n        this.days360Core = (startDate, endDate, mode) => {\r\n            const start = this.dateTimeHelper.numberToSimpleDate(startDate);\r\n            const end = this.dateTimeHelper.numberToSimpleDate(endDate);\r\n            let nStart, nEnd;\r\n            if (mode) {\r\n                nStart = toBasisEU(start);\r\n                nEnd = toBasisEU(end);\r\n            }\r\n            else {\r\n                [nStart, nEnd] = this.dateTimeHelper.toBasisUS(start, end);\r\n            }\r\n            return 360 * (nEnd.year - nStart.year) + 30 * (nEnd.month - nStart.month) + nEnd.day - nStart.day;\r\n        };\r\n    }\r\n    /**\r\n     * Corresponds to DATE(year, month, day)\r\n     *\r\n     * Converts a provided year, month and day into date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    date(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATE'), (year, month, day) => {\r\n            const d = Math.trunc(day);\r\n            let m = Math.trunc(month);\r\n            let y = Math.trunc(year);\r\n            if (y < this.dateTimeHelper.getEpochYearZero()) {\r\n                y += this.dateTimeHelper.getEpochYearZero();\r\n            }\r\n            const delta = Math.floor((m - 1) / 12);\r\n            y += delta;\r\n            m -= delta * 12;\r\n            const date = { year: y, month: m, day: 1 };\r\n            if (this.dateTimeHelper.isValidDate(date)) {\r\n                let ret = this.dateTimeHelper.dateToNumber(date) + (d - 1);\r\n                ret = this.dateTimeHelper.getWithinBounds(ret);\r\n                if (ret === undefined) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n                }\r\n                return ret;\r\n            }\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.InvalidDate);\r\n        });\r\n    }\r\n    time(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TIME'), (h, m, s) => {\r\n            const ret = timeToNumber({ hours: Math.trunc(h), minutes: Math.trunc(m), seconds: Math.trunc(s) });\r\n            if (ret < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NegativeTime);\r\n            }\r\n            return ret % 1;\r\n        });\r\n    }\r\n    eomonth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EOMONTH'), (dateNumber, numberOfMonthsToShift) => {\r\n            const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\r\n            let ret = this.dateTimeHelper.dateToNumber(this.dateTimeHelper.endOfMonth(offsetMonth(date, numberOfMonthsToShift)));\r\n            ret = this.dateTimeHelper.getWithinBounds(ret);\r\n            if (ret === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    day(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAY'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).day);\r\n    }\r\n    days(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAYS'), (endDate, startDate) => Math.trunc(endDate) - Math.trunc(startDate));\r\n    }\r\n    /**\r\n     * Corresponds to MONTH(date)\r\n     *\r\n     * Returns the month of the year specified by a given date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    month(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MONTH'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).month);\r\n    }\r\n    /**\r\n     * Corresponds to YEAR(date)\r\n     *\r\n     * Returns the year specified by a given date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    year(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('YEAR'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).year);\r\n    }\r\n    hour(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HOUR'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).hours);\r\n    }\r\n    minute(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MINUTE'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).minutes);\r\n    }\r\n    second(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SECOND'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).seconds);\r\n    }\r\n    /**\r\n     * Corresponds to TEXT(number, format)\r\n     *\r\n     * Tries to convert number to specified date format.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    text(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TEXT'), (numberRepresentation, formatArg) => format(numberRepresentation, formatArg, this.config, this.dateTimeHelper));\r\n    }\r\n    weekday(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEEKDAY'), (day, type) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            if (type === 3) {\r\n                return (absoluteDay - 1) % 7;\r\n            }\r\n            const offset = weekdayOffsets.get(type);\r\n            if (offset === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n            return (absoluteDay - offset) % 7 + 1;\r\n        });\r\n    }\r\n    weeknum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEEKNUM'), (day, type) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            const date = this.dateTimeHelper.numberToSimpleDate(day);\r\n            const yearStart = this.dateTimeHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\r\n            const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\r\n            if (type === 21) {\r\n                return this.isoweeknumCore(day);\r\n            }\r\n            const offset = weekdayOffsets.get(type);\r\n            if (offset === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n            return Math.floor((absoluteDay - offset) / 7) - Math.floor((yearStartAbsolute - offset) / 7) + 1;\r\n        });\r\n    }\r\n    isoweeknum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISOWEEKNUM'), this.isoweeknumCore);\r\n    }\r\n    datevalue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATEVALUE'), (date) => {\r\n            const { dateTime } = this.dateTimeHelper.parseDateTimeFromConfigFormats(date);\r\n            if (dateTime === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\r\n            }\r\n            if (!instanceOfSimpleDate(dateTime)) {\r\n                return 0;\r\n            }\r\n            return (instanceOfSimpleTime(dateTime) ? Math.trunc(timeToNumber(dateTime)) : 0) +\r\n                this.dateTimeHelper.dateToNumber(dateTime);\r\n        });\r\n    }\r\n    timevalue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TIMEVALUE'), (date) => {\r\n            const dateNumber = this.dateTimeHelper.dateStringToDateNumber(date);\r\n            if (dateNumber === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\r\n            }\r\n            return getRawValue(dateNumber) % 1;\r\n        });\r\n    }\r\n    now(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOW'), () => {\r\n            const now = new Date(Date.now());\r\n            return timeToNumber({ hours: now.getHours(), minutes: now.getMinutes(), seconds: now.getSeconds() }) +\r\n                this.dateTimeHelper.dateToNumber({ year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate() });\r\n        });\r\n    }\r\n    today(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TODAY'), () => {\r\n            const now = new Date(Date.now());\r\n            return this.dateTimeHelper.dateToNumber({\r\n                year: now.getFullYear(),\r\n                month: now.getMonth() + 1,\r\n                day: now.getDate()\r\n            });\r\n        });\r\n    }\r\n    edate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EDATE'), (dateNumber, delta) => {\r\n            const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\r\n            const newDate = truncateDayInMonth(offsetMonth(date, delta));\r\n            let ret = this.dateTimeHelper.dateToNumber(newDate);\r\n            ret = this.dateTimeHelper.getWithinBounds(ret);\r\n            if (ret === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    datedif(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATEDIF'), (startDate, endDate, unit) => {\r\n            if (startDate > endDate) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.StartEndDate);\r\n            }\r\n            if (unit === 'D') {\r\n                return Math.floor(endDate) - Math.floor(startDate);\r\n            }\r\n            const start = this.dateTimeHelper.numberToSimpleDate(startDate);\r\n            const end = this.dateTimeHelper.numberToSimpleDate(endDate);\r\n            switch (unit) {\r\n                case 'M':\r\n                    return (end.year - start.year) * 12 + (end.month - start.month) - (end.day < start.day ? 1 : 0);\r\n                case 'YM':\r\n                    return (12 + (end.month - start.month) - (end.day < start.day ? 1 : 0)) % 12;\r\n                case 'Y':\r\n                    if ((end.month > start.month) || (end.month === start.month && end.day >= start.day)) {\r\n                        return end.year - start.year;\r\n                    }\r\n                    else {\r\n                        return end.year - start.year - 1;\r\n                    }\r\n                case 'MD':\r\n                    if (end.day >= start.day) {\r\n                        return end.day - start.day;\r\n                    }\r\n                    else {\r\n                        const m = end.month === 1 ? 12 : end.month - 1;\r\n                        const y = end.month === 1 ? end.year - 1 : end.year;\r\n                        return this.dateTimeHelper.daysInMonth(y, m) + end.day - start.day;\r\n                    }\r\n                case 'YD':\r\n                    if (end.month > start.month || (end.month === start.month && end.day >= start.day)) {\r\n                        return Math.floor(endDate) - this.dateTimeHelper.dateToNumber({\r\n                            year: end.year,\r\n                            month: start.month,\r\n                            day: start.day\r\n                        });\r\n                    }\r\n                    else {\r\n                        return Math.floor(endDate)\r\n                            - Math.floor(startDate)\r\n                            - 365 * (end.year - start.year - 1)\r\n                            - this.dateTimeHelper.leapYearsCount(end.year - 1)\r\n                            + this.dateTimeHelper.leapYearsCount(start.year);\r\n                    }\r\n                default:\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n        });\r\n    }\r\n    days360(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAYS360'), this.days360Core);\r\n    }\r\n    yearfrac(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('YEARFRAC'), (startDate, endDate, mode) => {\r\n            startDate = Math.trunc(startDate);\r\n            endDate = Math.trunc(endDate);\r\n            if (startDate > endDate) {\r\n                [startDate, endDate] = [endDate, startDate];\r\n            }\r\n            switch (mode) {\r\n                case 0:\r\n                    return this.days360Core(startDate, endDate, false) / 360;\r\n                case 1:\r\n                    return (endDate - startDate) / this.dateTimeHelper.yearLengthForBasis(this.dateTimeHelper.numberToSimpleDate(startDate), this.dateTimeHelper.numberToSimpleDate(endDate));\r\n                case 2:\r\n                    return (endDate - startDate) / 360;\r\n                case 3:\r\n                    return (endDate - startDate) / 365;\r\n                case 4:\r\n                    return this.days360Core(startDate, endDate, true) / 360;\r\n            }\r\n            throw new Error('Should not be reachable.');\r\n        });\r\n    }\r\n    interval(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INTERVAL'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            const second = arg % 60;\r\n            arg = Math.trunc(arg / 60);\r\n            const minute = arg % 60;\r\n            arg = Math.trunc(arg / 60);\r\n            const hour = arg % 24;\r\n            arg = Math.trunc(arg / 24);\r\n            const day = arg % 30;\r\n            arg = Math.trunc(arg / 30);\r\n            const month = arg % 12;\r\n            const year = Math.trunc(arg / 12);\r\n            return 'P' + ((year > 0) ? year + 'Y' : '')\r\n                + ((month > 0) ? month + 'M' : '')\r\n                + ((day > 0) ? day + 'D' : '')\r\n                + 'T'\r\n                + ((hour > 0) ? hour + 'H' : '')\r\n                + ((minute > 0) ? minute + 'M' : '')\r\n                + ((second > 0) ? second + 'S' : '');\r\n        });\r\n    }\r\n    networkdays(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS'), (start, end, holidays) => this.networkdayscore(start, end, 1, holidays));\r\n    }\r\n    networkdaysintl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS.INTL'), (start, end, weekend, holidays) => this.networkdayscore(start, end, weekend, holidays));\r\n    }\r\n    workday(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WORKDAY'), (start, end, holidays) => this.workdaycore(start, end, 1, holidays));\r\n    }\r\n    workdayintl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WORKDAY.INTL'), (start, end, weekend, holidays) => this.workdaycore(start, end, weekend, holidays));\r\n    }\r\n    networkdayscore(start, end, weekend, holidays) {\r\n        start = Math.trunc(start);\r\n        end = Math.trunc(end);\r\n        let multiplier = 1;\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n            multiplier = -1;\r\n        }\r\n        const weekendPattern = computeWeekendPattern(weekend);\r\n        if (weekendPattern instanceof CellError) {\r\n            return weekendPattern;\r\n        }\r\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\r\n        if (filteredHolidays instanceof CellError) {\r\n            return filteredHolidays;\r\n        }\r\n        return multiplier * this.countWorkdays(start, end, weekendPattern, filteredHolidays);\r\n    }\r\n    workdaycore(start, delta, weekend, holidays) {\r\n        start = Math.trunc(start);\r\n        delta = Math.trunc(delta);\r\n        const weekendPattern = computeWeekendPattern(weekend);\r\n        if (weekendPattern instanceof CellError) {\r\n            return weekendPattern;\r\n        }\r\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\r\n        if (filteredHolidays instanceof CellError) {\r\n            return filteredHolidays;\r\n        }\r\n        if (delta > 0) {\r\n            let upper = 1;\r\n            while (this.countWorkdays(start + 1, start + upper, weekendPattern, filteredHolidays) < delta) {\r\n                upper *= 2;\r\n            }\r\n            let lower = 1;\r\n            while (lower + 1 < upper) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (this.countWorkdays(start + 1, start + mid, weekendPattern, filteredHolidays) < delta) {\r\n                    lower = mid;\r\n                }\r\n                else {\r\n                    upper = mid;\r\n                }\r\n            }\r\n            return start + upper;\r\n        }\r\n        else if (delta < 0) {\r\n            delta *= -1;\r\n            let upper = 1;\r\n            while (this.countWorkdays(start - upper, start - 1, weekendPattern, filteredHolidays) < delta) {\r\n                upper *= 2;\r\n            }\r\n            let lower = 1;\r\n            while (lower + 1 < upper) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (this.countWorkdays(start - mid, start - 1, weekendPattern, filteredHolidays) < delta) {\r\n                    lower = mid;\r\n                }\r\n                else {\r\n                    upper = mid;\r\n                }\r\n            }\r\n            return start - upper;\r\n        }\r\n        else {\r\n            return start;\r\n        }\r\n    }\r\n    countWorkdays(start, end, weekendPattern, sortedHolidays) {\r\n        const absoluteEnd = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(end));\r\n        const absoluteStart = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(start));\r\n        let ans = 0;\r\n        for (let i = 0; i < 7; i++) {\r\n            if (weekendPattern.charAt(i) === '0') {\r\n                ans += Math.floor((absoluteEnd + 6 - i) / 7);\r\n                ans -= Math.floor((absoluteStart - 1 + 6 - i) / 7);\r\n            }\r\n        }\r\n        ans -= lowerBound(end + 1, sortedHolidays) - lowerBound(start, sortedHolidays);\r\n        return ans;\r\n    }\r\n    simpleRangeToFilteredHolidays(weekendPattern, holidays) {\r\n        var _a;\r\n        const holidaysArr = (_a = holidays === null || holidays === void 0 ? void 0 : holidays.valuesFromTopLeftCorner()) !== null && _a !== void 0 ? _a : [];\r\n        for (const val of holidaysArr) {\r\n            if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n        }\r\n        const processedHolidays = [];\r\n        for (const val of holidaysArr) {\r\n            if (val === EmptyValue) {\r\n                continue;\r\n            }\r\n            if (isExtendedNumber(val)) {\r\n                processedHolidays.push(Math.trunc(getRawValue(val)));\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n        }\r\n        return [...new Set(processedHolidays)].sort((a, b) => a - b)\r\n            .filter((arg) => {\r\n            const val = this.dateTimeHelper.relativeNumberToAbsoluteNumber(arg);\r\n            const i = (val - 1) % 7;\r\n            return (weekendPattern.charAt(i) === '0');\r\n        });\r\n    }\r\n}\r\nDateTimePlugin.implementedFunctions = {\r\n    'DATE': {\r\n        method: 'date',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'TIME': {\r\n        method: 'time',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_TIME\r\n    },\r\n    'MONTH': {\r\n        method: 'month',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'YEAR': {\r\n        method: 'year',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'HOUR': {\r\n        method: 'hour',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'MINUTE': {\r\n        method: 'minute',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'SECOND': {\r\n        method: 'second',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'TEXT': {\r\n        method: 'text',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ]\r\n    },\r\n    'EOMONTH': {\r\n        method: 'eomonth',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'DAY': {\r\n        method: 'day',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'DAYS': {\r\n        method: 'days',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'WEEKDAY': {\r\n        method: 'weekday',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'WEEKNUM': {\r\n        method: 'weeknum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'ISOWEEKNUM': {\r\n        method: 'isoweeknum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'DATEVALUE': {\r\n        method: 'datevalue',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'TIMEVALUE': {\r\n        method: 'timevalue',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_TIME\r\n    },\r\n    'NOW': {\r\n        method: 'now',\r\n        parameters: [],\r\n        isVolatile: true,\r\n        returnNumberType: NumberType.NUMBER_DATETIME\r\n    },\r\n    'TODAY': {\r\n        method: 'today',\r\n        parameters: [],\r\n        isVolatile: true,\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'EDATE': {\r\n        method: 'edate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'DAYS360': {\r\n        method: 'days360',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: false },\r\n        ],\r\n    },\r\n    'DATEDIF': {\r\n        method: 'datedif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n    },\r\n    'YEARFRAC': {\r\n        method: 'yearfrac',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, defaultValue: 0, minValue: 0, maxValue: 4 },\r\n        ],\r\n    },\r\n    'INTERVAL': {\r\n        method: 'interval',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'NETWORKDAYS': {\r\n        method: 'networkdays',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'NETWORKDAYS.INTL': {\r\n        method: 'networkdaysintl',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NOERROR, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'WORKDAY': {\r\n        method: 'workday',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'WORKDAY.INTL': {\r\n        method: 'workdayintl',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NOERROR, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n};\r\n/**\r\n * Returns i such that:\r\n * sortedArray[i-1] < val <= sortedArray[i]\r\n *\r\n */\r\nfunction lowerBound(val, sortedArray) {\r\n    if (sortedArray.length === 0) {\r\n        return 0;\r\n    }\r\n    if (val <= sortedArray[0]) {\r\n        return 0;\r\n    }\r\n    if (sortedArray[sortedArray.length - 1] < val) {\r\n        return sortedArray.length;\r\n    }\r\n    let lower = 0; //sortedArray[lower] < val\r\n    let upper = sortedArray.length - 1; //sortedArray[upper] >= val\r\n    while (lower + 1 < upper) {\r\n        const mid = Math.floor((upper + lower) / 2);\r\n        if (sortedArray[mid] >= val) {\r\n            upper = mid;\r\n        }\r\n        else {\r\n            lower = mid;\r\n        }\r\n    }\r\n    return upper;\r\n}\r\nfunction computeWeekendPattern(weekend) {\r\n    var _a;\r\n    if (typeof weekend !== 'number' && typeof weekend !== 'string') {\r\n        return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n    }\r\n    if (typeof weekend === 'string') {\r\n        if (weekend.length !== 7 || !/^(0|1)*$/.test(weekend) || weekend === '1111111') {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.WeekendString);\r\n        }\r\n        else {\r\n            return weekend;\r\n        }\r\n    }\r\n    else {\r\n        return (_a = workdayPatterns.get(weekend)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n    }\r\n}\r\nconst weekdayOffsets = new Map([[1, 0], [2, 1], [11, 1], [12, 2], [13, 3], [14, 4], [15, 5], [16, 6], [17, 0]]);\r\nconst workdayPatterns = new Map([\r\n    [1, '0000011'],\r\n    [2, '1000001'],\r\n    [3, '1100000'],\r\n    [4, '0110000'],\r\n    [5, '0011000'],\r\n    [6, '0001100'],\r\n    [7, '0000110'],\r\n    [11, '0000001'],\r\n    [12, '1000000'],\r\n    [13, '0100000'],\r\n    [14, '0010000'],\r\n    [15, '0001000'],\r\n    [16, '0000100'],\r\n    [17, '0000010'],\r\n]);\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class DegreesPlugin extends FunctionPlugin {\r\n    degrees(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEGREES'), (arg) => arg * (180 / Math.PI));\r\n    }\r\n}\r\nDegreesPlugin.implementedFunctions = {\r\n    'DEGREES': {\r\n        method: 'degrees',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class DeltaPlugin extends FunctionPlugin {\r\n    delta(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DELTA'), (left, right) => (left === right ? 1 : 0));\r\n    }\r\n}\r\nDeltaPlugin.implementedFunctions = {\r\n    'DELTA': {\r\n        method: 'delta',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ExpPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to EXP(value)\r\n     *\r\n     * Calculates the exponent for basis e\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    exp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXP'), Math.exp);\r\n    }\r\n}\r\nExpPlugin.implementedFunctions = {\r\n    'EXP': {\r\n        method: 'exp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class FinancialPlugin extends FunctionPlugin {\r\n    pmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PMT'), pmtCore);\r\n    }\r\n    ipmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IPMT'), ipmtCore);\r\n    }\r\n    ppmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PPMT'), ppmtCore);\r\n    }\r\n    fv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FV'), fvCore);\r\n    }\r\n    cumipmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CUMIPMT'), (rate, periods, value, start, end, type) => {\r\n            if (start > end) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\r\n            }\r\n            let acc = 0;\r\n            for (let i = start; i <= end; i++) {\r\n                acc += ipmtCore(rate, i, periods, value, 0, type);\r\n            }\r\n            return acc;\r\n        });\r\n    }\r\n    cumprinc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CUMPRINC'), (rate, periods, value, start, end, type) => {\r\n            if (start > end) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\r\n            }\r\n            let acc = 0;\r\n            for (let i = start; i <= end; i++) {\r\n                acc += ppmtCore(rate, i, periods, value, 0, type);\r\n            }\r\n            return acc;\r\n        });\r\n    }\r\n    db(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DB'), (cost, salvage, life, period, month) => {\r\n            if ((month === 12 && period > life) || (period > life + 1)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.PeriodLong);\r\n            }\r\n            if (salvage >= cost) {\r\n                return 0;\r\n            }\r\n            const rate = Math.round((1 - Math.pow(salvage / cost, 1 / life)) * 1000) / 1000;\r\n            const initial = cost * rate * month / 12;\r\n            if (period === 1) {\r\n                return initial;\r\n            }\r\n            let total = initial;\r\n            for (let i = 0; i < period - 2; i++) {\r\n                total += (cost - total) * rate;\r\n            }\r\n            if (period === life + 1) {\r\n                return (cost - total) * rate * (12 - month) / 12;\r\n            }\r\n            return (cost - total) * rate;\r\n        });\r\n    }\r\n    ddb(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DDB'), (cost, salvage, life, period, factor) => {\r\n            if (period > life) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            let rate = factor / life;\r\n            let oldValue;\r\n            if (rate >= 1) {\r\n                rate = 1;\r\n                if (period === 1) {\r\n                    oldValue = cost;\r\n                }\r\n                else {\r\n                    oldValue = 0;\r\n                }\r\n            }\r\n            else {\r\n                oldValue = cost * Math.pow(1 - rate, period - 1);\r\n            }\r\n            const newValue = cost * Math.pow(1 - rate, period);\r\n            return Math.max(oldValue - Math.max(salvage, newValue), 0);\r\n        });\r\n    }\r\n    dollarde(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DOLLARDE'), (dollar, fraction) => {\r\n            if (fraction < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            fraction = Math.trunc(fraction);\r\n            while (fraction > 10) {\r\n                fraction /= 10;\r\n            }\r\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * 10 / fraction;\r\n        });\r\n    }\r\n    dollarfr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DOLLARFR'), (dollar, fraction) => {\r\n            if (fraction < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            fraction = Math.trunc(fraction);\r\n            while (fraction > 10) {\r\n                fraction /= 10;\r\n            }\r\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * fraction / 10;\r\n        });\r\n    }\r\n    effect(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EFFECT'), (rate, periods) => {\r\n            periods = Math.trunc(periods);\r\n            return Math.pow(1 + rate / periods, periods) - 1;\r\n        });\r\n    }\r\n    ispmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISPMT'), (rate, period, periods, value) => {\r\n            if (periods === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return value * rate * (period / periods - 1);\r\n        });\r\n    }\r\n    nominal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOMINAL'), (rate, periods) => {\r\n            periods = Math.trunc(periods);\r\n            return (Math.pow(rate + 1, 1 / periods) - 1) * periods;\r\n        });\r\n    }\r\n    nper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NPER'), (rate, payment, present, future, type) => {\r\n            if (rate === 0) {\r\n                if (payment === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                return (-present - future) / payment;\r\n            }\r\n            if (type) {\r\n                payment *= 1 + rate;\r\n            }\r\n            return Math.log((payment - future * rate) / (present * rate + payment)) / Math.log(1 + rate);\r\n        });\r\n    }\r\n    rate(ast, state) {\r\n        // Newton's method: https://en.wikipedia.org/wiki/Newton%27s_method\r\n        return this.runFunction(ast.args, state, this.metadata('RATE'), (periods, payment, present, future, type, guess) => {\r\n            if (guess <= -1) {\r\n                return new CellError(ErrorType.VALUE);\r\n            }\r\n            const epsMax = 1e-7;\r\n            const iterMax = 50;\r\n            let rate = guess;\r\n            type = type ? 1 : 0;\r\n            for (let i = 0; i < iterMax; i++) {\r\n                if (rate <= -1) {\r\n                    return new CellError(ErrorType.NUM);\r\n                }\r\n                let y;\r\n                if (Math.abs(rate) < epsMax) {\r\n                    y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;\r\n                }\r\n                else {\r\n                    const f = Math.pow(1 + rate, periods);\r\n                    y = present * f + payment * (1 / rate + type) * (f - 1) + future;\r\n                }\r\n                if (Math.abs(y) < epsMax) {\r\n                    return rate;\r\n                }\r\n                let dy;\r\n                if (Math.abs(rate) < epsMax) {\r\n                    dy = present * periods + payment * type * periods;\r\n                }\r\n                else {\r\n                    const f = Math.pow(1 + rate, periods);\r\n                    const df = periods * Math.pow(1 + rate, periods - 1);\r\n                    dy = present * df + payment * (1 / rate + type) * df + payment * (-1 / (rate * rate)) * (f - 1);\r\n                }\r\n                rate -= y / dy;\r\n            }\r\n            return new CellError(ErrorType.NUM);\r\n        });\r\n    }\r\n    pv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PV'), (rate, periods, payment, future, type) => {\r\n            type = type ? 1 : 0;\r\n            if (rate === -1) {\r\n                if (periods === 0) {\r\n                    return new CellError(ErrorType.NUM);\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n            }\r\n            if (rate === 0) {\r\n                return -payment * periods - future;\r\n            }\r\n            else {\r\n                return ((1 - Math.pow(1 + rate, periods)) * payment * (1 + rate * type) / rate - future) / Math.pow(1 + rate, periods);\r\n            }\r\n        });\r\n    }\r\n    rri(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RRI'), (periods, present, future) => {\r\n            if (present === 0 || (future < 0 && present > 0) || (future > 0 && present < 0)) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return Math.pow(future / present, 1 / periods) - 1;\r\n        });\r\n    }\r\n    sln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SLN'), (cost, salvage, life) => {\r\n            if (life === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return (cost - salvage) / life;\r\n        });\r\n    }\r\n    syd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SYD'), (cost, salvage, life, period) => {\r\n            if (period > life) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));\r\n        });\r\n    }\r\n    tbilleq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLEQ'), (settlement, maturity, discount) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const denom = 360 - discount * (maturity - settlement);\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if (denom < 0) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return 365 * discount / denom;\r\n        });\r\n    }\r\n    tbillprice(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLPRICE'), (settlement, maturity, discount) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const denom = 360 - discount * (maturity - settlement);\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if (denom < 0) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return 100 * (1 - discount * (maturity - settlement) / 360);\r\n        });\r\n    }\r\n    tbillyield(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLYIELD'), (settlement, maturity, price) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return (100 - price) * 360 / (price * (maturity - settlement));\r\n        });\r\n    }\r\n    fvschedule(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FVSCHEDULE'), (value, ratios) => {\r\n            const vals = ratios.valuesFromTopLeftCorner();\r\n            for (const val of vals) {\r\n                if (val instanceof CellError) {\r\n                    return val;\r\n                }\r\n            }\r\n            for (const val of vals) {\r\n                if (isExtendedNumber(val)) {\r\n                    value *= 1 + getRawValue(val);\r\n                }\r\n                else if (val !== EmptyValue) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n    npv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NPV'), (rate, ...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            return npvCore(rate, coerced);\r\n        });\r\n    }\r\n    mirr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MIRR'), (range, frate, rrate) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            let posFlag = false;\r\n            let negFlag = false;\r\n            const posValues = [];\r\n            const negValues = [];\r\n            for (const val of vals) {\r\n                if (val > 0) {\r\n                    posFlag = true;\r\n                    posValues.push(val);\r\n                    negValues.push(0);\r\n                }\r\n                else if (val < 0) {\r\n                    negFlag = true;\r\n                    negValues.push(val);\r\n                    posValues.push(0);\r\n                }\r\n                else {\r\n                    negValues.push(0);\r\n                    posValues.push(0);\r\n                }\r\n            }\r\n            if (!posFlag || !negFlag) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const n = vals.length;\r\n            const nom = npvCore(rrate, posValues);\r\n            if (nom instanceof CellError) {\r\n                return nom;\r\n            }\r\n            const denom = npvCore(frate, negValues);\r\n            if (denom instanceof CellError) {\r\n                return denom;\r\n            }\r\n            return Math.pow((-nom * Math.pow(1 + rrate, n) / denom / (1 + frate)), 1 / (n - 1)) - 1;\r\n        });\r\n    }\r\n    pduration(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PDURATION'), (rate, pv, fv) => (Math.log(fv) - Math.log(pv)) / Math.log(1 + rate));\r\n    }\r\n    xnpv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('XNPV'), (rate, values, dates) => {\r\n            const valArr = values.valuesFromTopLeftCorner();\r\n            for (const val of valArr) {\r\n                if (typeof val !== 'number') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            const valArrNum = valArr;\r\n            const dateArr = dates.valuesFromTopLeftCorner();\r\n            for (const date of dateArr) {\r\n                if (typeof date !== 'number') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            const dateArrNum = dateArr;\r\n            if (dateArrNum.length !== valArrNum.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EqualLength);\r\n            }\r\n            const n = dateArrNum.length;\r\n            let ret = 0;\r\n            if (dateArrNum[0] < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n            }\r\n            for (let i = 0; i < n; i++) {\r\n                dateArrNum[i] = Math.floor(dateArrNum[i]);\r\n                if (dateArrNum[i] < dateArrNum[0]) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret += valArrNum[i] / Math.pow(1 + rate, (dateArrNum[i] - dateArrNum[0]) / 365);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nFinancialPlugin.implementedFunctions = {\r\n    'PMT': {\r\n        method: 'pmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'IPMT': {\r\n        method: 'ipmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'PPMT': {\r\n        method: 'ppmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'FV': {\r\n        method: 'fv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'CUMIPMT': {\r\n        method: 'cumipmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0, maxValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'CUMPRINC': {\r\n        method: 'cumprinc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0, maxValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DB': {\r\n        method: 'db',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 12, defaultValue: 12 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DDB': {\r\n        method: 'ddb',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, defaultValue: 2 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DOLLARDE': {\r\n        method: 'dollarde',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'DOLLARFR': {\r\n        method: 'dollarfr',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'EFFECT': {\r\n        method: 'effect',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'ISPMT': {\r\n        method: 'ispmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'NOMINAL': {\r\n        method: 'nominal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'NPER': {\r\n        method: 'nper',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'PV': {\r\n        method: 'pv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'RATE': {\r\n        method: 'rate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0.1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'RRI': {\r\n        method: 'rri',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'SLN': {\r\n        method: 'sln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'SYD': {\r\n        method: 'syd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'TBILLEQ': {\r\n        method: 'tbilleq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'TBILLPRICE': {\r\n        method: 'tbillprice',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'TBILLYIELD': {\r\n        method: 'tbillyield',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'FVSCHEDULE': {\r\n        method: 'fvschedule',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'NPV': {\r\n        method: 'npv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'MIRR': {\r\n        method: 'mirr',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'PDURATION': {\r\n        method: 'pduration',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n    },\r\n    'XNPV': {\r\n        method: 'xnpv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: -1 },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n};\r\nfunction pmtCore(rate, periods, present, future, type) {\r\n    if (rate === 0) {\r\n        return (-present - future) / periods;\r\n    }\r\n    else {\r\n        const term = Math.pow(1 + rate, periods);\r\n        return (future * rate + present * rate * term) * (type ? 1 / (1 + rate) : 1) / (1 - term);\r\n    }\r\n}\r\nfunction ipmtCore(rate, period, periods, present, future, type) {\r\n    const payment = pmtCore(rate, periods, present, future, type);\r\n    if (period === 1) {\r\n        return rate * (type ? 0 : -present);\r\n    }\r\n    else {\r\n        return rate * (type ? fvCore(rate, period - 2, payment, present, type) - payment : fvCore(rate, period - 1, payment, present, type));\r\n    }\r\n}\r\nfunction fvCore(rate, periods, payment, value, type) {\r\n    if (rate === 0) {\r\n        return -value - payment * periods;\r\n    }\r\n    else {\r\n        const term = Math.pow(1 + rate, periods);\r\n        return payment * (type ? (1 + rate) : 1) * (1 - term) / rate - value * term;\r\n    }\r\n}\r\nfunction ppmtCore(rate, period, periods, present, future, type) {\r\n    return pmtCore(rate, periods, present, future, type) - ipmtCore(rate, period, periods, present, future, type);\r\n}\r\nfunction npvCore(rate, args) {\r\n    let acc = 0;\r\n    for (let i = args.length - 1; i >= 0; i--) {\r\n        acc += args[i];\r\n        if (rate === -1) {\r\n            if (acc === 0) {\r\n                continue;\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n        }\r\n        acc /= 1 + rate;\r\n    }\r\n    return acc;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionPlugin } from '../index';\r\nimport { ArgumentTypes } from './FunctionPlugin';\r\nexport class FormulaTextPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to FORMULATEXT(value)\r\n     *\r\n     * Returns a formula in a given cell as a string.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    formulatext(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('FORMULATEXT'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (cellReference) => { var _a; return (_a = this.serialization.getCellFormula(cellReference)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NA, ErrorMessage.Formula); });\r\n    }\r\n}\r\nFormulaTextPlugin.implementedFunctions = {\r\n    'FORMULATEXT': {\r\n        method: 'formulatext',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        isDependentOnSheetStructureChange: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { FormulaVertex } from '../../DependencyGraph/FormulaCellVertex';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { EmptyValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing information functions\r\n */\r\nexport class InformationPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to ISBINARY(value)\r\n     *\r\n     * Returns true if provided value is a valid binary number\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isbinary(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISBINARY'), (arg) => /^[01]{1,10}$/.test(arg));\r\n    }\r\n    /**\r\n     * Corresponds to ISERR(value)\r\n     *\r\n     * Returns true if provided value is an error except #N/A!\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    iserr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISERR'), (arg) => (arg instanceof CellError && arg.type !== ErrorType.NA));\r\n    }\r\n    /**\r\n     * Corresponds to ISERROR(value)\r\n     *\r\n     * Checks whether provided value is an error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    iserror(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISERROR'), (arg) => (arg instanceof CellError));\r\n    }\r\n    /**\r\n     * Corresponds to ISFORMULA(value)\r\n     *\r\n     * Checks whether referenced cell is a formula\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isformula(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('ISFORMULA'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (reference) => {\r\n            const vertex = this.dependencyGraph.addressMapping.getCell(reference);\r\n            return vertex instanceof FormulaVertex;\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to ISBLANK(value)\r\n     *\r\n     * Checks whether provided cell reference is empty\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isblank(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISBLANK'), (arg) => (arg === EmptyValue));\r\n    }\r\n    /**\r\n     * Corresponds to ISNA(value)\r\n     *\r\n     * Returns true if provided value is #N/A! error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isna(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNA'), (arg) => (arg instanceof CellError && arg.type == ErrorType.NA));\r\n    }\r\n    /**\r\n     * Corresponds to ISNUMBER(value)\r\n     *\r\n     * Checks whether provided cell reference is a number\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isnumber(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNUMBER'), isExtendedNumber);\r\n    }\r\n    /**\r\n     * Corresponds to ISLOGICAL(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    islogical(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISLOGICAL'), (arg) => (typeof arg === 'boolean'));\r\n    }\r\n    /**\r\n     * Corresponds to ISREF(value)\r\n     *\r\n     * Returns true if provided value is #REF! error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isref(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISREF'), (arg) => (arg instanceof CellError && (arg.type == ErrorType.REF || arg.type == ErrorType.CYCLE)));\r\n    }\r\n    /**\r\n     * Corresponds to ISTEXT(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    istext(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISTEXT'), (arg) => (typeof arg === 'string'));\r\n    }\r\n    /**\r\n     * Corresponds to ISNONTEXT(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isnontext(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNONTEXT'), (arg) => !(typeof arg === 'string'));\r\n    }\r\n    /**\r\n     * Corresponds to COLUMN(reference)\r\n     *\r\n     * Returns column number of a reference or a formula cell if reference not provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    column(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('COLUMN'), () => state.formulaAddress.col + 1, (reference) => reference.col + 1);\r\n    }\r\n    /**\r\n     * Corresponds to COLUMNS(range)\r\n     *\r\n     * Returns number of columns in provided range of cells\r\n     *\r\n     * @param ast\r\n     * @param _state\r\n     */\r\n    columns(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\r\n        }\r\n        let argAst = ast.args[0];\r\n        while (argAst.type === AstNodeType.PARENTHESIS) {\r\n            argAst = argAst.expression;\r\n        }\r\n        if (argAst.type === AstNodeType.CELL_RANGE || argAst.type === AstNodeType.COLUMN_RANGE) {\r\n            return argAst.end.col - argAst.start.col + 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.CELL_REFERENCE) {\r\n            return 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.ROW_RANGE) {\r\n            return this.config.maxColumns;\r\n        }\r\n        else {\r\n            const val = this.evaluateAst(argAst, state);\r\n            if (val instanceof SimpleRangeValue) {\r\n                return val.width();\r\n            }\r\n            else if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Corresponds to ROW(reference)\r\n     *\r\n     * Returns row number of a reference or a formula cell if reference not provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    row(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('ROW'), () => state.formulaAddress.row + 1, (reference) => reference.row + 1);\r\n    }\r\n    /**\r\n     * Corresponds to ROWS(range)\r\n     *\r\n     * Returns number of rows in provided range of cells\r\n     *\r\n     * @param ast\r\n     * @param _state\r\n     */\r\n    rows(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\r\n        }\r\n        let argAst = ast.args[0];\r\n        while (argAst.type === AstNodeType.PARENTHESIS) {\r\n            argAst = argAst.expression;\r\n        }\r\n        if (argAst.type === AstNodeType.CELL_RANGE || argAst.type === AstNodeType.ROW_RANGE) {\r\n            return argAst.end.row - argAst.start.row + 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.CELL_REFERENCE) {\r\n            return 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.COLUMN_RANGE) {\r\n            return this.config.maxRows;\r\n        }\r\n        else {\r\n            const val = this.evaluateAst(argAst, state);\r\n            if (val instanceof SimpleRangeValue) {\r\n                return val.height();\r\n            }\r\n            else if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Corresponds to INDEX(range;)\r\n     *\r\n     * Returns specific position in 2d array.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    index(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INDEX'), (rangeValue, row, col) => {\r\n            var _a, _b, _c, _d, _e, _f;\r\n            if (col < 1 || row < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (col > rangeValue.width() || row > rangeValue.height()) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return (_f = (_c = (_b = (_a = rangeValue === null || rangeValue === void 0 ? void 0 : rangeValue.data) === null || _a === void 0 ? void 0 : _a[row - 1]) === null || _b === void 0 ? void 0 : _b[col - 1]) !== null && _c !== void 0 ? _c : (_e = (_d = rangeValue === null || rangeValue === void 0 ? void 0 : rangeValue.data) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e[0]) !== null && _f !== void 0 ? _f : new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to NA()\r\n     *\r\n     * Returns #N/A!\r\n     *\r\n     * @param _ast\r\n     * @param _state\r\n     */\r\n    na(_ast, _state) {\r\n        return new CellError(ErrorType.NA);\r\n    }\r\n    /**\r\n     * Corresponds to SHEET(value)\r\n     *\r\n     * Returns sheet number of a given value or a formula sheet number if no argument is provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     * */\r\n    sheet(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('SHEET'), () => state.formulaAddress.sheet + 1, (reference) => reference.sheet + 1, (value) => {\r\n            const sheetNumber = this.dependencyGraph.sheetMapping.get(value);\r\n            if (sheetNumber !== undefined) {\r\n                return sheetNumber + 1;\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.SheetRef);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to SHEETS(value)\r\n     *\r\n     * Returns number of sheet of a given reference or number of all sheets in workbook when no argument is provided.\r\n     * It returns always 1 for a valid reference as 3D references are not supported.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     * */\r\n    sheets(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('SHEETS'), () => this.dependencyGraph.sheetMapping.numberOfSheets(), // return number of sheets if no argument\r\n        () => 1, // return 1 for valid reference\r\n        () => new CellError(ErrorType.VALUE, ErrorMessage.CellRefExpected) // error otherwise\r\n        );\r\n    }\r\n}\r\nInformationPlugin.implementedFunctions = {\r\n    'COLUMN': {\r\n        method: 'column',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, optional: true }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'COLUMNS': {\r\n        method: 'columns',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISBINARY': {\r\n        method: 'isbinary',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'ISERR': {\r\n        method: 'iserr',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISFORMULA': {\r\n        method: 'isformula',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISNA': {\r\n        method: 'isna',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISREF': {\r\n        method: 'isref',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISERROR': {\r\n        method: 'iserror',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISBLANK': {\r\n        method: 'isblank',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISNUMBER': {\r\n        method: 'isnumber',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISLOGICAL': {\r\n        method: 'islogical',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISTEXT': {\r\n        method: 'istext',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISNONTEXT': {\r\n        method: 'isnontext',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'INDEX': {\r\n        method: 'index',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'NA': {\r\n        method: 'na',\r\n        parameters: [],\r\n    },\r\n    'ROW': {\r\n        method: 'row',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, optional: true }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ROWS': {\r\n        method: 'rows',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'SHEET': {\r\n        method: 'sheet',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'SHEETS': {\r\n        method: 'sheets',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class IsEvenPlugin extends FunctionPlugin {\r\n    iseven(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISEVEN'), (val) => (val % 2 === 0));\r\n    }\r\n}\r\nIsEvenPlugin.implementedFunctions = {\r\n    'ISEVEN': {\r\n        method: 'iseven',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class IsOddPlugin extends FunctionPlugin {\r\n    isodd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISODD'), (val) => (val % 2 === 1));\r\n    }\r\n}\r\nIsOddPlugin.implementedFunctions = {\r\n    'ISODD': {\r\n        method: 'isodd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class LogarithmPlugin extends FunctionPlugin {\r\n    log10(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOG10'), Math.log10);\r\n    }\r\n    log(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOG'), (arg, base) => Math.log(arg) / Math.log(base));\r\n    }\r\n    ln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LN'), Math.log);\r\n    }\r\n}\r\nLogarithmPlugin.implementedFunctions = {\r\n    'LOG10': {\r\n        method: 'log10',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'LOG': {\r\n        method: 'log',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 10, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'LN': {\r\n        method: 'ln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport const PI = parseFloat(Math.PI.toFixed(14));\r\nexport class MathConstantsPlugin extends FunctionPlugin {\r\n    pi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PI'), () => PI);\r\n    }\r\n    sqrtpi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SQRTPI'), (arg) => Math.sqrt(PI * arg));\r\n    }\r\n}\r\nMathConstantsPlugin.implementedFunctions = {\r\n    'PI': {\r\n        method: 'pi',\r\n        parameters: [],\r\n    },\r\n    'SQRTPI': {\r\n        method: 'sqrtpi',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../../ArraySize';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { InterpreterState } from '../InterpreterState';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nfunction arraySizeForMultiplication(leftArraySize, rightArraySize) {\r\n    return new ArraySize(rightArraySize.width, leftArraySize.height);\r\n}\r\nfunction arraySizeForPoolFunction(inputArray, windowSize, stride) {\r\n    return new ArraySize(1 + (inputArray.width - windowSize) / stride, 1 + (inputArray.height - windowSize) / stride);\r\n}\r\nexport class MatrixPlugin extends FunctionPlugin {\r\n    mmult(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MMULT'), (leftMatrix, rightMatrix) => {\r\n            if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            if (rightMatrix.height() !== leftMatrix.width()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ArrayDimensions);\r\n            }\r\n            const outputSize = arraySizeForMultiplication(leftMatrix.size, rightMatrix.size);\r\n            const result = this.createKernel(function (a, b, width) {\r\n                let sum = 0;\r\n                for (let i = 0; i < width; ++i) {\r\n                    sum += a[this.thread.y][i] * b[i][this.thread.x];\r\n                }\r\n                return sum;\r\n            }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    mmultArraySize(ast, state) {\r\n        if (ast.args.length !== 2) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MMULT');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const [left, right] = subChecks;\r\n        return arraySizeForMultiplication(left, right);\r\n    }\r\n    maxpool(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MAXPOOL'), (matrix, windowSize, stride = windowSize) => {\r\n            if (!matrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            const outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\r\n            const result = this.createKernel(function (a, windowSize, stride) {\r\n                const leftCornerX = this.thread.x * stride;\r\n                const leftCornerY = this.thread.y * stride;\r\n                let currentMax = a[leftCornerY][leftCornerX];\r\n                for (let i = 0; i < windowSize; i++) {\r\n                    for (let j = 0; j < windowSize; j++) {\r\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\r\n                    }\r\n                }\r\n                return currentMax;\r\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    medianpool(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MEDIANPOOL'), (matrix, windowSize, stride = windowSize) => {\r\n            if (!matrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            const outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\r\n            const result = this.createKernel(function (a, windowSize, stride) {\r\n                const leftCornerX = this.thread.x * stride;\r\n                const leftCornerY = this.thread.y * stride;\r\n                let currentMax = a[leftCornerY][leftCornerX];\r\n                for (let i = 0; i < windowSize; i++) {\r\n                    for (let j = 0; j < windowSize; j++) {\r\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\r\n                    }\r\n                }\r\n                let currentMin = a[leftCornerY][leftCornerX];\r\n                for (let i2 = 0; i2 < windowSize; i2++) {\r\n                    for (let j2 = 0; j2 < windowSize; j2++) {\r\n                        currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\r\n                    }\r\n                }\r\n                const numberOfElements = windowSize * windowSize;\r\n                let leftEnd = currentMin;\r\n                let rightEnd = currentMax;\r\n                let result = 42;\r\n                for (let iter = 0; iter < 32; iter++) {\r\n                    const medianGuess = (leftEnd + rightEnd) / 2;\r\n                    let medianGuessCount = 0;\r\n                    for (let i3 = 0; i3 < windowSize; i3++) {\r\n                        for (let j3 = 0; j3 < windowSize; j3++) {\r\n                            if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\r\n                                medianGuessCount++;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (windowSize % 2 === 0) {\r\n                        if (medianGuessCount === numberOfElements / 2) {\r\n                            result = medianGuess;\r\n                            break;\r\n                        }\r\n                        else if (medianGuessCount > numberOfElements / 2) {\r\n                            leftEnd = medianGuess;\r\n                        }\r\n                        else {\r\n                            rightEnd = medianGuess;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (medianGuessCount === (numberOfElements - 1) / 2) {\r\n                            result = medianGuess;\r\n                            break;\r\n                        }\r\n                        else if (medianGuessCount > (numberOfElements - 1) / 2) {\r\n                            leftEnd = medianGuess;\r\n                        }\r\n                        else {\r\n                            rightEnd = medianGuess;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    maxpoolArraySize(ast, state) {\r\n        if (ast.args.length < 2 || ast.args.length > 3) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MAXPOOL');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const array = subChecks[0];\r\n        const windowArg = ast.args[1];\r\n        let window;\r\n        if (windowArg.type === AstNodeType.NUMBER) {\r\n            window = windowArg.value;\r\n        }\r\n        else {\r\n            window = 1;\r\n        }\r\n        let stride = window;\r\n        if (ast.args.length === 3) {\r\n            const strideArg = ast.args[2];\r\n            if (strideArg.type === AstNodeType.NUMBER) {\r\n                stride = strideArg.value;\r\n            }\r\n            else {\r\n                stride = 1;\r\n            }\r\n        }\r\n        if (window > array.width || window > array.height\r\n            || stride > window\r\n            || (array.width - window) % stride !== 0 || (array.height - window) % stride !== 0) {\r\n            return ArraySize.error();\r\n        }\r\n        return arraySizeForPoolFunction(array, window, stride);\r\n    }\r\n    medianpoolArraySize(ast, state) {\r\n        return this.maxpoolArraySize(ast, state);\r\n    }\r\n    transpose(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRANSPOSE'), (matrix) => {\r\n            const input = matrix.rawData();\r\n            const inputSize = matrix.size;\r\n            const result = [];\r\n            for (let i = 0; i < inputSize.width; ++i) {\r\n                result[i] = [];\r\n                for (let j = 0; j < inputSize.height; ++j) {\r\n                    result[i][j] = input[j][i];\r\n                }\r\n            }\r\n            return SimpleRangeValue.onlyValues(result);\r\n        });\r\n    }\r\n    transposeArraySize(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MMULT');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const [size] = subChecks;\r\n        return new ArraySize(size.height, size.width);\r\n    }\r\n    createKernel(kernel, outputSize) {\r\n        return function (...args) {\r\n            const result = [];\r\n            for (let y = 0; y < outputSize.height; ++y) {\r\n                result.push([]);\r\n                for (let x = 0; x < outputSize.width; ++x) {\r\n                    result[y][x] = kernel.apply({ thread: { x, y } }, args);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n}\r\nMatrixPlugin.implementedFunctions = {\r\n    'MMULT': {\r\n        method: 'mmult',\r\n        arraySizeMethod: 'mmultArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'TRANSPOSE': {\r\n        method: 'transpose',\r\n        arraySizeMethod: 'transposeArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'MAXPOOL': {\r\n        method: 'maxpool',\r\n        arraySizeMethod: 'maxpoolArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'MEDIANPOOL': {\r\n        method: 'medianpool',\r\n        arraySizeMethod: 'medianpoolArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\r\nexport class MedianPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to MEDIAN(Number1, Number2, ...).\r\n     *\r\n     * Returns a median of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    median(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MEDIAN'), (...args) => {\r\n            const values = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (values instanceof CellError) {\r\n                return values;\r\n            }\r\n            if (values.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            values.sort((a, b) => (a - b));\r\n            if (values.length % 2 === 0) {\r\n                return (values[(values.length / 2) - 1] + values[values.length / 2]) / 2;\r\n            }\r\n            else {\r\n                return values[Math.floor(values.length / 2)];\r\n            }\r\n        });\r\n    }\r\n    large(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LARGE'), (range, n) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            vals.sort((a, b) => a - b);\r\n            n = Math.trunc(n);\r\n            if (n > vals.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return vals[vals.length - n];\r\n        });\r\n    }\r\n    small(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SMALL'), (range, n) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            vals.sort((a, b) => a - b);\r\n            n = Math.trunc(n);\r\n            if (n > vals.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return vals[n - 1];\r\n        });\r\n    }\r\n}\r\nMedianPlugin.implementedFunctions = {\r\n    'MEDIAN': {\r\n        method: 'median',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'LARGE': {\r\n        method: 'large',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'SMALL': {\r\n        method: 'small',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ModuloPlugin extends FunctionPlugin {\r\n    mod(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MOD'), (dividend, divisor) => {\r\n            if (divisor === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            else {\r\n                return dividend % divisor;\r\n            }\r\n        });\r\n    }\r\n}\r\nModuloPlugin.implementedFunctions = {\r\n    'MOD': {\r\n        method: 'mod',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { SheetsNotEqual } from '../../errors';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceBooleanToNumber } from '../ArithmeticHelper';\r\nimport { EmptyValue, getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nfunction zeroForInfinite(value) {\r\n    if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nclass MomentsAggregate {\r\n    constructor(sumsq, sum, count) {\r\n        this.sumsq = sumsq;\r\n        this.sum = sum;\r\n        this.count = count;\r\n    }\r\n    static single(arg) {\r\n        return new MomentsAggregate(arg * arg, arg, 1);\r\n    }\r\n    compose(other) {\r\n        return new MomentsAggregate(this.sumsq + other.sumsq, this.sum + other.sum, this.count + other.count);\r\n    }\r\n    averageValue() {\r\n        if (this.count > 0) {\r\n            return this.sum / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    varSValue() {\r\n        if (this.count > 1) {\r\n            return (this.sumsq - (this.sum * this.sum) / this.count) / (this.count - 1);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    varPValue() {\r\n        if (this.count > 0) {\r\n            return (this.sumsq - (this.sum * this.sum) / this.count) / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nMomentsAggregate.empty = new MomentsAggregate(0, 0, 0);\r\nexport class NumericAggregationPlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.addWithEpsilonRaw = (left, right) => this.arithmeticHelper.addWithEpsilonRaw(left, right);\r\n    }\r\n    /**\r\n     * Corresponds to SUM(Number1, Number2, ...).\r\n     *\r\n     * Returns a sum of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sum(ast, state) {\r\n        return this.doSum(ast.args, state);\r\n    }\r\n    sumsq(ast, state) {\r\n        return this.reduce(ast.args, state, 0, 'SUMSQ', this.addWithEpsilonRaw, (arg) => Math.pow(getRawValue(arg), 2), strictlyNumbers);\r\n    }\r\n    /**\r\n     * Corresponds to MAX(Number1, Number2, ...).\r\n     *\r\n     * Returns a max of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    max(ast, state) {\r\n        return this.doMax(ast.args, state);\r\n    }\r\n    maxa(ast, state) {\r\n        const value = this.reduce(ast.args, state, Number.NEGATIVE_INFINITY, 'MAXA', (left, right) => Math.max(left, right), getRawValue, numbersBooleans);\r\n        return zeroForInfinite(value);\r\n    }\r\n    /**\r\n     * Corresponds to MIN(Number1, Number2, ...).\r\n     *\r\n     * Returns a min of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    min(ast, state) {\r\n        return this.doMin(ast.args, state);\r\n    }\r\n    mina(ast, state) {\r\n        const value = this.reduce(ast.args, state, Number.POSITIVE_INFINITY, 'MINA', (left, right) => Math.min(left, right), getRawValue, numbersBooleans);\r\n        return zeroForInfinite(value);\r\n    }\r\n    count(ast, state) {\r\n        return this.doCount(ast.args, state);\r\n    }\r\n    counta(ast, state) {\r\n        return this.doCounta(ast.args, state);\r\n    }\r\n    average(ast, state) {\r\n        return this.doAverage(ast.args, state);\r\n    }\r\n    averagea(ast, state) {\r\n        var _a;\r\n        const result = this.reduce(ast.args, state, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => left.compose(right), (arg) => MomentsAggregate.single(getRawValue(arg)), numbersBooleans);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    vars(ast, state) {\r\n        return this.doVarS(ast.args, state);\r\n    }\r\n    varp(ast, state) {\r\n        return this.doVarP(ast.args, state);\r\n    }\r\n    vara(ast, state) {\r\n        var _a;\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    varpa(ast, state) {\r\n        var _a;\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    stdevs(ast, state) {\r\n        return this.doStdevS(ast.args, state);\r\n    }\r\n    stdevp(ast, state) {\r\n        return this.doStdevP(ast.args, state);\r\n    }\r\n    stdeva(ast, state) {\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varSValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    stdevpa(ast, state) {\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varPValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    product(ast, state) {\r\n        return this.doProduct(ast.args, state);\r\n    }\r\n    subtotal(ast, state) {\r\n        if (ast.args.length < 2) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        const functionType = this.coerceToType(this.evaluateAst(ast.args[0], state), { argumentType: ArgumentTypes.NUMBER }, state);\r\n        const args = ast.args.slice(1);\r\n        switch (functionType) {\r\n            case 1:\r\n            case 101:\r\n                return this.doAverage(args, state);\r\n            case 2:\r\n            case 102:\r\n                return this.doCount(args, state);\r\n            case 3:\r\n            case 103:\r\n                return this.doCounta(args, state);\r\n            case 4:\r\n            case 104:\r\n                return this.doMax(args, state);\r\n            case 5:\r\n            case 105:\r\n                return this.doMin(args, state);\r\n            case 6:\r\n            case 106:\r\n                return this.doProduct(args, state);\r\n            case 7:\r\n            case 107:\r\n                return this.doStdevS(args, state);\r\n            case 8:\r\n            case 108:\r\n                return this.doStdevP(args, state);\r\n            case 9:\r\n            case 109:\r\n                return this.doSum(args, state);\r\n            case 10:\r\n            case 110:\r\n                return this.doVarS(args, state);\r\n            case 11:\r\n            case 111:\r\n                return this.doVarP(args, state);\r\n            default:\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\r\n        }\r\n    }\r\n    reduceAggregate(args, state) {\r\n        return this.reduce(args, state, MomentsAggregate.empty, '_AGGREGATE', (left, right) => {\r\n            return left.compose(right);\r\n        }, (arg) => {\r\n            return MomentsAggregate.single(getRawValue(arg));\r\n        }, strictlyNumbers);\r\n    }\r\n    reduceAggregateA(args, state) {\r\n        return this.reduce(args, state, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => {\r\n            return left.compose(right);\r\n        }, (arg) => {\r\n            return MomentsAggregate.single(getRawValue(arg));\r\n        }, numbersBooleans);\r\n    }\r\n    doAverage(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doVarS(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doVarP(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doStdevS(args, state) {\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varSValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    doStdevP(args, state) {\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varPValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    doCount(args, state) {\r\n        return this.reduce(args, state, 0, 'COUNT', (left, right) => left + right, getRawValue, (arg) => (isExtendedNumber(arg)) ? 1 : 0);\r\n    }\r\n    doCounta(args, state) {\r\n        return this.reduce(args, state, 0, 'COUNTA', (left, right) => left + right, getRawValue, (arg) => (arg === EmptyValue) ? 0 : 1);\r\n    }\r\n    doMax(args, state) {\r\n        const value = this.reduce(args, state, Number.NEGATIVE_INFINITY, 'MAX', (left, right) => Math.max(left, right), getRawValue, strictlyNumbers);\r\n        return zeroForInfinite(value);\r\n    }\r\n    doMin(args, state) {\r\n        const value = this.reduce(args, state, Number.POSITIVE_INFINITY, 'MIN', (left, right) => Math.min(left, right), getRawValue, strictlyNumbers);\r\n        return zeroForInfinite(value);\r\n    }\r\n    doSum(args, state) {\r\n        return this.reduce(args, state, 0, 'SUM', this.addWithEpsilonRaw, getRawValue, strictlyNumbers);\r\n    }\r\n    doProduct(args, state) {\r\n        return this.reduce(args, state, 1, 'PRODUCT', (left, right) => left * right, getRawValue, strictlyNumbers);\r\n    }\r\n    /**\r\n     * Reduces procedure arguments with given reducing function\r\n     *\r\n     * @param args\r\n     * @param state\r\n     * @param initialAccValue - \"neutral\" value (equivalent of 0)\r\n     * @param functionName - function name to use as cache key\r\n     * @param reducingFunction - reducing function\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     * */\r\n    reduce(args, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\r\n        if (args.length < 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        return args.reduce((acc, arg) => {\r\n            if (acc instanceof CellError) {\r\n                return acc;\r\n            }\r\n            if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\r\n                const val = this.evaluateRange(arg, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction);\r\n                if (val instanceof CellError) {\r\n                    return val;\r\n                }\r\n                return reducingFunction(val, acc);\r\n            }\r\n            let value;\r\n            value = this.evaluateAst(arg, state);\r\n            if (value instanceof SimpleRangeValue) {\r\n                const coercedRangeValues = Array.from(value.valuesFromTopLeftCorner())\r\n                    .map(coercionFunction)\r\n                    .filter((arg) => (arg !== undefined));\r\n                return coercedRangeValues\r\n                    .map((arg) => {\r\n                    if (arg instanceof CellError) {\r\n                        return arg;\r\n                    }\r\n                    else {\r\n                        return mapFunction(arg);\r\n                    }\r\n                })\r\n                    .reduce((left, right) => {\r\n                    if (left instanceof CellError) {\r\n                        return left;\r\n                    }\r\n                    else if (right instanceof CellError) {\r\n                        return right;\r\n                    }\r\n                    else {\r\n                        return reducingFunction(left, right);\r\n                    }\r\n                }, acc);\r\n            }\r\n            else if (arg.type === AstNodeType.CELL_REFERENCE) {\r\n                value = coercionFunction(value);\r\n                if (value === undefined) {\r\n                    return acc;\r\n                }\r\n            }\r\n            else {\r\n                value = this.coerceScalarToNumberOrError(value);\r\n                value = coercionFunction(value);\r\n                if (value === undefined) {\r\n                    return acc;\r\n                }\r\n            }\r\n            if (value instanceof CellError) {\r\n                return value;\r\n            }\r\n            return reducingFunction(acc, mapFunction(value));\r\n        }, initialAccValue);\r\n    }\r\n    /**\r\n     * Performs range operation on given range\r\n     *\r\n     * @param ast - cell range ast\r\n     * @param state\r\n     * @param initialAccValue - initial accumulator value for reducing function\r\n     * @param functionName - function name to use as cache key\r\n     * @param reducingFunction - reducing function\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     */\r\n    evaluateRange(ast, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\r\n        let range;\r\n        try {\r\n            range = AbsoluteCellRange.fromAst(ast, state.formulaAddress);\r\n        }\r\n        catch (err) {\r\n            if (err instanceof SheetsNotEqual) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        }\r\n        const rangeVertex = this.dependencyGraph.getRange(range.start, range.end);\r\n        if (rangeVertex === undefined) {\r\n            throw new Error('Range does not exists in graph');\r\n        }\r\n        let value = rangeVertex.getFunctionValue(functionName);\r\n        if (value === undefined) {\r\n            const rangeValues = this.getRangeValues(functionName, range, rangeVertex, mapFunction, coercionFunction);\r\n            value = rangeValues.reduce((arg1, arg2) => {\r\n                if (arg1 instanceof CellError) {\r\n                    return arg1;\r\n                }\r\n                else if (arg2 instanceof CellError) {\r\n                    return arg2;\r\n                }\r\n                else {\r\n                    return reducingFunction(arg1, arg2);\r\n                }\r\n            }, initialAccValue);\r\n            rangeVertex.setFunctionValue(functionName, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Returns list of values for given range and function name\r\n     *\r\n     * If range is dependent on smaller range, list will contain value of smaller range for this function\r\n     * and values of cells that are not present in smaller range\r\n     *\r\n     * @param functionName - function name (e.g. SUM)\r\n     * @param range - cell range\r\n     * @param rangeVertex\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     */\r\n    getRangeValues(functionName, range, rangeVertex, mapFunction, coercionFunction) {\r\n        const rangeResult = [];\r\n        const { smallerRangeVertex, restRange } = this.dependencyGraph.rangeMapping.findSmallerRange(range);\r\n        let actualRange;\r\n        if (smallerRangeVertex !== undefined && this.dependencyGraph.existsEdge(smallerRangeVertex, rangeVertex)) {\r\n            const cachedValue = smallerRangeVertex.getFunctionValue(functionName);\r\n            if (cachedValue !== undefined) {\r\n                rangeResult.push(cachedValue);\r\n            }\r\n            else {\r\n                for (const cellFromRange of smallerRangeVertex.range.addresses(this.dependencyGraph)) {\r\n                    const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\r\n                    if (val instanceof CellError) {\r\n                        rangeResult.push(val);\r\n                    }\r\n                    else if (val !== undefined) {\r\n                        rangeResult.push(mapFunction(val));\r\n                    }\r\n                }\r\n            }\r\n            actualRange = restRange;\r\n        }\r\n        else {\r\n            actualRange = range;\r\n        }\r\n        for (const cellFromRange of actualRange.addresses(this.dependencyGraph)) {\r\n            const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\r\n            if (val instanceof CellError) {\r\n                rangeResult.push(val);\r\n            }\r\n            else if (val !== undefined) {\r\n                rangeResult.push(mapFunction(val));\r\n            }\r\n        }\r\n        return rangeResult;\r\n    }\r\n}\r\nNumericAggregationPlugin.implementedFunctions = {\r\n    'SUM': {\r\n        method: 'sum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SUMSQ': {\r\n        method: 'sumsq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MAX': {\r\n        method: 'max',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MIN': {\r\n        method: 'min',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MAXA': {\r\n        method: 'maxa',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MINA': {\r\n        method: 'mina',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'COUNT': {\r\n        method: 'count',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'COUNTA': {\r\n        method: 'counta',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'AVERAGE': {\r\n        method: 'average',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'AVERAGEA': {\r\n        method: 'averagea',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'PRODUCT': {\r\n        method: 'product',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VAR.S': {\r\n        method: 'vars',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VAR.P': {\r\n        method: 'varp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VARA': {\r\n        method: 'vara',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VARPA': {\r\n        method: 'varpa',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEV.S': {\r\n        method: 'stdevs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEV.P': {\r\n        method: 'stdevp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEVA': {\r\n        method: 'stdeva',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEVPA': {\r\n        method: 'stdevpa',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SUBTOTAL': {\r\n        method: 'subtotal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    }\r\n};\r\nNumericAggregationPlugin.aliases = {\r\n    VAR: 'VAR.S',\r\n    VARP: 'VAR.P',\r\n    STDEV: 'STDEV.S',\r\n    STDEVP: 'STDEV.P',\r\n    VARS: 'VAR.S',\r\n    STDEVS: 'STDEV.S',\r\n};\r\nfunction strictlyNumbers(arg) {\r\n    if (isExtendedNumber(arg) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction numbersBooleans(arg) {\r\n    if (typeof arg === 'boolean') {\r\n        return coerceBooleanToNumber(arg);\r\n    }\r\n    else if (isExtendedNumber(arg) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else if (typeof arg === 'string') {\r\n        return 0;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class PowerPlugin extends FunctionPlugin {\r\n    power(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('POWER'), Math.pow);\r\n    }\r\n}\r\nPowerPlugin.implementedFunctions = {\r\n    'POWER': {\r\n        method: 'power',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class RadiansPlugin extends FunctionPlugin {\r\n    radians(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RADIANS'), (arg) => arg * (Math.PI / 180));\r\n    }\r\n}\r\nRadiansPlugin.implementedFunctions = {\r\n    'RADIANS': {\r\n        method: 'radians',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { padLeft } from '../../format/format';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nconst MAX_LENGTH = 10;\r\nconst DECIMAL_NUMBER_OF_BITS = 255;\r\nconst MIN_BASE = 2;\r\nconst MAX_BASE = 36;\r\nconst ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport class RadixConversionPlugin extends FunctionPlugin {\r\n    dec2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2BIN'), (value, places) => decimalToBaseWithExactPadding(value, 2, places));\r\n    }\r\n    dec2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2OCT'), (value, places) => decimalToBaseWithExactPadding(value, 8, places));\r\n    }\r\n    dec2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2HEX'), (value, places) => decimalToBaseWithExactPadding(value, 16, places));\r\n    }\r\n    bin2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2DEC'), (binary) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return twoComplementToDecimal(binaryWithSign, 2);\r\n        });\r\n    }\r\n    bin2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2OCT'), (binary, places) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 8, places);\r\n        });\r\n    }\r\n    bin2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2HEX'), (binary, places) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 16, places);\r\n        });\r\n    }\r\n    oct2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2DEC'), (octal) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return twoComplementToDecimal(octalWithSign, 8);\r\n        });\r\n    }\r\n    oct2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2BIN'), (octal, places) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 2, places);\r\n        });\r\n    }\r\n    oct2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2HEX'), (octal, places) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 16, places);\r\n        });\r\n    }\r\n    hex2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2DEC'), (hexadecimal) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return twoComplementToDecimal(hexadecimalWithSign, 16);\r\n        });\r\n    }\r\n    hex2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2BIN'), (hexadecimal, places) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 2, places);\r\n        });\r\n    }\r\n    hex2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2OCT'), (hexadecimal, places) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 8, places);\r\n        });\r\n    }\r\n    base(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BASE'), decimalToBaseWithMinimumPadding);\r\n    }\r\n    decimal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DECIMAL'), (arg, base) => {\r\n            const input = coerceStringToBase(arg, base, DECIMAL_NUMBER_OF_BITS);\r\n            if (input === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return parseInt(input, base);\r\n        });\r\n    }\r\n}\r\nRadixConversionPlugin.implementedFunctions = {\r\n    'DEC2BIN': {\r\n        method: 'dec2bin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'DEC2OCT': {\r\n        method: 'dec2oct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'DEC2HEX': {\r\n        method: 'dec2hex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'BIN2DEC': {\r\n        method: 'bin2dec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n    },\r\n    'BIN2OCT': {\r\n        method: 'bin2oct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'BIN2HEX': {\r\n        method: 'bin2hex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'OCT2DEC': {\r\n        method: 'oct2dec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n    },\r\n    'OCT2BIN': {\r\n        method: 'oct2bin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'OCT2HEX': {\r\n        method: 'oct2hex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'HEX2DEC': {\r\n        method: 'hex2dec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n    },\r\n    'HEX2BIN': {\r\n        method: 'hex2bin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'HEX2OCT': {\r\n        method: 'hex2oct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'DECIMAL': {\r\n        method: 'decimal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\r\n        ],\r\n    },\r\n    'BASE': {\r\n        method: 'base',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: DECIMAL_NUMBER_OF_BITS },\r\n        ],\r\n    },\r\n};\r\nfunction coerceStringToBase(value, base, maxLength) {\r\n    const baseAlphabet = ALPHABET.substr(0, base);\r\n    const regex = new RegExp(`^[${baseAlphabet}]+$`);\r\n    if (value.length > maxLength || !regex.test(value)) {\r\n        return undefined;\r\n    }\r\n    return value;\r\n}\r\nfunction decimalToBaseWithExactPadding(value, base, places) {\r\n    if (value > maxValFromBase(base)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLarge);\r\n    }\r\n    if (value < minValFromBase(base)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseSmall);\r\n    }\r\n    const result = decimalToRadixComplement(value, base);\r\n    if (places === undefined || value < 0) {\r\n        return result;\r\n    }\r\n    else if (result.length > places) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLong);\r\n    }\r\n    else {\r\n        return padLeft(result, places);\r\n    }\r\n}\r\nfunction minValFromBase(base) {\r\n    return -Math.pow(base, MAX_LENGTH) / 2;\r\n}\r\nfunction maxValFromBase(base) {\r\n    return -minValFromBase(base) - 1;\r\n}\r\nfunction decimalToBaseWithMinimumPadding(value, base, places) {\r\n    const result = decimalToRadixComplement(value, base);\r\n    if (places !== undefined && places > result.length) {\r\n        return padLeft(result, places);\r\n    }\r\n    else {\r\n        return result;\r\n    }\r\n}\r\nfunction decimalToRadixComplement(value, base) {\r\n    const offset = value < 0 ? Math.pow(base, MAX_LENGTH) : 0;\r\n    return (value + offset).toString(base).toUpperCase();\r\n}\r\nfunction twoComplementToDecimal(value, base) {\r\n    const parsed = parseInt(value, base);\r\n    const offset = Math.pow(base, MAX_LENGTH);\r\n    return (parsed >= offset / 2) ? parsed - offset : parsed;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class RandomPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to RAND()\r\n     *\r\n     * Returns a pseudo-random floating-point random number\r\n     * in the range [0,1).\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    rand(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RAND'), Math.random);\r\n    }\r\n    randbetween(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RANDBETWEEN'), (lower, upper) => {\r\n            if (upper < lower) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            lower = Math.ceil(lower);\r\n            upper = Math.floor(upper) + 1;\r\n            if (lower === upper) {\r\n                upper += 1;\r\n            }\r\n            return lower + Math.floor(Math.random() * (upper - lower));\r\n        });\r\n    }\r\n}\r\nRandomPlugin.implementedFunctions = {\r\n    'RAND': {\r\n        method: 'rand',\r\n        parameters: [],\r\n        isVolatile: true,\r\n    },\r\n    'RANDBETWEEN': {\r\n        method: 'randbetween',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        isVolatile: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport function findNextOddNumber(arg) {\r\n    const ceiled = Math.ceil(arg);\r\n    return (ceiled % 2 === 1) ? ceiled : ceiled + 1;\r\n}\r\nexport function findNextEvenNumber(arg) {\r\n    const ceiled = Math.ceil(arg);\r\n    return (ceiled % 2 === 0) ? ceiled : ceiled + 1;\r\n}\r\nexport class RoundingPlugin extends FunctionPlugin {\r\n    roundup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.ceil(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.ceil(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    rounddown(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.floor(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.floor(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    round(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUND'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.round(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.round(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    intFunc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INT'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -Math.floor(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return Math.floor(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    even(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EVEN'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -findNextEvenNumber(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return findNextEvenNumber(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    odd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ODD'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -findNextOddNumber(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return findNextOddNumber(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    ceilingmath(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING.MATH'), (value, significance, mode) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            if (mode === 1 && value < 0) {\r\n                significance = -significance;\r\n            }\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    ceiling(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING'), (value, significance) => {\r\n            if (value === 0) {\r\n                return 0;\r\n            }\r\n            if (significance === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            if ((value > 0) && (significance < 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    ceilingprecise(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING.PRECISE'), (value, significance) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    floormath(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR.MATH'), (value, significance, mode) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            if (mode === 1 && value < 0) {\r\n                significance *= -1;\r\n            }\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n    floor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR'), (value, significance) => {\r\n            if (value === 0) {\r\n                return 0;\r\n            }\r\n            if (significance === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            if ((value > 0) && (significance < 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n    floorprecise(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR.PRECISE'), (value, significance) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n}\r\nRoundingPlugin.implementedFunctions = {\r\n    'ROUNDUP': {\r\n        method: 'roundup',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'ROUNDDOWN': {\r\n        method: 'rounddown',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'ROUND': {\r\n        method: 'round',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'INT': {\r\n        method: 'intFunc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'EVEN': {\r\n        method: 'even',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'ODD': {\r\n        method: 'odd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'CEILING.MATH': {\r\n        method: 'ceilingmath',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'CEILING': {\r\n        method: 'ceiling',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'CEILING.PRECISE': {\r\n        method: 'ceilingprecise',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ],\r\n    },\r\n    'FLOOR.MATH': {\r\n        method: 'floormath',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'FLOOR': {\r\n        method: 'floor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'FLOOR.PRECISE': {\r\n        method: 'floorprecise',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ],\r\n    },\r\n};\r\nRoundingPlugin.aliases = {\r\n    'ISO.CEILING': 'CEILING.PRECISE',\r\n    'TRUNC': 'ROUNDDOWN',\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class SqrtPlugin extends FunctionPlugin {\r\n    sqrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SQRT'), Math.sqrt);\r\n    }\r\n}\r\nSqrtPlugin.implementedFunctions = {\r\n    'SQRT': {\r\n        method: 'sqrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { Condition, CriterionFunctionCompute } from '../CriterionFunctionCompute';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nclass AverageResult {\r\n    constructor(sum, count) {\r\n        this.sum = sum;\r\n        this.count = count;\r\n    }\r\n    static single(arg) {\r\n        return new AverageResult(arg, 1);\r\n    }\r\n    compose(other) {\r\n        return new AverageResult(this.sum + other.sum, this.count + other.count);\r\n    }\r\n    averageValue() {\r\n        if (this.count > 0) {\r\n            return this.sum / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nAverageResult.empty = new AverageResult(0, 0);\r\n/** Computes key for criterion function cache */\r\nfunction conditionalAggregationFunctionCacheKey(functionName) {\r\n    return (conditions) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const conditionsStrings = conditions.map((c) => `${c.conditionRange.range.sheet},${c.conditionRange.range.start.col},${c.conditionRange.range.start.row}`);\r\n        return [functionName, ...conditionsStrings].join(',');\r\n    };\r\n}\r\nfunction zeroForInfinite(value) {\r\n    if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction mapToRawScalarValue(arg) {\r\n    if (arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg);\r\n    }\r\n    return undefined;\r\n}\r\nexport class ConditionalAggregationPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to SUMIF(Range, Criterion, SumRange)\r\n     *\r\n     * Range is the range to which criterion is to be applied.\r\n     * Criterion is the criteria used to choose which cells will be included in sum.\r\n     * SumRange is the range on which adding will be performed.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sumif(ast, state) {\r\n        const functionName = 'SUMIF';\r\n        const computeFn = (conditionRange, criterion, values) => this.computeConditionalAggregationFunction(values !== null && values !== void 0 ? values : conditionRange, [conditionRange, criterion], functionName, 0, (left, right) => this.arithmeticHelper.nonstrictadd(left, right), mapToRawScalarValue);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    sumifs(ast, state) {\r\n        const functionName = 'SUMIFS';\r\n        const computeFn = (values, ...args) => this.computeConditionalAggregationFunction(values, args, functionName, 0, (left, right) => this.arithmeticHelper.nonstrictadd(left, right), mapToRawScalarValue);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    averageif(ast, state) {\r\n        const functionName = 'AVERAGEIF';\r\n        const computeFn = (conditionRange, criterion, values) => {\r\n            const averageResult = this.computeConditionalAggregationFunction(values !== null && values !== void 0 ? values : conditionRange, [conditionRange, criterion], functionName, AverageResult.empty, (left, right) => left.compose(right), (arg) => isExtendedNumber(arg) ? AverageResult.single(getRawValue(arg)) : AverageResult.empty);\r\n            if (averageResult instanceof CellError) {\r\n                return averageResult;\r\n            }\r\n            else {\r\n                return averageResult.averageValue() || new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    /**\r\n     * Corresponds to COUNTIF(Range, Criterion)\r\n     *\r\n     * Range is the range to which criterion is to be applied.\r\n     * Criterion is the criteria used to choose which cells will be included in sum.\r\n     *\r\n     * Returns number of cells on which criteria evaluate to true.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    countif(ast, state) {\r\n        const functionName = 'COUNTIF';\r\n        const computeFn = (conditionRange, criterion) => this.computeConditionalAggregationFunction(conditionRange, [conditionRange, criterion], functionName, 0, (left, right) => left + right, () => 1);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    countifs(ast, state) {\r\n        const functionName = 'COUNTIFS';\r\n        const computeFn = (...args) => this.computeConditionalAggregationFunction(args[0], args, functionName, 0, (left, right) => left + right, () => 1);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    minifs(ast, state) {\r\n        const functionName = 'MINIFS';\r\n        const composeFunction = (left, right) => {\r\n            if (right === undefined || left === undefined) {\r\n                return right === undefined ? left : right;\r\n            }\r\n            return Math.min(left, right);\r\n        };\r\n        const computeFn = (values, ...args) => {\r\n            const minResult = this.computeConditionalAggregationFunction(values, args, functionName, Number.POSITIVE_INFINITY, composeFunction, mapToRawScalarValue);\r\n            return zeroForInfinite(minResult);\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    maxifs(ast, state) {\r\n        const functionName = 'MAXIFS';\r\n        const composeFunction = (left, right) => {\r\n            if (right === undefined || left === undefined) {\r\n                return right === undefined ? left : right;\r\n            }\r\n            return Math.max(left, right);\r\n        };\r\n        const computeFn = (values, ...args) => {\r\n            const maxResult = this.computeConditionalAggregationFunction(values, args, functionName, Number.NEGATIVE_INFINITY, composeFunction, mapToRawScalarValue);\r\n            return zeroForInfinite(maxResult);\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    computeConditionalAggregationFunction(valuesRange, conditionArgs, functionName, reduceInitialValue, composeFunction, mapFunction) {\r\n        const conditions = [];\r\n        for (let i = 0; i < conditionArgs.length; i += 2) {\r\n            const conditionArg = conditionArgs[i];\r\n            const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(conditionArgs[i + 1], this.arithmeticHelper);\r\n            if (criterionPackage === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\r\n            }\r\n            conditions.push(new Condition(conditionArg, criterionPackage));\r\n        }\r\n        return new CriterionFunctionCompute(this.interpreter, conditionalAggregationFunctionCacheKey(functionName), reduceInitialValue, composeFunction, mapFunction).compute(valuesRange, conditions);\r\n    }\r\n}\r\nConditionalAggregationPlugin.implementedFunctions = {\r\n    SUMIF: {\r\n        method: 'sumif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true },\r\n        ],\r\n    },\r\n    COUNTIF: {\r\n        method: 'countif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n    },\r\n    AVERAGEIF: {\r\n        method: 'averageif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true },\r\n        ],\r\n    },\r\n    SUMIFS: {\r\n        method: 'sumifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    COUNTIFS: {\r\n        method: 'countifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    MINIFS: {\r\n        method: 'minifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    MAXIFS: {\r\n        method: 'maxifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { split } from '../generatorUtils';\r\nimport { getRawValue } from './InterpreterValue';\r\nconst findSmallerRangeForMany = (dependencyGraph, conditionRanges, valuesRange) => {\r\n    if (valuesRange.end.row > valuesRange.start.row) {\r\n        const valuesRangeEndRowLess = simpleCellAddress(valuesRange.end.sheet, valuesRange.end.col, valuesRange.end.row - 1);\r\n        const rowLessVertex = dependencyGraph.getRange(valuesRange.start, valuesRangeEndRowLess);\r\n        if (rowLessVertex !== undefined) {\r\n            return {\r\n                smallerRangeVertex: rowLessVertex,\r\n                restValuesRange: valuesRange.withStart(simpleCellAddress(valuesRange.start.sheet, valuesRange.start.col, valuesRange.end.row)),\r\n                restConditionRanges: conditionRanges.map((conditionRange) => conditionRange.withStart(simpleCellAddress(conditionRange.start.sheet, conditionRange.start.col, conditionRange.end.row))),\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        restValuesRange: valuesRange,\r\n        restConditionRanges: conditionRanges,\r\n    };\r\n};\r\nexport class CriterionFunctionCompute {\r\n    constructor(interpreter, cacheKey, reduceInitialValue, composeFunction, mapFunction) {\r\n        this.interpreter = interpreter;\r\n        this.cacheKey = cacheKey;\r\n        this.reduceInitialValue = reduceInitialValue;\r\n        this.composeFunction = composeFunction;\r\n        this.mapFunction = mapFunction;\r\n        this.dependencyGraph = this.interpreter.dependencyGraph;\r\n    }\r\n    compute(simpleValuesRange, conditions) {\r\n        for (const condition of conditions) {\r\n            if (!condition.conditionRange.sameDimensionsAs(simpleValuesRange)) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\r\n            }\r\n        }\r\n        const valuesRangeVertex = this.tryToGetRangeVertexForRangeValue(simpleValuesRange);\r\n        const conditionsVertices = conditions.map((c) => this.tryToGetRangeVertexForRangeValue(c.conditionRange));\r\n        if (valuesRangeVertex && conditionsVertices.every((e) => e !== undefined)) {\r\n            const fullCriterionString = conditions.map((c) => c.criterionPackage.raw).join(',');\r\n            const cachedResult = this.findAlreadyComputedValueInCache(valuesRangeVertex, this.cacheKey(conditions), fullCriterionString);\r\n            if (cachedResult !== undefined) {\r\n                this.interpreter.stats.incrementCriterionFunctionFullCacheUsed();\r\n                return cachedResult;\r\n            }\r\n            const cache = this.buildNewCriterionCache(this.cacheKey(conditions), conditions.map((c) => c.conditionRange.range), simpleValuesRange.range);\r\n            if (!cache.has(fullCriterionString)) {\r\n                cache.set(fullCriterionString, [\r\n                    this.evaluateRangeValue(simpleValuesRange, conditions),\r\n                    conditions.map((condition) => condition.criterionPackage.lambda),\r\n                ]);\r\n            }\r\n            valuesRangeVertex.setCriterionFunctionValues(this.cacheKey(conditions), cache);\r\n            conditionsVertices.forEach(range => {\r\n                if (range !== undefined) {\r\n                    range.addDependentCacheRange(valuesRangeVertex);\r\n                }\r\n            });\r\n            return cache.get(fullCriterionString)[0];\r\n        }\r\n        else {\r\n            return this.evaluateRangeValue(simpleValuesRange, conditions);\r\n        }\r\n    }\r\n    tryToGetRangeVertexForRangeValue(rangeValue) {\r\n        const maybeRange = rangeValue.range;\r\n        if (maybeRange === undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this.dependencyGraph.getRange(maybeRange.start, maybeRange.end);\r\n        }\r\n    }\r\n    reduceFunction(iterable) {\r\n        let acc = this.reduceInitialValue;\r\n        for (const val of iterable) {\r\n            acc = this.composeFunction(acc, val);\r\n        }\r\n        return acc;\r\n    }\r\n    findAlreadyComputedValueInCache(rangeVertex, cacheKey, criterionString) {\r\n        return rangeVertex.getCriterionFunctionValue(cacheKey, criterionString);\r\n    }\r\n    evaluateRangeValue(simpleValuesRange, conditions) {\r\n        const criterionLambdas = conditions.map((condition) => condition.criterionPackage.lambda);\r\n        const values = Array.from(simpleValuesRange.valuesFromTopLeftCorner()).map(this.mapFunction)[Symbol.iterator]();\r\n        const conditionsIterators = conditions.map((condition) => condition.conditionRange.iterateValuesFromTopLeftCorner());\r\n        const filteredValues = ifFilter(criterionLambdas, conditionsIterators, values);\r\n        return this.reduceFunction(filteredValues);\r\n    }\r\n    buildNewCriterionCache(cacheKey, simpleConditionRanges, simpleValuesRange) {\r\n        const currentRangeVertex = this.dependencyGraph.getRange(simpleValuesRange.start, simpleValuesRange.end);\r\n        const { smallerRangeVertex, restConditionRanges, restValuesRange } = findSmallerRangeForMany(this.dependencyGraph, simpleConditionRanges, simpleValuesRange);\r\n        let smallerCache;\r\n        if (smallerRangeVertex !== undefined && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\r\n            smallerCache = smallerRangeVertex.getCriterionFunctionValues(cacheKey);\r\n        }\r\n        else {\r\n            smallerCache = new Map();\r\n        }\r\n        const newCache = new Map();\r\n        smallerCache.forEach(([value, criterionLambdas], key) => {\r\n            const filteredValues = ifFilter(criterionLambdas, restConditionRanges.map((rcr) => getRangeValues(this.dependencyGraph, rcr)), Array.from(getRangeValues(this.dependencyGraph, restValuesRange)).map(this.mapFunction)[Symbol.iterator]());\r\n            const newCacheValue = this.composeFunction(value, this.reduceFunction(filteredValues));\r\n            this.interpreter.stats.incrementCriterionFunctionPartialCacheUsed();\r\n            newCache.set(key, [newCacheValue, criterionLambdas]);\r\n        });\r\n        return newCache;\r\n    }\r\n}\r\nexport class Condition {\r\n    constructor(conditionRange, criterionPackage) {\r\n        this.conditionRange = conditionRange;\r\n        this.criterionPackage = criterionPackage;\r\n    }\r\n}\r\nfunction* getRangeValues(dependencyGraph, cellRange) {\r\n    for (const cellFromRange of cellRange.addresses(dependencyGraph)) {\r\n        yield getRawValue(dependencyGraph.getScalarValue(cellFromRange));\r\n    }\r\n}\r\nfunction* ifFilter(criterionLambdas, conditionalIterables, computableIterable) {\r\n    for (const computable of computableIterable) {\r\n        const conditionalSplits = conditionalIterables.map((conditionalIterable) => split(conditionalIterable));\r\n        if (!conditionalSplits.every((cs) => Object.prototype.hasOwnProperty.call(cs, 'value'))) {\r\n            return;\r\n        }\r\n        const conditionalFirsts = conditionalSplits.map((cs) => getRawValue(cs.value));\r\n        if (zip(conditionalFirsts, criterionLambdas).every(([conditionalFirst, criterionLambda]) => criterionLambda(conditionalFirst))) {\r\n            yield computable;\r\n        }\r\n        conditionalIterables = conditionalSplits.map((cs) => cs.rest);\r\n    }\r\n}\r\nfunction zip(arr1, arr2) {\r\n    const result = [];\r\n    for (let i = 0; i < Math.min(arr1.length, arr2.length); i++) {\r\n        result.push([arr1[i], arr2[i]]);\r\n    }\r\n    return result;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function* empty() {\r\n}\r\nexport function split(iterable) {\r\n    const iterator = iterable[Symbol.iterator]();\r\n    const { done, value } = iterator.next();\r\n    if (done) {\r\n        return { rest: empty() };\r\n    }\r\n    else {\r\n        return { value, rest: iterator };\r\n    }\r\n}\r\nexport function first(iterable) {\r\n    const iterator = iterable[Symbol.iterator]();\r\n    const { done, value } = iterator.next();\r\n    if (!done) {\r\n        return value;\r\n    }\r\n    return undefined;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class SumprodPlugin extends FunctionPlugin {\r\n    sumproduct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMPRODUCT'), (...args) => {\r\n            const width = args[0].width();\r\n            const height = args[0].height();\r\n            for (const arg of args) {\r\n                if (arg.width() !== width || arg.height() !== height) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\r\n                }\r\n            }\r\n            let ret = 0;\r\n            const iterators = args.map(arg => arg.iterateValuesFromTopLeftCorner());\r\n            for (let i = 0; i < width * height; i++) {\r\n                let acc = 1;\r\n                for (const it of iterators) {\r\n                    const val = it.next().value;\r\n                    if (val instanceof CellError) {\r\n                        return val;\r\n                    }\r\n                    const coercedVal = this.coerceScalarToNumberOrError(val);\r\n                    if (isExtendedNumber(coercedVal)) {\r\n                        acc *= getRawValue(coercedVal);\r\n                    }\r\n                    else {\r\n                        acc = 0;\r\n                    }\r\n                }\r\n                ret += acc;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nSumprodPlugin.implementedFunctions = {\r\n    'SUMPRODUCT': {\r\n        method: 'sumproduct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing text-specific functions\r\n */\r\nexport class TextPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to CONCATENATE(value1, [value2, ...])\r\n     *\r\n     * Concatenates provided arguments to one string.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    concatenate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONCATENATE'), (...args) => {\r\n            return ''.concat(...args);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to SPLIT(string, index)\r\n     *\r\n     * Splits provided string using space separator and returns chunk at zero-based position specified by second argument\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    split(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SPLIT'), (stringToSplit, indexToUse) => {\r\n            const splittedString = stringToSplit.split(' ');\r\n            if (indexToUse >= splittedString.length || indexToUse < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\r\n            }\r\n            return splittedString[indexToUse];\r\n        });\r\n    }\r\n    len(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LEN'), (arg) => {\r\n            return arg.length;\r\n        });\r\n    }\r\n    lower(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOWER'), (arg) => {\r\n            return arg.toLowerCase();\r\n        });\r\n    }\r\n    trim(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRIM'), (arg) => {\r\n            return arg.replace(/^ +| +$/g, '').replace(/ +/g, ' ');\r\n        });\r\n    }\r\n    proper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PROPER'), (arg) => {\r\n            return arg.replace(/\\p{L}+/gu, word => word.charAt(0).toUpperCase() + word.substring(1).toLowerCase());\r\n        });\r\n    }\r\n    clean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CLEAN'), (arg) => {\r\n            // eslint-disable-next-line no-control-regex\r\n            return arg.replace(/[\\u0000-\\u001F]/g, '');\r\n        });\r\n    }\r\n    exact(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXACT'), (left, right) => {\r\n            return left === right;\r\n        });\r\n    }\r\n    rept(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('REPT'), (text, count) => {\r\n            if (count < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeCount);\r\n            }\r\n            return text.repeat(count);\r\n        });\r\n    }\r\n    right(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RIGHT'), (text, length) => {\r\n            if (length < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            else if (length === 0) {\r\n                return '';\r\n            }\r\n            return text.slice(-length);\r\n        });\r\n    }\r\n    left(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LEFT'), (text, length) => {\r\n            if (length < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.slice(0, length);\r\n        });\r\n    }\r\n    mid(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MID'), (text, startPosition, numberOfChars) => {\r\n            if (startPosition < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (numberOfChars < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.substring(startPosition - 1, startPosition + numberOfChars - 1);\r\n        });\r\n    }\r\n    replace(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('REPLACE'), (text, startPosition, numberOfChars, newText) => {\r\n            if (startPosition < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (numberOfChars < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.substring(0, startPosition - 1) + newText + text.substring(startPosition + numberOfChars - 1);\r\n        });\r\n    }\r\n    search(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SEARCH'), (pattern, text, startIndex) => {\r\n            if (startIndex < 1 || startIndex > text.length) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LengthBounds);\r\n            }\r\n            const normalizedText = text.substring(startIndex - 1).toLowerCase();\r\n            let index;\r\n            if (this.arithmeticHelper.requiresRegex(pattern)) {\r\n                index = this.arithmeticHelper.searchString(pattern, normalizedText);\r\n            }\r\n            else {\r\n                index = normalizedText.indexOf(pattern.toLowerCase());\r\n            }\r\n            index = index + startIndex;\r\n            return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\r\n        });\r\n    }\r\n    substitute(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUBSTITUTE'), (text, oldText, newText, occurrence) => {\r\n            const oldTextRegexp = new RegExp(oldText, 'g');\r\n            if (occurrence === undefined) {\r\n                return text.replace(oldTextRegexp, newText);\r\n            }\r\n            if (occurrence < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            let match;\r\n            let i = 0;\r\n            while ((match = oldTextRegexp.exec(text)) !== null) {\r\n                if (occurrence === ++i) {\r\n                    return text.substring(0, match.index) + newText + text.substring(oldTextRegexp.lastIndex);\r\n                }\r\n            }\r\n            return text;\r\n        });\r\n    }\r\n    find(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FIND'), (pattern, text, startIndex) => {\r\n            if (startIndex < 1 || startIndex > text.length) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\r\n            }\r\n            const shiftedText = text.substring(startIndex - 1);\r\n            const index = shiftedText.indexOf(pattern) + startIndex;\r\n            return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\r\n        });\r\n    }\r\n    t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T'), (arg) => {\r\n            if (arg instanceof CellError) {\r\n                return arg;\r\n            }\r\n            return typeof arg === 'string' ? arg : '';\r\n        });\r\n    }\r\n    upper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('UPPER'), (arg) => {\r\n            return arg.toUpperCase();\r\n        });\r\n    }\r\n}\r\nTextPlugin.implementedFunctions = {\r\n    'CONCATENATE': {\r\n        method: 'concatenate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'EXACT': {\r\n        method: 'exact',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'SPLIT': {\r\n        method: 'split',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'LEN': {\r\n        method: 'len',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'LOWER': {\r\n        method: 'lower',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'MID': {\r\n        method: 'mid',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'TRIM': {\r\n        method: 'trim',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'T': {\r\n        method: 't',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'PROPER': {\r\n        method: 'proper',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'CLEAN': {\r\n        method: 'clean',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'REPT': {\r\n        method: 'rept',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'RIGHT': {\r\n        method: 'right',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'LEFT': {\r\n        method: 'left',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'REPLACE': {\r\n        method: 'replace',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'SEARCH': {\r\n        method: 'search',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'SUBSTITUTE': {\r\n        method: 'substitute',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true }\r\n        ]\r\n    },\r\n    'FIND': {\r\n        method: 'find',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'UPPER': {\r\n        method: 'upper',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nimport { PI } from './MathConstantsPlugin';\r\n/**\r\n * Interpreter plugin containing trigonometric functions\r\n */\r\nexport class TrigonometryPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to ACOS(value)\r\n     *\r\n     * Returns the arc cosine (or inverse cosine) of a number.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    acos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOS'), Math.acos);\r\n    }\r\n    asin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ASIN'), Math.asin);\r\n    }\r\n    cos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COS'), Math.cos);\r\n    }\r\n    sin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SIN'), Math.sin);\r\n    }\r\n    tan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TAN'), Math.tan);\r\n    }\r\n    atan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATAN'), Math.atan);\r\n    }\r\n    atan2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATAN2'), (x, y) => {\r\n            if (x === 0 && y === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.atan2(y, x);\r\n        });\r\n    }\r\n    cot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COT'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tan(arg)));\r\n    }\r\n    acot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOT'), (arg) => (arg === 0) ? PI / 2 : Math.atan(1 / arg));\r\n    }\r\n    sec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SEC'), (arg) => 1 / Math.cos(arg));\r\n    }\r\n    csc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CSC'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sin(arg)));\r\n    }\r\n    sinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SINH'), Math.sinh);\r\n    }\r\n    asinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ASINH'), Math.asinh);\r\n    }\r\n    cosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COSH'), Math.cosh);\r\n    }\r\n    acosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOSH'), Math.acosh);\r\n    }\r\n    tanh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TANH'), Math.tanh);\r\n    }\r\n    atanh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATANH'), Math.atanh);\r\n    }\r\n    coth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COTH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tanh(arg)));\r\n    }\r\n    acoth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOTH'), (arg) => (arg === 0) ? new CellError(ErrorType.NUM, ErrorMessage.NonZero) : Math.atanh(1 / arg));\r\n    }\r\n    sech(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SECH'), (arg) => 1 / Math.cosh(arg));\r\n    }\r\n    csch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CSCH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sinh(arg)));\r\n    }\r\n}\r\nTrigonometryPlugin.implementedFunctions = {\r\n    'ACOS': {\r\n        method: 'acos',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ASIN': {\r\n        method: 'asin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'COS': {\r\n        method: 'cos',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SIN': {\r\n        method: 'sin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'TAN': {\r\n        method: 'tan',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ATAN': {\r\n        method: 'atan',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ATAN2': {\r\n        method: 'atan2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'COT': {\r\n        method: 'cot',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SEC': {\r\n        method: 'sec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'CSC': {\r\n        method: 'csc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SINH': {\r\n        method: 'sinh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'COSH': {\r\n        method: 'cosh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'TANH': {\r\n        method: 'tanh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'COTH': {\r\n        method: 'coth',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SECH': {\r\n        method: 'sech',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'CSCH': {\r\n        method: 'csch',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ACOT': {\r\n        method: 'acot',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ASINH': {\r\n        method: 'asinh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ACOSH': {\r\n        method: 'acosh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ATANH': {\r\n        method: 'atanh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ACOTH': {\r\n        method: 'acoth',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { RowSearchStrategy } from '../../Lookup/RowSearchStrategy';\r\nimport { StatType } from '../../statistics';\r\nimport { zeroIfEmpty } from '../ArithmeticHelper';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class LookupPlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.rowSearch = new RowSearchStrategy(this.config, this.dependencyGraph);\r\n    }\r\n    /**\r\n     * Corresponds to VLOOKUP(key, range, index, [sorted])\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    vlookup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('VLOOKUP'), (key, rangeValue, index, sorted) => {\r\n            const range = rangeValue.range;\r\n            if (range === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n            if (index < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (index > range.width()) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\r\n            }\r\n            return this.doVlookup(zeroIfEmpty(key), rangeValue, index - 1, sorted);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to HLOOKUP(key, range, index, [sorted])\r\n     *\r\n     * @param ast\r\n     * @param formulaAddress\r\n     */\r\n    hlookup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HLOOKUP'), (key, rangeValue, index, sorted) => {\r\n            const range = rangeValue.range;\r\n            if (range === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n            if (index < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (index > range.height()) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\r\n            }\r\n            return this.doHlookup(zeroIfEmpty(key), rangeValue, index - 1, sorted);\r\n        });\r\n    }\r\n    match(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MATCH'), (key, rangeValue, sorted) => {\r\n            return this.doMatch(zeroIfEmpty(key), rangeValue, sorted);\r\n        });\r\n    }\r\n    searchInRange(key, range, sorted, searchStrategy) {\r\n        if (!sorted && typeof key === 'string' && this.arithmeticHelper.requiresRegex(key)) {\r\n            return searchStrategy.advancedFind(this.arithmeticHelper.eqMatcherFunction(key), range);\r\n        }\r\n        else {\r\n            return searchStrategy.find(key, range, sorted);\r\n        }\r\n    }\r\n    doVlookup(key, rangeValue, index, sorted) {\r\n        this.dependencyGraph.stats.start(StatType.VLOOKUP);\r\n        const range = rangeValue.range;\r\n        let searchedRange;\r\n        if (range === undefined) {\r\n            searchedRange = SimpleRangeValue.onlyValues(rangeValue.data.map((arg) => [arg[0]]));\r\n        }\r\n        else {\r\n            searchedRange = SimpleRangeValue.onlyRange(AbsoluteCellRange.spanFrom(range.start, 1, range.height()), this.dependencyGraph);\r\n        }\r\n        const rowIndex = this.searchInRange(key, searchedRange, sorted, this.columnSearch);\r\n        this.dependencyGraph.stats.end(StatType.VLOOKUP);\r\n        if (rowIndex === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        let value;\r\n        if (range === undefined) {\r\n            value = rangeValue.data[rowIndex][index];\r\n        }\r\n        else {\r\n            const address = simpleCellAddress(range.sheet, range.start.col + index, range.start.row + rowIndex);\r\n            value = this.dependencyGraph.getCellValue(address);\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n        }\r\n        return value;\r\n    }\r\n    doHlookup(key, rangeValue, index, sorted) {\r\n        const range = rangeValue.range;\r\n        let searchedRange;\r\n        if (range === undefined) {\r\n            searchedRange = SimpleRangeValue.onlyValues([rangeValue.data[0]]);\r\n        }\r\n        else {\r\n            searchedRange = SimpleRangeValue.onlyRange(AbsoluteCellRange.spanFrom(range.start, range.width(), 1), this.dependencyGraph);\r\n        }\r\n        const colIndex = this.searchInRange(key, searchedRange, sorted, this.rowSearch);\r\n        if (colIndex === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        let value;\r\n        if (range === undefined) {\r\n            value = rangeValue.data[index][colIndex];\r\n        }\r\n        else {\r\n            const address = simpleCellAddress(range.sheet, range.start.col + colIndex, range.start.row + index);\r\n            value = this.dependencyGraph.getCellValue(address);\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n        }\r\n        return value;\r\n    }\r\n    doMatch(key, rangeValue, sorted) {\r\n        if (rangeValue.width() > 1 && rangeValue.height() > 1) {\r\n            return new CellError(ErrorType.NA);\r\n        }\r\n        if (rangeValue.width() === 1) {\r\n            const index = this.columnSearch.find(key, rangeValue, sorted !== 0);\r\n            if (index === -1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n            }\r\n            return index + 1;\r\n        }\r\n        else {\r\n            const index = this.rowSearch.find(key, rangeValue, sorted !== 0);\r\n            if (index === -1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n            }\r\n            return index + 1;\r\n        }\r\n    }\r\n}\r\nLookupPlugin.implementedFunctions = {\r\n    'VLOOKUP': {\r\n        method: 'vlookup',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: true },\r\n        ]\r\n    },\r\n    'HLOOKUP': {\r\n        method: 'hlookup',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: true },\r\n        ]\r\n    },\r\n    'MATCH': {\r\n        method: 'match',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\r\nimport { rangeLowerBound } from '../interpreter/binarySearch';\r\nimport { getRawValue } from '../interpreter/InterpreterValue';\r\nimport { AdvancedFind } from './AdvancedFind';\r\nexport class RowSearchStrategy extends AdvancedFind {\r\n    constructor(config, dependencyGraph) {\r\n        super(dependencyGraph);\r\n        this.config = config;\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    find(key, rangeValue, sorted) {\r\n        if (typeof key === 'string') {\r\n            key = forceNormalizeString(key);\r\n        }\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            return rangeValue.valuesFromTopLeftCorner().map(getRawValue).indexOf(key);\r\n        }\r\n        else if (!sorted) {\r\n            return this.dependencyGraph.computeListOfValuesInRange(range).findIndex(arg => {\r\n                arg = getRawValue(arg);\r\n                arg = (typeof arg === 'string') ? forceNormalizeString(arg) : arg;\r\n                return arg === key;\r\n            });\r\n        }\r\n        else {\r\n            return rangeLowerBound(range, key, this.dependencyGraph, 'col');\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class RomanPlugin extends FunctionPlugin {\r\n    roman(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROMAN'), (val, mode) => {\r\n            val = Math.trunc(val);\r\n            if (mode === false) {\r\n                mode = 4;\r\n            }\r\n            else if (mode === true) {\r\n                mode = 0;\r\n            }\r\n            mode = getRawValue(this.coerceScalarToNumberOrError(mode));\r\n            if (mode instanceof CellError) {\r\n                return mode;\r\n            }\r\n            mode = Math.trunc(mode);\r\n            if (mode < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueSmall);\r\n            }\r\n            if (mode > 4) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueLarge);\r\n            }\r\n            return romanMode(val, mode);\r\n        });\r\n    }\r\n    arabic(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARABIC'), (inputString) => {\r\n            inputString = inputString.trim().toUpperCase();\r\n            let minusSign = false;\r\n            if (inputString.startsWith('-')) {\r\n                inputString = inputString.slice(1);\r\n                minusSign = true;\r\n                if (inputString === '') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\r\n                }\r\n            }\r\n            const work = { input: inputString, acc: 0 };\r\n            eatToken(work, { token: 'MMM', val: 3000 }, { token: 'MM', val: 2000 }, { token: 'M', val: 1000 });\r\n            eatToken(work, { token: 'IM', val: 999 }, { token: 'VM', val: 995 }, { token: 'XM', val: 990 }, { token: 'LM', val: 950 }, { token: 'CM', val: 900 });\r\n            eatToken(work, { token: 'D', val: 500 }, { token: 'ID', val: 499 }, { token: 'VD', val: 495 }, { token: 'XD', val: 490 }, { token: 'LD', val: 450 }, { token: 'CD', val: 400 });\r\n            eatToken(work, { token: 'CCC', val: 300 }, { token: 'CC', val: 200 }, { token: 'C', val: 100 });\r\n            eatToken(work, { token: 'IC', val: 99 }, { token: 'VC', val: 95 }, { token: 'XC', val: 90 });\r\n            eatToken(work, { token: 'L', val: 50 }, { token: 'IL', val: 49 }, { token: 'VL', val: 45 }, { token: 'XL', val: 40 });\r\n            eatToken(work, { token: 'XXX', val: 30 }, { token: 'XX', val: 20 }, { token: 'X', val: 10 });\r\n            eatToken(work, { token: 'IX', val: 9 });\r\n            eatToken(work, { token: 'V', val: 5 }, { token: 'IV', val: 4 });\r\n            eatToken(work, { token: 'III', val: 3 }, { token: 'II', val: 2 }, { token: 'I', val: 1 });\r\n            if (work.input !== '') {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\r\n            }\r\n            else {\r\n                return minusSign ? -work.acc : work.acc;\r\n            }\r\n        });\r\n    }\r\n}\r\nRomanPlugin.implementedFunctions = {\r\n    'ROMAN': {\r\n        method: 'roman',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, lessThan: 4000 },\r\n            { argumentType: ArgumentTypes.NOERROR, optionalArg: true, defaultValue: 0 }\r\n        ],\r\n    },\r\n    'ARABIC': {\r\n        method: 'arabic',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n    },\r\n};\r\nfunction eatToken(inputAcc, ...tokens) {\r\n    for (const token of tokens) {\r\n        if (inputAcc.input.startsWith(token.token)) {\r\n            inputAcc.input = inputAcc.input.slice(token.token.length);\r\n            inputAcc.acc += token.val;\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction romanMode(input, mode) {\r\n    const work = { val: input % 1000, acc: 'M'.repeat(Math.floor(input / 1000)) };\r\n    if (mode === 4) {\r\n        absorb(work, 'IM', 999, 1000);\r\n        absorb(work, 'ID', 499, 500);\r\n    }\r\n    if (mode >= 3) {\r\n        absorb(work, 'VM', 995, 1000);\r\n        absorb(work, 'VD', 495, 500);\r\n    }\r\n    if (mode >= 2) {\r\n        absorb(work, 'XM', 990, 1000);\r\n        absorb(work, 'XD', 490, 500);\r\n    }\r\n    if (mode >= 1) {\r\n        absorb(work, 'LM', 950, 1000);\r\n        absorb(work, 'LD', 450, 500);\r\n    }\r\n    absorb(work, 'CM', 900, 1000);\r\n    absorb(work, 'CD', 400, 500);\r\n    absorb(work, 'D', 500, 900);\r\n    work.acc += 'C'.repeat(Math.floor(work.val / 100));\r\n    work.val %= 100;\r\n    if (mode >= 2) {\r\n        absorb(work, 'IC', 99, 100);\r\n        absorb(work, 'IL', 49, 50);\r\n    }\r\n    if (mode >= 1) {\r\n        absorb(work, 'VC', 95, 100);\r\n        absorb(work, 'VL', 45, 50);\r\n    }\r\n    absorb(work, 'XC', 90, 100);\r\n    absorb(work, 'XL', 40, 50);\r\n    absorb(work, 'L', 50, 90);\r\n    work.acc += 'X'.repeat(Math.floor(work.val / 10));\r\n    work.val %= 10;\r\n    absorb(work, 'IX', 9, 10);\r\n    absorb(work, 'IV', 4, 5);\r\n    absorb(work, 'V', 5, 9);\r\n    work.acc += 'I'.repeat(work.val);\r\n    return work.acc;\r\n}\r\nfunction absorb(valAcc, token, lower, upper) {\r\n    if (valAcc.val >= lower && valAcc.val < upper) {\r\n        valAcc.val -= lower;\r\n        valAcc.acc += token;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class SimpleArithmerticPlugin extends FunctionPlugin {\r\n    add(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.ADD'), this.arithmeticHelper.addWithEpsilon);\r\n    }\r\n    concat(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.CONCAT'), this.arithmeticHelper.concat);\r\n    }\r\n    divide(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.DIVIDE'), this.arithmeticHelper.divide);\r\n    }\r\n    eq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.EQ'), this.arithmeticHelper.eq);\r\n    }\r\n    gt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.GT'), this.arithmeticHelper.gt);\r\n    }\r\n    gte(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.GTE'), this.arithmeticHelper.geq);\r\n    }\r\n    lt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.LT'), this.arithmeticHelper.lt);\r\n    }\r\n    lte(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.LTE'), this.arithmeticHelper.leq);\r\n    }\r\n    minus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.MINUS'), this.arithmeticHelper.subtract);\r\n    }\r\n    multiply(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.MULTIPLY'), this.arithmeticHelper.multiply);\r\n    }\r\n    ne(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.NE'), this.arithmeticHelper.neq);\r\n    }\r\n    pow(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.POW'), this.arithmeticHelper.pow);\r\n    }\r\n    uminus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UMINUS'), this.arithmeticHelper.unaryMinus);\r\n    }\r\n    upercent(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UNARY_PERCENT'), this.arithmeticHelper.unaryPercent);\r\n    }\r\n    uplus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UPLUS'), this.arithmeticHelper.unaryPlus);\r\n    }\r\n}\r\nSimpleArithmerticPlugin.implementedFunctions = {\r\n    'HF.ADD': {\r\n        method: 'add',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.CONCAT': {\r\n        method: 'concat',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING, passSubtype: true },\r\n            { argumentType: ArgumentTypes.STRING, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.DIVIDE': {\r\n        method: 'divide',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.EQ': {\r\n        method: 'eq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.GT': {\r\n        method: 'gt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.GTE': {\r\n        method: 'gte',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.LT': {\r\n        method: 'lt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.LTE': {\r\n        method: 'lte',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.MINUS': {\r\n        method: 'minus',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.MULTIPLY': {\r\n        method: 'multiply',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.NE': {\r\n        method: 'ne',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.POW': {\r\n        method: 'pow',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UMINUS': {\r\n        method: 'uminus',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UNARY_PERCENT': {\r\n        method: 'upercent',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UPLUS': {\r\n        method: 'uplus',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { besseli, besselj, besselk, bessely } from './3rdparty/bessel/bessel';\r\nimport { beta, binomial, centralF, chisquare, erf, erfc, exponential, gamma, gammafn, gammaln, hypgeom, lognormal, negbin, normal, normalci, poisson, studentt, tci, weibull } from './3rdparty/jstat/jstat';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class StatisticalPlugin extends FunctionPlugin {\r\n    erf(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ERF'), (lowerBound, upperBound) => {\r\n            if (upperBound === undefined) {\r\n                return erf(lowerBound);\r\n            }\r\n            else {\r\n                return erf(upperBound) - erf(lowerBound);\r\n            }\r\n        });\r\n    }\r\n    erfc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ERFC'), erfc);\r\n    }\r\n    expondist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXPON.DIST'), (x, lambda, cumulative) => {\r\n            if (cumulative) {\r\n                return exponential.cdf(x, lambda);\r\n            }\r\n            else {\r\n                return exponential.pdf(x, lambda);\r\n            }\r\n        });\r\n    }\r\n    fisher(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FISHER'), (x) => Math.log((1 + x) / (1 - x)) / 2);\r\n    }\r\n    fisherinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FISHERINV'), (y) => 1 - 2 / (Math.exp(2 * y) + 1));\r\n    }\r\n    gamma(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA'), gammafn);\r\n    }\r\n    gammadist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA.DIST'), (value, alphaVal, betaVal, cumulative) => {\r\n            if (cumulative) {\r\n                return gamma.cdf(value, alphaVal, betaVal);\r\n            }\r\n            else {\r\n                return gamma.pdf(value, alphaVal, betaVal);\r\n            }\r\n        });\r\n    }\r\n    gammaln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMALN'), gammaln);\r\n    }\r\n    gammainv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA.INV'), gamma.inv);\r\n    }\r\n    gauss(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAUSS'), (z) => normal.cdf(z, 0, 1) - 0.5);\r\n    }\r\n    betadist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BETA.DIST'), (x, alphaVal, betaVal, cumulative, A, B) => {\r\n            if (x <= A) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n            }\r\n            else if (x >= B) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            x = (x - A) / (B - A);\r\n            if (cumulative) {\r\n                return beta.cdf(x, alphaVal, betaVal);\r\n            }\r\n            else {\r\n                return beta.pdf(x, alphaVal, betaVal);\r\n            }\r\n        });\r\n    }\r\n    betainv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BETA.INV'), (x, alphaVal, betaVal, A, B) => {\r\n            if (A >= B) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            else {\r\n                return beta.inv(x, alphaVal, betaVal) * (B - A) + A;\r\n            }\r\n        });\r\n    }\r\n    binomialdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BINOM.DIST'), (succ, trials, prob, cumulative) => {\r\n            if (succ > trials) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            succ = Math.trunc(succ);\r\n            trials = Math.trunc(trials);\r\n            if (cumulative) {\r\n                return binomial.cdf(succ, trials, prob);\r\n            }\r\n            else {\r\n                return binomial.pdf(succ, trials, prob);\r\n            }\r\n        });\r\n    }\r\n    binomialinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BINOM.INV'), (trials, prob, alpha) => {\r\n            trials = Math.trunc(trials);\r\n            let lower = -1;\r\n            let upper = trials;\r\n            while (upper > lower + 1) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (binomial.cdf(mid, trials, prob) >= alpha) {\r\n                    upper = mid;\r\n                }\r\n                else {\r\n                    lower = mid;\r\n                }\r\n            }\r\n            return upper;\r\n        });\r\n    }\r\n    besselifn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELI'), (x, n) => besseli(x, Math.trunc(n)));\r\n    }\r\n    besseljfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELJ'), (x, n) => besselj(x, Math.trunc(n)));\r\n    }\r\n    besselkfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELK'), (x, n) => besselk(x, Math.trunc(n)));\r\n    }\r\n    besselyfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELY'), (x, n) => bessely(x, Math.trunc(n)));\r\n    }\r\n    chisqdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST'), (x, deg, cumulative) => {\r\n            deg = Math.trunc(deg);\r\n            if (cumulative) {\r\n                return chisquare.cdf(x, deg);\r\n            }\r\n            else {\r\n                return chisquare.pdf(x, deg);\r\n            }\r\n        });\r\n    }\r\n    chisqdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST.RT'), (x, deg) => 1 - chisquare.cdf(x, Math.trunc(deg)));\r\n    }\r\n    chisqinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.INV'), (p, deg) => chisquare.inv(p, Math.trunc(deg)));\r\n    }\r\n    chisqinvrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.INV.RT'), (p, deg) => chisquare.inv(1.0 - p, Math.trunc(deg)));\r\n    }\r\n    fdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.DIST'), (x, deg1, deg2, cumulative) => {\r\n            deg1 = Math.trunc(deg1);\r\n            deg2 = Math.trunc(deg2);\r\n            if (cumulative) {\r\n                return centralF.cdf(x, deg1, deg2);\r\n            }\r\n            else {\r\n                return centralF.pdf(x, deg1, deg2);\r\n            }\r\n        });\r\n    }\r\n    fdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.DIST.RT'), (x, deg1, deg2) => 1 - centralF.cdf(x, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    finv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.INV'), (p, deg1, deg2) => centralF.inv(p, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    finvrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.INV.RT'), (p, deg1, deg2) => centralF.inv(1.0 - p, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    weibulldist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEIBULL.DIST'), (x, shape, scale, cumulative) => {\r\n            if (cumulative) {\r\n                return weibull.cdf(x, scale, shape);\r\n            }\r\n            else {\r\n                return weibull.pdf(x, scale, shape);\r\n            }\r\n        });\r\n    }\r\n    poissondist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('POISSON.DIST'), (x, mean, cumulative) => {\r\n            x = Math.trunc(x);\r\n            if (cumulative) {\r\n                return poisson.cdf(x, mean);\r\n            }\r\n            else {\r\n                return poisson.pdf(x, mean);\r\n            }\r\n        });\r\n    }\r\n    hypgeomdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HYPGEOM.DIST'), (s, numberS, populationS, numberPop, cumulative) => {\r\n            if (s > numberS || s > populationS || numberS > numberPop || populationS > numberPop) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            if (s + numberPop < populationS + numberS) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            s = Math.trunc(s);\r\n            numberS = Math.trunc(numberS);\r\n            populationS = Math.trunc(populationS);\r\n            numberPop = Math.trunc(numberPop);\r\n            if (cumulative) {\r\n                return hypgeom.cdf(s, numberPop, populationS, numberS);\r\n            }\r\n            else {\r\n                return hypgeom.pdf(s, numberPop, populationS, numberS);\r\n            }\r\n        });\r\n    }\r\n    tdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST'), (x, deg, cumulative) => {\r\n            deg = Math.trunc(deg);\r\n            if (cumulative) {\r\n                return studentt.cdf(x, deg);\r\n            }\r\n            else {\r\n                return studentt.pdf(x, deg);\r\n            }\r\n        });\r\n    }\r\n    tdist2t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST.2T'), (x, deg) => (1 - studentt.cdf(x, Math.trunc(deg))) * 2);\r\n    }\r\n    tdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST.RT'), (x, deg) => 1 - studentt.cdf(x, Math.trunc(deg)));\r\n    }\r\n    tdistold(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TDIST'), (x, deg, mode) => mode * (1 - studentt.cdf(x, Math.trunc(deg))));\r\n    }\r\n    tinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.INV'), (p, deg) => studentt.inv(p, Math.trunc(deg)));\r\n    }\r\n    tinv2t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.INV.2T'), (p, deg) => studentt.inv(1 - p / 2, Math.trunc(deg)));\r\n    }\r\n    lognormdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOGNORM.DIST'), (x, mean, stddev, cumulative) => {\r\n            if (cumulative) {\r\n                return lognormal.cdf(x, mean, stddev);\r\n            }\r\n            else {\r\n                return lognormal.pdf(x, mean, stddev);\r\n            }\r\n        });\r\n    }\r\n    lognorminv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOGNORM.INV'), (p, mean, stddev) => lognormal.inv(p, mean, stddev));\r\n    }\r\n    normdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.DIST'), (x, mean, stddev, cumulative) => {\r\n            if (cumulative) {\r\n                return normal.cdf(x, mean, stddev);\r\n            }\r\n            else {\r\n                return normal.pdf(x, mean, stddev);\r\n            }\r\n        });\r\n    }\r\n    norminv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.INV'), (p, mean, stddev) => normal.inv(p, mean, stddev));\r\n    }\r\n    normsdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.S.DIST'), (x, cumulative) => {\r\n            if (cumulative) {\r\n                return normal.cdf(x, 0, 1);\r\n            }\r\n            else {\r\n                return normal.pdf(x, 0, 1);\r\n            }\r\n        });\r\n    }\r\n    normsinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.S.INV'), (p) => normal.inv(p, 0, 1));\r\n    }\r\n    phi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PHI'), (x) => normal.pdf(x, 0, 1));\r\n    }\r\n    negbinomdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NEGBINOM.DIST'), (nf, ns, p, cumulative) => {\r\n            nf = Math.trunc(nf);\r\n            ns = Math.trunc(ns);\r\n            if (cumulative) {\r\n                return negbin.cdf(nf, ns, p);\r\n            }\r\n            else {\r\n                return negbin.pdf(nf, ns, p);\r\n            }\r\n        });\r\n    }\r\n    confidencenorm(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.NORM'), \r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        (alpha, stddev, size) => normalci(1, alpha, stddev, Math.trunc(size))[1] - 1);\r\n    }\r\n    confidencet(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.T'), (alpha, stddev, size) => {\r\n            size = Math.trunc(size);\r\n            if (size === 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            return tci(1, alpha, stddev, size)[1] - 1;\r\n        });\r\n    }\r\n    standardize(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('STANDARDIZE'), (x, mean, stddev) => (x - mean) / stddev);\r\n    }\r\n}\r\nStatisticalPlugin.implementedFunctions = {\r\n    'ERF': {\r\n        method: 'erf',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ]\r\n    },\r\n    'ERFC': {\r\n        method: 'erfc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'EXPON.DIST': {\r\n        method: 'expondist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'FISHER': {\r\n        method: 'fisher',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: -1, lessThan: 1 }\r\n        ]\r\n    },\r\n    'FISHERINV': {\r\n        method: 'fisherinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'GAMMA': {\r\n        method: 'gamma',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'GAMMA.DIST': {\r\n        method: 'gammadist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'GAMMALN': {\r\n        method: 'gammaln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 }\r\n        ]\r\n    },\r\n    'GAMMA.INV': {\r\n        method: 'gammainv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'GAUSS': {\r\n        method: 'gauss',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'BETA.DIST': {\r\n        method: 'betadist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'BETA.INV': {\r\n        method: 'betainv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'BINOM.DIST': {\r\n        method: 'binomialdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'BINOM.INV': {\r\n        method: 'binomialinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n        ]\r\n    },\r\n    'BESSELI': {\r\n        method: 'besselifn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELJ': {\r\n        method: 'besseljfn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELK': {\r\n        method: 'besselkfn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELY': {\r\n        method: 'besselyfn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'CHISQ.DIST': {\r\n        method: 'chisqdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'CHISQ.DIST.RT': {\r\n        method: 'chisqdistrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\r\n        ]\r\n    },\r\n    'CHISQ.INV': {\r\n        method: 'chisqinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\r\n        ]\r\n    },\r\n    'CHISQ.INV.RT': {\r\n        method: 'chisqinvrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.DIST': {\r\n        method: 'fdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'F.DIST.RT': {\r\n        method: 'fdistrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.INV': {\r\n        method: 'finv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.INV.RT': {\r\n        method: 'finvrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'WEIBULL.DIST': {\r\n        method: 'weibulldist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'POISSON.DIST': {\r\n        method: 'poissondist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'HYPGEOM.DIST': {\r\n        method: 'hypgeomdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'T.DIST': {\r\n        method: 'tdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'T.DIST.2T': {\r\n        method: 'tdist2t',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'T.DIST.RT': {\r\n        method: 'tdistrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'TDIST': {\r\n        method: 'tdistold',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 2 },\r\n        ]\r\n    },\r\n    'T.INV': {\r\n        method: 'tinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'T.INV.2T': {\r\n        method: 'tinv2t',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'LOGNORM.DIST': {\r\n        method: 'lognormdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'LOGNORM.INV': {\r\n        method: 'lognorminv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'NORM.DIST': {\r\n        method: 'normdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'NORM.INV': {\r\n        method: 'norminv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'NORM.S.DIST': {\r\n        method: 'normsdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'NORM.S.INV': {\r\n        method: 'normsinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n        ]\r\n    },\r\n    'PHI': {\r\n        method: 'phi',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'NEGBINOM.DIST': {\r\n        method: 'negbinomdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'CONFIDENCE.NORM': {\r\n        method: 'confidencenorm',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'CONFIDENCE.T': {\r\n        method: 'confidencet',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'STANDARDIZE': {\r\n        method: 'standardize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n    },\r\n};\r\nStatisticalPlugin.aliases = {\r\n    NEGBINOMDIST: 'NEGBINOM.DIST',\r\n    EXPONDIST: 'EXPON.DIST',\r\n    BETADIST: 'BETA.DIST',\r\n    NORMDIST: 'NORM.DIST',\r\n    NORMINV: 'NORM.INV',\r\n    NORMSDIST: 'NORM.S.DIST',\r\n    NORMSINV: 'NORM.S.INV',\r\n    LOGNORMDIST: 'LOGNORM.DIST',\r\n    LOGINV: 'LOGNORM.INV',\r\n    TINV: 'T.INV.2T',\r\n    HYPGEOMDIST: 'HYPGEOM.DIST',\r\n    POISSON: 'POISSON.DIST',\r\n    WEIBULL: 'WEIBULL.DIST',\r\n    FINV: 'F.INV.RT',\r\n    FDIST: 'F.DIST.RT',\r\n    CHIDIST: 'CHISQ.DIST.RT',\r\n    CHIINV: 'CHISQ.INV.RT',\r\n    GAMMADIST: 'GAMMA.DIST',\r\n    'GAMMALN.PRECISE': 'GAMMALN',\r\n    GAMMAINV: 'GAMMA.INV',\r\n    BETAINV: 'BETA.INV',\r\n    BINOMDIST: 'BINOM.DIST',\r\n    CONFIDENCE: 'CONFIDENCE.NORM',\r\n    CRITBINOM: 'BINOM.INV',\r\n    WEIBULLDIST: 'WEIBULL.DIST',\r\n    TINV2T: 'T.INV.2T',\r\n    TDISTRT: 'T.DIST.RT',\r\n    TDIST2T: 'T.DIST.2T',\r\n    FINVRT: 'F.INV.RT',\r\n    FDISTRT: 'F.DIST.RT',\r\n    CHIDISTRT: 'CHISQ.DIST.RT',\r\n    CHIINVRT: 'CHISQ.INV.RT',\r\n    LOGNORMINV: 'LOGNORM.INV',\r\n    POISSONDIST: 'POISSON.DIST',\r\n};\r\n","/**\r\n * @license\r\n bessel.js (C) 2013-present SheetJS -- http://sheetjs.com\r\n\r\n Apache License\r\n Version 2.0, January 2004\r\n http://www.apache.org/licenses/\r\n\r\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n 1. Definitions.\r\n\r\n \"License\" shall mean the terms and conditions for use, reproduction,\r\n and distribution as defined by Sections 1 through 9 of this document.\r\n\r\n \"Licensor\" shall mean the copyright owner or entity authorized by\r\n the copyright owner that is granting the License.\r\n\r\n \"Legal Entity\" shall mean the union of the acting entity and all\r\n other entities that control, are controlled by, or are under common\r\n control with that entity. For the purposes of this definition,\r\n \"control\" means (i) the power, direct or indirect, to cause the\r\n direction or management of such entity, whether by contract or\r\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n outstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n exercising permissions granted by this License.\r\n\r\n \"Source\" form shall mean the preferred form for making modifications,\r\n including but not limited to software source code, documentation\r\n source, and configuration files.\r\n\r\n \"Object\" form shall mean any form resulting from mechanical\r\n transformation or translation of a Source form, including but\r\n not limited to compiled object code, generated documentation,\r\n and conversions to other media types.\r\n\r\n \"Work\" shall mean the work of authorship, whether in Source or\r\n Object form, made available under the License, as indicated by a\r\n copyright notice that is included in or attached to the work\r\n (an example is provided in the Appendix below).\r\n\r\n \"Derivative Works\" shall mean any work, whether in Source or Object\r\n form, that is based on (or derived from) the Work and for which the\r\n editorial revisions, annotations, elaborations, or other modifications\r\n represent, as a whole, an original work of authorship. For the purposes\r\n of this License, Derivative Works shall not include works that remain\r\n separable from, or merely link (or bind by name) to the interfaces of,\r\n the Work and Derivative Works thereof.\r\n\r\n \"Contribution\" shall mean any work of authorship, including\r\n the original version of the Work and any modifications or additions\r\n to that Work or Derivative Works thereof, that is intentionally\r\n submitted to Licensor for inclusion in the Work by the copyright owner\r\n or by an individual or Legal Entity authorized to submit on behalf of\r\n the copyright owner. For the purposes of this definition, \"submitted\"\r\n means any form of electronic, verbal, or written communication sent\r\n to the Licensor or its representatives, including but not limited to\r\n communication on electronic mailing lists, source code control systems,\r\n and issue tracking systems that are managed by, or on behalf of, the\r\n Licensor for the purpose of discussing and improving the Work, but\r\n excluding communication that is conspicuously marked or otherwise\r\n designated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n on behalf of whom a Contribution has been received by Licensor and\r\n subsequently incorporated within the Work.\r\n\r\n 2. Grant of Copyright License. Subject to the terms and conditions of\r\n this License, each Contributor hereby grants to You a perpetual,\r\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n copyright license to reproduce, prepare Derivative Works of,\r\n publicly display, publicly perform, sublicense, and distribute the\r\n Work and such Derivative Works in Source or Object form.\r\n\r\n 3. Grant of Patent License. Subject to the terms and conditions of\r\n this License, each Contributor hereby grants to You a perpetual,\r\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n (except as stated in this section) patent license to make, have made,\r\n use, offer to sell, sell, import, and otherwise transfer the Work,\r\n where such license applies only to those patent claims licensable\r\n by such Contributor that are necessarily infringed by their\r\n Contribution(s) alone or by combination of their Contribution(s)\r\n with the Work to which such Contribution(s) was submitted. If You\r\n institute patent litigation against any entity (including a\r\n cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n or a Contribution incorporated within the Work constitutes direct\r\n or contributory patent infringement, then any patent licenses\r\n granted to You under this License for that Work shall terminate\r\n as of the date such litigation is filed.\r\n\r\n 4. Redistribution. You may reproduce and distribute copies of the\r\n Work or Derivative Works thereof in any medium, with or without\r\n modifications, and in Source or Object form, provided that You\r\n meet the following conditions:\r\n\r\n (a) You must give any other recipients of the Work or\r\n Derivative Works a copy of this License; and\r\n\r\n (b) You must cause any modified files to carry prominent notices\r\n stating that You changed the files; and\r\n\r\n (c) You must retain, in the Source form of any Derivative Works\r\n that You distribute, all copyright, patent, trademark, and\r\n attribution notices from the Source form of the Work,\r\n excluding those notices that do not pertain to any part of\r\n the Derivative Works; and\r\n\r\n (d) If the Work includes a \"NOTICE\" text file as part of its\r\n distribution, then any Derivative Works that You distribute must\r\n include a readable copy of the attribution notices contained\r\n within such NOTICE file, excluding those notices that do not\r\n pertain to any part of the Derivative Works, in at least one\r\n of the following places: within a NOTICE text file distributed\r\n as part of the Derivative Works; within the Source form or\r\n documentation, if provided along with the Derivative Works; or,\r\n within a display generated by the Derivative Works, if and\r\n wherever such third-party notices normally appear. The contents\r\n of the NOTICE file are for informational purposes only and\r\n do not modify the License. You may add Your own attribution\r\n notices within Derivative Works that You distribute, alongside\r\n or as an addendum to the NOTICE text from the Work, provided\r\n that such additional attribution notices cannot be construed\r\n as modifying the License.\r\n\r\n You may add Your own copyright statement to Your modifications and\r\n may provide additional or different license terms and conditions\r\n for use, reproduction, or distribution of Your modifications, or\r\n for any such Derivative Works as a whole, provided Your use,\r\n reproduction, and distribution of the Work otherwise complies with\r\n the conditions stated in this License.\r\n\r\n 5. Submission of Contributions. Unless You explicitly state otherwise,\r\n any Contribution intentionally submitted for inclusion in the Work\r\n by You to the Licensor shall be under the terms and conditions of\r\n this License, without any additional terms or conditions.\r\n Notwithstanding the above, nothing herein shall supersede or modify\r\n the terms of any separate license agreement you may have executed\r\n with Licensor regarding such Contributions.\r\n\r\n 6. Trademarks. This License does not grant permission to use the trade\r\n names, trademarks, service marks, or product names of the Licensor,\r\n except as required for reasonable and customary use in describing the\r\n origin of the Work and reproducing the content of the NOTICE file.\r\n\r\n 7. Disclaimer of Warranty. Unless required by applicable law or\r\n agreed to in writing, Licensor provides the Work (and each\r\n Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n implied, including, without limitation, any warranties or conditions\r\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n PARTICULAR PURPOSE. You are solely responsible for determining the\r\n appropriateness of using or redistributing the Work and assume any\r\n risks associated with Your exercise of permissions under this License.\r\n\r\n 8. Limitation of Liability. In no event and under no legal theory,\r\n whether in tort (including negligence), contract, or otherwise,\r\n unless required by applicable law (such as deliberate and grossly\r\n negligent acts) or agreed to in writing, shall any Contributor be\r\n liable to You for damages, including any direct, indirect, special,\r\n incidental, or consequential damages of any character arising as a\r\n result of this License or out of the use or inability to use the\r\n Work (including but not limited to damages for loss of goodwill,\r\n work stoppage, computer failure or malfunction, or any and all\r\n other commercial damages or losses), even if such Contributor\r\n has been advised of the possibility of such damages.\r\n\r\n 9. Accepting Warranty or Additional Liability. While redistributing\r\n the Work or Derivative Works thereof, You may choose to offer,\r\n and charge a fee for, acceptance of support, warranty, indemnity,\r\n or other liability obligations and/or rights consistent with this\r\n License. However, in accepting such obligations, You may act only\r\n on Your own behalf and on Your sole responsibility, not on behalf\r\n of any other Contributor, and only if You agree to indemnify,\r\n defend, and hold each Contributor harmless for any liability\r\n incurred by, or claims asserted against, such Contributor by reason\r\n of your accepting any such warranty or additional liability.\r\n\r\n END OF TERMS AND CONDITIONS\r\n\r\n APPENDIX: How to apply the Apache License to your work.\r\n\r\n To apply the Apache License to your work, attach the following\r\n boilerplate notice, with the fields enclosed by brackets \"{}\"\r\n replaced with your own identifying information. (Don't include\r\n the brackets!)  The text should be enclosed in the appropriate\r\n comment syntax for the file format. We also recommend that a\r\n file or class name and description of purpose be included on the\r\n same \"printed page\" as the copyright notice for easier\r\n identification within third-party archives.\r\n\r\n Copyright (C) 2013-present   SheetJS LLC\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n\r\n */\r\nvar M = Math;\r\n// @ts-ignore\r\nfunction _horner(arr, v) {\r\n    for (var i = 0, z = 0; i < arr.length; ++i) {\r\n        z = v * z + arr[i];\r\n    }\r\n    return z;\r\n}\r\n// @ts-ignore\r\nfunction _bessel_iter(x, n, f0, f1, sign) {\r\n    if (n === 0) {\r\n        return f0;\r\n    }\r\n    if (n === 1) {\r\n        return f1;\r\n    }\r\n    var tdx = 2 / x, f2 = f1;\r\n    for (var o = 1; o < n; ++o) {\r\n        f2 = f1 * o * tdx + sign * f0;\r\n        f0 = f1;\r\n        f1 = f2;\r\n    }\r\n    return f2;\r\n}\r\n// @ts-ignore\r\nfunction _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {\r\n    // @ts-ignore\r\n    return function bessel(x, n) {\r\n        if (nonzero) {\r\n            if (x === 0) {\r\n                return (nonzero == 1 ? -Infinity : Infinity);\r\n            }\r\n            else if (x < 0) {\r\n                return NaN;\r\n            }\r\n        }\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (n < 0) {\r\n            return NaN;\r\n        }\r\n        n |= 0;\r\n        var b0 = bessel0(x), b1 = bessel1(x);\r\n        return _bessel_iter(x, n, b0, b1, sign);\r\n    };\r\n}\r\nexport var besselj = (function () {\r\n    var W = 0.636619772; // 2 / Math.PI\r\n    var b0_a1a = [57568490574.0, -13362590354.0, 651619640.7, -11214424.18, 77392.33017, -184.9052456].reverse();\r\n    var b0_a2a = [57568490411.0, 1029532985.0, 9494680.718, 59272.64853, 267.8532712, 1.0].reverse();\r\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\r\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x;\r\n        if (x < 8) {\r\n            a1 = _horner(b0_a1a, y);\r\n            a2 = _horner(b0_a2a, y);\r\n            a = a1 / a2;\r\n        }\r\n        else {\r\n            var xx = x - 0.785398164;\r\n            y = 64 / y;\r\n            a1 = _horner(b0_a1b, y);\r\n            a2 = _horner(b0_a2b, y);\r\n            a = M.sqrt(W / x) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    var b1_a1a = [72362614232.0, -7895059235.0, 242396853.1, -2972611.439, 15704.48260, -30.16036606].reverse();\r\n    var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();\r\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\r\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = M.abs(x) - 2.356194491;\r\n        if (Math.abs(x) < 8) {\r\n            a1 = x * _horner(b1_a1a, y);\r\n            a2 = _horner(b1_a2a, y);\r\n            a = a1 / a2;\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b1_a1b, y);\r\n            a2 = _horner(b1_a2b, y);\r\n            a = M.sqrt(W / M.abs(x)) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / M.abs(x));\r\n            if (x < 0) {\r\n                a = -a;\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n    // @ts-ignore\r\n    return function besselj(x, n) {\r\n        n = Math.round(n);\r\n        if (!isFinite(x)) {\r\n            return isNaN(x) ? x : 0;\r\n        }\r\n        if (n < 0) {\r\n            return ((n % 2) ? -1 : 1) * besselj(x, -n);\r\n        }\r\n        if (x < 0) {\r\n            return ((n % 2) ? -1 : 1) * besselj(-x, n);\r\n        }\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (x === 0) {\r\n            return 0;\r\n        }\r\n        var ret = 0.0;\r\n        if (x > n) {\r\n            ret = _bessel_iter(x, n, bessel0(x), bessel1(x), -1);\r\n        }\r\n        else {\r\n            var m = 2 * M.floor((n + M.floor(M.sqrt(40 * n))) / 2);\r\n            var jsum = false;\r\n            var bjp = 0.0, sum = 0.0;\r\n            var bj = 1.0, bjm = 0.0;\r\n            var tox = 2 / x;\r\n            for (var j = m; j > 0; j--) {\r\n                bjm = j * tox * bj - bjp;\r\n                bjp = bj;\r\n                bj = bjm;\r\n                if (M.abs(bj) > 1E10) {\r\n                    bj *= 1E-10;\r\n                    bjp *= 1E-10;\r\n                    ret *= 1E-10;\r\n                    sum *= 1E-10;\r\n                }\r\n                if (jsum) {\r\n                    sum += bj;\r\n                }\r\n                jsum = !jsum;\r\n                if (j == n) {\r\n                    ret = bjp;\r\n                }\r\n            }\r\n            sum = 2.0 * sum - bj;\r\n            ret /= sum;\r\n        }\r\n        return ret;\r\n    };\r\n})();\r\nexport var bessely = (function () {\r\n    var W = 0.636619772;\r\n    var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();\r\n    var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();\r\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\r\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 0.785398164;\r\n        if (x < 8) {\r\n            a1 = _horner(b0_a1a, y);\r\n            a2 = _horner(b0_a2a, y);\r\n            a = a1 / a2 + W * besselj(x, 0) * M.log(x);\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b0_a1b, y);\r\n            a2 = _horner(b0_a2b, y);\r\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();\r\n    var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();\r\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\r\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 2.356194491;\r\n        if (x < 8) {\r\n            a1 = x * _horner(b1_a1a, y);\r\n            a2 = _horner(b1_a2a, y);\r\n            a = a1 / a2 + W * (besselj(x, 1) * M.log(x) - 1 / x);\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b1_a1b, y);\r\n            a2 = _horner(b1_a2b, y);\r\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);\r\n})();\r\nexport var besseli = (function () {\r\n    var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();\r\n    var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        if (x <= 3.75) {\r\n            return _horner(b0_a, x * x / (3.75 * 3.75));\r\n        }\r\n        return M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b0_b, 3.75 / M.abs(x));\r\n    }\r\n    var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();\r\n    var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        if (x < 3.75) {\r\n            return x * _horner(b1_a, x * x / (3.75 * 3.75));\r\n        }\r\n        return (x < 0 ? -1 : 1) * M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b1_b, 3.75 / M.abs(x));\r\n    }\r\n    // @ts-ignore\r\n    return function besseli(x, n) {\r\n        n = Math.round(n);\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (n < 0) {\r\n            return NaN;\r\n        }\r\n        if (M.abs(x) === 0) {\r\n            return 0;\r\n        }\r\n        if (x == Infinity) {\r\n            return Infinity;\r\n        }\r\n        var ret = 0.0, j, tox = 2 / M.abs(x), bip = 0.0, bi = 1.0, bim = 0.0;\r\n        var m = 2 * M.round((n + M.round(M.sqrt(40 * n))) / 2);\r\n        for (j = m; j > 0; j--) {\r\n            bim = j * tox * bi + bip;\r\n            bip = bi;\r\n            bi = bim;\r\n            if (M.abs(bi) > 1E10) {\r\n                bi *= 1E-10;\r\n                bip *= 1E-10;\r\n                ret *= 1E-10;\r\n            }\r\n            if (j == n) {\r\n                ret = bip;\r\n            }\r\n        }\r\n        ret *= besseli(x, 0) / bi;\r\n        return x < 0 && (n % 2) ? -ret : ret;\r\n    };\r\n})();\r\nexport var besselk = (function () {\r\n    var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();\r\n    var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        if (x <= 2) {\r\n            return -M.log(x / 2) * besseli(x, 0) + _horner(b0_a, x * x / 4);\r\n        }\r\n        return M.exp(-x) / M.sqrt(x) * _horner(b0_b, 2 / x);\r\n    }\r\n    var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();\r\n    var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        if (x <= 2) {\r\n            return M.log(x / 2) * besseli(x, 1) + (1 / x) * _horner(b1_a, x * x / 4);\r\n        }\r\n        return M.exp(-x) / M.sqrt(x) * _horner(b1_b, 2 / x);\r\n    }\r\n    return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);\r\n})();\r\n","/**\r\n * @license\r\n Copyright (c) 2013 jStat\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights\r\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n */\r\nexport function erf(x) {\r\n    const cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\r\n        -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\r\n        4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\r\n        1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\r\n        6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\r\n        -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\r\n        -6.886027e-12, 8.94487e-13, 3.13092e-13,\r\n        -1.12708e-13, 3.81e-16, 7.106e-15,\r\n        -1.523e-15, -9.4e-17, 1.21e-16,\r\n        -2.8e-17];\r\n    let j = cof.length - 1;\r\n    let isneg = false;\r\n    let d = 0;\r\n    let dd = 0;\r\n    let t, ty, tmp, res;\r\n    if (x === 0) {\r\n        return 0;\r\n    }\r\n    if (x < 0) {\r\n        x = -x;\r\n        isneg = true;\r\n    }\r\n    t = 2 / (2 + x);\r\n    ty = 4 * t - 2;\r\n    for (; j > 0; j--) {\r\n        tmp = d;\r\n        d = ty * d - dd + cof[j];\r\n        dd = tmp;\r\n    }\r\n    res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\r\n    return isneg ? res - 1 : 1 - res;\r\n}\r\nexport function erfc(x) {\r\n    return 1 - erf(x);\r\n}\r\nfunction erfcinv(p) {\r\n    let j = 0;\r\n    let x, err, t, pp;\r\n    if (p >= 2) {\r\n        return -100;\r\n    }\r\n    if (p <= 0) {\r\n        return 100;\r\n    }\r\n    pp = (p < 1) ? p : 2 - p;\r\n    t = Math.sqrt(-2 * Math.log(pp / 2));\r\n    x = -0.70711 * ((2.30753 + t * 0.27061) /\r\n        (1 + t * (0.99229 + t * 0.04481)) - t);\r\n    for (; j < 2; j++) {\r\n        err = erfc(x) - pp;\r\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\r\n    }\r\n    return (p < 1) ? x : -x;\r\n}\r\nexport const exponential = {\r\n    pdf: (x, rate) => {\r\n        return x < 0 ? 0 : rate * Math.exp(-rate * x);\r\n    },\r\n    cdf: (x, rate) => {\r\n        return x < 0 ? 0 : 1 - Math.exp(-rate * x);\r\n    },\r\n};\r\nexport function gammafn(x) {\r\n    const p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\r\n        629.3311553128184, 866.9662027904133, -31451.272968848367,\r\n        -36144.413418691176, 66456.14382024054\r\n    ];\r\n    const q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\r\n        -3107.771671572311, 22538.118420980151, 4755.8462775278811,\r\n        -134659.9598649693, -115132.2596755535];\r\n    let fact = false;\r\n    let n = 0;\r\n    let xden = 0;\r\n    let xnum = 0;\r\n    let y = x;\r\n    let i, z, yi, res;\r\n    if (x > 171.6243769536076) {\r\n        return Infinity;\r\n    }\r\n    if (y <= 0) {\r\n        res = y % 1;\r\n        if (res) {\r\n            fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\r\n            y = 1 - y;\r\n        }\r\n        else {\r\n            return Infinity;\r\n        }\r\n    }\r\n    yi = y;\r\n    if (y < 1) {\r\n        z = y++;\r\n    }\r\n    else {\r\n        z = (y -= n = (y | 0) - 1) - 1;\r\n    }\r\n    for (i = 0; i < 8; ++i) {\r\n        xnum = (xnum + p[i]) * z;\r\n        xden = xden * z + q[i];\r\n    }\r\n    res = xnum / xden + 1;\r\n    if (yi < y) {\r\n        res /= yi;\r\n    }\r\n    else if (yi > y) {\r\n        for (i = 0; i < n; ++i) {\r\n            res *= y;\r\n            y++;\r\n        }\r\n    }\r\n    if (fact) {\r\n        res = fact / res;\r\n    }\r\n    return res;\r\n}\r\nexport const gamma = {\r\n    pdf: function pdf(x, shape, scale) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return (x === 0 && shape === 1) ? 1 / scale :\r\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\r\n                gammaln(shape) - shape * Math.log(scale));\r\n    },\r\n    cdf: function cdf(x, shape, scale) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return lowRegGamma(shape, x / scale);\r\n    },\r\n    inv: function (p, shape, scale) {\r\n        return gammapinv(p, shape) * scale;\r\n    }\r\n};\r\nexport function gammaln(x) {\r\n    let j = 0;\r\n    const cof = [\r\n        76.18009172947146, -86.50532032941677, 24.01409824083091,\r\n        -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\r\n    ];\r\n    let ser = 1.000000000190015;\r\n    let xx, y, tmp;\r\n    tmp = (y = xx = x) + 5.5;\r\n    tmp -= (xx + 0.5) * Math.log(tmp);\r\n    for (; j < 6; j++) {\r\n        ser += cof[j] / ++y;\r\n    }\r\n    return Math.log(2.5066282746310005 * ser / xx) - tmp;\r\n}\r\nfunction lowRegGamma(a, x) {\r\n    const aln = gammaln(a);\r\n    let ap = a;\r\n    let sum = 1 / a;\r\n    let del = sum;\r\n    let b = x + 1 - a;\r\n    let c = 1 / 1.0e-30;\r\n    let d = 1 / b;\r\n    let h = d;\r\n    let i = 1;\r\n    // calculate maximum number of itterations required for a\r\n    const ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\r\n    let an;\r\n    if (x < 0 || a <= 0) {\r\n        return NaN;\r\n    }\r\n    else if (x < a + 1) {\r\n        for (; i <= ITMAX; i++) {\r\n            sum += del *= x / ++ap;\r\n        }\r\n        return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\r\n    }\r\n    for (; i <= ITMAX; i++) {\r\n        an = -i * (i - a);\r\n        b += 2;\r\n        d = an * d + b;\r\n        c = b + an / c;\r\n        d = 1 / d;\r\n        h *= d * c;\r\n    }\r\n    return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\r\n}\r\nfunction gammapinv(p, a) {\r\n    let j = 0;\r\n    const a1 = a - 1;\r\n    const EPS = 1e-8;\r\n    const gln = gammaln(a);\r\n    let x, err, t, u, pp;\r\n    let lna1;\r\n    let afac;\r\n    if (p >= 1) {\r\n        return Math.max(100, a + 100 * Math.sqrt(a));\r\n    }\r\n    if (p <= 0) {\r\n        return 0;\r\n    }\r\n    if (a > 1) {\r\n        lna1 = Math.log(a1);\r\n        afac = Math.exp(a1 * (lna1 - 1) - gln);\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5) {\r\n            x = -x;\r\n        }\r\n        x = Math.max(1e-3, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\r\n    }\r\n    else {\r\n        t = 1 - a * (0.253 + a * 0.12);\r\n        if (p < t) {\r\n            x = Math.pow(p / t, 1 / a);\r\n        }\r\n        else {\r\n            x = 1 - Math.log(1 - (p - t) / (1 - t));\r\n        }\r\n    }\r\n    for (; j < 12; j++) {\r\n        if (x <= 0) {\r\n            return 0;\r\n        }\r\n        err = lowRegGamma(a, x) - p;\r\n        if (a > 1) {\r\n            t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\r\n        }\r\n        else {\r\n            t = Math.exp(-x + a1 * Math.log(x) - gln);\r\n        }\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\r\n        if (x <= 0) {\r\n            x = 0.5 * (x + t);\r\n        }\r\n        if (Math.abs(t) < EPS * x) {\r\n            break;\r\n        }\r\n    }\r\n    return x;\r\n}\r\nexport const normal = {\r\n    pdf: function pdf(x, mean, std) {\r\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) -\r\n            Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\r\n    },\r\n    cdf: function cdf(x, mean, std) {\r\n        return 0.5 * (1 + erf((x - mean) / Math.sqrt(2 * std * std)));\r\n    },\r\n    inv: function (p, mean, std) {\r\n        return -1.41421356237309505 * std * erfcinv(2 * p) + mean;\r\n    }\r\n};\r\nexport const beta = {\r\n    pdf: function pdf(x, alpha, beta) {\r\n        // PDF is zero outside the support\r\n        if (x > 1 || x < 0) {\r\n            return 0;\r\n        }\r\n        // PDF is one for the uniform case\r\n        if (alpha == 1 && beta == 1) {\r\n            return 1;\r\n        }\r\n        if (alpha < 512 && beta < 512) {\r\n            return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\r\n                betafn(alpha, beta);\r\n        }\r\n        else {\r\n            return Math.exp((alpha - 1) * Math.log(x) +\r\n                (beta - 1) * Math.log(1 - x) -\r\n                betaln(alpha, beta));\r\n        }\r\n    },\r\n    cdf: function cdf(x, alpha, beta) {\r\n        return (x > 1 || x < 0) ? +(x > 1) : ibeta(x, alpha, beta);\r\n    },\r\n    inv: function inv(x, alpha, beta) {\r\n        return ibetainv(x, alpha, beta);\r\n    },\r\n};\r\nfunction betafn(x, y) {\r\n    // ensure arguments are positive\r\n    if (x <= 0 || y <= 0) {\r\n        return undefined;\r\n    }\r\n    // make sure x + y doesn't exceed the upper limit of usable values\r\n    return (x + y > 170)\r\n        ? Math.exp(betaln(x, y))\r\n        : gammafn(x) * gammafn(y) / gammafn(x + y);\r\n}\r\nfunction betaln(x, y) {\r\n    return gammaln(x) + gammaln(y) - gammaln(x + y);\r\n}\r\nfunction ibetainv(p, a, b) {\r\n    var EPS = 1e-8;\r\n    var a1 = a - 1;\r\n    var b1 = b - 1;\r\n    var j = 0;\r\n    var lna, lnb, pp, t, u, err, x, al, h, w, afac;\r\n    if (p <= 0) {\r\n        return 0;\r\n    }\r\n    if (p >= 1) {\r\n        return 1;\r\n    }\r\n    if (a >= 1 && b >= 1) {\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5) {\r\n            x = -x;\r\n        }\r\n        al = (x * x - 3) / 6;\r\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\r\n        w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\r\n            (al + 5 / 6 - 2 / (3 * h));\r\n        x = a / (a + b * Math.exp(2 * w));\r\n    }\r\n    else {\r\n        lna = Math.log(a / (a + b));\r\n        lnb = Math.log(b / (a + b));\r\n        t = Math.exp(a * lna) / a;\r\n        u = Math.exp(b * lnb) / b;\r\n        w = t + u;\r\n        if (p < t / w) {\r\n            x = Math.pow(a * w * p, 1 / a);\r\n        }\r\n        else {\r\n            x = 1 - Math.pow(b * w * (1 - p), 1 / b);\r\n        }\r\n    }\r\n    afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\r\n    for (; j < 10; j++) {\r\n        if (x === 0 || x === 1) {\r\n            return x;\r\n        }\r\n        // @ts-ignore\r\n        err = ibeta(x, a, b) - p;\r\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\r\n        if (x <= 0) {\r\n            x = 0.5 * (x + t);\r\n        }\r\n        if (x >= 1) {\r\n            x = 0.5 * (x + t + 1);\r\n        }\r\n        if (Math.abs(t) < EPS * x && j > 0) {\r\n            break;\r\n        }\r\n    }\r\n    return x;\r\n}\r\nfunction ibeta(x, a, b) {\r\n    // Factors in front of the continued fraction.\r\n    var bt = (x === 0 || x === 1) ? 0 :\r\n        Math.exp(gammaln(a + b) - gammaln(a) -\r\n            gammaln(b) + a * Math.log(x) + b *\r\n            Math.log(1 - x));\r\n    if (x < 0 || x > 1) {\r\n        return false;\r\n    }\r\n    if (x < (a + 1) / (a + b + 2)) \r\n    // Use continued fraction directly.\r\n    {\r\n        return bt * betacf(x, a, b) / a;\r\n    }\r\n    // else use continued fraction after making the symmetry transformation.\r\n    return 1 - bt * betacf(1 - x, b, a) / b;\r\n}\r\nfunction betacf(x, a, b) {\r\n    var fpmin = 1e-30;\r\n    var m = 1;\r\n    var qab = a + b;\r\n    var qap = a + 1;\r\n    var qam = a - 1;\r\n    var c = 1;\r\n    var d = 1 - qab * x / qap;\r\n    var m2, aa, del, h;\r\n    // These q's will be used in factors that occur in the coefficients\r\n    if (Math.abs(d) < fpmin) {\r\n        d = fpmin;\r\n    }\r\n    d = 1 / d;\r\n    h = d;\r\n    for (; m <= 100; m++) {\r\n        m2 = 2 * m;\r\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\r\n        // One step (the even one) of the recurrence\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin) {\r\n            d = fpmin;\r\n        }\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin) {\r\n            c = fpmin;\r\n        }\r\n        d = 1 / d;\r\n        h *= d * c;\r\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\r\n        // Next step of the recurrence (the odd one)\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin) {\r\n            d = fpmin;\r\n        }\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin) {\r\n            c = fpmin;\r\n        }\r\n        d = 1 / d;\r\n        del = d * c;\r\n        h *= del;\r\n        if (Math.abs(del - 1.0) < 3e-7) {\r\n            break;\r\n        }\r\n    }\r\n    return h;\r\n}\r\nexport const binomial = {\r\n    pdf: function (k, n, p) {\r\n        return (p === 0 || p === 1) ?\r\n            ((n * p) === k ? 1 : 0) :\r\n            combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\r\n    },\r\n    cdf: function (x, n, p) {\r\n        var betacdf;\r\n        var eps = 1e-10;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        if (x >= n) {\r\n            return 1;\r\n        }\r\n        if (p < 0 || p > 1 || n <= 0) {\r\n            return NaN;\r\n        }\r\n        x = Math.floor(x);\r\n        var z = p;\r\n        var a = x + 1;\r\n        var b = n - x;\r\n        var s = a + b;\r\n        var bt = Math.exp(gammaln(s) - gammaln(b) -\r\n            gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\r\n        if (z < (a + 1) / (s + 2)) {\r\n            betacdf = bt * betinc(z, a, b, eps);\r\n        }\r\n        else {\r\n            betacdf = 1 - bt * betinc(1 - z, b, a, eps);\r\n        }\r\n        return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\r\n    }\r\n};\r\nfunction betinc(x, a, b, eps) {\r\n    var a0 = 0;\r\n    var b0 = 1;\r\n    var a1 = 1;\r\n    var b1 = 1;\r\n    var m9 = 0;\r\n    var a2 = 0;\r\n    var c9;\r\n    while (Math.abs((a1 - a2) / a1) > eps) {\r\n        a2 = a1;\r\n        c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\r\n        a0 = a1 + c9 * a0;\r\n        b0 = b1 + c9 * b0;\r\n        m9 = m9 + 1;\r\n        c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\r\n        a1 = a0 + c9 * a1;\r\n        b1 = b0 + c9 * b1;\r\n        a0 = a0 / b1;\r\n        b0 = b0 / b1;\r\n        a1 = a1 / b1;\r\n        b1 = 1;\r\n    }\r\n    return a1 / a;\r\n}\r\nfunction combination(n, m) {\r\n    // make sure n or m don't exceed the upper limit of usable values\r\n    return (n > 170 || m > 170)\r\n        ? Math.exp(combinationln(n, m))\r\n        : (factorial(n) / factorial(m)) / factorial(n - m);\r\n}\r\nfunction combinationln(n, m) {\r\n    return factorialln(n) - factorialln(m) - factorialln(n - m);\r\n}\r\n// natural log factorial of n\r\nexport function factorialln(n) {\r\n    return n < 0 ? NaN : gammaln(n + 1);\r\n}\r\n// factorial of n\r\nexport function factorial(n) {\r\n    return n < 0 ? NaN : gammafn(n + 1);\r\n}\r\nexport const chisquare = {\r\n    pdf: function pdf(x, dof) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return (x === 0 && dof === 2) ? 0.5 :\r\n            Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\r\n                Math.log(2) - gammaln(dof / 2));\r\n    },\r\n    cdf: function cdf(x, dof) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return lowRegGamma(dof / 2, x / 2);\r\n    },\r\n    inv: function (p, dof) {\r\n        return 2 * gammapinv(p, 0.5 * dof);\r\n    }\r\n};\r\nexport const centralF = {\r\n    // This implementation of the pdf function avoids float overflow\r\n    // See the way that R calculates this value:\r\n    // https://svn.r-project.org/R/trunk/src/nmath/df.c\r\n    pdf: function pdf(x, df1, df2) {\r\n        var p, q, f;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        if (df1 <= 2) {\r\n            if (x === 0 && df1 < 2) {\r\n                return Infinity;\r\n            }\r\n            if (x === 0 && df1 === 2) {\r\n                return 1;\r\n            }\r\n            return (1 / betafn(df1 / 2, df2 / 2)) *\r\n                Math.pow(df1 / df2, df1 / 2) *\r\n                Math.pow(x, (df1 / 2) - 1) *\r\n                Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\r\n        }\r\n        p = (df1 * x) / (df2 + x * df1);\r\n        q = df2 / (df2 + x * df1);\r\n        f = df1 * q / 2.0;\r\n        return f * binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\r\n    },\r\n    cdf: function cdf(x, df1, df2) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\r\n    },\r\n    inv: function inv(x, df1, df2) {\r\n        return df2 / (df1 * (1 / ibetainv(x, df1 / 2, df2 / 2) - 1));\r\n    },\r\n};\r\nexport const weibull = {\r\n    pdf: function pdf(x, scale, shape) {\r\n        if (x < 0 || scale < 0 || shape < 0) {\r\n            return 0;\r\n        }\r\n        return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\r\n            Math.exp(-(Math.pow((x / scale), shape)));\r\n    },\r\n    cdf: function cdf(x, scale, shape) {\r\n        return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\r\n    },\r\n};\r\nexport const poisson = {\r\n    pdf: function pdf(k, l) {\r\n        if (l < 0 || (k % 1) !== 0 || k < 0) {\r\n            return 0;\r\n        }\r\n        return Math.pow(l, k) * Math.exp(-l) / factorial(k);\r\n    },\r\n    cdf: function cdf(x, l) {\r\n        var k = 0;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        var sum = 0;\r\n        for (; k <= x; k++) {\r\n            sum += poisson.pdf(k, l);\r\n        }\r\n        return sum;\r\n    },\r\n};\r\nexport const hypgeom = {\r\n    pdf: function pdf(k, N, m, n) {\r\n        // Hypergeometric PDF.\r\n        // A simplification of the CDF algorithm below.\r\n        // k = number of successes drawn\r\n        // N = population size\r\n        // m = number of successes in population\r\n        // n = number of items drawn from population\r\n        // if(k !== k | 0) {\r\n        //   return false;\r\n        // } else\r\n        if (k < 0 || k < m - (N - n)) {\r\n            // It's impossible to have this few successes drawn.\r\n            return 0;\r\n        }\r\n        else if (k > n || k > m) {\r\n            // It's impossible to have this many successes drawn.\r\n            return 0;\r\n        }\r\n        else if (m * 2 > N) {\r\n            // More than half the population is successes.\r\n            if (n * 2 > N) {\r\n                // More than half the population is sampled.\r\n                return hypgeom.pdf(N - m - n + k, N, N - m, N - n);\r\n            }\r\n            else {\r\n                // Half or less of the population is sampled.\r\n                return hypgeom.pdf(n - k, N, N - m, n);\r\n            }\r\n        }\r\n        else if (n * 2 > N) {\r\n            // Half or less is successes.\r\n            return hypgeom.pdf(m - k, N, m, N - n);\r\n        }\r\n        else if (m < n) {\r\n            // We want to have the number of things sampled to be less than the\r\n            // successes available. So swap the definitions of successful and sampled.\r\n            return hypgeom.pdf(k, N, n, m);\r\n        }\r\n        else {\r\n            // If we get here, half or less of the population was sampled, half or\r\n            // less of it was successes, and we had fewer sampled things than\r\n            // successes. Now we can do this complicated iterative algorithm in an\r\n            // efficient way.\r\n            // The basic premise of the algorithm is that we partially normalize our\r\n            // intermediate product to keep it in a numerically good region, and then\r\n            // finish the normalization at the end.\r\n            // This variable holds the scaled probability of the current number of\r\n            // successes.\r\n            var scaledPDF = 1;\r\n            // This keeps track of how much we have normalized.\r\n            var samplesDone = 0;\r\n            for (var i = 0; i < k; i++) {\r\n                // For every possible number of successes up to that observed...\r\n                while (scaledPDF > 1 && samplesDone < n) {\r\n                    // Intermediate result is growing too big. Apply some of the\r\n                    // normalization to shrink everything.\r\n                    scaledPDF *= 1 - (m / (N - samplesDone));\r\n                    // Say we've normalized by this sample already.\r\n                    samplesDone++;\r\n                }\r\n                // Work out the partially-normalized hypergeometric PDF for the next\r\n                // number of successes\r\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\r\n            }\r\n            for (; samplesDone < n; samplesDone++) {\r\n                // Apply all the rest of the normalization\r\n                scaledPDF *= 1 - (m / (N - samplesDone));\r\n            }\r\n            // Bound answer sanely before returning.\r\n            return Math.min(1, Math.max(0, scaledPDF));\r\n        }\r\n    },\r\n    cdf: function cdf(x, N, m, n) {\r\n        // Hypergeometric CDF.\r\n        // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\r\n        // and comes from his hypergeometric test calculator at\r\n        // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\r\n        // x = number of successes drawn\r\n        // N = population size\r\n        // m = number of successes in population\r\n        // n = number of items drawn from population\r\n        if (x < 0 || x < m - (N - n)) {\r\n            // It's impossible to have this few successes drawn or fewer.\r\n            return 0;\r\n        }\r\n        else if (x >= n || x >= m) {\r\n            // We will always have this many successes or fewer.\r\n            return 1;\r\n        }\r\n        else if (m * 2 > N) {\r\n            // More than half the population is successes.\r\n            if (n * 2 > N) {\r\n                // More than half the population is sampled.\r\n                return cdf(N - m - n + x, N, N - m, N - n);\r\n            }\r\n            else {\r\n                // Half or less of the population is sampled.\r\n                return 1 - hypgeom.cdf(n - x - 1, N, N - m, n);\r\n            }\r\n        }\r\n        else if (n * 2 > N) {\r\n            // Half or less is successes.\r\n            return 1 - hypgeom.cdf(m - x - 1, N, m, N - n);\r\n        }\r\n        else if (m < n) {\r\n            // We want to have the number of things sampled to be less than the\r\n            // successes available. So swap the definitions of successful and sampled.\r\n            return hypgeom.cdf(x, N, n, m);\r\n        }\r\n        else {\r\n            // If we get here, half or less of the population was sampled, half or\r\n            // less of it was successes, and we had fewer sampled things than\r\n            // successes. Now we can do this complicated iterative algorithm in an\r\n            // efficient way.\r\n            // The basic premise of the algorithm is that we partially normalize our\r\n            // intermediate sum to keep it in a numerically good region, and then\r\n            // finish the normalization at the end.\r\n            // Holds the intermediate, scaled total CDF.\r\n            var scaledCDF = 1;\r\n            // This variable holds the scaled probability of the current number of\r\n            // successes.\r\n            var scaledPDF = 1;\r\n            // This keeps track of how much we have normalized.\r\n            var samplesDone = 0;\r\n            for (var i = 0; i < x; i++) {\r\n                // For every possible number of successes up to that observed...\r\n                while (scaledCDF > 1 && samplesDone < n) {\r\n                    // Intermediate result is growing too big. Apply some of the\r\n                    // normalization to shrink everything.\r\n                    var factor = 1 - (m / (N - samplesDone));\r\n                    scaledPDF *= factor;\r\n                    scaledCDF *= factor;\r\n                    // Say we've normalized by this sample already.\r\n                    samplesDone++;\r\n                }\r\n                // Work out the partially-normalized hypergeometric PDF for the next\r\n                // number of successes\r\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\r\n                // Add to the CDF answer.\r\n                scaledCDF += scaledPDF;\r\n            }\r\n            for (; samplesDone < n; samplesDone++) {\r\n                // Apply all the rest of the normalization\r\n                scaledCDF *= 1 - (m / (N - samplesDone));\r\n            }\r\n            // Bound answer sanely before returning.\r\n            return Math.min(1, Math.max(0, scaledCDF));\r\n        }\r\n    }\r\n};\r\nexport const studentt = {\r\n    pdf: function pdf(x, dof) {\r\n        dof = dof > 1e100 ? 1e100 : dof;\r\n        return (1 / (Math.sqrt(dof) * betafn(0.5, dof / 2))) *\r\n            Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\r\n    },\r\n    cdf: function cdf(x, dof) {\r\n        var dof2 = dof / 2;\r\n        return ibeta((x + Math.sqrt(x * x + dof)) /\r\n            (2 * Math.sqrt(x * x + dof)), dof2, dof2);\r\n    },\r\n    inv: function (p, dof) {\r\n        var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\r\n        x = Math.sqrt(dof * (1 - x) / x);\r\n        return (p > 0.5) ? x : -x;\r\n    },\r\n};\r\nexport const lognormal = {\r\n    pdf: function pdf(x, mu, sigma) {\r\n        if (x <= 0) {\r\n            return 0;\r\n        }\r\n        return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\r\n            Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\r\n            (2 * sigma * sigma));\r\n    },\r\n    cdf: function cdf(x, mu, sigma) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return 0.5 +\r\n            (0.5 * erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\r\n    },\r\n    inv: function (p, mu, sigma) {\r\n        return Math.exp(-1.41421356237309505 * sigma * erfcinv(2 * p) + mu);\r\n    },\r\n};\r\nexport const negbin = {\r\n    pdf: function pdf(k, r, p) {\r\n        if (k !== k >>> 0) {\r\n            return false;\r\n        }\r\n        if (k < 0) {\r\n            return 0;\r\n        }\r\n        return combination(k + r - 1, r - 1) *\r\n            Math.pow(1 - p, k) * Math.pow(p, r);\r\n    },\r\n    cdf: function cdf(x, r, p) {\r\n        var sum = 0, k = 0;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        for (; k <= x; k++) {\r\n            sum += negbin.pdf(k, r, p);\r\n        }\r\n        return sum;\r\n    }\r\n};\r\nfunction sum(arr) {\r\n    var sum = 0;\r\n    var i = arr.length;\r\n    while (--i >= 0) {\r\n        sum += arr[i];\r\n    }\r\n    return sum;\r\n}\r\nexport function mean(arr) {\r\n    return sum(arr) / arr.length;\r\n}\r\nexport function sumsqerr(arr) {\r\n    var meanv = mean(arr);\r\n    var sum = 0;\r\n    var i = arr.length;\r\n    var tmp;\r\n    while (--i >= 0) {\r\n        tmp = arr[i] - meanv;\r\n        sum += tmp * tmp;\r\n    }\r\n    return sum;\r\n}\r\nexport function variance(arr, flag) {\r\n    return sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\r\n}\r\nexport function stdev(arr, flag) {\r\n    return Math.sqrt(variance(arr, flag));\r\n}\r\n// 2 different parameter setups\r\n// (value, alpha, sd, n)\r\n// (value, alpha, array)\r\nexport function normalci() {\r\n    var args = [].slice.call(arguments), ans = new Array(2), change;\r\n    if (args.length === 4) {\r\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) *\r\n            args[2] / Math.sqrt(args[3]));\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) * stdev(args[2]) / Math.sqrt(args[2].length));\r\n    }\r\n    ans[0] = args[0] - change;\r\n    ans[1] = args[0] + change;\r\n    return ans;\r\n}\r\nexport function tci() {\r\n    var args = [].slice.call(arguments), ans = new Array(2), change;\r\n    if (args.length === 4) {\r\n        change = Math.abs(studentt.inv(args[1] / 2, args[3] - 1) *\r\n            args[2] / Math.sqrt(args[3]));\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        change = Math.abs(studentt.inv(args[1] / 2, args[2].length - 1) * stdev(args[2], true) / Math.sqrt(args[2].length));\r\n    }\r\n    ans[0] = args[0] - change;\r\n    ans[1] = args[0] + change;\r\n    return ans;\r\n}\r\nfunction product(arr) {\r\n    var prod = 1;\r\n    var i = arr.length;\r\n    while (--i >= 0) {\r\n        prod *= arr[i];\r\n    }\r\n    return prod;\r\n}\r\nexport function geomean(arr) {\r\n    return Math.pow(product(arr), 1 / arr.length);\r\n}\r\nexport function covariance(arr1, arr2) {\r\n    var u = mean(arr1);\r\n    var v = mean(arr2);\r\n    var arr1Len = arr1.length;\r\n    var sq_dev = new Array(arr1Len);\r\n    var i;\r\n    for (i = 0; i < arr1Len; i++) {\r\n        sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\r\n    }\r\n    return sum(sq_dev) / (arr1Len - 1);\r\n}\r\nexport function corrcoeff(arr1, arr2) {\r\n    return covariance(arr1, arr2) /\r\n        stdev(arr1, 1) /\r\n        stdev(arr2, 1);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class MathPlugin extends FunctionPlugin {\r\n    fact(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FACT'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            let ret = 1;\r\n            for (let i = 1; i <= arg; i++) {\r\n                ret *= i;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    factdouble(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FACTDOUBLE'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            let ret = 1;\r\n            for (let i = arg; i >= 1; i -= 2) {\r\n                ret *= i;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    combin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMBIN'), (n, m) => {\r\n            if (m > n) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            n = Math.trunc(n);\r\n            m = Math.trunc(m);\r\n            return combin(n, m);\r\n        });\r\n    }\r\n    combina(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMBINA'), (n, m) => {\r\n            n = Math.trunc(n);\r\n            m = Math.trunc(m);\r\n            if (n + m - 1 >= 1030) {\r\n                //Product #2 does not enforce this\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            if (n === 0 && m === 0) {\r\n                return 1;\r\n            }\r\n            return combin(n + m - 1, m);\r\n        });\r\n    }\r\n    gcd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GCD'), (...args) => {\r\n            const processedArgs = this.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\r\n            if (processedArgs instanceof CellError) {\r\n                return processedArgs;\r\n            }\r\n            let ret = 0;\r\n            for (const val of processedArgs) {\r\n                if (val < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret = binaryGCD(ret, Math.trunc(val));\r\n            }\r\n            if (ret > Number.MAX_SAFE_INTEGER) {\r\n                //inconsistency with product #1\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    lcm(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LCM'), (...args) => {\r\n            const processedArgs = this.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\r\n            if (processedArgs instanceof CellError) {\r\n                return processedArgs;\r\n            }\r\n            let ret = 1;\r\n            for (const val of processedArgs) {\r\n                if (val < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret = binaryLCM(ret, Math.trunc(val));\r\n            }\r\n            if (ret > Number.MAX_SAFE_INTEGER) {\r\n                //inconsistency with product #1\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    mround(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MROUND'), (nom, denom) => {\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if ((nom > 0 && denom < 0) || (nom < 0 && denom > 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.round(nom / denom) * denom;\r\n        });\r\n    }\r\n    multinomial(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MULTINOMIAL'), (...args) => {\r\n            let n = 0;\r\n            let ans = 1;\r\n            for (let arg of args) {\r\n                if (arg < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                arg = Math.trunc(arg);\r\n                for (let i = 1; i <= arg; i++) {\r\n                    ans *= (n + i) / i;\r\n                }\r\n                n += arg;\r\n            }\r\n            return Math.round(ans);\r\n        });\r\n    }\r\n    quotient(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('QUOTIENT'), (nom, denom) => {\r\n            if (denom === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.trunc(nom / denom);\r\n        });\r\n    }\r\n    seriessum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SERIESSUM'), (x, n, m, range) => {\r\n            const coefs = this.arithmeticHelper.manyToOnlyNumbersDropNulls(range.valuesFromTopLeftCorner());\r\n            if (coefs instanceof CellError) {\r\n                return coefs;\r\n            }\r\n            let ret = 0;\r\n            coefs.reverse();\r\n            for (const coef of coefs) {\r\n                ret *= Math.pow(x, m);\r\n                ret += coef;\r\n            }\r\n            return ret * Math.pow(x, n);\r\n        });\r\n    }\r\n    sign(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SIGN'), (arg) => {\r\n            if (arg > 0) {\r\n                return 1;\r\n            }\r\n            else if (arg < 0) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n    sumx2my2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMX2MY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX, 2) - Math.pow(valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    sumx2py2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMX2PY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX, 2) + Math.pow(valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    sumxmy2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMXMY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX - valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nMathPlugin.implementedFunctions = {\r\n    'FACT': {\r\n        method: 'fact',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 170 }\r\n        ]\r\n    },\r\n    'FACTDOUBLE': {\r\n        method: 'factdouble',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 288 }\r\n        ]\r\n    },\r\n    'COMBIN': {\r\n        method: 'combin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, lessThan: 1030 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\r\n        ]\r\n    },\r\n    'COMBINA': {\r\n        method: 'combina',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\r\n        ]\r\n    },\r\n    'GCD': {\r\n        method: 'gcd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1\r\n    },\r\n    'LCM': {\r\n        method: 'lcm',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1\r\n    },\r\n    'MROUND': {\r\n        method: 'mround',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'MULTINOMIAL': {\r\n        method: 'multinomial',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'QUOTIENT': {\r\n        method: 'quotient',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'SERIESSUM': {\r\n        method: 'seriessum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SIGN': {\r\n        method: 'sign',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'SUMX2MY2': {\r\n        method: 'sumx2my2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SUMX2PY2': {\r\n        method: 'sumx2py2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SUMXMY2': {\r\n        method: 'sumxmy2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n};\r\nfunction combin(n, m) {\r\n    if (2 * m > n) {\r\n        m = n - m;\r\n    }\r\n    let ret = 1;\r\n    for (let i = 1; i <= m; i++) {\r\n        ret *= (n - m + i) / i;\r\n    }\r\n    return Math.round(ret);\r\n}\r\nfunction binaryGCD(a, b) {\r\n    if (a < b) {\r\n        [a, b] = [b, a];\r\n    }\r\n    while (b > 0) {\r\n        [a, b] = [b, a % b];\r\n    }\r\n    return a;\r\n}\r\nfunction binaryLCM(a, b) {\r\n    if (a === 0 || b === 0) {\r\n        return 0;\r\n    }\r\n    return a * (b / binaryGCD(a, b));\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { coerceComplexToString } from '../ArithmeticHelper';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ComplexPlugin extends FunctionPlugin {\r\n    complex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMPLEX'), (re, im, unit) => {\r\n            if (unit !== 'i' && unit !== 'j') {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ShouldBeIorJ);\r\n            }\r\n            return coerceComplexToString([re, im], unit);\r\n        });\r\n    }\r\n    imabs(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMABS'), abs);\r\n    }\r\n    imaginary(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMAGINARY'), ([_re, im]) => im);\r\n    }\r\n    imreal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMREAL'), ([re, _im]) => re);\r\n    }\r\n    imargument(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMARGUMENT'), ([re, im]) => {\r\n            if (re === 0 && im === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.atan2(im, re);\r\n        });\r\n    }\r\n    imconjugate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCONJUGATE'), ([re, im]) => coerceComplexToString([re, -im]));\r\n    }\r\n    imcos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOS'), (arg) => coerceComplexToString(cos(arg)));\r\n    }\r\n    imcosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOSH'), (arg) => coerceComplexToString(cosh(arg)));\r\n    }\r\n    imcot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOT'), (arg) => coerceComplexToString(div(cos(arg), sin(arg))));\r\n    }\r\n    imcsc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCSC'), (arg) => coerceComplexToString(div([1, 0], sin(arg))));\r\n    }\r\n    imcsch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCSCH'), (arg) => coerceComplexToString(div([1, 0], sinh(arg))));\r\n    }\r\n    imsec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSEC'), (arg) => coerceComplexToString(div([1, 0], cos(arg))));\r\n    }\r\n    imsech(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSECH'), (arg) => coerceComplexToString(div([1, 0], cosh(arg))));\r\n    }\r\n    imsin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSIN'), (arg) => coerceComplexToString(sin(arg)));\r\n    }\r\n    imsinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSINH'), (arg) => coerceComplexToString(sinh(arg)));\r\n    }\r\n    imtan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMTAN'), (arg) => coerceComplexToString(div(sin(arg), cos(arg))));\r\n    }\r\n    imdiv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMDIV'), (arg1, arg2) => coerceComplexToString(div(arg1, arg2)));\r\n    }\r\n    improduct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMPRODUCT'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceComplexExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            let prod = [1, 0];\r\n            for (const val of coerced) {\r\n                prod = mul(prod, val);\r\n            }\r\n            return coerceComplexToString(prod);\r\n        });\r\n    }\r\n    imsum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSUM'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceComplexExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            let sum = [0, 0];\r\n            for (const val of coerced) {\r\n                sum = add(sum, val);\r\n            }\r\n            return coerceComplexToString(sum);\r\n        });\r\n    }\r\n    imsub(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSUB'), (arg1, arg2) => coerceComplexToString(sub(arg1, arg2)));\r\n    }\r\n    imexp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMEXP'), (arg) => coerceComplexToString(exp(arg)));\r\n    }\r\n    imln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLN'), (arg) => coerceComplexToString(ln(arg)));\r\n    }\r\n    imlog10(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLOG10'), (arg) => {\r\n            const [re, im] = ln(arg);\r\n            const c = Math.log(10);\r\n            return coerceComplexToString([re / c, im / c]);\r\n        });\r\n    }\r\n    imlog2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLOG2'), (arg) => {\r\n            const [re, im] = ln(arg);\r\n            const c = Math.log(2);\r\n            return coerceComplexToString([re / c, im / c]);\r\n        });\r\n    }\r\n    impower(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMPOWER'), (arg, n) => coerceComplexToString(power(arg, n)));\r\n    }\r\n    imsqrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSQRT'), (arg) => coerceComplexToString(power(arg, 0.5)));\r\n    }\r\n}\r\nComplexPlugin.implementedFunctions = {\r\n    'COMPLEX': {\r\n        method: 'complex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.STRING, defaultValue: 'i' },\r\n        ],\r\n    },\r\n    'IMABS': {\r\n        method: 'imabs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMAGINARY': {\r\n        method: 'imaginary',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMREAL': {\r\n        method: 'imreal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMARGUMENT': {\r\n        method: 'imargument',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCONJUGATE': {\r\n        method: 'imconjugate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOS': {\r\n        method: 'imcos',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOSH': {\r\n        method: 'imcosh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOT': {\r\n        method: 'imcot',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCSC': {\r\n        method: 'imcsc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCSCH': {\r\n        method: 'imcsch',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSEC': {\r\n        method: 'imsec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSECH': {\r\n        method: 'imsech',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSIN': {\r\n        method: 'imsin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSINH': {\r\n        method: 'imsinh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMTAN': {\r\n        method: 'imtan',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMDIV': {\r\n        method: 'imdiv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMPRODUCT': {\r\n        method: 'improduct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IMSUM': {\r\n        method: 'imsum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IMSUB': {\r\n        method: 'imsub',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMEXP': {\r\n        method: 'imexp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLN': {\r\n        method: 'imln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLOG10': {\r\n        method: 'imlog10',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLOG2': {\r\n        method: 'imlog2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMPOWER': {\r\n        method: 'impower',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'IMSQRT': {\r\n        method: 'imsqrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n};\r\nfunction add([re1, im1], [re2, im2]) {\r\n    return [re1 + re2, im1 + im2];\r\n}\r\nfunction sub([re1, im1], [re2, im2]) {\r\n    return [re1 - re2, im1 - im2];\r\n}\r\nfunction mul([re1, im1], [re2, im2]) {\r\n    return [re1 * re2 - im1 * im2, re1 * im2 + re2 * im1];\r\n}\r\nfunction div([re1, im1], [re2, im2]) {\r\n    const denom = Math.pow(re2, 2) + Math.pow(im2, 2);\r\n    const [nomRe, nomIm] = mul([re1, im1], [re2, -im2]);\r\n    return [nomRe / denom, nomIm / denom];\r\n}\r\nfunction cos([re, im]) {\r\n    return [Math.cos(re) * Math.cosh(im), -Math.sin(re) * Math.sinh(im)];\r\n}\r\nfunction cosh([re, im]) {\r\n    return [Math.cosh(re) * Math.cos(im), Math.sinh(re) * Math.sin(im)];\r\n}\r\nfunction sin([re, im]) {\r\n    return [Math.sin(re) * Math.cosh(im), Math.cos(re) * Math.sinh(im)];\r\n}\r\nfunction sinh([re, im]) {\r\n    return [Math.sinh(re) * Math.cos(im), Math.cosh(re) * Math.sin(im)];\r\n}\r\nfunction exp([re, im]) {\r\n    return [Math.exp(re) * Math.cos(im), Math.exp(re) * Math.sin(im)];\r\n}\r\nfunction abs([re, im]) {\r\n    return Math.sqrt(re * re + im * im);\r\n}\r\nfunction ln([re, im]) {\r\n    return [Math.log(abs([re, im])), Math.atan2(im, re)];\r\n}\r\nfunction power(arg, n) {\r\n    const [re, im] = ln(arg);\r\n    return exp([n * re, n * im]);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { centralF, chisquare, corrcoeff, covariance, geomean, mean, normal, stdev, studentt, sumsqerr, variance } from './3rdparty/jstat/jstat';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class StatisticalAggregationPlugin extends FunctionPlugin {\r\n    avedev(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('AVEDEV'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const avg = mean(coerced);\r\n            return coerced.reduce((a, b) => a + Math.abs(b - avg), 0) / coerced.length;\r\n        });\r\n    }\r\n    devsq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEVSQ'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return 0;\r\n            }\r\n            return sumsqerr(coerced);\r\n        });\r\n    }\r\n    geomean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GEOMEAN'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            for (const val of coerced) {\r\n                if (val <= 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n            }\r\n            return geomean(coerced);\r\n        });\r\n    }\r\n    harmean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HARMEAN'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            for (const val of coerced) {\r\n                if (val <= 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n            }\r\n            return coerced.length / (coerced.reduce((a, b) => a + 1 / b, 0));\r\n        });\r\n    }\r\n    correl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CORREL'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return corrcoeff(ret[0], ret[1]);\r\n        });\r\n    }\r\n    rsq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RSQ'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return Math.pow(corrcoeff(ret[0], ret[1]), 2);\r\n        });\r\n    }\r\n    covariancep(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COVARIANCE.P'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.OneValue);\r\n            }\r\n            if (n === 1) {\r\n                return 0;\r\n            }\r\n            return covariance(ret[0], ret[1]) * (n - 1) / n;\r\n        });\r\n    }\r\n    covariances(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COVARIANCE.S'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return covariance(ret[0], ret[1]);\r\n        });\r\n    }\r\n    ztest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('Z.TEST'), (range, x, sigma) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            const n = vals.length;\r\n            if (sigma === undefined) {\r\n                if (n < 2) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                sigma = stdev(vals, true);\r\n            }\r\n            if (n < 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.OneValue);\r\n            }\r\n            if (sigma === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return 1 - normal.cdf((mean(vals) - x) / (sigma / Math.sqrt(n)), 0, 1);\r\n        });\r\n    }\r\n    ftest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.TEST'), (dataX, dataY) => {\r\n            const arrX = this.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\r\n            const arrY = this.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\r\n            if (arrX instanceof CellError) {\r\n                return arrX;\r\n            }\r\n            if (arrY instanceof CellError) {\r\n                return arrY;\r\n            }\r\n            if (arrX.length <= 1 || arrY.length <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const vx = variance(arrX, true);\r\n            const vy = variance(arrY, true);\r\n            if (vx === 0 || vy === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const r = vx / vy;\r\n            const v = centralF.cdf(r, arrX.length - 1, arrY.length - 1);\r\n            return 2 * Math.min(v, 1 - v);\r\n        });\r\n    }\r\n    steyx(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('STEYX'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 2) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            return Math.sqrt((sumsqerr(ret[0]) - Math.pow(covariance(ret[0], ret[1]) * (n - 1), 2) / sumsqerr(ret[1])) / (n - 2));\r\n        });\r\n    }\r\n    slope(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SLOPE'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return covariance(ret[0], ret[1]) * (n - 1) / sumsqerr(ret[1]);\r\n        });\r\n    }\r\n    chisqtest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.TEST'), (dataX, dataY) => {\r\n            const r = dataX.height();\r\n            const c = dataX.width();\r\n            if (dataY.height() !== r || dataY.width() !== c) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            if (ret[0].length <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            let sum = 0;\r\n            for (let i = 0; i < ret[0].length; i++) {\r\n                if (ret[1][i] === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                sum += Math.pow(ret[0][i] - ret[1][i], 2) / ret[1][i];\r\n            }\r\n            if (sum < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n            }\r\n            return 1 - chisquare.cdf(sum, (r > 1 && c > 1) ? (r - 1) * (c - 1) : r * c - 1);\r\n        });\r\n    }\r\n    ttest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.TEST'), (dataX, dataY, tails, type) => {\r\n            const arrX = this.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\r\n            const arrY = this.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\r\n            if (arrX instanceof CellError) {\r\n                return arrX;\r\n            }\r\n            if (arrY instanceof CellError) {\r\n                return arrY;\r\n            }\r\n            const n = arrX.length;\r\n            const m = arrY.length;\r\n            if (type === 1) {\r\n                if (m !== n) {\r\n                    return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n                }\r\n                if (n <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const sub = Array(n);\r\n                for (let i = 0; i < n; i++) {\r\n                    sub[i] = arrX[i] - arrY[i];\r\n                }\r\n                const s = stdev(sub, true);\r\n                if (s === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs(Math.sqrt(n) * mean(sub) / s);\r\n                return tails * (1 - studentt.cdf(t, n - 1));\r\n            }\r\n            else if (type === 2) {\r\n                if (n <= 1 || m <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const s = (sumsqerr(arrX) + sumsqerr(arrY)) / (n + m - 2);\r\n                if (s === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(s * (1 / n + 1 / m)));\r\n                return tails * (1 - studentt.cdf(t, n + m - 2));\r\n            }\r\n            else { //type === 3\r\n                if (n <= 1 || m <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const sx = variance(arrX, true);\r\n                const sy = variance(arrY, true);\r\n                if (sx === 0 && sy === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(sx / n + sy / m));\r\n                const v = Math.pow(sx / n + sy / m, 2) / (Math.pow(sx / n, 2) / (n - 1) + Math.pow(sy / m, 2) / (m - 1));\r\n                return tails * (1 - studentt.cdf(t, v));\r\n            }\r\n        });\r\n    }\r\n    skew(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SKEW'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            const n = coerced.length;\r\n            if (n < 3) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            const avg = mean(coerced);\r\n            const s = stdev(coerced, true);\r\n            if (s === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) * n / (n - 1) / (n - 2);\r\n        });\r\n    }\r\n    skewp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SKEW.P'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            const n = coerced.length;\r\n            if (n < 3) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            const avg = mean(coerced);\r\n            const s = stdev(coerced, false);\r\n            if (s === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) / n;\r\n        });\r\n    }\r\n}\r\nStatisticalAggregationPlugin.implementedFunctions = {\r\n    'AVEDEV': {\r\n        method: 'avedev',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'DEVSQ': {\r\n        method: 'devsq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'GEOMEAN': {\r\n        method: 'geomean',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'HARMEAN': {\r\n        method: 'harmean',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'CORREL': {\r\n        method: 'correl',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'RSQ': {\r\n        method: 'rsq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'COVARIANCE.P': {\r\n        method: 'covariancep',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'COVARIANCE.S': {\r\n        method: 'covariances',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'Z.TEST': {\r\n        method: 'ztest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ],\r\n    },\r\n    'F.TEST': {\r\n        method: 'ftest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'STEYX': {\r\n        method: 'steyx',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SLOPE': {\r\n        method: 'slope',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'CHISQ.TEST': {\r\n        method: 'chisqtest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'T.TEST': {\r\n        method: 'ttest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 2 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 3 },\r\n        ],\r\n    },\r\n    'SKEW': {\r\n        method: 'skew',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SKEW.P': {\r\n        method: 'skewp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\nStatisticalAggregationPlugin.aliases = {\r\n    COVAR: 'COVARIANCE.P',\r\n    FTEST: 'F.TEST',\r\n    PEARSON: 'CORREL',\r\n    ZTEST: 'Z.TEST',\r\n    CHITEST: 'CHISQ.TEST',\r\n    TTEST: 'T.TEST',\r\n    COVARIANCEP: 'COVARIANCE.P',\r\n    COVARIANCES: 'COVARIANCE.S',\r\n    SKEWP: 'SKEW.P',\r\n};\r\nfunction parseTwoArrays(dataX, dataY) {\r\n    const xit = dataX.iterateValuesFromTopLeftCorner();\r\n    const yit = dataY.iterateValuesFromTopLeftCorner();\r\n    let x, y;\r\n    const arrX = [];\r\n    const arrY = [];\r\n    while (x = xit.next(), y = yit.next(), !x.done && !y.done) {\r\n        const xval = x.value;\r\n        const yval = y.value;\r\n        if (xval instanceof CellError) {\r\n            return xval;\r\n        }\r\n        else if (yval instanceof CellError) {\r\n            return yval;\r\n        }\r\n        else if (isExtendedNumber(xval) && isExtendedNumber(yval)) {\r\n            arrX.push(getRawValue(xval));\r\n            arrY.push(getRawValue(yval));\r\n        }\r\n    }\r\n    return [arrX, arrY];\r\n}\r\n"],"sourceRoot":""}